text
"fix # <number> , fixes errors in ic bundle workflow file addresses issue # <number> . <section> generated ic branch in fork . <section> no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"formatting issues with icbundle workflow <section> similar to nasa / cfe # <number> . there are some small formatting issues that should be corrected in the changelog / version . h updates made by the icbundle workflow : <number> . an additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h <number> . additional occurrences of the string "" changelog "" are replaced in the changelog . md file <section> steps to reproduce the behavior : <number> . push a code change to a user - owned feature branch <number> . submit a pull request for that code change <number> . go to the "" actions "" tab in github and run the "" integration candidate bundle generation "" workflow with the pr number as the input argument for the field labeled "" the pull request numbers to include ( comma separated ) : "" <number> . wait for the workflow to complete <number> . inspect the newly updated / generated "" integration - candidate branch "" <number> . observe the changes made to the changelog . md and src / os / inc / osapi - version . h files by the workflow <section> <number> . no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h <number> . additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"message receive timeout if system clock changes ? <section> # # # discussed in <url> < div type = ' discussions - op - text ' > <sup> originally posted by <section> <date> </sup> the cfe call for receiving a software bus message , <code> , uses the <code> call to manage the os - level interface for the message passing . unlike the <allcaps> rtems </allcaps> and vxworks implementations , the <allcaps> posix </allcaps> implementation of <code> uses an absolute timestamp from <code> ] ( <url> to set the timeout periods to wait for a message . this appears to be because the [ <allcaps> posix </allcaps> mqueue <allcaps> api </allcaps> requires it . <url> . the problem with basing the timeout off the absolute system clock rather than as a duration based on clock ticks ( as <allcaps> rtems </allcaps> and vxworks do ) , is that if they system clock changes , the timeout is affected . i have observed a situation if the system clock is updated ( for example , after resetting the clock based on acquired <allcaps> gps </allcaps> signal after being suspended ) calls to <code> that specify timeouts will be stuck forever if a message is not sent . it is no longer possible to have task occur after a certain amount of time if a message is not sent . <section> os_queueget call should still wake up after its indicated timeout even if / when clock_realtime gets updated in the background . <section> this is an underlying limitation with the <allcaps> posix api </allcaps> , the mq_timedwait call uses clock_realtime as its reference . see <url> <section> originally from <user> in cfs discussion"
"osal integration candidate : caelum - rc4 + dev54 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , separate bind and listen calls for streams add os_socketbindaddress ( ) and os_socketlisten ( ) to allow users to bind an address without also calling listen ( ) . the use case is for client side connections where the source port needs to be controlled . fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> users can call <code> to bind a specific port / address for client - side connections <section> debian <section> joseph hickey , vantage systems , inc ."
"socket <allcaps> api </allcaps> needs method to control source port for <allcaps> tcp </allcaps> client <section> the <code> call could be used on a client - side role ( without <code> ) to control the source port for outgoing <allcaps> tcp </allcaps> connections . the <code> <allcaps> api </allcaps> assumes a server - side role , in that it does both a <code> and <code> call underneath . currently , the <allcaps> osal api </allcaps> does not have any way to control the port used for a <allcaps> tcp </allcaps> connection on the client side . <section> introduce a method that can be used to control the source port used for client - side connections for example : <code> and <code> ( retaining existing os_socketbind for compatibility ) <section> this could potentially be done in os_socketconnect , such as <code> . <repeated> but keeping it in bind keeps it more closely related to standard sockets <allcaps> api </allcaps> . <section> this must be done with only new functions , cannot change definition of current os_socketbind . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not use intmax_t / uintmax_t types replace these with long and unsigned long , respectively , as some old systems might not have these types even if it does provide stdint . h fixes # <number> <section> build on vxworks <number> ( gcc <number> . <number> ) <section> build should succeed <section> <allcaps> gsfc </allcaps> vxworks build host <section> joseph hickey , vantage systems , inc ."
"some systems do not provide an "" intmax_t "" via stdint . h <section> although specified in c99 , there are some old systems out there that do not provide an <code> or <code> type in <code> . example is vxworks <number> / workbench <number> using gcc <number> . <number> . utassert uses these types , so it fails to build on this platform . <section> build utassert on vxworks <number> - fails on missing types <code> and <code> . <section> build should succeed <section> <allcaps> gsfc </allcaps> vxworks build host <section> workaround would be to use <code> and <code> instead . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev52 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"task <allcaps> api </allcaps> provides no mechanism to provide an instance parameter <section> there is currently no way to provide a runtime parameter to a task that is visible to the specific function executed in the task thread . <section> both <allcaps> posix </allcaps> ] ( <url> and [ <allcaps> rtems </allcaps> <url> . <section> without a mechanism to give a parameter to a task function , the only way to provide task - instance - specific data is some kind of an external thread - safe queue for each task function , and all of the excess bookkeeping required for that queue . <section> brian sipos , <allcaps> jhu </allcaps> / <allcaps> apl </allcaps>"
"fix # <number> , add additional counters to test summary adds additional counters to test summary . fixes # <number> <section> executed functional tests and confirmed output is as expected . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
counters included in test summary do not add up to total test count <section> test summary does does not contain information on all counters that increase the total test case count . this results in the appearance of missing tests when the results are read . <section> add an information statement that includes the test counters for the remaining tests that increase the total test count . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"condition variable logic does not agree with common uses <section> the current condition variable <allcaps> api </allcaps> in the main branch does not agree with the common uses in <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> which means there are many use cases that are not possible with the <allcaps> osal api </allcaps> . the major disconnect is that the condition variable wait should operate on an external mutex , not an internal single - use mutex . this is how <allcaps> posix </allcaps> ] ( <url> and [ <allcaps> rtems </allcaps> <url> both work , and it enables use cases where one mutex guards a resource but has multiple condition variables associated with it . <section> this is an <allcaps> api </allcaps> bug and is present in the header and documented logic . it is not possible to have a single guard mutex with multiple associated condition variables . <section> the <code> and <code> should take a handle to an external mutex to operate on , rather than an internal mutex . <section> this is an <allcaps> api </allcaps> issue and is not dependent on hw or os versions . this <allcaps> api </allcaps> is not present in the last release tag , so is only on the <code> branch . <section> add any other context about the problem here . <section> brian sipos , <allcaps> jhu </allcaps> / <allcaps> apl </allcaps>"
"fix # <number> , correct return value bug in vxworks <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> <code> will actually return an error on all failure cases now . function logic and flow is clearer now - easing future maintenance . <section> avi weiss <user>"
"fix # <number> , add functional test for <code> <code> in <code> testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> no change to behavior ( test changes only ) . <section> avi weiss <user>"
"fix # <number> , refactor duplicate <code> swtiches into an inline function testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local tests confirm net coverage unchanged . <section> no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , refactor initializations of <allcaps> posix </allcaps> <code> variables to simplify code testing performed * * github ci actions all passing successfully , as do local unit tests . <section> no change to behavior . code is simplified slightly - improving future maintainability . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
posix <code> variables could be initialized to <code> to simplify code code snips * * <url> same for <code> and <code> . <section> simplify code by setting default to <code> / <code> and assigning <code> when necessary . <section> avi weiss <user>
"os_objectidfrominteger argument narrowing error <section> when building for vxworks <number> a c + + app , i get the error : error : narrowing conversion of ' value ' from ' long unsigned int ' to ' uint32_t ' { aka ' unsigned int ' } inside { } [ - werror = narrowing ] i fixed it by changing code to : <hashtag> if def </hashtag> osal_omit_deprecated osal_id_t idv = { ( uint32 ) value } ; <hashtag> else </hashtag> osal_id_t idv = ( osal_id_t ) value ; <hashtag> end if </hashtag> return idv ; the code above still narrow down value from long unsigned to int unsigned . i understand that both vxworks <number> and c + + are not supported , so really the question is : - should not os_objectidfrominteger be taking an integer in spite of a long since the returned values is always an int ? <section> <section> build without errors <section> osapi - idmap . h l105 <url> <section> - os : oracle linux <number> - v6 . <number> - rc4 + dev184 <section> <section> claudio olmi <allcaps> nasa jsc </allcaps>"
"osal integration candidate : caelum - rc4 + dev47 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , create workflow for ic bundle generation a clear and concise description of what the contribution is . - addresses issue # <number> . <section> generated ic branch in fork . <section> adds new workflow for integration candidate branch generation . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps> <number>"
"fix # <number> , light coding standards cleanup testing performed * * github ci actions all passing successfully . <section> no change to behavior . this pr will : - improve clarity & consistency - improve compliance with rules common to all / most of the relevant coding standards - reduce technical debt and ease future maintenance - result in cleaner builds with fewer alerts / warnings from code scanners <section> avi weiss <user>"
"light coding standards cleanup expected behavior * * comply with rules common to the relevant coding standards / guidelines where it makes sense , improves clarity , improves consistency and eases future maintenance . <section> avi weiss <user>"
"fix # <number> , change format of utassert_stringbufcompare testing performed * * github ci actions and local cfs test suite run all passing successfully . <section> the change makes it easier to identify the discrepancy between the strings in case of a failed test . only slight downside is the increase in length of the test log . <repeated> ( each call to <code> now results in <number> lines printed instead of <number> ) . there are currently ~ <number> uses of <code> in cfe and <allcaps> osal </allcaps> . <section> avi weiss <user>"
"fix # <number> , implement os_err_invalid_priority return code check for <allcaps> rtems </allcaps> testing performed * * i do not think this file ( <code> ) has any tests currently ( see <url> if someone can advise if this needs to be tested , and the best way of doing so , i would appreciate it . <section> calls on the <allcaps> rtems </allcaps> implementation to <code> ( which calls <code> ) and <code> ( which calls <code> ) will now actually return <code> if the <allcaps> rtems </allcaps> calls return <code> , rather than simply returning os_error . <section> avi weiss <user>"
"fix # <number> , convert some ut_getstubcount to utassert_stub_count testing performed * * github ci actions all passing successfully . local testing with standard cfs suite shows all tests passing and no change in coverage . <section> no change to code . tests also essentially identical , just a bit simpler , clearer and more useful for debugging . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev43 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add assert macros for other data types adds generic macros for asserting on integer values that can work with any integer data type , including size_t and <number> - bit values where needed . fixes # <number> <section> build and run all tests <section> new assert macros available . some logs have a slightly different output format but should not affect much . <section> debian <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev41 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev40 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , workflow to validate <allcaps> osal api </allcaps> adds a new build and test workflow that includes an <allcaps> api </allcaps> validation with both c and c + + compilers . this should catch any cases where syntactical elements that work in c but do not work in c + + appear in the headers . fixes # <number> <section> build and run workflow <section> <allcaps> osal api </allcaps> headers will now be checked against a c + + compiler . <section> github workflow <section> note that due to # <number> , this currently fails ( thus validating that this workflow is catching what it is supposed to ) . once the fix is merged , this should pass . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixup <allcaps> api </allcaps> headers for c + + correct a few syntactical items that are valid c99 but not valid for c + + <number> . this includes use of the designated initializer , compound literals , variadic macros , and a trailing comma in enum declarations . note this only matters for public <allcaps> api </allcaps> headers , as some users may need to include these directly from a c + + file . for normal c source files , these are all compiled as c99 and thus the syntax is fine . fixes # <number> <section> build and run all <allcaps> osal </allcaps> tests <section> no impact to behavior , headers are now valid syntax for c + + <number> ( and c99 , of course ) <section> debian ( using g + + <number> to check c + + syntax ) <section> joseph hickey , vantage systems , inc ."
"add build script and workflow to validate <allcaps> api </allcaps> headers in c + + <section> as noted in issue # <number> , there is currently no tests to check compatibility of the <allcaps> osal api </allcaps> with c + + . although c + + is <section> an officially targeted platform for <allcaps> osal </allcaps> , some users do have c + + code and occasionally the <allcaps> osal </allcaps> header files are included from c + + code . <section> this is two parts : <number> . all public <allcaps> osal </allcaps> headers should have an conditional <code> to handle the case if / when they are included from a c + + file . <number> . there should be a workflow check to confirm that the <allcaps> api </allcaps> header files for <allcaps> osal </allcaps> are compliant with c + + <number> . <section> the only other workaround is to insist that the user never include <allcaps> osal </allcaps> headers directly from c + + , instead provide their own c + + wrapper for the <allcaps> osal api </allcaps> . but this is a fairly big thing when a few minor updates can make the <allcaps> osal </allcaps> headers more c + + - friendly . <section> note that c + + would still be considered a secondary target here - a workflow can do some simple checks to at least make sure the headers do not contain any declarations that are outright incompatible with c + + , but otherwise c + + support would be totally on the user to validate . notably - none of the unit tests run in c + + . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev39 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove unreachable branch ( superfluous if condition ) testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , removed cast that hid bug at compile time fix # <number> <section> - hardware : gr740 - os : <allcaps> rtems </allcaps> - versions : cfs draco - rc2 + mods <section> if included , identify any third party code and provide text file of license <section> jose f . martinez pedraza | <allcaps> gsfc </allcaps> <number>"
"designated initializer in <code> header breaks c + + compilation unit . <section> designated initializer in <code> header breaks c + + compilation unit . c + + does not support this until c + + <number> <section> <code> in a c + + compilation unit build file , observe error . <section> successful compilation <section> instance of designated initializer used here : <url> other instances in <code> , <code> , <code> , <code> . issue seems to have been introduced in <url> . <section> - sp - 0 s - os : vxworks <number> - versions : cfe v7 . <number> - rc4 + dev242 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev179 , <allcaps> psp </allcaps> v1 . <number> - rc4 + dev67 <section> inline header functions should use c + + <number> ( latest standard supported by vxworks <number> ) compatible constructs . <section> john n pham , northrop grumman"
"fix # <number> , remove unimplemented test stub prototype testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior ( prototype was not implemented ) . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev38 - v2 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add doxygen for ut_configuregenericstubreturnvalue adds a function and parameter description for this <allcaps> api </allcaps> which resolves a doxygen warning about it being undocumented . fixes # <number> <section> build full set of documentation <section> functions are fully documented <section> debian <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev38 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev37 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove stray remaining ' goto ' in <allcaps> osal </allcaps> test code testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . program flow is clearer , and removes the only remaining use of <code> in <allcaps> osal </allcaps> . <section> avi weiss <user>"
"fix # <number> , separate append on volume_name to system_mountpt generating the system_mountpt string via a single call to snprintf triggered a compiler warning about overlapping memory . however this does not seem like a real warning , as the volume_name should always be null terminated before the overlap would be possible . by separating this to be a separate append of the volume_name along with an explicit size check to ensure the buffers indeed do not overlap , this avoids the warning . fixes # <number> <section> build and run all tests <section> avoids a false compiler warning about possible pointer overlap by explicitly checking and limiting the string length being appended . no functional change , as the generated "" system_mountpt "" string should be identical . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , align mismatched function prototype / implem . parameter names testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> function prototypes and their implementations should ( ideally ) always have matching parameter names . <section> avi weiss <user>"
"fix # <number> , ut assert stub return values improves default support for return values of sizes other than <number> bits . previously this required a custom handler for any value that was not a <number> bit integer . with this update any integer value can be used , and a value translation will occur if the size is different . thus boolean values , <number> , and <number> - bit ints can be configured through the same basic <allcaps> api </allcaps> without needing to add a handler . fixes # <number> <section> build and run all tests , including <allcaps> cfs </allcaps> app tests , to confirm all still run as expected . <section> no change to _existing_ behavior - all currently - implemented test cases should continue to behave as they have in the past , whether they used a <number> - bit integer return or if they had a custom hook / handler . going forward , it should no longer be required to implement a custom handler for the sole purpose of adjusting the size of the return value in case it is not a <number> - bit integer . as a fallback default , any return value that is unset by a test will be memset to <number> . so a pointer stub return will get <code> , a boolean will get <code> , and any numeric value of any time will be zero . the <code> and <code> functions now accept a <code> value instead of <code> . this typedef is defined using the c99 <code> type , which will be <number> bits in size on modern hardware . when passing by value from an int32 , this should be transparent , but it is large enough to also allow test cases to pass in pointer values here without truncating . <section> debian <section> <allcaps> api </allcaps> to set return values is still numeric in nature . this adds some framework to allow fully - typed values and abstract objects bigger than <code> values to be returned , but there is no <allcaps> api </allcaps> yet - that can be added in a future change . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev34 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , break up pc - rtems to support generic configuration - fix # <number> splits up bsp_start . c so features can be optionally included : cmdline , shell , stand alone exe vs module <allcaps> rtems </allcaps> configuration is now in bsp_init . c , included based on stand alone / module selection <section> ran w / leon3 <allcaps> qemu </allcaps> with / without shell and stand alone / module options . <section> pc behavior should not change based on default options matching previous behavior except for the file system and command line , the rest is usable by leon3 <section> leon3 <allcaps> qemu </allcaps> modified as documented by <allcaps> rcc </allcaps> : <code> <allcaps> rcc </allcaps> - <number> . <number> for running as a module i based it on <url> although there are mods . <repeated> <section> <allcaps> draft </allcaps> submitted for initial discussion <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove obsolete _using_rtems_includes_ - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , support adding default flags at task creation - fix # <number> <section> ci , also tested on rtems5 / leon3 with os_fp_enabled <section> no default change but supports adding flags at task creation <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev31 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , update action versions use the "" v3 "" version of checkout and upload - artifact actions , which resolves a warning about depending on an obsolete node . js version . fixes # <number> <section> execute workflow <section> no more warning about node . js <number> <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add doc - prebuild dependency when building as part of <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> , register the osal header list file ( osal - public - api . doxyfile ) as a dependency of the doc - prebuild abstract target . this way , <allcaps> cfe </allcaps> and any other <allcaps> cfs </allcaps> apps that refer to the <allcaps> osal </allcaps> headers in their documentation can easily ensure that this ( and any other file produced by other modules ) exist prior to attempting to run doxygen . fixes # <number> <section> build documentation <section> none directly to <allcaps> osal </allcaps> , but dependent items can now operate correctly <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"update workflows to use newer action versions <section> calls to the checkout and upload - artifacts actions in the workflow files refer to deprecated version <number> . this should be updated to v3 , which resolves a warning about deprecated node . js versions . <section> see any workflow log , e . g . <url> in the "" annotations "" section . <section> should be clean . <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev30 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev29 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> and # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , fix # <number> , cppcheck updates passes a cmake configuration so cppcheck can use the exported commands , allowing it to use all header files that the actual build uses . also resolves a number of other issues reported by cppcheck fixes # <number> fixes # <number> <section> build and run tests verify results of static analysis workflow <section> static analysis workflow should be clean <section> github workflow <section> joseph hickey , vantage systems , inc ."
fix # <number> : truncate symbol name if > os_max_sym_len truncates symbol name in symbol table dump if the length exceeds os_max_sym_len . <section> tested against vxworks <number> <section> dump completes successfully when symbol names exceed os_max_sym_len . <section> - hardware : sp0 - os : vxworks <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , update ci to use ubuntu <number> - fix # <number> <section> ci <section> just updates ci to use ubuntu <number> <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ci to use ubuntu <number> <section> ubuntu <number> <allcaps> eol </allcaps> is approaching cfs was already updated in nasa / cfs # <number> , cfe should match <section> update to use ubuntu <number> in ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev28 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully ( excl . cppcheck issues being addressed in <url> <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
"fix # <number> , always provide ut stub library move the ut stub library so it is not dependent on enable_unit_tests the "" ut_osapi_stubs "" library is mostly relevant for testing other applications , as opposed to testing <allcaps> osal </allcaps> itself . therefore this library should be provided regardless of whether <allcaps> osal </allcaps> is being tested . fixes # <number> <section> build and check <allcaps> osal </allcaps> in standalone build and <allcaps> cfe </allcaps> build <section> the <code> library is always available <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"always build / provide <allcaps> osal </allcaps> stub library , decouple from enable_unit_tests <section> currently , <allcaps> osal </allcaps> only provides the stub library ( <code> ) when <code> is set . however , the <code> switch is supposed to cover the testing of <allcaps> osal </allcaps> itself , but the stubs are mostly relevant for testing _other_ components . in a modular deployment , <allcaps> osal </allcaps> may be treated as an external / independent component . as such , it may be built separately from the application , with headers and binary libraries installed in a system location e . g . <code> or similar . to keep the installation footprint smaller and cleaner , generally build intended for system install like this would be done without unit tests . however , the lack of <code> when compiled in this mode means that other components in the system based on <allcaps> osal </allcaps> cannot be unit tested either . <section> always provide <code> , independently of the <code> switch . this will enable dependent applications to be unit tested , even if <allcaps> osal </allcaps> itself is not being tested . <section> note that ut assert is always provided this way for similar reasons - it is still useful for external "" black box "" testing ( which is done using binaries that are built and linked normally , not stubbed out binaries ) , and furthermore other applications can be tested even if <allcaps> osal </allcaps> itself is not being tested . in a <allcaps> cfs </allcaps> build , this disconnect was not apparent because the entire system gets the same <code> setting , but in a decoupled / standalone build this is not the case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , modify unreachable branch in os_objectidallocatenew testing performed * * github ci unit tests all passing successfully . <section> no change to behavior . <section> avi <user>"
"additional errors reported by new cppcheck <section> the latest version of cppcheck reports the following errors / concerns in the <allcaps> osal </allcaps> source code : <code> <section> execute the following cppcheck command in <allcaps> osal </allcaps> ( same as what is used in the static analysis workflow "" strict "" setting ) : <code> <section> should pass cleanly <section> ubuntu <number> ( cppcheck version <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add bugcheck_void macro adds a variant of the <allcaps> bugcheck </allcaps> macro that has no return value argument , which can be used in functions with no return value without the unusual syntax appearing in the code . fixes # <number> <section> basic build and run tests run cppcheck against source <section> cppcheck does not report a syntax error <section> ubuntu <number> ( using cppcheck v2 . <number> ) <section> just a wrapper macro is enough to satisfy cppcheck . added a note that the missing second argument ( return value ) is intentional on a void function . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update incorrect function header comment testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> none . comments change only . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev27 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adjust timing on condvar tests the order of task wakeup when using os_condvarsignal ( ) with multiple tasks pending may not be guaranteed . this relaxes the test case so that a specific order is not assumed / required . this also adjust certain sleep times to make sure the test waits long enough for the tasks to do the expected work . fixes # <number> <section> execute the "" condvar "" test multiple times execute github workflows <section> should resolve / avoid intermittent failure due to tasks not running in expected order <section> ubuntu <number> <section> as this failure was intermittent , this needs to be watched in the future to confirm there is no more failure <section> joseph hickey , vantage systems , inc ."
"intermittent failure in condvar functional test <section> occasionally the "" condvar "" functional test fails with an unexpected result , snippet of the test log here : <code> the test case is expecting that the tasks will wake up in the same order on which they started pending on the condvar , but in this run , the second task woke up before the first task did . <section> intermittent issue , not directly reproducible . not seen running locally , seems to occur only on cloud hosts where perhaps timing is not as accurate and system load is not predictable . <section> tests should pass <section> github workflow <section> as <allcaps> posix </allcaps> does not specifically guarantee an execution order here , this test case should be relaxed and not assume that tasks will execute work in the order they started . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , add export targets and package script adds optional "" install "" commands to cmake script , which is useful when building <allcaps> osal </allcaps> as a standalone software package . the public <allcaps> api </allcaps> and static libraries will be installed to the specified system location , and can then be used to compile and link external <allcaps> osal </allcaps> applications without the need for the original <allcaps> osal </allcaps> source or build trees . note this also installs the "" osconfig . h "" file as this does affect the binary formats of some items ( i . e . size of items using os_max_api_name and other similar structure members ) . the external application must be compiled using the same osconfig . h after installation . fixes # <number> <section> build <allcaps> osal </allcaps> with both <allcaps> cfe </allcaps> and standalone and run all tests ( existing build ) then run "" make install "" on standalone build to stage headers and library binaries to a build tree . tested an external application to using <code> and building against the <allcaps> osal </allcaps> headers and binaries provided by that exported package . <section> exports a cmake package containing targets that can be used by <allcaps> other </allcaps> builds without necessarily having the full <allcaps> osal </allcaps> source tree integrated into that project . <section> ubuntu <number> <section> this is necessary when developing standalone ( non - <allcaps> cfe </allcaps> ) software that still uses <allcaps> osal </allcaps> to provide portability to different systems and / or does any unit testing ( the exported packages includes ut assert ) . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev25 - pr # <number> , rtems queue multi - size , mimic posix logic - pr # <number> , cmake script modernization - pr # <number> , create <allcaps> changelog </allcaps> . md <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , locks for condvar objects on rtems / vxworks instantiate the condvar lock on rtems and vxworks even though the feature is not currently implemented . this is because os_max_condvars must still be nonzero and if the "" create "" function is called , it still goes through the motions of allocating an id . this also adds a <allcaps> null </allcaps> check in the lock implementation , and thus if a lock is not instantiated in the future this will not dereference a <allcaps> null </allcaps> pointer . fixes # <number> <section> build and run all tests <section> missing lock is instantiated add null check - avoids possible null dereference in the event of a missing lock in the future <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add time conversion reciprocal functions adds the following apis which are direct reciprocals of the existing time conversion functions : <code> fixes # <number> <section> added test cases to cover the new apis build and run all tests to confirm that the new functions are working as intended <section> adds reciprocal operations for existing time conversions <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"time conversion routines should include inverse of "" total "" functions <section> <allcaps> osal </allcaps> provides a number of time apis to convert <code> values into different standard units , all of which return an <code> so as to represent the largest possible range ( within c99 at least ) : <code> however , there is no direct inverse function . for example , there is no way to go from an interval expressed in total milliseconds ( such as the return value from <code> back into an <code> value . the original assumption was that the user should be able to use <code> to perform this task , but that is not a direct inverse as it takes two arguments - seconds and milliseconds - the latter of which is only <number> - bits in size . thus the user must do divide and modulus operations to convert the single <code> value to seconds and milliseconds , then use the <allcaps> osal api </allcaps> to recombine them again . this results in a lot of extra math and complexity . <section> add <number> new functions which would be a true inverse operation of the <number> apis listed above . these would take a single <code> as an input , and return an <code> back : <code> the relationship should be such that calling e . g . <code> returns the original <code> value again ( within reasonable overflow limitations , particularly in the case of nanoseconds ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , stop empty function catching ci workflow format checks quick fix of # <number> <section> none <section> empty function will stop catching up workflow check and causing its failure . <section> <user>"
"ci workflow check catching empty function > > <user> can you fix the issue pointed out in the format check workflow > > can i still address these now that the issue is closed and pr merged ? that ' s a good point , you may need to open a new pr to address it . you could either reopen the original issue or create a new one specific to the format check error . let me know if you ' d like me to create an issue for you . thanks again ! _originally posted by <user> in <url>"
"array access overflow in src / os / vxworks / src / os - impl - idmap . c <section> array access overflow in src / os / vxworks / src / os - impl - idmap . c <section> enable fm in cfs on vxworks . streaming <code> / <code> errors should occur when <code> is enabled <section> error printouts should not occur <section> this pr <url> adds the following lines : <url> this allows <code> to become a valid index for the <code> call chain . unfortunately , <code> for vxworks does not contain an entry for <code> : <url> <code> / <code> runs past the end of the array , which results in invalid vxids being passed to <code> / <code> <section> - sp0 - s ( simics ) - os : vxworks - versions : <allcaps> cfe </allcaps> : 9 f42688b2bf92e18c6faf9e7ce1f9a4f2ea08316 , <allcaps> osal </allcaps> : 3 8 5 5 9 d447fdeb1a85f8bb09938df30d7a50918a4 , <allcaps> psp </allcaps> ( gateway ) : f1c952121ea73b0de50eeb62ef3c0bd9d4609ca0 , fm : 6 ed4fc2407cfc2f2c9db97bfea2a515c5416e480 ) <section> <section> john n pham , northrop grumman"
implicit declaration of function errors <section> make fails due to implicit declaration of function errors for <code> and <code> in uttools . c file <section> steps to reproduce the behavior : <number> . clone main cfs build <number> . copy makefile and sample_defs as instructed <number> . <code> error happens during the make build in the uttools . c file . <section> clean build of cfs <allcaps> osal </allcaps> module <section> <code> <section> - x86_64 system - os : ubuntu <number> - versions : most recent commits . <section> ben l .
"bump to v7 . <number> - rc4 + dev120 - pr # <number> , do not set file permissions on ut assert outputs <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , do not set file permissions on ut assert outputs file permissions in general are a <allcaps> posix </allcaps> concept , but this tool should be pure c99 . it should not rely on any <allcaps> posix </allcaps> headers or <allcaps> posix </allcaps> - specific <allcaps> api </allcaps> calls . fixes # <number> <section> build and run tests <section> no more build failures <section> ubuntu <number> <section> setting permissions explicitly is not really necessary . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev23 - pr # <number> , use fstat and fchmod for <allcaps> toctou </allcaps> bug - pr # <number> , remove ' return ; ' from last line of void functions . - pr # <number> , remove unnecessary parentheses around return values . <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"fix # <number> , adding commit - msg hook , copy to . git / hooks to enable . adds a githook that matches the regex that the server side checks for . - include explicitly what issue it addresses [ e . g . fixes # <number> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
enforce commit message name rule as githook <section> enforce commit message name rule as githook i am always frustrated when i push and then have to go back and rework my history . <section> git doesnt event let me commit changes . <section> a clear and concise description of any alternative solutions or features you have considered . vacations ? <section> add any other context about the feature request here . <section> sam price
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in <allcaps> osal </allcaps> that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> n / a <section> <user>"
"fix # <number> , cmake script modernization use target properties to define interfaces and compiler definitions rather than referencing global variables or using "" known "" paths in other modules . this better aligns with current practices and creates a more robust build environment that is less dependent on specific path names existing in a given module . this adds an "" osal_public_api "" interface target that contains the paths to the public <allcaps> api </allcaps> headers as its interface_include_directories and any required compiler definitions as its interface_compile_definitions property . applications should use this rather than referring to the "" ${ osal_source_dir } / src / os / inc "" include path directly . fixes # <number> <section> build and confirm <allcaps> osal </allcaps> successfully builds on various platforms including ubuntu <number> ( new - ish cmake ) and <number> ( old - ish cmake ) . <section> no impact to runtime behavior ( no actual source code changes here ) build script makes more use of cmake "" <allcaps> interface </allcaps> "" libraries to communicate compiler options , include paths , and definitions to dependencies , moving away from using global variables to perform this task . notably , this permits the targets to be imported into another build more easily . <section> ubuntu <number> and <number> ( native , newer and older cmake ) <allcaps> rtems </allcaps> <number> and <number> <section> all changes should be backward compatible , in that the "" magic variables "" are still being honored as the current version of the cmake script had previously implemented : - osal_api_include_directories ( input ) - osal_user_c_flags ( input ) - ut_coverage_compile_flags ( output ) - ut_coverage_link_flags ( output ) the preferred method of configuring these items going forward would be to get / set the corresponding properties on the <code> interface target for include directories and compile options , and use the <code> and <code> interface targets for coverage testing flags . defining both methods for now allows for transition . if the osal_omit_deprecated flag is set , then the ut_coverage flags will not be exported . <section> joseph hickey , vantage systems , inc ."
"free space calculations work for anything less than 4 g but will fail for anything above 4 g on <allcaps> pace </allcaps> we noticed the upper bits of the free space entry jumping . the bug is in the function os_fsbytesfree in the file osal / src / os / vxworks6 the function has the following line bytes_free_local = stat_buf . f_bfree * stat_buf . f_bsize ; where bytes_free_local is a uint64 and the bfree and bsize are <number> bit numbers . when the result of the multiplication is a number greater than 0 xffff <allcaps> f <elongated> </allcaps> , bytes_free_local gives an incorrect result , where lower <number> bits are correct but upper <number> bits is set to 0 xffffffff the line was modified as follows to give the right results when bytes_free_local is greater than 4 gbytes bytes_free_local = ( uint64 ) ( ( uint64 ) ( stat_buf . f_bfree ) * ( uint64 ) ( stat_buf . f_bsize ) );"
"clean up remaining deprecated / obsolete features used by the cmake scripts <section> in recent years the cmake build has been adopting the current best - practices whenever feasible to do so , and moving away from features that have been marked as obsolete or deprecated . - use interface properties to propagate compiler flags , definitions , etc to dependencies , rather than setting "" magic variables "" that need to be known by the dependency - prefer <code> as opposed to <code> at directory scope - prefer <code> as opposed to <code> at directory scope - use of <code> should include the scope keyword ( <allcaps> public </allcaps> / <allcaps> private </allcaps> ) rather than the "" bare "" signature ( also noted by <allcaps> cfe </allcaps> user in nasa / cfe # <number> ) <section> in particular - the following specific areas should be modernized : - public <allcaps> api </allcaps> location should be an interface library : <url> - management of impl - specific flags can also be done via interface library rather than manual propagation here : <url> - use scope keyword on link libraries : <url> - implement ut coverage interface library as alternative to "" flag variables "" exported here : <url> <section> it is not currently possible to propagate the ut coverage flags if <allcaps> osal </allcaps> and the application are in separate builds . using the target - scope features and interface libraries is of particular benefit to making a proper <allcaps> osal </allcaps> "" package "" that can be compiled and linked separately from the application ( see # <number> ) <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev21 - pr # <number> , condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , rtems queue multi - size , mimic posix logic refactor rtems queue to not do size check , and to mimic posix logic . fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"fix # <number> , rtems on task creation register name . registers task name with rtems on creation fixes # <number> <section> steps taken to test the contribution : ran on microblaze , typed cpuuse in rtems task , saw names . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : microblaze kcu105 - os : <allcaps> rtems </allcaps> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> nasa / <allcaps> gsfc </allcaps>"
"fix # <number> , rtems allow variable length queue msgs . a clear and concise description of what the contribution is . drops check on size ! = rtems_size to allow variable length queue messages . matches the posix queue implementation . <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' built and ran a non cfs system using posix . built and ran the same cfs system using rtems , this fix allowed system to run . <number> . execution steps ' . <repeated> ' ran on <allcaps> rtems </allcaps> on microblaze . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : <allcaps> rtems </allcaps> queues changed to match posix queues for variable length messages <section> <allcaps> rtems </allcaps> / microblaze <section> add any other context about the contribution here . <section> n / a <section> <allcaps> nasa gsfc </allcaps>"
"fix # <number> , condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> implementation of condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> currently implemented only for <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> can be added with future commit . <section> coverage and functional test of condvar <allcaps> api </allcaps> is included <section> adds condition variable <allcaps> api </allcaps> <section> ubuntu <number> <section> the bp / <allcaps> dtn </allcaps> implementation ( <url> makes use of condition variables to signal between worker tasks . in order to support running this library natively , <allcaps> osal </allcaps> would need to provide this set of functionality . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev15 - pr # <number> , remove stray terminators - pr # <number> , add <allcaps> rtems </allcaps> timebase callback wrapper <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , add <allcaps> rtems </allcaps> timebase callback wrapper fixes # <number> by creating a wrapper function to convert timebase callback task argument from rtems_task_argument into osal_id_t <section> steps taken to test the contribution : <number> . built with <code> and <code> for <allcaps> rtems </allcaps> / gr740 <number> . run and verify successful cfs init <section> - hardware : gr740 - os : <allcaps> rtems </allcaps> <number> - versions : draco - rc2 + <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> code <number>"
"osal integration candidate : caelum - rc4 + dev14 - pr # <number> , ensure address alignment of <allcaps> tcb </allcaps> for vxworks <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> skliper"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , ensure address alignment of <allcaps> tcb </allcaps> for vxworks <number> - fix # <number> <section> ci <section> resolves bug , otherwise no change in behavior <section> ci , will try to coordinate testing the fix on a real vxworks <number> , <number> - bit platform <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev12 pr # <number> - fix # <number> , update cmake mimimum required to something more recent ( or remove ) pr # <number> - fix # <number> , <allcaps> osal </allcaps> loader unit test builds hardcoded <number> modules , test fails if more modules are supported pr # <number> - fix # <number> , update cmake mimimum required to something more recent ( or remove ) <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> jphickey dzbaker skliper"
"fix # <number> , update minimum required cmake version - fix # <number> this updates the main minimum required version from <date> to <number> <section> ci <section> none , just updates minimum required version <section> ci <section> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , set <allcaps> osal </allcaps> loader unit test number of modules to osal_config_max_modules . fixes # <number> <section> printed value of <allcaps> mod </allcaps> variable in cmakelists . txt to ensure that it gets set to one more than the osal_config_max_modules value ran <allcaps> osal </allcaps> unit tests <section> <allcaps> osal </allcaps> loader unit tests will now support up to osal_config_max_modules modules . <section> - os : <allcaps> rhel </allcaps> <number>"
"fix # <number> , update cmake_minimum_required remove the extra / unneded cmake_minimum_required that was triggering a deprecation warning . this will just inherit the minimum version of the parent . fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent ( or remove ) <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> in this case the <allcaps> osal </allcaps> main project currently lists <date> so it does not generate a warning here ( unlike some other modules which specified <number> . <number> ) but the "" unit - test - coverage "" submodule is where the problem lies . however , in this case , as this is just added as a subdirectory from the main build - it probably does not need a separate minimum_version at all . suggestion would be to remove this line , it will inherit the minimum version from the top level project . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev10 pr # <number> - fix # <number> , resolve ut uninit vars static analysis warnings - fix # <number> , remove redundant checks in ut - part # <number> , resolve ut uninit vars static analysis warnings pr # <number> - fix # <number> , add <allcaps> rtems </allcaps> <number> support <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> if included , identify any third party code and provide text file of license <section> acudmore skliper"
"fix # <number> , add os_statustostring <allcaps> api </allcaps> - fix # <number> related to : - nasa / cfe # <number> - nasa / cfe # <number> - # <number> <section> added unit and functional tests , confirmed expected output <section> none , just adds macro for future cleanup that will be draco compliant <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> see links above . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add rtems <number> support - fix # <number> these changes add support for <allcaps> rtems </allcaps> <number> in the <allcaps> rtems osal </allcaps> and pc - rtems <allcaps> osal bsp </allcaps> . the changes consist of modifications to the conditional compilation blocks and a couple of new conditional compilation blocks in the pc - rtems <allcaps> osal bsp </allcaps> startup code to account for an include and <allcaps> api </allcaps> that was deprecated in <allcaps> rtems </allcaps> <number> . in the <allcaps> rtems osal </allcaps> , the existing conditional compilation blocks were flipped from : <code> to : <code> by flipping the blocks as described above , it should work with future versions of <allcaps> rtems </allcaps> provided the <allcaps> api </allcaps> does not change . there is also a change in the os - impl - loader . c file to solve a warning with <allcaps> gcc </allcaps> <number> . <allcaps> gcc </allcaps> <number> is now used by <allcaps> rtems </allcaps> <number> . <section> all tests were run on the <allcaps> qemu rtems </allcaps> <number> , <allcaps> qemu rtems </allcaps> <number> , and the new <allcaps> qemu rtems </allcaps> <number> containers . <section> there should be no impact to the behavior . all tests passed on <allcaps> rtems </allcaps> <number> , <number> , and <number> . <section> <allcaps> qemu </allcaps> x86 with pc - rtems <allcaps> rtems bsp </allcaps> and cfs pc - rtems platform . in addition these changes are being used on a generic - rtems platform that will be submitted in a future pr . <section> this is the last set of code changes in the first round of <allcaps> rtems </allcaps> <number> updates described here : <url> <section> none <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"add <allcaps> osal </allcaps> support for <allcaps> rtems </allcaps> <number> <section> <allcaps> rtems </allcaps> <number> is currently under development in the main branch of the <allcaps> rtems </allcaps> git repository . there are a few minor changes that have to be addressed in the <allcaps> osal </allcaps> code to support <allcaps> rtems </allcaps> <number> . <section> modify the <allcaps> osal rtems </allcaps> implementation and <allcaps> osal </allcaps> pc - rtems <allcaps> bsp </allcaps> to support <allcaps> rtems </allcaps> <number> while still supporting <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . this is done with approximately <number> minor changes . in the existing code there are conditional blocks selecting either <allcaps> rtems </allcaps> <number> and defaulting to <allcaps> rtems </allcaps> <number> . for example : <code> to support <allcaps> rtems </allcaps> <number> , these blocks can be flipped as so : <code> by flipping these blocks , <allcaps> rtems </allcaps> <number> and <number> can be supported in the else block . <section> alternatives include not supporting <allcaps> rtems </allcaps> <number> , or just supporting <allcaps> rtems </allcaps> <number> , neither of which are ideal . this solution will continue to support <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> , and add support for <allcaps> rtems </allcaps> <number> . <section> these changes depend on a number of other changes : <url> <url> <url> i will not submit a pull request for this fix until the above changes are all in the main branch of the cfs bundle . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
redundant condition checks in ut <section> redundant conditions ( unsigned int check >= <number> ) observed in ut <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
uninitialized variable static analysis warnings in unit tests <section> uninitialized variable static analysis warnings observed for unit tests ( license prevents publishing ) <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"osal integration candidate : caelum - rc4 + dev9 pr # <number> - fix # <number> , update codeql workflows for reusable update pr # <number> - fix # <number> , add os - impl - no - select . c for <allcaps> rtems </allcaps> <section> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> acudmore skliper"
"<allcaps> fix </allcaps> # <number> , add os - impl - no - select . c for <allcaps> rtems </allcaps> - fix # <number> implements os - impl - no - select . c for <allcaps> rtems </allcaps> or any other os that has a configuration without select . currently only used for <allcaps> rtems </allcaps> when the network stack is disabled in the <allcaps> osal </allcaps> . on <allcaps> rtems </allcaps> the select call only works with network file descriptors . in current <allcaps> rtems </allcaps> <number> and <number> builds , when the osal_config_include_network option is false , the select call will still be included even though it cannot be used . the does not fail because the select call is still available in the <allcaps> rtems </allcaps> libraries . if you build <allcaps> rtems </allcaps> <number> or <number> without the default network stack , the select call will not be included in the <allcaps> rtems </allcaps> libraries , causing the <allcaps> osal </allcaps> build to fail . in addition , <allcaps> rtems </allcaps> <number> removes the legacy network stack , so a default os build will cause the <allcaps> osal </allcaps> build to fail . by selecting os - impl - no - select . c when the osal_config_include_network option is false , the select call will be omitted , and it will build for <allcaps> rtems </allcaps> with and without the network stack . <section> steps taken to test the contribution : this was tested with <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> using the pc - rtems ci platform . i ran all tests on <number> and <number> with osal_config_include_network set to true and false . all tests pass , but i did notice that the <allcaps> osal </allcaps> module unload test did not pass on <allcaps> rtems </allcaps> <number> - i do not think this test is related . this is also being used on leon3 / <allcaps> rtems </allcaps> <number> for gtosat . <section> a clear and concise description of how this contribution will change behavior and level of impact . when building the cfs with the osal_config_include_network to false for <allcaps> rtems </allcaps> only ( currently ) , the os_select * calls will return os_err_not_implemented . this is probably safer , since the underlying select call should only be used with network sockets / file descriptors anyway . <section> - build system : docker containers for <allcaps> rtems </allcaps> <number> and <number> cfs ci tests - target os / cfs platform : <allcaps> rtems </allcaps> <number> /x 8 6 with cfs pc - rtems platform , and <allcaps> rtems </allcaps> <number> /x 8 6 with cfs pc - rtems platform - this patch has also been in use for gtosat on a leon3 / <allcaps> rtems </allcaps> <number> platform for a year . <section> alan cudmore , <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , update codeql workflows for reusable update - fix # <number> <section> ci <section> none , just fixes codeql workflows <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix function documentation <section> name of function on comment does not match the actual function name <section> <url> <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> <number>
"fix # <number> , apply latest contributor license agreement links <section> - fixes # <number> adds checklist for <allcaps> cla </allcaps> and contributing guide . <section> working links to the latest cfa documents and removal of old cfa documents <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"apply latest contributor license agreement links <section> applies links to the latest contributor license agreements ( cfa ) . removes old cfa documents . <section> working links <section> add any other context about the feature request here . depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"incorrect status reporting from os_socketsendto_impl <section> the return value of <code> returns the number of characters sent on success and - <number> on error . in <code> the return of <code> is being assigned as os_status and returned . this results in a non - zero ( <code> ) status being reported back to the calling function which is interpreted as an error <section> steps to reproduce the behavior : <number> . put breakpoint on <code> <number> . enable to output using <code> <number> . chaeck the value of <code> <section> <code> should be <code> if the return value of <code> . <section> <code> <section> syed huq , kepler communications ."
"format truncation warning in <code> ( ubuntu <number> ) <section> a ubuntu <number> release job reveals that the current implementation of osal / ut_assert / cmakefiles / ut_assert . dir / src / utassert . c / utassert_dotestsegmentreport potentially truncates the output to fit in <code> . <section> steps to reproduce the behavior : <number> . go to <url> <number> . click on build ( ubuntu - <number> , release ) <url> <number> . scroll down to lines <number> - <number> of the "" make install "" job <section> passing workflow <section> screen shot <number> - <number> - <number> at <number> <number> <number> pm <img> <section> ubuntu <number> <section> <code> is currently implemented with size <number> . utassert_dotestsegmentreport may truncate the output to fit in the buffer . attempting to write <code> with <number> uint32 variables , <number> character array of size <number> named <code> , and <number> bytes of hard - coded strings ( e . g . "" <allcaps> total </allcaps> "" , "" <allcaps> pass </allcaps> "" , "" <allcaps> fail </allcaps> "" , "" <allcaps> mir </allcaps> "" ) . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"<allcaps> hotfix </allcaps> # <number> , revert changes to versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"osal integration candidate : caelum - rc4 + dev7 <section> - <allcaps> hotfix </allcaps> # <number> , enable format check on all branches pr # <number> - <allcaps> hotfix </allcaps> # <number> , fix failed format check pr # <number> - fix # <number> , update copyright header pr # <number> - fix # <number> , avoid calling memchr ( ) with unknown size buffer pr # <number> - <allcaps> hotfix </allcaps> # <number> , revert changes to versioning information <section> osal checks < <url> cfs bundle checks < <url> failed codeql workflow is being examined . <section> see prs <section> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user>"
"fix # <number> , avoid calling memchr ( ) with unknown size buffer <section> in some systems , passing a large size value to memchr ( ) causes it to return <allcaps> null </allcaps> , even if the char is guaranteed to be found within the actual valid buffer memory . this modifies the string buffer comparison function to actively check for this sentinel value and use "" strlen ( ) "" instead . fixes # <number> <section> build and sanity check , run all tests on both ubuntu ( latest version ) and centos <number> vm <section> tests pass in both systems ( no <allcaps> segv </allcaps> on centos <number> ) <section> ubuntu <number> centos <number> <section> joseph hickey , vantage systems , inc ."
"<code> <allcaps> segv </allcaps> when - <number> for size passed in ( on centos <number> ) <section> <code> returns <allcaps> null </allcaps> on centos <number> ( at least in one case ) , which within <code> causes the <code> to use the max size_t which causes a <allcaps> segv </allcaps> . <url> <section> build and run this test case ( others also use this pattern ) : <url> <section> no <allcaps> segv </allcaps> <section> see above <section> - hardware : unknown - os : centos <number> - versions : bundle main <section> add any other context about the problem here . <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix ic </allcaps> : caelum - rc4 + dev6 , fix failed format check <section> fixes format check failure that sneaked into ic : caelum - rc4 + dev6 <section> osal checks : < <url> cfs bundle checks : < <url> <section> none <section> <allcaps> rtems </allcaps> <number> / <number> ubuntu <number> <section> none <section> none <section> gerardo cruz - ortiz , <allcaps> nasa </allcaps>"
"osal integration candidate : caelum - rc4 + dev6 <section> pr # <number> - partial # <number> , update cfs - build codeql reusable worfklow target pr # <number> - fix # <number> , implement os_modulegetinfo_impl for <allcaps> rtems </allcaps> pr # <number> - fix # <number> , doxygen strip path and expose common config pr # <number> from skliper / fix1227 - doxygen_mainpage - fix # <number> , refactor doxygen and remove mainpage <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> / <number> ( bundle ) <section> part of <url> <section> none <section> <user> <user>"
"fix # <number> , doxygen strip path and expose common config <section> - fix # <number> <section> built <allcaps> osal </allcaps> users guide locally and from bundle , no warnings . inspected generated documents <section> none , but osal - common . doxyfile can now be used by other documents to resolve <allcaps> osal </allcaps> references <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"partial # <number> , update cfs - build codeql reusable worfklow target <section> partial # <number> changes tests input to boolean , changes source input for uses , component - path to osal , changes to tests to test , removes makeprep input <section> github actions check : <url> <section> passing workflow <section> ubuntu <number> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"format workflow not running on push to non - main branches <section> the format - check workflow has a restriction to only run on pushes to main . <section> create a new branch , push code changes to it , notice that format - check workflow does not execute . <section> workflow runs on all pushes <section> <url> <section> github actions <section> might be worth leveraging the reusable workflow in cfs < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , refactor doxygen and remove mainpage <section> - fix # <number> <section> built osal users guide and mission documentation , confirmed content <section> none , documentation only <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + cfe doxygen commits + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> - j - lin"
"osal integration candidate : caelum - rc4 + dev4 <section> pr # <number> - fix # <number> , resolve ut uninitialized variable warnings pr # <number> - fix # <number> , add ut_assert to doxygen and fix warnings pr # <number> - fix # <number> , protect if os_fdgetinfo called on socket <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> ( bundle ) <section> none <section> none * * contributor info - all information <allcaps> required </allcaps> for consideration of pull request * <user> <user>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the osal codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , protect if os_fdgetinfo called on socket <section> datagram sockets do not have a name_entry , it is set <allcaps> null </allcaps> . if the user calls os_fdgetinfo ( ) on this type of id , it will pass the first test , so this needs to be checked for non - <allcaps> null </allcaps> . fixes # <number> <section> build and sanity check <allcaps> osal </allcaps> run all tests confirm coverage test is exercising the new check <section> calling os_fdgetinfo on a datagram socket returns an empty string in the path field , it does not segfault . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> implement os_modulegetinfo_impl for <allcaps> rtems </allcaps> <section> a clear and concise description of what the contribution is . - fixes # <number> <section> the es "" query application "" command yields a telemetry packet that contains section information supplied by os_modulegetinfo_impl . compared object section sizes ( . text , . data , . bss ) in the telemetry given by the query app command to section sizes reported by the "" size "" tool in the platform toolchain . checked the disassembly of application objects built in <allcaps> fsw </allcaps> to find symbols in each section ( . text , . data , . bss ) and used the mm application to report the addresses for each . verified that symbol addresses reported were contained in the interval [ addr , addr + size ) for each section . tested with cfs bundle : <url> <url> <section> - behavior change : os_modulegetinfo will report section information for apps in <allcaps> rtems </allcaps> <number> + . es application info packet will contain valid section information for apps in <allcaps> rtems </allcaps> <number> + . <section> - hardware : wildcat processor card ( <allcaps> qemu </allcaps> emulation ) ( gr740 ) - os : <allcaps> rtems </allcaps> <number> via gaisler ' s <allcaps> rtems leon </allcaps> / erc32 <allcaps> gnu </allcaps> cross - compiler system ( <allcaps> rcc </allcaps> ) <number> . <number> - versions : cfs caelum rc4 + this commit + customizations for runtime environment ( <allcaps> psp </allcaps> + build system ) <section> this will only work for <allcaps> rtems </allcaps> <number> + . version <number> was the first version to support dynamic loading of objects via the <allcaps> rtems </allcaps> runtime loader ( <allcaps> rtl </allcaps> ) . <section> eric pollack - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add ut_assert to doxygen and fix warnings <section> - fix # <number> <section> build detailed design , observe osal warnings go away . also built unit tests to confirm parameter name change worked . <section> squash doxygen warnings <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve ut uninitialized variable warnings <section> - fix # <number> <section> built <number> - bit and ran unit tests in valgrind , warnings squashed <section> no more uninit variable warnings <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
missing handler for os_socketaddrgetport_impl causing uninitialized variable ut warnings <section> unit under test call to <code> does not set port . <section> handler should set the port on success ( at minimum ) to avoid uninitialized variables in unit tests <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"select - test failed , non - repeatable <section> first time i recall seeing it on caelum + osal , unfortunately it was a batch run so details not available : <code> <section> investigate , probably needs many runs since it ' s frequently tested and i have not seen it fail . <section> none <section> <allcaps> osal </allcaps> git hash that failed : e3d2f4c1c1e455dc7b5b42a7776451d3a1853c1a , which is a commit past v6 . <number> - rc4 + dev29 <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum + dev2 <section> pr nasa / osal # <number> , search global and local symbol tables pr nasa / osal # <number> , add missing space to utassert_stub_count pr nasa / osal # <number> , add uint8 and uint16 equivalents for utassert_uint32_ macros pr nasa / osal # <number> , correct warnings on gcc11 pr nasa / osal # <number> , set output in os_stat handler pr nasa / osal # <number> , - fix # <number> , reuse codeql , static analysis , format check <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , set output in os_stat handler <section> - fix # <number> - provides consistent default os_stat handler behavior <section> tested with fm that relies on default behavior , ci <section> avoids uninitialized variable risk in unit tests <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , typesafe definition of osal_id_t <section> modifies the osal_id_t typedef to be a non - integer value . the intent is to catch cases where it inappropriately being used as an integer value . this is transparent so long as the osal_id_t typedef and provided check and conversion routines are used . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> and <allcaps> osal </allcaps> with and without osal_omit_deprecated flag <section> when osal_omit_deprecated is enabled ( opt - in ) this will catch misuse of <allcaps> osal </allcaps> ids as integers , or failure to use correct <code> typedef to hold the value . <section> ubuntu <number> <section> <allcaps> osal </allcaps> and <allcaps> cfe </allcaps> should all be compliant , but <allcaps> cfs </allcaps> apps probably are not yet compliant with this . hence why it is "" opt - in "" via osal_omit_deprecated flag , like other similar changes done in the past . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct warnings on gcc11 <section> - fix # <number> these new warnings are detected by the new compiler . they are all places in unit test where an uninitialized value is passed via "" const "" pointer into a unit under test . by definition a "" const "" pointer is always an input . while the warning is pedantically true - should not pass an uninitialized struct as an input - these were all unit tests where the object value is a do not - care value , so it does not matter . but to fix the warning , simply need to initialize a value before making the call . fixes # <number> <section> build and run all tests on <allcaps> gcc </allcaps> <number> ( ubuntu <number> ) <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add uint8 and uint16 equivalents for utassert_uint32_ <comparison> macros <section> - fix # <number> adds uint8 and uint16 equivalents for utassert_uint32_ <comparison> macros . <section> <number> . built according to steps listed in <allcaps> readme </allcaps> <number> . performed tests on each new macro with relevant input to ensure correctness ( for example , passing <number> and <number> + <number> to utassert_uint8_eq and verifying that test passed ) . <section> allows for users to call utassert comparisons on unsigned <number> and <number> - bit values and provides expected wrap - around behavior without users needing to explicitly cast . for example , <code> outputs the following : compare uint8 : <number> ( <number> ) = = <number> + <number> ( <number> ) <section> - hardware : thinkpad t480s - os : pop ! _os <number> <number> - bit <section> n / a <section> n / a <section> kurtis dinelle ( <email> ) student at oregon state university <allcaps> cla </allcaps> already on file ."
"fix # <number> , add missing space to utassert_stub_count <section> - fix # <number> by adding missing space to utassert_stub_count . <section> <number> . built tests according to instructions in <allcaps> readme </allcaps> quick start section . <number> . ran <code> in <code> to verify correct output . <section> example output ( old ) : "" callcountcfe_evs_sendevent ( ) ( <number> ) = = <number> ( <number> ) "" example output ( new ) : "" callcount cfe_evs_sendevent ( ) ( <number> ) = = <number> ( <number> ) "" <section> - hardware : lenovo thinkpad t480s - os : pop ! _os <number> <number> - bit - versions : n / a <section> n / a <section> n / a <section> kurtis dinelle ( <email> ) student at oregon state university"
augment utassert_abort for more descriptive error messages <section> see comments in <url> <section> additional arguments to utassert_abort <section> none <section> none <section> <user>
"osal integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> rename os_xxxtime to os_xxxlocaltime in comments pr # <number> - fix # <number> , vxworks intlib stub aliasing issue pr # <number> - fix # <number> , recognize ifdef __cplusplus pr # <number> - fix # <number> , remove extern in stub prototypes - update generate_stubs . pl pr # <number> - partial # <number> , add typedef for <allcaps> osal </allcaps> status codes - fix # <number> , recognize ifdef __cplusplus - fix # <number> , vxworks intlib stub aliasing issue pr # <number> - fix # <number> , add duplicate check to local unit test <section> <allcaps> osal </allcaps> checks < <url> bundle checks < <url> <section> see prs <section> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , reuse codeql , static analysis , format check <section> fixes # <number> <section> tested on forked repos . <allcaps> osal </allcaps> static analysis reuse : <url> cfs static analysis reuse : <url> <allcaps> osal </allcaps> codeql reuse cfe build : <url> <allcaps> osal </allcaps> codeql reuse <allcaps> osal </allcaps> default : <url> cfs codeql reuse : <url> <allcaps> osal </allcaps> format check reuse : <url> cfs format check : <url> <section> cfs will hold the workflows for codeql , static analysis , and format check . these workflows will be called by all <allcaps> osal </allcaps> to reuse . these workflows will not work until <url> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the workflow simply uses <code> and the full path of the workflow . the cfs workflows , or targeted workflows , must include workflow_call and runs - on as seen below . <code> <section> keep it as is . <section> tested in forked cfs : <url> tested in forked <allcaps> osal </allcaps> : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , format workflow add duplicate check , remove main , fix job name <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . run on all branches for push and pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add duplicate check to local unit test <section> fixes # <number> <section> <url> <section> skip workflows on push for local unit tests if there is a duplicate workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , static analysis add duplicate and remove main push <section> fixes # <number> <section> forked repo , <url> <section> static analysis workflow should run on all branches for both pull requests and push . the duplicate job prevents two instances of the static analysis to run at the same time . pull requests are prioritized . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check and restricted to main push <section> missing duplicate check and restricting to push to main : <url> <section> add duplicate check , remove main restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
local unit test workflow missing duplicate check <section> missing duplicate check : <url> <section> add <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"format check workflow missing duplicate check , restricted to main push , job name does not match <section> no duplicate check , restricting to main and job name does not match : <url> <section> add duplicate check , remove main branch restriction , update name to match action , maybe "" format - check "" ? <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use fstat and fchmod for <allcaps> toctou </allcaps> bug <section> fixes # <number> <section> github actions <section> resolve <allcaps> toctou </allcaps> bug by using fstat and fchmod instead of stat and chmod . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove extern in stub prototypes removed ' extern ' from function prototypes in stub generator script # <number> ."
"fix # <number> , check chmod return <section> - fix # <number> check the return values on the calls to <code> <section> using the ci / id pipeline on github . <section> no expected behavior change <section> - os : ubuntu <number> <section> none <section> none <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url> jh edit : added fix keyword to autolink"
"fix # <number> , check return value for setsockopt <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] resolves # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url>"
"fix # <number> , recognize ifdef __cplusplus <section> add feature to generate_stubs . pl input phase to recognize and skip over <code> blocks . this makes it so it can be used on c headers which are c + + - enabled too . the logic should be fairly easy to extend to other <code> conditionals as needed . fixes # <number> <section> generate stubs for a c header that has c + + - aware extern wrappers in it . <section> stubs for prototypes inside c + + extern "" c "" block are generated successfully . <section> ubuntu <section> tempting to attempt to use gcc proprocessor here ( - e ) to get full evaluation of all preprocessor logic , but this would depend on the target headers and may introduce more problems than it solves . so in the interim this just adds a local check that specifically looks for <code> and filters out everything inside this block . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , vxworks intlib stub aliasing issue <section> use a separate local variable rather than casting to ( void * <wink> . fixes # <number> <section> build with strict aliasing , confirm no warnings <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"os / posix : port of the posix implementation to macos ( take <number> ) <section> this is an improved version of the previous macos - related pr : <url> since <number> , the improvements in the <allcaps> osal </allcaps> ' s build system made it possible to reuse most of the linux / <allcaps> posix </allcaps> layer and reduce the size of the diff to just a few lines plus the addition of several small libraries that are missing on macos . <section> - i am running the <allcaps> osal </allcaps> ' s tests on a macos machine . - there is a separate github action for running this changeset on github actions ' s macos machine . - i do not have a non - trivial cfs simulation with many apps to test the full cfs integration on macos just yet . <section> with this change , it should be possible to run the cfs <allcaps> osal </allcaps> on macos . related nice - to - have and non - blocking issues : - [ ] <url> - [ ] <url> - [ ] <url> - [ ] <url> - [ ] <url> <section> - hardware : mac - os : macos big sur <number> . <number> ( 2 0 g95 ) - versions : <url> + this changeset . <section> i am not sure how much the macos port is relevant to the community . this work still needs discussion ( <number> - <number> trivial - to - medium discussion items ) and i clearly need someone from the cfs team to support this effort . <section> i have left a comment on the <code> file that points to the book where the implementation was adapted from . <section> stanislav pankevich , personal . the individual <allcaps> cla </allcaps> has been signed ."
"osal integration candidate : <number> - <number> - <number> <section> *combines* pr # <number> - fix # <number> , enable symbol api test and <allcaps> mir </allcaps> dump too large pr # <number> - fix # <number> , <allcaps> mir </allcaps> symbol too long or table to long for osloader test pr # <number> - fix # <number> , add bsp - specific configuration flag registry pr # <number> - fix # <number> , add os - specifc socket flag function <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( see cfs bundle checks ) <section> part of <url> <section> none <section> <user> <user>"
"fix # <number> , add os - specifc socket flag function <section> adds the capability for the bsd sockets implementation to use a function provided by the os layer to set the socket flags . this allows vxworks to have an alternative implementation that uses ioctl rather than fcntl to set the flags . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> vxworks will use <code> rather than <code> to set the socket flags <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add bsp - specific configuration flag registry <section> adds a simple <allcaps> bsp api </allcaps> to get / set integer flags for each resource type . all bits are platform - defined , so this can be used to store any arbitrary platform flag . initial use case is for setting task flags on vxworks platforms which require a certain task flag to be set . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> none on the framework build . however this feature can be used internally to get around an issue where some vxworks task flags need to be set only on one specific platform . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> mir </allcaps> symbol too long or table to long for osloader test <section> - fix # <number> makes either symbol too long or table to big error code returns into <allcaps> mir </allcaps> , since it ' s not an actual failure of the test . <section> ran on sp0 and ci <section> <allcaps> mir </allcaps> for symbol table configuration related errors <section> - hardware : sp0 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> osal </allcaps> loader test hard fails if size exceeded <section> hard failure if ut_symtable_size_limit not big enough : <url> <section> <allcaps> mir </allcaps> if symbol table is not large enough <section> could consolidate this and test / symbol - api - test <section> similar issue as fixed in # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> osal </allcaps> loader unit test builds hardcoded <number> modules , test fails if more modules are supported <section> test failure based on hard <number> setting in cmakelist . txt in the osal tree larger os_max_modules is configured : <url> <section> possibly relate to osal_config_max_modules ( + <number> <sad> <url> otherwise at minimum make it configurable , and if so test should <allcaps> tsf </allcaps> with a useful message like increase <allcaps> x <elongated> </allcaps> to match <allcaps> y <elongated> </allcaps> . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , enable symbol api test and <allcaps> mir </allcaps> dump too large <section> - fix # <number> always runs symbol tests now and checks for not implemented . also will report <allcaps> mir </allcaps> for a symbol table that will not fit instead of causing a failure . <section> ran on mcp750 , confirmed pass . ci . <section> symbol test now is not skipped <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"symbol <allcaps> api </allcaps> test uses old os_include_module_loader , ends up skipping tests <section> possibly missed in # <number> conversion to source selection , testsymbolapi depends on the old define which means it has not been getting tested for a while : <url> <section> convert to check for os_err_not_implemented ( applies to os_symbollookup , os_symboltabledump already has it ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove softsleep , as a dead store . <section> a clear and concise description of what the contribution is . - removes softsleep , as it doesnt appear to be used . <section> steps taken to test the contribution : <number> . run through your ci pipeline <section> a clear and concise description of how this contribution will change behavior and level of impact . - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> deleting code <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add typecast to memchr call pr # <number> - fix # <number> , regex update in coverage enforcement to match . <number> <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , regex update in coverage enforcement to match . <number> <section> - fix # <number> updates the regex to always get <number> matches ( was ignoring . <percent> ) so coverage enforcement will work as expected . also simplified the comparison . <section> ran regex offline with various inputs including . <percent> case . <section> ci will work more consistently <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"coverage verification will fail if percentage is a round number <section> <code> will only find three matches for any percentage that ends with <code> , where <number> matches are expected . <section> change the first match to <number> - <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add typecast to memchr call <section> this function is documented as returning <code> , and on some compilers this requires an explicit cast to <code> to avoid a warning . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none <section> ubuntu <section> isolated from draft contribution from <user> in # <number> <section> joseph hickey , vantage systems , inc ."
"draft : qt5 <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] adds qt as an operating system . <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' built on mac using mac ports install of qt <code> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ macbook ] - os : [ qt5 ] - versions : [ ] <section> several things not implemented , unsure how to implement timers / etc . <section> if included , identify any third party code and provide text file of license qt library is linked against . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) you have my info ."
"remove <code> from function prototypes in stub generator script <section> function prototype <code> prefix has no effect , from generator script : <url> <section> remove . <section> none <section> nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add bitmask assert macros <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( bundle ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , correct typos in documentation , print statements , and comments <section> fixed various minor text typos in <allcaps> readme </allcaps> docs , comments and a few debug / error message strings . - fix # <number> <section> none ( non - executable code ) . <section> none . code execution is unchanged / unaffected . <section> n / a <section> n / a <section> n / a"
"fix # <number> , add bitmask assert macros <section> add a pair of macros that can confirm a value has bits set or does not have bits set . by using bitmask - aware macros , the logged information can include both the raw / actual value as well as the specific bits being tested . fixes # <number> <section> build and run all tests <section> none here , just adds new macros <section> ubuntu <section> tested by updating the new time clock state checks to use this macro . looks a little something like this in the log : <code> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , disable unit tests in codeql <section> fix # <number> <section> tested on forked repo : <url> <section> disabled unit tests for both codeql workflows . shows less code scanning alerts with it disabled . alerts should only be shown for flight code . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"disable unit tests in codeql <section> do not analyze unit and functional test code for codeql . <section> disable unit tests in the workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> fix # <number> , add test case types similar to na <section> osal ci < <url> cfs bundle ci < <url> <section> see pr <section> ubuntu <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add test case types similar to na <section> add two more test case variants , similar to na , where failure of the test case does not translate to failure of the overall test . the additional cases have different levels of default visibility , and may be handled differently by the end user . that is , some tests may be skipped because they are truly na ( and nothing for the user to do to change that ) and some tests may be skipped because the system was not set up in a way that allowed them to be run ( and the user must fix that and re - run ) . fixes # <number> <section> build and run all tests . also modify <allcaps> cfe </allcaps> test to use new casetype , confirm working as expected . <section> none <section> ubuntu <section> intended to differentiate between the nuances of all tests that are currently marked "" n / a "" . for some cases , its purely informational because the check does not apply , and nothing more needs to be done . for other cases , a test might be skipped because the user did not start the system in a way where the tests could be run , and the user should correct that . lastly , for some cases , the condition was na simply because there was more than one acceptable result for that test case . for the first two , they should remain visible in the log by default , because they add some value to indicate what was ( and was not ) tested . however the first requires no action of the user , and the second does require the user to correct something , so they should be marked differently . the third is only relevant to software developers , it does not add much value to the log , so it can be hidden by default , but can still be seen by increasing the test verbosity to the debug level . <section> joseph hickey , vantage systems , inc ."
add standalone osal builds for <allcaps> rtems </allcaps> in continuous integration <section> the cfs bundle has builds running on <allcaps> rtems </allcaps> . it would be helpful to do a standalone osal build using the same toolchain . <section> port the workflows in the cfs bundle repo to the osal repo and modify for a standalone build - <url> - <url> <section> none <section> see <url> for example of a standalone osal build
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add absolute branch coverage check <section> osal checks < <url> cfs checks < <url> <section> see prs <section> ci - ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> add utassert_mir macro pr # <number> - fix # <number> , add generic asserts from <allcaps> cfe </allcaps> coverage testing pr # <number> - fix # <number> , add osapi - shell - stubs . c to <allcaps> osal </allcaps> stub library <section> osal checks < <url> cfs checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , add generic asserts from <allcaps> cfe </allcaps> coverage testing <section> migrates some of the assert extensions that were added for <allcaps> cfe </allcaps> coverage testing to the utassert level , so they can be used in a wider scope of tests , not just <allcaps> cfe </allcaps> coverage . the existing macros ( e . g . utassert_int32_eq ) are updated to use the same facility . all macros are now also a single line and return the boolean pass / fail status , which was a useful feature of the <allcaps> cfe </allcaps> macros . fixes # <number> <section> build and run all tests ( functional + coverage ) and confirm results are normal . <section> no operational change to existing asserts , but formatting of some logs may change a little bit , so it may affect some scripts that are looking for very specific message ( although it did not affect any of my log parsing scripts ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
fix # <number> add utassert_mir macro <section> fixes # <number> added utassert_mir macro to avoid misuse of <code> when using the <allcaps> mir </allcaps> case type <code> <section> <number> . ran cfs unit tests <section> no changes expected . macro utassert_mir is now available for use . <section> ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , add osapi - shell - stubs . c to <allcaps> osal </allcaps> stub library <section> adds the missing file to the library fixes # <number> <section> build and run unit tests <section> dependencies which invoke <code> should now link successfully <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add absolute branch coverage check check for absolute number of missed branches in github workflow instead of checking a percentage branch coverage . ensure that the number of missed branches does not increase from the current <number> missed branches . <section> fixes # <number> . the pr # <number> that is currently in the integration candidate branch has only <number> missed branches in the unit tests . this pr checks that the number of missed branches is <= <number> instead of checking the percentage branch coverage . this puts an absolute limit on the number of missed branches . <section> steps taken to test the contribution : <number> . the local_unit_test workflow will currently fail on any branch that is not the current integration candidate , so i merged this pr into my fork ' s integration candidate branch to see it pass here <url> . <number> . the error output when the coverage is not high enough can be seen here <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - this pr will only change the behavior of the local_unit_test github actions workflow and will fail the test if more than <number> branches are not covered by the unit tests . <section> - github actions runner <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"osal integration candidate : <number> - <number> - <number> # # context part of <url> # # # tests osal checks < <url> cfs checks < <url> # # # authors <user> # # description # # # pr # <number> fix # <number> , add unit test branch coverage"
"enforce branch coverage in workflow ( set limit on uncovered branches ) <section> # <number> gets us down to <number> uncovered branches ( with issues for each ) , need to enforce so this does not slip w / future updates . <section> workflow currently checks for <percent> line coverage : <url> add check of branches , suggesting reading in the branches *( <allcaps> a <elongated> </allcaps> of <allcaps> b <elongated> </allcaps> branches ) and confirming <allcaps> b <elongated> </allcaps> - <allcaps> a <elongated> </allcaps> <= <number> ( suggesting the bash math support to keep things simple ) . <section> minimum % coverage is somewhat weak since it does not really catch if you add more uncovered branches ( as long as you add enough covered ones also ) . hard count check is better . really getting to <percent> is even better , but we are not there yet . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add unit test branch coverage <section> fix # <number> - added branch coverage and minor test updates to use macros ( not full update ) <section> build / run coverage tests and confirm branch coverage ( and success ) full branch coverage except # <number> , # <number> , # <number> : <code> <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # # tests osal < <url> bundle < <url> # # # authors <user> # # description # # # pr # <number> fix # <number> , add independent os_rename functional test parameter checks"
"partial # <number> , add typedef for <allcaps> osal </allcaps> status codes <section> minimal change to add a typedef for <code> , a macro for constants / literals <code> , and an inline function to convert to "" long "" for printing / logging . partial / related to # <number> ( this pr is just for the typedef and conversions , so that <allcaps> cfe </allcaps> / app code can potentially use the type ) <section> build and run <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> this pr is only intended to avoid a chicken / egg scenario with the <code> type . that is , just to make it exist , so other entities can theoretically start using it , even if <allcaps> osal </allcaps> itself does not ( yet ) . <section> joseph hickey , vantage systems , inc ."
"shared module uncovered branch due to run time logic based on compile time config <section> run time logic for compile time config example : <url> full branch coverage of while loop requires both <code> set to <code> and non - <allcaps> null </allcaps> . note by design the build system has a <number> to <number> to <number> relation - code / ut code / test exec , so an extra build would break the pattern . <section> possibilities : - break build pattern and build additional "" special "" test w / o <code> defined - source selection based on compile time config ( or utilize preprocessor ) - add a function to set and / or get the static symbol table pointer - build / run twice from the test procedure . <repeated> once with the definition removed from the unit - test - coverage cmakelists . txt <section> none <section> coverage testing <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unreachable error branch in <code> <section> code checks for error and if so returns , then checks for not error ( always true ) : <url> <section> could be an else , or just remove check . <repeated> ( or test for = = os_success and the else could be the error case ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
stray <code> prototype <section> prototype with no implementation here : <url> macro here : <url> <section> remove stray . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
unreachable branch on unknown fstype in <code> <section> <code> is always true due to memset of filesys to zero in <code> call . nothing else can logically set it otherwise or reason to not set if the other conditions are true . <url> <section> remove dead branch . <section> clear justification for leaving in . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add independent os_rename functional test parameter checks <section> fix # <number> - individual parameter checks for <code> <section> build / run unit tests , passed <section> none , unit test only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<code> unit test does not independently check parameter validity <section> overloaded parameter test : <url> <section> test each individually <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"add <code> functional test for <allcaps> null </allcaps> <code> case <section> <allcaps> api </allcaps> documentation claims <code> parameter for <code> can be null , but this is not functionally tested / confirmed . <section> add a test to confirm implementation meets <allcaps> api </allcaps> description . <section> none . <section> note this case is included in the coverage test . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user> # # description # # # pr # <number> , fix # <number> , timer reconfig tests"
"move test runs out of code ql workflow <section> codeql - cfe - build . yml <url> . tests should be in their own workflow . <url> <section> create new workflow for building and testing osal with a cfs bundle context . <section> move bundle test to the "" local_unit_test """
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests < <url> < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , add range to os_taskdelay checks # # # pr # <number> fix # <number> , return <code> for root task id on <allcaps> rtems </allcaps> # # # pr # <number> fix # <number> , increase ut symbol dump size limit # # # pr # <number> fix # <number> , do not register <allcaps> rtos </allcaps> timer for external sync # # # pr # <number> fix # <number> , avoid task delete during utprintf # # # pr # <number> fix # <number> , add osal prefix to network <allcaps> api </allcaps> group # # # pr # <number> fix # <number> , increase timeout in network - api - test"
"fix # <number> , avoid task delete during utprintf <section> in the osal_core_ut test , the test task was being deleted while it was in the midst of a utprintf call , which left the <allcaps> bsp </allcaps> mutex in a locked state , causing deadlock . using sem_delete_safe attribute avoids task deletion for the mutex holder , and adding a small delay to the test case makes all the messages appear as expected ( accounts for slow serial console on test platform ) . fixes # <number> <section> run osal_core_ut <section> test now passes , does not deadlock <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase timeout in network - api - test <section> the number of asserts being printed was still taking longer than 1 0 0 0 ms on a <number> baud serial link , so increasing the timeout allows tests to pass . fixes # <number> <section> run network - api - test <section> test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not register <allcaps> rtos </allcaps> timer for external sync <section> skip the registration of a timer in vxworks when the assigned_signal is <number> ( this indicates an external sync function is used ) . fixes # <number> <section> run time - base - api - test <section> test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase ut symbol dump size limit <section> for the mcp750 , the symbol table fairly large and requires a considerably larger limit to avoid the os_err_output_too_large limit . this also uses a different name , so that the user can actually see the symbol dump file if they want ( otherwise the next test overwrites the file ) . fixes # <number> <section> run osal_loader_ut <section> symbol table dump test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , timer reconfig tests <section> the underlying os mechanism that rejects calls to timer apis from timer callbacks does not work on anything except <allcaps> posix </allcaps> . this skips these unit tests on non - <allcaps> posix </allcaps> platforms , and also adds documentation clearly indicating that the <allcaps> api </allcaps> must not be called from a timer context . fixes # <number> <section> run unit tests <section> test now passes because this check is skipped on these platforms <section> mcp750 / vxworks <number> <allcaps> qemu </allcaps> / <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , root task id on <allcaps> rtems </allcaps> <section> ensures that os_gettaskid_impl ( ) returns os_object_id_undefined if called from the root task - as this does not have an <allcaps> osal </allcaps> task id . fixes # <number> <section> run unit tests on <allcaps> rtems </allcaps> <section> tests pass <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add range to os_taskdelay checks <section> to account for potential of imprecise timing / clock sampling when running on a vm , allow for a wider range of time values to pass the test . fixes # <number> <section> build and run tests using <allcaps> qemu </allcaps> <section> test now pass even if the time difference is not exactly the expected range . <section> <allcaps> rtems </allcaps> <number> . <number> under <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> bundle checks < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , implement missing parameter / retcode test permutations"
"<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> , osal - api - guide workflow # # description the osalguide workflow needed an update after nasa / osal # <number> and nasa / osal # <number> first commit : updated the warnings . log location second commit : renames the file . # # tests on github actions"
"remove the ut object limit since original purpose no longer appilcable <section> the ut object validity table was to check against old style passed in id ' s vs the opaque id ' s in current use . this required a limit , which can cause ut failures if it ' s exceeded . <section> remove the ut object validity table logic to eliminate the potential ut failure . <section> none <section> related to # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # tests osal checks < <url> cfs bundle checks < <url> # # context part of <url> # # authors <user> <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , implement coding standard rules in codeql # # # pr # <number> fix # <number> , rename doc to docs # # # pr # <number> fix # <number> , add mutex lock around utassert globals # # # pr # <number> fix # <number> , resolve discrepancies between file <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between filesys <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between idmap <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between select <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between socket <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , const correct os_selectfdisset # # # pr # <number> <allcaps> hotfix </allcaps> : <number> - <number> - <number> , add missing os_select param doc # # # pr # <number> fix # <number> add workflow to build and verify <allcaps> osal api </allcaps> guide # # # pr # <number> fix # <number> , add detail design template # # # pr # <number> fix # <number> , update error codes and documentation # # # pr # <number> fix # <number> , increase ut object limit for testing"
"fix # <number> , increase ut object limit for testing <section> fix # <number> - increases the ut object limit bits from <number> to <number> <section> ci <section> none <section> ci <section> fix for stakeholder <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"increase the number of ut objects allowed to support > <number> <section> right now the 1 2 8 th object fails on creation ( even though the ut code says <number> are supported ) : <url> <section> bump to <number> , since <number> is not unreasonable on a large system . <section> none <section> the use case was for pipes , they hit the <number> limit and doubled , then encountered ut errors . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , ping <user>"
"<allcaps> hotfix </allcaps> : <number> - <number> - <number> , add missing os_select param doc <section> fix usersguide doxygen warning for os_selectsingle and os_selectmultiple msecs input parameter . <section> <section> no doxygen warning <section> <section> see <url> <section> none"
"fix # <number> , update error codes and documentation <section> updates the documentation related to status code test / check , provide description of how to check for any error status in a future - proof manner . also updates the list of error code string conversions to match the current set ( some were missing ) . fixes # <number> <section> build documentation and verify content . build complete <allcaps> fsw </allcaps> and run all unit tests . <section> documentation has better description of status code checking / handling <code> function will work for all currently - defined codes . ( <allcaps> fsw </allcaps> does not actually use this function ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add detail design template <section> this file indicates which input dirs to use for the cfe detail design document . it should be controlled with <allcaps> osal </allcaps> , as this knows the detail of the directory tree . fixes # <number> <section> build cfe detail design document , confirm correct / expected content , with no duplicate "" mainpage "" <section> detail design document has <code> and <code> content , but <allcaps> not </allcaps> the mainpage that is specific for the <allcaps> osal api </allcaps> guide . <section> ubuntu <section> related to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> add workflow to build and verify <allcaps> osal api </allcaps> guide <section> fix # <number> adding a workflow that will build the <allcaps> osal api </allcaps> guide , and check that there are no errors or warnings . currently , the warning - check job always finds warnings . workflow will complete successfully once documentation warnings are fixed . marked as draft since it needs integration - candidate to be merged to main . <section> steps taken to test the contribution : <number> . pushed workflow file . <number> . verified workflow runs as expected . <section> a new workflow will run on every push and pull request . <section> - tested on the github servers where ci actions get to run . ( ubuntu <number> ) <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , implement missing parameter / retcode test permutations <section> another pass through the <allcaps> api </allcaps> to ensure that : <number> . every function parameter marked "" nonnull "" in doxygen has an individual <code> retcode test <number> . every function parameter marked "" nonzero "" in doxygen has an individual <code> retcode test <number> . every function parameter accepting an <code> type has two <code> retcode tests , and that it is tested with <code> and <code> ( which is not zero , but not valid ) . <section> run all unit tests , and run validation script on tests logs to confirm parameters have been exercised and confirmed for each required retcode . <section> missing tests are implemented <section> ubuntu <section> this pr will have each subsystem done as separate commits <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add mutex lock around utassert globals <section> adding a mutex around modifications to globals allows utassert statements to be done from any test thread . fixes # <number> <section> build and run all unit tests , confirm correct operation <section> utassert statements can now be used from any test task without risk of interference <section> ubuntu <section> will require an update to <allcaps> cfe </allcaps> if accepted <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between select <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> select <allcaps> api </allcaps> . this substantially overhauls the select - test to get better coverage of the various features . fixes # <number> <section> build and sanity check , run all unit tests , re - run cross reference script to confirm retcodes are exercised in the unit tests . <section> better coverage of the various select <allcaps> api </allcaps> return codes in the tests . <section> ubuntu <section> this does asserts in sub - tasks ( preexisting condition ) so rather than rewrite i suggest fixing # <number> to make it safer . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , const correct os_selectfdisset <section> this function does not modify its "" set "" argument , therefore it should be qualified as "" const "" . fixes # <number> <section> build and sanity check , run all unit tests <section> none , just const correct <allcaps> api </allcaps> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between socket <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> socket <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , include doxygen targets locally # # # pr # <number> fix # <number> , resolve discrepancies between timer <allcaps> api </allcaps> and unit tests ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timer <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , resolve discrepancies between binsem <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , add missing clock retcode tests # # # pr # <number> fix # <number> , resolve discrepancies between common <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between countsem <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between dir <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between module <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between mutex <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between queue <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between task <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between timebase <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , check misc <allcaps> api </allcaps> return codes # # # pr # <number> fix # <number> , rename codeql cfe build and add duplicate job # # # pr # <number> fix # <number> , filter only whole words for keyword match # # # pr # <number> fix # <number> , update <allcaps> osal </allcaps> config guide link"
"fix # <number> , resolve discrepancies between filesys <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> filesys <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between file <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> file <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between idmap <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> idmap <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> this does update one return code from the the internal function <code> , changing it from os_err_incorrect_obj_type to os_err_invalid_id . there was one case in os_getresourcename where this status code gets eventually returned to an application caller , and os_err_invalid_id makes it more consistent with other apis in this regard . ( in other modules the idtype is hard coded so it does not affect these , this error is not triggered except for coverage tests ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between timer <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timer <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between timebase <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timebase <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bubdle checks < <url> # # description # # # pr # <number> fix # <number> , add count sem timeout test # # # pr # <number> fix # <number> , defer cancellation when <allcaps> bsp </allcaps> locked removes chance of deadlock by ensuring <code> returns the task id it knows about , regardless of whether the task is pending cancellation or not . defers cancellation of the task while the <allcaps> bsp </allcaps> is locked , ensure it reaches the unlock , then restores the previous cancel state . fixes a bogus debug message about unlocking from the wrong task if the task is pending delete . # # authors <user> <user>"
"fix # <number> , filter only whole words for keyword match <section> in the stub generator script , filter only whole words when ignoring keywords . do not match if the word appears as a substring inside a larger word . fixes # <number> <section> regenerate stubs , and build and run all unit tests . <section> corrects the argument name in os_timebasecreate stub ( only occurrence discovered so far ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
add a functional test for <code> <section> missing functional test of <code> <section> add a test that confirms the handlers are called for the defined events <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , resolve discrepancies between common <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> common <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between dir <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> directory <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between mutex <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> mutex <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between module <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> module <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement coding standard rules in codeql <section> fix # <number> created two configuration files , one for default queries and security queries and another for jpl rules . waiting for <url> to be merged to add these queries in the newly created workflow , codeql - cfe - build . yml . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , resolve discrepancies between countsem <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> countsem <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between binsem <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> binsem <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename codeql cfe build and add duplicate job <section> fixes # <number> rename codeql - build . yml to codeql - cfe - build . yml for clarity of what the workflow does . changed from codeql analysis to codeql cfe build as workflow name . <section> users can differentiate between this workflow and the osal default workflow . <section> skip duplicate actions license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , resolve discrepancies between queue <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> queue <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between task <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> task <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
add documentation build and confirmation of no warnings to ci <section> should build and confirm no warnings as part of <allcaps> osal ci </allcaps> to catch errors in prs . currently not checked until at the bundle level . <section> add documentation build and no - warning / error verification to <allcaps> osal ci </allcaps> . <section> none <section> pending merge of # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"rename codeql cfe build and add duplicate jobs <section> users may be confused of the two codeql workflows . multiple jobs may run at the same time . <section> make it clear that there is an analysis for osal using the cfe configuration build . rename codeql - build . yml to codeql - cfe - build . yml . rename the workflow from "" codeql analysis "" to "" codeql analysis cfe build "" . <code> add the multiple jobs action so the workflow does not run multiple times . <section> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add coding standard rules in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . <section> testing done on forked repository , arielsadamsnasa / cfe . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . to prove that this workflow will work , i tested a workflow on a forked repository . in the screenshot , the configuration path is changed to the forked repo and tested branch and successfully runs both codeql jobs . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , include doxygen targets locally <section> add the "" doxyfile "" templates and various <allcaps> osal </allcaps> doxygen pages locally under the "" doc / src "" directory . add a cmake script to build the documentation in either a standalone or integrated build environment . fix # <number> <section> build <allcaps> osal </allcaps> "" api guide "" documentation in a standalone build environment , confirm output works and matches what is generated from the <allcaps> cfe </allcaps> build . <section> able to build <allcaps> osal api </allcaps> guide in a standalone environment , independently of <allcaps> cfe </allcaps> build . <section> ubuntu <section> if this is merged , then a logical follow on would be to remove the same templates and dox files from <allcaps> cfe </allcaps> tree and have the <allcaps> cfe </allcaps> documentation call this script to build the <allcaps> osal api </allcaps> guide . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document os_objectidtoarrayindex as public <section> fix # <number> - updates the public nature of os_objectidtoarrayindex and related documentation <section> ci , documentation only <section> none , documentation <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , check misc <allcaps> api </allcaps> return codes <section> correct missing doxygen retvals and other discrepancies between test and documentation note , other tests were ok , but depend on support being enabled and supported by <allcaps> rtos </allcaps> . script will report n / a items ( due to no impl ) as missing . confirmed os_heapgetinfo ( ) is ok on <allcaps> rtems </allcaps> . fixes # <number> <section> run unit tests , revalidate test log against documentation <section> no change to <allcaps> fsw </allcaps> , test / doc only <section> ubuntu <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing clock retcode tests <section> corrects unit test retval discrepancies in clock code note that the success case for os_setlocaltime is tested , but is marked as a <allcaps> mir </allcaps> test case because it requires elevated permission , it is expected to fail when running as a normal user on linux . fixes # <number> <section> run all unit tests , confirm documented return values are checked , and checked return values are documented . <section> no change to <allcaps> fsw </allcaps> , test / doc only <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , defer cancellation when <allcaps> bsp </allcaps> locked <section> resolves two related issues : - os_taskgetid does not return a valid value for tasks where cancellation is pending , but they are still running . this in turn is likely to trigger other ( bogus ) debug checks which invoke os_debug and in turn do console writes . - the console write itself is a cancellation point , which is now done while holding a <allcaps> bsp </allcaps> mutex . if canceled here , then the mutex is not released . solution is in two parts : - os_taskgetid should return the task id it knows about , regardless of whether the task is pending cancellation or not . - defer cancellation of the task while the <allcaps> bsp </allcaps> is locked , ensure it reaches the unlock , then restore the previous cancel state . fixes # <number> <section> run mutex - test repeatedly , ensure no deadlocks <section> no chance of deadlock , and also fixes a bogus debug message about unlocking from the wrong task if the task is pending delete . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add count sem timeout test <section> fixes # <number> adds count semaphore timeout test <section> build and run unit test <section> adds about <number> seconds to unit tests . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"implement <allcaps> jpl </allcaps> rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"unit test status code discrepancies in other public headers <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [x ] ok : os_err_invalid_size - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - timer . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_unavailable file <code> , function <code> : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_internal - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_internal file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - timebase . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : <section> : this <allcaps> api </allcaps> does not have a "" unit - tests "" program to test these status codes - hence why they are all flagged as being only in doxygen . the "" time - base - api - test "" program does exercise many of them , but is not included in this test run . file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - task . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_priority - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_priority - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - sockets . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> <section> : this <allcaps> api </allcaps> does not have a "" unit - tests "" program to test these status codes - hence why they are all flagged as being only in doxygen . the "" network - api - test "" program does exercise many of them , but is not included in this test run . resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - select . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : false - [ ] <allcaps> only in doxy </allcaps> : true <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - queue . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_queue_invalid_size - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_queue_empty - [x ] ok : os_queue_invalid_size - [x ] ok : os_queue_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_queue_full - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - mutex . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - module . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_not_implemented - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - idmap . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : <section> - test cases and retvals likely need to be added file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_type - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_type - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - filesys . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [x ] ok : os_fs_err_device_not_free - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_drive_not_created - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_fs_err_device_not_free - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_drive_not_created - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_not_implemented - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - file . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [ ] <allcaps> only in test </allcaps> : os_err_no_free_ids - [ ] <allcaps> only in test </allcaps> : os_fs_err_name_too_long - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error_timeout - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error_timeout - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : <section> - no specific retvals in <allcaps> api </allcaps> , and no checks in test ( possibly need to add ) . file <code> , function <code> : - [x ] ok : os_error - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_err_invalid_id file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - dir . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - countsem . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_invalid_sem_value - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_sem_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - common . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - clock . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - binsem . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_sem_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"remove test run from codeql workflow <section> codeql workflow is running unit tests which is confusing . <section> see <url> <section> code ql workflow should only run enough of the build steps to run the codeql analysis <section> keep the tests here , rename the workflow , and run the tests and codeql as separate jobs for parallelization <section> <url> <section> github actions <section> ensure that new codeql workflow in # <number> does not have the "" run tests "" step"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , rename hooks to handlers <allcaps> ccb </allcaps> <number> - <number> - <number> review item . makes filenames better match terms used in implementation . # # # pr # <number> fix # <number> , propagate status code in os_rmdir the status code from the low level implementation needs to be returned from the caller , in case it was not os_success . the status returned from os_rmdir ( ) should now be correct if the implementation failed . # # # pr # <number> fix # <number> , rework "" unit - tests "" to use macros adds details to log file and can be cross referenced back to documentation . updates most of the conditions in the "" unit tests "" to use the support macros whenever possible . the macros display the function being called as well as the return value being checked for and enables that documented return codes are being tested . removes repetition in the test programs . # # # pr # <number> fix # <number> , remove extra newlines in utassert logs if messages ( e . g . from utprintf , etc ) already have a newline , do not add another . extra blank lines in test log are removed . this should preserve extra newlines in the event that the test case was intentionally adding whitespace , by only appending one if it was not there to begin with . # # # pr # <number> fix # <number> , add test for object id inline functions <code> , <code> , <code> , <code> now have tests . # # # pr # <number> , fix # <number> , fixed invalid inputs for os_mkdir changed tests to use valid inputs for all os_mkdir calls . # # # pr # <number> - community contribution ! improves config guide documentation issues referenced in # <number> , # <number> , # <number> # # # pr # <number> fix # <number> , show codeql preview # # authors <user> <user> <user> <user>"
access parameter in os_makedir <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> _originally posted by <user> in <url>
"fix # <number> , remove extra newlines in utassert logs <section> if messages ( e . g . from utprintf , etc ) already have a newline , do not add another . fixes # <number> <section> build and run <allcaps> osal </allcaps> unit tests <section> extra blank lines in test log are removed . <section> ubuntu <number> <section> this should preserve extra newlines in the event that the test case was intentionally adding whitespace , by only appending one if it was _not_ there to begin with . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework "" unit - tests "" to use macros <section> update most of the conditions in the "" unit tests "" to use the support macros whenever possible . the macros display the function being called as well as the return value being checked for , and therefore this makes it so the test log file can be cross referenced back to the documentation to ensure the documented return codes are being tested . as a nice side effect this also removes quite a bit of repetition in the test programs . fixes # <number> <section> build and run all <allcaps> osal </allcaps> unit tests <section> log file produced has much more detail , and can now be cross referenced back to documentation . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( pc686 + qemu ) <section> see gist of complete test output log for "" osal_core_ut "" : <url> dependency note : pr # <number> fixes the os_rmdir test . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , propagate status code in os_rmdir <section> the status code from the low level implementation needs to be returned from the caller , in case it was not os_success . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> the status returned from <code> should now be correct if the implementation failed . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixed invalid inputs for os_mkdir <section> fixes # <number> changed tests to use valid inputs for all os_mkdir calls . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , quiet cppcheck # # describe the contribution fix # <number> , removes - - quiet option so files checked go to stdout # # testing performed ci # # expected behavior changes reports files checked in ci # # system ( s ) tested on github actions ci ( ubuntu <number> ) # # additional context see nasa / cfe # <number>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , configuration guide updates significant update to the configuration guide for the current build system ( cmake ) and the currently provided set of os / <allcaps> bsp </allcaps> layers . many of the examples in this guide referred to items which are now obsolete . # # # pr # <number> fix # <number> , improve documentation of utassert <allcaps> api </allcaps> calls the utassert <allcaps> api </allcaps> documentation was very terse and some references are obsolete / incorrect . this converts to doxygen form and corrects the stale / incorrect references . in particular - utmemset does not exist , but the standard c memset call should be used to fill a memory region with a constant value . # # # pr # <number> fix # <number> , update os_taskcreate doc clarify use of the stack_size parameter , and that it should not be <number> . # # # pr # <number> related to # <number> , ensure consistency between the return values generated by each <allcaps> osal api </allcaps> and the doxygen documentation . fix missing or incorrect explicitly - returned status code in the coverage tests . correct one argument name mismatch in queuecreate where it was prototyped as "" data_size "" but implemented as "" max_size "" . # # authors <user>"
"enable users to confirm that cppcheck workflow is successfull # # description the "" all "" static analysis check suppresses standard output with - - quiet , so can not see that it actually did anything # # solution remove - - quiet # # alternatives none # # additional context see nasa / cfe # <number> and nasa / cfe # <number> for reference"
os_mkdir tests should use valid access settings ( even though not implemented yet ) <section> per note in the <allcaps> api </allcaps> : <url> yet tests do not use sensible values ( examples ) : <url> <url> <section> use appropriate values . <number> is definitely not correct and could lead to confusion . <section> at minimum do not use an incorrect value . <number> is probably least - bad . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , do not require nonblock mode <section> in some versions of vxworks the fcntl f_getfl / f_setfl opcodes do not appear to be implemented , and thus it is not possible to set o_nonblock mode . however , this mode is not necessarily required , it is more of a backup / failsafe . the "" selectable "" flag should not be dependent on whether o_nonblock flag got set . this also adjust some timeouts and adds some delays to improve the reliability of network - api - test on vxworks . the timeouts were only 1 0 ms , and this is much too short as messages are getting written on a <number> baud console ( avg 1 ms / char ) . a single log message can easily take <number> - 6 0 ms alone . fixes # <number> <section> execute network - api - test on supported platforms ( esp . vxworks <number> in particular ) <section> test now passes reliably . <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> this also requires / depends on # <number> for reliable operation . the console mutex is required to ensure that the various information messages from the client / server tasks inside network - api - test do not clobber eachother , but it also helps synchronize them too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add local mutex to <allcaps> bsp </allcaps> console <section> adds a generic mutex facility to the low level <allcaps> bsp </allcaps> . this is mainly for use with low level <allcaps> bsp </allcaps> console output , but could be used for other items that should only be accessed by one task at a time . this needs to be actually implemented in the <allcaps> bsp </allcaps> layer , so it can be used by utassert report outputs ( pass / fail message ) in addition to os_printf ( ) . note that utassert always uses the <allcaps> osal bsp </allcaps> and does its text output via this layer , but it does __not__ necessarily use the full <allcaps> osal </allcaps> with its os_printf / console abstraction . so by implementing the lock in the <allcaps> bsp </allcaps> , it works with all modes of operation . this also converts <code> outputs to use the same console output facility rather than calling <code> directly . the combination of a mutex and all common print outputs ( utassert , os_printf , os_debug ) going through the same path makes the test output on vxworks much more coherent . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> and run all unit tests on native and <allcaps> rtems </allcaps> . also build and run select tests on vxworks to confirm . <section> console output when running utassert - based tests is not garbled , much more coherent and readable . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( <allcaps> qemu </allcaps> ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"add functional test to confirm <code> waits up to the requested amount of time <section> there ' s only <number> checks , one for the os_sem_timeout return and one immediate success case . nothing to confirm the passed in wait value is being honored . <section> add a time check ( maybe as part of count - sem - test ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add test for object id inline functions <section> fixes # <number> adds test for inline object id functions <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , show codeql preview <section> fix # <number> checkout just the osal repository rather than the entire cfs bundle to allow codeql to provide a code preview . code preview is not available when the entire cfs bundle is checked out . the osal itself must be the only repository checked out . since the tests require the cfe repo , they are removed . <section> tested locally on forked repository image <img> tested on this pr . example of code scanning result found here : <url> <section> code preview should be available in the osal repository . <section> tests are not used . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"show codeql preview <section> code preview is not available for code scanning results from codeql . <section> the preview is available when the osal submodule is checked out rather than the cfs bundle . i have not found a way to checkout just the submodule <allcaps> and </allcaps> use the tests . currently , the workflow checks out the cfs bundle . <code> to show the preview , only the osal submodule needs to be checked out : <code> <section> would like to keep the tests , but believe they require the cfs bundle . <section> community support thread : <url> > the reason is that we currently don ’ t look for files across submodules for the preview . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , rename hooks to handlers <section> <allcaps> ccb </allcaps> <number> - <number> - <number> review item . makes filenames better match terms used in implementation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none , only renames files <section> ubuntu <number> <section> also renames terms in the generator script , the "" - - hook - suffix "" option is renamed to "" - - handler - suffix "" , etc . <section> joseph hickey , vantage systems , inc ."
"partial # <number> , scrub return values <section> confirm consistency between the return values generated by each <allcaps> osal api </allcaps> and the doxygen documentation . each explicitly - returned status code should have a corresponding "" retval "" entry in the documentation . also confirms that each explicitly - returned status code has a matching case in the coverage tests that specifically checks for that return value . some were actually missing , where as some were just being reported incorrectly . finally this also corrects one argument name mismatch in queuecreate where it was prototyped as "" data_size "" but implemented as "" max_size "" . related to # <number> ( but more work to do , so should not close yet ) <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , build osalguide documentation and confirmed no warnings <section> none , test and documentation updates only . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , utprintx function fixes infinite loop in <code> . adds the data ' s memory address to output . note , utprintf displays the the file / line of the <code> function , <section> ; it is better to call <code> directly . # # # pr # <number> fix # <number> , add socket shutdown implementation adds <code> <allcaps> api </allcaps> wrapper around <allcaps> bsd </allcaps> ' s socket shutdown ( ) <allcaps> api </allcaps> . this allows a data transfer of a stream socket to be gracefully shut down prior to socket closure . # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user>"
"fix # <number> , configuration guide updates <section> significant update to the configuration guide for the current build system ( cmake ) and the currently provided set of os / <allcaps> bsp </allcaps> layers . many of the examples in this guide referred to items which are now obsolete . however , this does * <allcaps> not </allcaps> * fix references to the applications and in particular the "" tasking example "" as this still may be brought back . fixes # <number> <section> view guide in markdown viewer , confirm commands / pathnames in guide seem to match current version <section> none - documentation only <section> commands in document were validated on linux and <allcaps> rtems </allcaps> where possible <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update os_taskcreate doc <section> clarify use of the stack_size parameter , and that it should not be <number> . fixes # <number> <section> build and sanity check , run all unit tests <section> none , documentation update only <section> ubuntu <number> <section> other items listed in # <number> are fixed by pr # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add socket shutdown implementation <section> adds an os_socketshutdown ( ) wrapper around the <allcaps> bsd </allcaps> socket shutdown ( ) <allcaps> api </allcaps> . this allows a data transfer of a stream socket to be gracefully shut down prior to socket closure . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests the "" network - api - test "" program is enhanced with several more test cases to confirm that the shutdown functionality is working as intended . <section> <code> <allcaps> api </allcaps> added . no effect unless <allcaps> api </allcaps> is used , existing code not changed . <section> ubuntu <number> , <allcaps> rtems </allcaps> <number> <section> this pr depends on pr # <number> , so this is based on the ic right now . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , update documentation for read / write [ docs ] clarifies that that zero will be returned on <allcaps> eof </allcaps> condition in the <allcaps> api </allcaps> documentation for os_read / write / timedread / timedwrite . in the case of the timed <allcaps> api </allcaps> calls , the <code> status code will be returned if the timeout expired without the handle becoming readable / writable during that time . # # # pr # <number> fix # <number> , add "" handler "" feature to utassert stub <allcaps> api </allcaps> addresses a shortcomings in the ut assert hook functions . namely the assumed return type of int32 which is not always the case . adds the concept of a "" handler "" function to ut assert to replace hard - coded custom logic in ut assert . a handler is the custom logic that exists between the hook function and the return to the stub caller . the handler is directly responsible for setting all outputs . adds a script to auto - generate stub functions that match this pattern . given an <allcaps> api </allcaps> header file , the script extracts the declarations , and generates a source file with stub definitions that rely on a separate handler to deal with the needed outputs . refactors <code> ) into two parts to improve the compatibility with the script method . updates all existing stubs in <allcaps> osal </allcaps> to use the auto - generated stub logic from the script , created directly from the c header . this ensures that stubs will match the <allcaps> fsw </allcaps> implementation . only affects coverage testing with stubs , and should be fully backward compatible with existing tests . # # # pr # <number> < ! - - fix # <number> # <number> # <number> , adds local makefile and bundle / local unit test actions with coverage verification - - > fix # <number> - adds local makefile ( trivial single build sample , can use different build directories for multiple platform ) fix # <number> - adds bundle and local unit test run and coverage verification fix # <number> - added missing line coverage [ continuous - integration ] adds a local osal - specific makefile to help build unit tests . adds a new github workflow that runs the unit tests in both the context of the bundle configuration and the local <allcaps> osal </allcaps> config . verifies <percent> line coverage . # # # pr # <number> fix # <number> , socket accept using incorrect record fixes incorrect token use in <code> . enables the <code> to handle multiple connections that re - use the same acceptor socket between them . # # # pr # <number> fix # <number> , move async console option promotes the <code> option into the shared layer to remove duplicate implementation code and add more coverage testing . adds an osconfig option to allow the user to elect this mode at configuration time . no externally - visible impacts # # context part of nasa / cfs # <number> # # testing <allcaps> osal </allcaps> checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
"fix # <number> , improve documentation of utassert <allcaps> api </allcaps> calls <section> the utassert <allcaps> api </allcaps> documentation was very terse and some references are obsolete / incorrect . this converts to doxygen form and corrects the stale / incorrect references . in particular - utmemset does not exist , but the standard c memset call should be used to fill a memory region with a constant value . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none - documentation only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , utprintx function <section> fix the utprintx ( ) routine such that the loop stops correctly . also improves the output to print the address , not just the data . note if utprintf is used , one sees the file / line of the utprintx function , not the actual test location , so it is better to call ut_bsp_dotext directly so it omits this extraneous info . fixes # <number> <section> temporarily update a test to use utprintx ( ) - - this function was not used in any current tests - - and confirm that the output now works as expected . <section> no infinite loop in utprintx , and also it now includes the memory address of the data , not just the data itself . <section> ubuntu <number> <section> joseph hickey vantage systems , inc ."
"fix # <number> , update documentation for read / write <section> update the <allcaps> api </allcaps> documentation for os_read / write / timedread / timedwrite . clarify that zero will be returned on <allcaps> eof </allcaps> condition , and in the case of the timed <allcaps> api </allcaps> calls , the os_err_timeout status code will be returned if the timeout expired without the handle becoming readable / writable during that time . this is intended behavior such that it allows the caller to differentiate between a handle which is in a state where it cannot read / write any more data ( e . g . at <allcaps> eof </allcaps> , or a pipe / socket with remote end closed ) and a handle which is simply idle or busy . fixes # <number> <section> build and sanity check , run all tests <section> none - documentation update only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , socket accept using incorrect record <section> this improves the network - api - test to do multiple connections , re - using the same acceptor socket between them . as reported in # <number> , the os_socketaccept call was using the incorrect token , using the server / acceptor socket when it should have used the connection socket . the bug overwrote data in the acceptor socket , but it would only cause an issue when the user attempted to use the server socket to accept a second connection , but the tests only performed a single connection . with the improvement to network - api - test to run multiple connections , it now reveals the bug in the test . without the fix , the test failed on the second connection . with the fix to os_socketaccept to use the correct token , the test passes fine again . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests ( particularly network - api - test ) . <section> os_socketaccept ( ) does not clobber the server socket , allows it to be re - used for additional connection ( s ) as intended . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> - changed parameter names to avoid collisions renames <code> as <code> in <code> . renames <code> as <code> in <code> . # # # pr # <number> fix # <number> , shell implementation on posix and rtems deletes the broken <allcaps> rtems </allcaps> <code> file so so <allcaps> osal </allcaps> builds with <code> . <allcaps> rtems </allcaps> will always report <code> . # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
"fix # <number> , add "" handler "" feature to utassert stub <allcaps> api </allcaps> <section> adds the concept of a "" handler "" function to ut assert . a handler is basically the custom logic that exists between the hook function and the return to the stub caller . in current ut stubs , this is hard coded , and it generally comprises setting output parameters and translating return values as needed . this concept adds the basic plumbing to allow the handler to be configured just like a hook function already does . the difference is that the handler is directly responsible for setting all outputs . this also includes a script to auto - generate stub functions that match this pattern . given an <allcaps> api </allcaps> header file , the script extracts the declarations , and generates a source file with stub definitionsthat rely on a separate handler to deal with the needed outputs . lastly , all existing stubs in <allcaps> osal </allcaps> will be updated to use the auto - generated stub logic from the script , created directly from the c header . this ensures that stubs will match the <allcaps> fsw </allcaps> implementation . note - one header in <allcaps> fsw </allcaps> ( <code> ) was broken into two parts , to improve the ability to do this . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests , ensure all tests pass . confirm that unmodified coverage test scripts are passing as - is , and coverage is still <percent> . <section> this change only affects coverage testing with stubs , and should be __fully backward compatible with existing tests__ . once a stub is regenerated via the auto - generator script : - stub is exactly in sync with <allcaps> fsw </allcaps> implementation - any return type handled ( not just <code> ) - all args passed through context - handler can be completely overridden by test case when desired , such that test case can have <percent> control over the stub call . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> the "" handler "" function uses a different hook function prototype than the hook functions do . the latter is kept the same for backward compatibility with existing tests . the intent is to address a few long - standing shortcomings in the design of the hook function . in particular , hook function design assumes / requires that the function returns <code> . while most do , some do not , and this is a major issue if the goal is to completely replace the handler associated with a stub . in this design there is now a dedicated data buffer to hold the return value , which can be of any data type , and a macro that the handler ( or hook ) implementation can use to fill / set that return value . however the framework will automatically populate that buffer from the <code> status code if the hook / handler did not populate it , which was what ~ <percent> of stub functions did in their "" post - hook "" logic . this simplifies things in that those functions do not need any handler at all unless they had other work to do . <section> joseph hickey , vantage systems , inc ."
<allcaps> wip ci </allcaps> fail check i am just checking the continuous integration . this is not a real pull request .
"fix # <number> , move async console option <section> puts the "" async "" option into the shared layer instead of the impl layer . this allows both options to be coverage tested and also allows a bit more of the logic to be common instead of duplicated in the <number> implementations . this also adds back an osconfig option to allow the user to elect this mode at configuration time . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> with <code> set each way confirm coverage test also exercises both runtime paths , regardless of compile time config . confirm ( via debugger on native build ) that when <code> is set false , the extra utility task is <allcaps> not </allcaps> spawned . <section> no externally - visible impacts gets better path coverage on both modes of operation <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> ( <allcaps> qemu </allcaps> ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"convert stub count checks to use utassert_stub_count <section> many stub count checks call <code> directly , utilize <code> for the test and do not print the expected / actual stub count . <section> use the stub . the standard print is more useful . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , allow <allcaps> osal </allcaps> re - initialization fix # <number> , combine initialized and shutdown flags into one replaces the separate "" initialized "" and "" shutdown "" flags with a single state flag . creates a global single source of truth for the <allcaps> osal </allcaps> state . this enables users to run tests and <code> multiple times without a reboot in the middle to reset the state . - multiple invocations of <code> are allowed - subsequent calls can be ignored - deleting of any internal objects that did get created if <code> fails ( this leaves system in same state as when it started ) - allows re - initialization of <allcaps> osal </allcaps> after <code> - may be relevant when running unit tests several times without rebooting . # # # pr # <number> fix # <number> , add os_api_teardown fix # <number> , black box unit tests do not ensure resources are cleaned up between tests adds <code> to complement <code> os_api_init ( ) ` may be invoked again . # # # pr # <number> fix # <number> , rework shell test reworks the shell unit test which was probably not working . note this requires modifying the osal config to enable shell , otherwise test is skipped . # # context part of < <url> # # testing osal checks < <url> bundle checks < <url> # # authors <user>"
<allcaps> osal </allcaps> line coverage missing if using os_debug <section> missing test cases in bsd - sockets accept function . <section> cover branches / lines . <section> none <section> see # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"format codes <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url>"
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , scrub include guards replaces nonstandard header file block comments and include guards . no behavior changes # # # pr # <number> fix # <number> , switch to use clock_realtime removes <code> as the osal colck source since <allcaps> psp </allcaps> no longer needs it . <code> and <code> will work as described . # # # pr # <number> fix # <number> , specify shell name in shelloutputtofile replaces <code> with a specific <code> that can be polled safely and changes its type to a char of <code> length for safety . # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url>"
"fix # <number> , eliminate time and access name collisions with vxworks <section> fix # <number> - changed parameter names to avoid collisions <section> build / run unit tests , passed <section> none <section> - hardware : local docker container - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , test teardown cleanup <section> invokes os_api_teardown as a test teardown function for all unit tests . this returns the global state objects to their initial state and therefore allows the test to be re - run / repeated without rebooting . it also ensures that any resources allocated by the test are removed before the test finishes . <section> build and run all unit tests , confirm passing <section> test resources are cleaned up to the extent possible , and set back to initial state . tests can be repeated if desired . <section> ubuntu <number> mcp750 vxworks <number> <section> depends on # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add os_api_teardown <section> this cleans up all <allcaps> osal </allcaps> resources as best as possible , ideally leaving the system in a state where os_api_init ( ) may be invoked again . fixes # <number> fixes # <number> <section> build and run all unit tests , confirm correct behavior test in conjunction with fix for # <number> , confirm test can be run multiple times on vxworks without reboot <section> adds os_api_teardown <allcaps> api </allcaps> to complement os_api_init <section> ubuntu <number> ( native ) mcp750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"duplicated documentation in unit - tests is out of date and does not add anything <section> tests in the unit - tests directory repeat <allcaps> api </allcaps> documentation , leading to possible inconsistencies . example - os_create was removed , this actually tests os_opencreate <url> <section> remove duplicated documentation <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , shell implementation on posix and rtems <section> fix # <number> due to other changes the shell implementation on <allcaps> rtems </allcaps> and <allcaps> posix </allcaps> failed to build under certain configurations . - on <allcaps> posix </allcaps> the check of <code> field was not valid . using the existing <code> function does what is needed here and is much simpler . - on <allcaps> rtems </allcaps> , the shell does not recognize the redirect operators . this was basically cut and pasted from linux / bash shell syntax and probably never worked on <allcaps> rtems </allcaps> , and there was no test to verify . now that "" shell - test "" exists , it confirms that this does not actually work . for now , the broken impl file is simply deleted , and <allcaps> rtems </allcaps> will always use <code> . in a future version , the implementation can be fixed properly . <section> build <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> with shell enabled ( osal_config_include_shell = true ) run "" shell - test "" and confirm behavior on <allcaps> posix </allcaps> ( passes ) and <allcaps> rtems </allcaps> ( skips ) ( note that <allcaps> cfe </allcaps> does not directly use the <allcaps> osal </allcaps> shell function , but apps might ; it is optional ) <section> broken code is removed , so <allcaps> osal </allcaps> builds with <code> on all platforms , but <allcaps> rtems </allcaps> will still result in os_err_not_implemented always . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> <section> i briefly investigated what it would take to fix this on <allcaps> rtems </allcaps> properly . the issue is that the <code> function attaches to a "" device name "" ( typically / dev / console for interactive use ) , not individual input / output file descriptors . so it appears to be a matter of creating a pseudoterminal - type device that "" reads "" from the script and writes to the file . but it also appeared this was an area that changed a fair bit in <allcaps> rtems </allcaps> between <number> and <number> . x release , so any solution would be unlikely to work on both , and this is why i decided its probably not worth pursuing for now . ( a stakeholder who wants the shell to work on <allcaps> rtems </allcaps> can always re - implement ) . but since the existing code in <code> was very broken , it is just removed ( not even useful as a basis for future ; better to use posix or vxworks as basis instead ) . <section> joseph hickey , vantage systems , inc ."
"timer - add - api - test failing intermittently <section> on my virtual machine running ubuntu <number> , the timer - add - api - test fails roughly <percent> of the times i run it . <section> run make test <section> it should pass <percent> of the time . <section> here is the printout from the test [ <allcaps> begin </allcaps> ] <number> testtimeraddapi [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timebasecreate ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timebaseset ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> info </allcaps> ] timer - add - api - test . c : <number> : starting delay loop . [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_err_invalid_id [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_err_name_taken [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> end </allcaps> ] <number> testtimeraddapi <allcaps> total </allcaps> : : <number> <allcaps> pass </allcaps> : : <number> <allcaps> fail </allcaps> : : <number> <allcaps> mir </allcaps> : : <number> <allcaps> tsf </allcaps> : : <number> <allcaps> ttf </allcaps> : : <number> n / a : : <number> <allcaps> complete </allcaps> : <number> tests segment ( s ) executed <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , allow <allcaps> osal </allcaps> re - initialization <section> replaces the separate "" initialized "" and "" shutdown "" flags with a single state flag . this simplifies things and makes for a single source of truth for the state of <allcaps> osal </allcaps> globally . note this is not strictly necessary , but it will likely be required if the intent is to be able to run tests ( and os_api_init ( ) ) multiple times without a reboot in the middle to reset the state . fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> - multiple invocations of <code> are allowed - subsequent calls can be ignored - deleting of any internal objects that did get created if <code> fails ( this leaves system in same state as when it started ) - allows re - initialization of <allcaps> osal </allcaps> after <code> - may be relevant when running unit tests several times without rebooting . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework shell test <section> the shell may add extra output beyond the intended content , but the shell - test was only looking for exact match . extra output may include whitespace and / or an echo of the command itself . this reworks the shell test to allow for this extra output , as long as the intended string appears in the content of the file it will pass . fixes # <number> <section> build and run the shell test note this requires modifying the osal config to enable shell , otherwise test is skipped . <section> test passes . <section> ubuntu <number> ( native , posix ) mcp750 vworks6 . <number> <section> not clear how this test ever worked . <repeated> maybe different versions of vxworks work differently here . but this approach should ( hopefully ) be a little more agnostic to the platform - specific shell behavior . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , specify shell name in shelloutputtofile <section> rather than using a default name , use a specific name so that it can be polled more safely . fixes # <number> <section> build and run coverage tests also enable shell and run "" shell - test "" on mcp750 <section> no longer using a string pointer which may be invalid . <section> mcp750 , vxworks <number> <section> although this while loop seems to be working ok , the overall "" shell - test "" actually fails on the mcp750 because it looks like the shell does not have an "" echo "" function . this seems to be a separate issue , not sure if / how this test ever worked . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , switch to use clock_realtime <section> the portable clock_gettime implementation had been using clock_monotonic to support its use as a <allcaps> psp </allcaps> timebase for some platforms that used it this way . however with updates on the <allcaps> psp </allcaps> side this is not required anymore . preference should be to use clock_realtime as it better aligns with the described semantics of the <allcaps> osal </allcaps> clock function , and makes for a better default . this can still be easily changed back if the user desires . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> os_getlocaltime ( ) and os_setlocaltime ( ) will work as described . <section> ubuntu <number> <section> this depends on _not_ using the <allcaps> osal </allcaps> clock as a monotonic timebase . nasa / psp # <number> is required to fix this . <section> joseph hickey , vantage systems , inc ."
"add option to build osal with coverage flags so functional test coverage can be reported <section> ideally functional tests should strive for full coverage , with the exception being impossible paths based on the inability to force return codes or other lower level behaviors that can not be triggered when using the "" full stack "" . additional "" coverage "" testing ( utilizing stubs ) is really only necessary to cover this final % where calls need to be stubbed out to force alternate paths . coverage report on functional tests helps for reporting test traceability ( coverage tests do not count for <allcaps> api </allcaps> verification ) , and to easily identify missing functional tests or test cases . it ' s better to strive for coverage w / functional tests first ( higher value tests , checking for correct full - stack behavior ) , then fill in the gaps with targeted coverage tests . <section> add the option to include coverage reporting on <allcaps> osal </allcaps> . currently thinking this could be independent from enable_unit_tests , since it may be useful to build or not build with these flags for higher level analysis ( easily show what parts of <allcaps> osal </allcaps> are exercised by cfe tests , etc ) . <section> debated adding a coverage ( osal - coverage ) target along side the non - coverage target ( osal ) , but who wants twice the compile time ? easy enough to build one or the other depending on need . could just add the ( osal - coverage ) target when unit tests are enabled and always use it with the functional tests . <repeated> debatable . different targets could avoid accidentally linking a coverage - enabled osal . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused script_mode flag <section> fix # <number> , removes the flag defined in tests / cmakelists . txt that is not used anywhere <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove unused script_mode definition <section> the following define no longer does anything : <url> <section> remove <section> none <section> likely <allcaps> obe </allcaps> from transition to the osal / ut_assert <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , scrub include guards <section> apply script to scrub all header file block comments and include guards on <allcaps> osal </allcaps> . fixes # <number> <section> build and sanity check , run all unit tests <section> none , comment and ifdef consistency fixups only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use test function for osal_id_t <section> do not initialize or compare osal_id_t directly to integers , use the provided comparison function . fixes # <number> <section> build and run unit tests <section> system builds and runs again when using a type - safe / non - integer osal_id_t type . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove <allcaps> big </allcaps> / <allcaps> little </allcaps> bit order macros fix # <number> , minor clean up and clarification in comments / naming fix # <number> , finish os - impl - bsd - socket . c coverage testing fix # <number> , better return codes from os_symboltabledump_impl fix # <number> , remove os_taskregister fix # <number> , remove unused script_mode flag fix # <number> , use test function for osal_id_t # # testing performed osal checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes <code> and <code> macros from <code> . these are not needed by <allcaps> osal </allcaps> and cannot handle all cases . application code with endianness dependency that was relying on these symbols may break . users should leverage code in cfe : <code> . see < <url> for more details . # # # pr # <number> applies minor code and documentation cleanup : white space , typos , etc . # # # pr # <number> adds test to get full coverage of vxworks in <code> resulting in full line coverage for <allcaps> osal </allcaps> # # # pr # <number> adds more descriptive return codes if <code> does not do what is expected . adds a new error <code> if the size limit was insufficient . return <code> if an empty file was written - this likely indicates some fundamental issue with the vxworks symbol table . returns <code> if one of the symbol names was too long . improves unit test to check for / verify these responses . # # # pr # <number> removes the unneeded <code> and all references to it in code , tests , and documentation . no impact to behavior , but does affect <allcaps> api </allcaps> and has depenedencies # # # pr # <number> removes unused <code> flag in cmake # # # pr # <number> remove comparison between <code> and <code> to use the provided comparison function , <code> . system builds and runs again when using a type - safe / non - integer osal_id_t type . # # additional context part of nasa / cfs # <number> # # authors <user> <user>"
"fix # <number> , remove os_taskregister <section> the <code> function is no longer needed and has been a no - op since v5 . <number> . this removes the function and all references to it in code , tests , and documentation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to behavior , but does affect <allcaps> api </allcaps> and has depenedencies <section> ubuntu <number> <section> function removal affects <allcaps> api </allcaps> - needs to be merged with nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
<allcaps> hotfix </allcaps> : osal integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle tests < <url> osal tests < <url> <section> see # <number> <section> ubuntu <number> <section> missing part of ic : <number> - <number> - <number> <section> none <section> <user>
trigger for static analysis <number> <section> codeql results not showing up on branch pushed to fork . test pr for static analysis <section> n / a <section> n / a <section> ci <section> for static analysis <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , finish os - impl - bsd - socket . c coverage testing <section> fix # <number> - adds test to get full coverage of os - impl - bsd - socket . c <section> built / run unit tests , pass <section> full line coverage of os - impl - bsd - socket . c for <allcaps> osal </allcaps> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> - example for stubs / hooks / etc"
"fix # <number> , make non - selectable fd an error <section> fix # <number> do not silently ignore a filehandle which was included in the <code> but the "" selectable "" flag is false . instead translate this to the <code> error . <section> run unit tests on native and <allcaps> rtems </allcaps> and make sure all passing <section> passing a filehandle into <code> ( via the os_fdset ) for which the <allcaps> rtos </allcaps> does not implement select ( ) should return the os_err_operation_not_supported error ( again ) <section> ubuntu <number> ( native ) and <allcaps> rtems </allcaps> <number> . <number> ( cross ) <section> this is old behavior but was masked by the fact that os_selectmultiple_impl ( ) actually returned the same error - os_err_operation_not_supported - for an _empty_ set as it did if one passed a non - empty set that had a non - selectable filehandle within it . if the handles passed in did not support select ( ) then the implementation treated it as an empty set . a recent change modified that behavior and gave it a different code if the sets were truly empty vs . being not empty but having a bad fd inside it . however the unit tests were relying specifically on the os_err_operation_not_supported code being generated in order to skip the test cases on <allcaps> rtems </allcaps> . this change basically restores the return code of os_err_operation_not_supported but still keeping a unique code for if / when the sets are passed in completely empty . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check index inside fdset conversions <section> add an extra limit check for the index , as it is possible due to padding that this goes beyond the end of the array . fixes # <number> <section> validate all coverage tests now pass <section> none <section> ubuntu <number> <section> should fix the issue seen in integration candidate # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , minor clean up and clarification in comments / naming <section> fix # <number> , minor cleanup detailed in # <number> identified during code review <section> build / run unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , move copyblock size to a <hashtag> define </hashtag> and add comments fix # <number> , removed rogue while loop fix # <number> , scripted replacement for <hashtag> include </hashtag> < os and <hashtag> include </hashtag> < osc_ matches of < and > with "" fix # <number> , consolidates the duplicated switch in os_socketopen_impl fix # <number> , const correct input pointers fix # <number> , removed network prototypes defined in osapi_sockets . h that are also in osapi_network . h fix # <number> , removes <allcaps> null </allcaps> redefine from common_types . h fix # <number> , add contributing guide fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented fix # <number> , add assert for fd_set_size in relation to osal_set fix # <number> , correct interval calculation in doselect fix # <number> , comments describing select after connect fix # <number> , add check for <allcaps> eagain </allcaps> in addition to <allcaps> eintr </allcaps> fix # <number> , compile time assert for sockaddr size fix # <number> , add shell functional test fix # <number> , check / report fcntl status fix # <number> , better error translation for <allcaps> espipe </allcaps> errno fix # <number> , rename os_u32valuewrapper_t fix # <number> , break up logic in return statement fix # <number> , report timer_gettime error fix # <number> , return moduleinfoget error fix # <number> , remove unreachable test fix # <number> , make module comment same as other services fix # <number> , check index inside fdset conversions fix # <number> , make non - selectable fd an error # # tests osal tests < <url> cfs bundle tests < <url> # # expected behavior changes # # # pr # <number> moves copyblock size to a macro and add comments . defines <code> and adds clear documentation that it could be adjusted for page size , performance , etc . # # # pr # <number> removes while loop # # # pr # <number> replaces all <code> s of <code> and <code> matches with <code> to match coding standard . # # # pr # <number> consolidates the duplicated switch in <code> # # # pr # <number> describe the contribution add <code> to input pointers for <code> and <code> # # # pr # <number> removes network prototypes defined in <code> that are also in <code> # # # pr # <number> removes <code> redefine from <code> # # # pr # <number> adds <code> that points to bundle - level contribution guide # # # pr # <number> reports test cases that "" fail "" as "" not implemented "" with new <code> macro instead of <code> # # # pr # <number> calls to <code> and <code> will fail if an fd within the set is outside the range of the underlying <code> from the c library . # # # pr # <number> fixes calculation used for the relative time interval in the select ( ) call . also adds a ut case that specifically exercises the carryover described . fixes delay when this carry condition is hit # # # pr # <number> documents algorithm that provides application - controlled timeout on the connection initiation . also adds a debug statement if the connect fails for a reason other than <code> . no impact to normal behavior . # # # pr # <number> adds check for <code> if the system fails to allocate kernel - internal resources . # # # pr # <number> adds a <code> to confirm that the size of the abstract buffer for socket addresses is large enough to store any of the enabled address types thereby removing the need for runtime tests . with this change , if <code> is not large enough for the address type , osal will fail to compile . this enforces that the abstract size is large enough for any / all enabled address types , regardless of what is actually used . # # # pr # <number> adds missing functional test for <code> # # # pr # <number> add test for <code> error return of <code> and report <code> . if setting <code> fails , then debug message is printed and blocking mode is used and timeouts will not work as a result . # # # pr # <number> improves error codes when attempting to seek on a pipe / socket . translates the <code> error rather than "" not implemented "" . the <code> errno means that seeking is not supported on the given file handle . # # # pr # <number> renames <code> as <code> to better indicate its purpose . the point is to pass a value through a void * . adds a compile - time assert to check that this is only used to directly pass values which have a size of less than or equal to sizeof ( void <wink> . # # # pr # <number> refactors the return statement for <code> so it is easier to read and adds some informational comments . # # # pr # <number> reports an error if calling <code> after <code> fails . # # # pr # <number> returns <code> status to caller after an error on <code> # # # pr # <number> removes an extraneous / unreachable <code> check and its accompanying debug statement . the only way this check could have been reached would be if the normal unlock process was bypassed such that the underlying os mutex was unlocked but <allcaps> osal </allcaps> state still had it owned by a task . this condition never happens at runtime . # # # pr # <number> updates documentation for <code> # # # pr # <number> adds an extra limit check for the while loop index in <code> , as it is possible due to padding that this goes beyond the end of the array . if <code> was not a multiple of <number> , and some of these "" padding "" bits are set as <number> , these functions will attempt to read entries beyond the end of <code> . # # # pr # <number> restores the return code of <code> while keeping a unique code for if / when the sets are passed in completely empty . passing a filehandle into <code> via the <code> for which the <allcaps> rtos </allcaps> does not implement <code> should return <code> . # # additional context part of < <url> # # authors <user> <user> <user> <user>"
"fix # <number> , better return codes from os_symboltabledump_impl <section> improve the error codes from this function . - introduces a new error <code> if the size limit was insufficient ( instead of <code> ) . - return <code> if an empty file was written - this likely indicates some fundamental issue with the vxworks symbol table . - return <code> if one of the symbol names was too long , ( instead of generic <code> ) . improve unit test to check for / verify these responses . fixes # <number> <section> build and sanity check , run all unit tests , confirm coverage of new cases . <section> better / more descriptive return codes if os_symboltabledump_impl does not do what is expected . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented <section> fixes # <number> create new macro utassert_na to use instead of utprintf to report cases when not implemented <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> this is a redo of # <number> which was closed because it was going to be part of # <number> but that will not be done in the near future so this task is back as its own pull request . <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , check / report fcntl status <section> the fcntl ( ) function is documented as returning - <number> on error , so test for this condition and report errno if so . there is no recourse / handling - this just reports the error . however - failure to set the o_nonblock flag via this method will fall back to blocking mode being used ( timeouts will not work as a result ) . fixes # <number> <section> build and sanity check , run unit tests , check coverage <section> if setting o_nonblock fails , then debug message is printed and blocking mode is used . <section> ubuntu <number> <section> no real recourse in code - this should not fail , but if it does , errno is printed so user can diagnose why it failed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , comments describing select after connect <section> a select ( ) is used after connect ( ) to provide application - controlled timeout on the connection initiation . this just adds some comments to describe why this is done . it also adds a debug statement if the connect fails for a reason other than <code> . fixes # <number> <section> build and sanity test , run unit tests <section> this does add one more os_debug statement for an unexpected error . no impact to normal behavior . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , compile time assert for sockaddr size <section> <allcaps> osal </allcaps> provides an abstract buffer for socket addresses , independent of the underlying implementation . the size of this buffer is configurable by the user via compile - time options . this adds a compiletimeassert to confirm that the size of this abstract buffer is large enough to store any of the enabled address types . this also removes the need for runtime tests . fixes # <number> <section> build and sanity test , run unit tests <section> this change means that the <code> __must__ be configured large enough for all enabled address types . for instance , ipv6 addresses are likely to be larger than ipv4 addresses in the implementation . it is therefore possible to se os_sockaddr_max_len large enough for ipv4 but not large enough for ipv6 . a configuration such as this used to work if the runtime code only used ipv4 addresses . if runtime code used ipv6 address , it would fail at runtime . with this change , a configuration such as this will fail to compile , and enforce that the abstract size is large enough for any / all enabled address types , regardless of what is actually used . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , report timer_gettime error <section> in vxworks the impl calls timer_settime followed by timer_gettime on the same timer to check if rounding occurred . if the second call fails this reports it as an error . note unless there is some sort of os bug this should be impossible to happen as this code only runs after a successful timer_settime . fixes # <number> <section> build and sanity check , run unit tests <section> a failure to call timer_gettime after timer_settime is reported as an error . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , return moduleinfoget error <section> propagate a vxworks error on moduleinfoget ( ) call into os_error return . fixes # <number> <section> build and sanity check , run unit tests <section> error on moduleinfoget ( ) gets returned to caller as os_error status . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , make module comment same as other services <section> in the current implementation , the same patterns apply to modules as the rest of the <allcaps> osal </allcaps> services . fixes # <number> <section> build and run tests <section> none - comment only <section> ubuntu <number> <section> in a previous version there as a special case for <number> modules but this is no longer true , and the comment had become outdated . <section> joseph hickey , vantage systems , inc ."
"a bug in os_taskexit workwith vxworks very sorry to bother you i work with vxwork6 . <number> got an error when task exiting os_unlock_global ( <sad> <number> : <allcaps> error </allcaps> : global <number> released by task 0 xffffffff when owned by task <my_task_id> when exiting a task , in os_taskexit os_objectidfinalizedelete ( os_success , & token ) ; will change final id to <allcaps> undefined </allcaps> in os_objectidfinalizedelete os_objectidtransactionfinish change task_record_active_id to final_id ( i . e <allcaps> undefined </allcaps> ) and then os_unlock_global ( token - > obj_type ) but when os_lock_global ( token - > obj_type ) is called task id is true task id os_unlock_global ( token - > obj_type ) get taskid from task record active id ( i . e <allcaps> undefined </allcaps> ) so produce an error maybe changing os_objectidfinalizedelete ( os_success , & token ) to os_objectidfinalizedelete ( os_error , & token ) help ? very very appreciate your reply"
"fix # <number> , better error translation for <allcaps> espipe </allcaps> errno <section> the <allcaps> espipe </allcaps> errno means that seeking is not supported on the given file handle . translate to the <code> error rather than not implemented as it better indicates the actual condition . fixes # <number> <section> build and sanity check , run tests <section> better error code if attempting to seek on a pipe / socket <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add check for <allcaps> eagain </allcaps> in addition to <allcaps> eintr </allcaps> <section> this is documented as a possible errno from select on some systems , and the call should be repeated in that case . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename os_u32valuewrapper_t <section> the "" u32 "" designation in the name had become confusing because all the members had over time migrated to a separate non - uint32 / dedicated type . the point is to pass a value through a void * so a name change better indicates that purpose . also adds a compile time assert to this intent - this wrapper may only be used to directly pass values which have a size less than or equal to <code> - - if anything is bigger than this it will not work . fixes # <number> <section> build and run all tests , sanity check <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , break up logic in return statement <section> the return statement from os_filesys_findvirtmountpoint ( ) was performing several match operations and was hard to understand . this breaks up the statement so it is easier to read and adds some informational comments . fixes # <number> <section> build and run unit tests <section> none - actual logic is the same . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unreachable test <section> the only way for this test happen would be if somehow the normal unlock process was bypassed , such that the underlying os mutex was unlocked but <allcaps> osal </allcaps> state still had it owned by a task . removing as extraneous / unneeded . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , run unit tests <section> none . this condition never happens at runtime , and only a debug statement if it did . <section> ubuntu <number> <section> as noted , it is not _entirely_ unreachable in all circumstances - if there was some sort of bug that cause the wrong mutex to get released and / or otherwise throw off <allcaps> osal </allcaps> state , this debug message would tell you that it happened . but outside of a bug somewhere , this really should never happen . <repeated> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct interval calculation in doselect <section> when calculating the relative time interval for the select ( ) call , the increment should have been a decrement . this also adds a ut case that specifically exercises the carryover described . fixes # <number> <section> run test case specifically targeting this carry condition , confirm calculation result is correct now ( 4 0 0 ms rather than <number> . 4 s ) <section> no extra delay when this carry condition is hit <section> ubuntu <number> <section> this just fixes the current calculation - but a better fix would be to use the interval logic now in <code> ( this wasn ' t available when this code was initially implemented ) . should do a follow - on issue to look into this for next version . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check against fd_setsize in bsd - select <section> the <code> implementation utilizes its own set size limit that should be checked . fixes # <number> <section> build and run all unit tests , confirm coverage of select is testing new branches / returns . <section> calls to os_selectsingle / os_selectmultiple will fail if an fd within the set is outside the range of the underlying <code> from the c library . <section> ubuntu <number> <section> unfortunately this is a limitation / problem of the <code> <allcaps> api </allcaps> - valid file handles may be effectively un - selectable due simply to the fact that <code> may be lower than the maximum number of open file descriptors . the only alternative is to use <code> instead which uses a different <allcaps> api </allcaps> that does not have this limitation , but has a different issue in that it requires an array of <code> data structures to be allocated somehow . however in practice it is very unlikely to hit the <code> limit because this is ( probably ) much higher than the <code> limit . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove <allcaps> null </allcaps> redefine <section> fix # <number> - removes <allcaps> null </allcaps> redefine from common_types . h note : identified in <allcaps> osal </allcaps> code review and as implemented it was <section> defining <allcaps> null </allcaps> <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove duplicate network prototypes <section> fix # <number> - removed network prototypes defined in <code> that are also in <code> <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , const correct input pointers <section> fix # <number> - const input pointers for os_fdset_convertin_impl and os_objectidtransactionfinish <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code review"
"fix # <number> , consolidate duplicated switch in os_socketopen_impl <section> fix # <number> - consolidates the duplicated switch in os_socketopen_impl <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use quotes for local includes <section> fix # <number> - scripted replacement for <code> and <code> matches of <code> and <code> with <code> <section> build and execute unit tests <section> none , just coding standard <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove rogue while loop in os_deleteallobjects <section> fix # <number> - removed rogue while loop <section> build / run unit tests , passed ci <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , move copyblock size to define <section> fix # <number> - move copyblock size to a <code> and add comments <section> build and run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"avoid collisions in key value generation <section> could be collisions in key value : <url> <section> analyze and fix if needed . add comments if it would help , remove bug label if not a real issue . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code reivew"
"fix constraints / bounds in os_objectidfindnextfree <section> the local_id is constrained by serial , which is constrained by max_id . then serial is further constrained by local_id . seems circular : <url> bounds check ? <url> <section> scrub logic and fix if needed , and / or add comments if they would help . if not in error remove bug label . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code review"
social media <url>
"fix # <number> , remove <allcaps> big </allcaps> / <allcaps> little </allcaps> bit order macros <section> the "" common_types . h "" file will no longer provide these as they are not needed by <allcaps> osal </allcaps> and do not / cannot handle all cases . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> application code with endianness dependency that was relying on these symbols may break ( it should be fixed ) . <section> ubuntu <number> <section> needs nasa / cfe # <number> in order to not break the <allcaps> cfe </allcaps> build . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add shell functional test <section> fixes # <number> adds functional test for shell commands <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> override default stub logic <section> this is a new set hook function that allows a test designer to bypass the remaining default stub implementation after the hook is called . test designers can do this as needed , but current tests will be unaffected because it must be set in a test to be used . current tests will never set the override and their expectations of the stub code running after the hook are still valid . stubs will need updated to make the check for the override , but that is all that will need to change in them . <section> i have written <number> unit type tests to show that the behavior without the override set continues to be the same . each of these tests is doubled with a control test , for a total of <number> tests . the tests are run with no changes , with cfs commit 5 ca472a and using my working version of cfs_cf ( unit - test - cf - <number> ) , this shows that the results of each pair of tests are the same ; which is the expectation as they are duplicates . the repo for cfs_cf is given the new ut_sethookoverridestubfunction instead of ut_sethookfunction in <number> of the tests with each duplicate test left untouched as the control test . a build is attempted showing that the function does not exist . the repo , osal , is updated with the changes implementing the override and the repo , cfe , gets a two stubs updated to allow the bypass ( cfe_msg_getsize , cfe_msg_getmsgid ) . after a successful full rebuild , the <number> tests are run again . the results confirm the changes have provided the desired behavior . while the control tests all still receive the same results as the no updates test run , all of the override tests have their expected changes . details of the specific tests : <number> test_getsize_returns_1 & test_getsize_returns_1_control - initial testing : both receive <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , no data buffer set - override control : receives <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , no data buffer set - override updated : no <allcaps> tsf </allcaps> , no extra pass = = no stub code after hook - as expected override enabled , no data buffer set <number> test_getsize_wutsdb_returns_1 & test_getsize_wutsdb_returns_1_control - initial testing : both receive extra <allcaps> pass </allcaps> - as expected , forced return value >= <number> , yes data buffer set - override control : receive extra <allcaps> pass </allcaps> - as expected , forced return value >= <number> , yes data buffer set - override updated : no <allcaps> tsf </allcaps> , no extra pass = = no stub code after hook - as expected override enabled , yes data buffer set <number> test_getsize_returns_0 & test_getsize_returns_0_control - for brevity , these results are the same as <number> , i used <number> , <number> , - <number> in my tests because it is the cross over point , >= <number> <number> test_getsize_wutsdb_returns_0 & test_getsize_wutsdb_returns_0_control - same as <number> <number> test_getsize_returns_neg1 & test_getsize_returns_neg1_control <number> test_getsize_wutsdb_returns_neg1 & test_getsize_wutsdb_returns_neg1_control - all grouped together because all are same , no <allcaps> tsf </allcaps> , no extra <allcaps> pass </allcaps> , forced return < <number> , code does not run anyway <number> test_getsize_otherkey & test_getsize_otherkey_control - initial testing : both receive <number> <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , <number> to cfe_msg_getsize , <number> to cfe_msg_getmsgid - override control : same as initial testing - as expected - override updated : <number> <allcaps> tsf </allcaps> , no extra <allcaps> pass </allcaps> - as expected , both cfe_msg_getsize overridden , but cfe_msg_getmsgid is not overrideexperiment . txt <url> do - no - harm . txt <url> <section> test designers will have the option to use ut_sethookoverridestubfunction instead of ut_sethookfunction . when this is selected any stub behavior that appears after the hook function is called can be bypassed ; as long as the stub checks for the override and allows it . no other behavior will be changed , as it was a requirement that the change have no impact to current operations . <section> - pc - <allcaps> rhel </allcaps> <number> - cfs commit <url> - cfs_cf unit - test - cf - <number> branch <section> the override control tests show there is no behavioral changes unless the new override function is used . the override updated tests show that the desired outcome is achieved in each instance . <section> alan gibson <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <number>"
integration candidate : <number> - <number> - <number> <section> pr # <number> <section> steps taken to test the contribution : ci <section> none <section> ci <section> none <section> none <section> <user>
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> - initializes the file descriptor ( output parameter ) for all cases in os_opencreate fix # <number> - adds all the currently possible source files for <code> to coverage statistics and adds coverage tests fix # <number> , restrict permissions on file create fix # <number> , change the comment style fix # <number> , <allcaps> osal </allcaps> should have a "" os_getversionstring ( ) "" function <section> see < <url> <section> pr # <number> - avoids various "" possible uninitialized variable "" warnings for routines that utilize this <allcaps> api </allcaps> . pr # <number> - renames <code> structures to <code> to deconflict from structure name in <code> . adds <code> to <code> compilation . renames <code> to <code> . coverage now includes all currently possible files in vxworks build pr # <number> - resolves codeql security warning by restricting permissions on file create . pr # <number> - changes comments using "" cpp "" comment style to "" c "" style pr # <number> - adds _new_ accessor functions apis to get version strings and return the values of string macros defined in <code> . <number> . the "" simple "" version currently <code> macro - this is the semantic version without any extra detail . this is returned by <code> . <number> . the "" descriptive "" version in <code> macro - this has extra detail like the most recent official release . this is returned by <code> . <number> . the release code name , now returned by <code> . these functions are the preferred way to get the <allcaps> osal </allcaps> version string , from now on users should avoid using the macro definitions as it is evaluated at <allcaps> osal </allcaps> library compile time , rather than application compile time , and thus will remain correct in the event that <allcaps> osal </allcaps> is relinked without recompiling the application . adds <code> to implement these <number> calls and associated coverage test . this allows the version . c file to be auto - generated in the future . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , initialize file descriptor in os_opencreate <section> fix # <number> - initializes the file descriptor ( output parameter ) for all cases in os_opencreate avoids various "" possible uninitialized variable "" warnings for routines that utilize this <allcaps> api </allcaps> . <section> build and execute unit tests , passed <section> avoids static analysis warning , output never unset . <section> - hardware : cfs lab <number> - os : centos <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ut stubs / support such that user registered hook / return value override / etc skips the rest of the default stub logic <section> some logic implemented in stubs after the hook call is dependent on a status of os_success or positive , which is overly restrictive for a stub user that wants full control stub behavior ( ability to return a positive and explicitly control implementation ) <section> provide a mechanism to skip stub logic if user has registered an "" override "" action . <section> none <section> user requested <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> <user>"
"finish adding line coverage to portable os - impl - bsd - sockets . c <section> # <number> added os - impl - bsd - sockets . c to the vxworks coverage statistics , but not full coverage <section> finish the coveragetest - bsd - sockets . c to get full line coverage of portable / os - impl - bsd - sockets . c <section> none <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> and # <number> , tests fail when no network fix # <number> , ut stub match macro behavior fix # <number> , remove redundant logic fix # <number> , simplify name truncation in os_createsocketname fix # <number> , change global vars to not be hidden by local vars . fix # <number> , remove deprecated elements fix # <number> , ut_stub_checkforcefail - > ut_stub_checkdefaultreturnvalue <section> see < <url> <section> pr # <number> - makes tests skip after getting their first not implemented error . pr # <number> - updates stub helpers to match the behavior of calling the default implementation stub macro ( <allcaps> null va </allcaps> list ) pr # <number> - removes redundant logic and assignment to fix static analysis warnings pr # <number> - truncates at the end of the logic flow for socket name as opposed to possibly <number> different locations . fixes static analysis warning . pr # <number> - renames <code> in unit tests to <code> to avoid conflicts pr # <number> - removes all deprecated elements pr # <number> - no behavior change . renames <code> to <code> , also only sets <code> if not <code> ( can pass in <allcaps> null </allcaps> value does not matter ) <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , fix comment style <section> fixes # <number> change the comment style <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , restrict permissions on file create <section> fixes # <number> adds restriction check to file open . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add uncovered vxworks source files to coverage statistics <section> fix # <number> - adds all the currently possible source files for vxworks to coverage statistics and adds coverage tests - renamed sockaddr * structures to deconflict from structure name in os - impl - bsd - sockets . c to make stubbing out the os structures easier . - compiling os - impl - bsd - sockets . c in coverage test with os_network_supports_ipv6 to cover that option also - renamed bsd - select - stubs . c to sys - select - stubs . c since it ' s really stubbing sys / select . h not the bsd implementation of select <section> build and execute unit tests , passed <section> none , but coverage now includes all currently possible files in vxworks build <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> not full coverage yet on os - impl - bsd - sockets . c ( plan to keep improving prior to <allcaps> ccb </allcaps> ) also will squash <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add accessor functions for version strings <section> adds <number> simple <allcaps> api </allcaps> calls : const char * os_getversion ( void ) ; const char * os_getversioncodename ( void ) ; const char * os_getversiondescription ( void ) ; these directly return the values of string macros defined in <code> . the accessor function should be the preferred way to get the <allcaps> osal </allcaps> version string ( vs . using macro directly ) as it is evaluated at <allcaps> osal </allcaps> library compile time , rather than application compile time , and thus will remain correct in the event that <allcaps> osal </allcaps> is relinked without recompiling the application . fixes # <number> <section> build and run all unit tests , sanity check <allcaps> cfe </allcaps> . <section> this adds _new_ apis to get version strings - does not change anything existing within <allcaps> osal </allcaps> . <section> ubuntu <number> <section> looking at the existing macros i determined we really needed <number> functions for version info : <number> . there is the "" simple "" version currently in <code> macro - this is the semantic version without any extra detail . this is returned by <code> . <number> . there is the "" descriptive "" version currently in <code> macro - this has extra detail like the most recent official release . this is returned by <code> . <number> . finally the release code name , which might be useful to obtain separately / in isolation from the rest of the details . <repeated> i separated this from the <code> macro and this is returned by <code> . i resisted the temptation to simply toss these into <code> and instead added a new / separate source file called <code> to implement these <number> calls . in turn this meant a new coverage test needed to be added too ( since the pattern in <allcaps> osal </allcaps> is one coverage test per file unit ) . putting this in a separate source file is better as it maintains the pattern / relationship between . c and . h files , and it also allows the version . c file to be auto - generated at some point if we decide to go that route in the future . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , ut_stub_checkforcefail - > ut_stub_checkdefaultreturnvalue <section> fix # <number> - renames ut_stub_checkforcefail to ut_stub_checkdefaultreturnvalue , also only sets value if not <allcaps> null </allcaps> ( can pass in <allcaps> null </allcaps> value does not matter ) <section> build and execute unit tests ( with corresponding nasa / cfe # <number> ) <section> none , name change <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + nasa / cfe # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removes all deprecated elements <section> build and execute unit tests , passes . <section> none for compiles with omit_deprecated = true <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove redundant logic <section> fix # <number> - removes redundant logic ( static analysis warnings ) <section> build and execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify name truncation in os_createsocketname <section> fix # <number> - just truncating at the end for socket name ( not possibly <number> different locations ) <section> built and executed unit tests , passed <section> will just truncate socket name at the end <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> note coverage test is not doing full branch coverage , still getting full line coverage . branch coverage is an existing issue . <section> none <section> jacob hageman - <allcaps> nasa </allcaps>"
"fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented <section> ( would have fixed # <number> ) use utassert_casetype_na instead of utprintf to report cases when not implemented <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , ut stub match macro behavior <section> fix # <number> - updates stub helpers to match the behavior of calling the default implementation stub macro ( <allcaps> null </allcaps> va list ) <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> and # <number> , tests fail when no network <section> fixes # <number> fixes # <number> made the tests skip after getting their first not implemented error . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , cast args to printf in queue - test <section> using <code> conversion requires an <code> arg , not <code> ( it matches on some platforms , not on others ) . fixes # <number> <section> build and run tests on <allcaps> rtems </allcaps> <number> . <number> . <section> no more format mismatch warning / error . <section> <allcaps> rtems </allcaps> <number> . <number> <allcaps> qemu </allcaps> target on ubuntu <number> build host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , length - limited string length checks <section> create a wrapper around <code> that mimics the non - c99 function <code> which is defined in <allcaps> posix </allcaps> - <number> . use this instead of <code> whenever the string being checked either originates in or will be copied into a fixed - length array buffer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests on both native and <allcaps> rtems </allcaps> <section> no behavior changes except if a bug causes strings to be unterminated . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> ( qemu ) <section> worth noting that in most cases this was testing the length of a string in the internal <allcaps> osal </allcaps> table entry , which was already length - checked when created . so this check is somewhat redundant , the only way this could catch something is if there is memory corruption of some sort . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , null terminate when using strncpy <section> fix # <number> - fixed a couple missing null terminations and applied the general pattern ( sizeof where it works ) <section> build and execute unit tests <section> avoid missing null termination issues , no longer truncating filename in os_moduleinfo ( src / os / shared / src / osapi - module . c ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add check of semaphore to avoid unreachable code in posix os_binsemcreate_impl <section> fix # <number> - adds a check to send the semaphore to avoid unreachable code , basically a non - op placeholder to avoid refactoring unreachable code which would make it less future - proof <section> build and execute unit tests , passed <section> none , avoids static analysis warning and uncoverable code <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> eventually when coverage is added to posix this will help meet the <percent> goal <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unreachable code in os_socketopen_impl for <allcaps> bsd </allcaps> socket <section> fix # <number> , just simplifies switch statements based on previous checks . can always be expanded again if additional cases are implemented . <section> build and execute unit tests , passed <section> no impact to behavior <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> static analysis warning fix <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update os - impl - no - symtab . c to match apis <section> fix # <number> - updates os - impl - no - symtab . c to match latest apis <section> builds . <section> now can build without dynamic loader ( osal_config_include_dynamic_loader <allcaps> false </allcaps> ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update os - impl - no - sockets . c to match apis <section> fix # <number> - updates os - impl - no - sockets . c to match latest apis <section> builds . <section> now can build without network ( osal_config_include_network <allcaps> false </allcaps> ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , change global vars to not be hidden by local vars . <section> fixes # <number> rename global timer_id to local_timer_id <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , return status from os_consoleapi_init <section> fix # <number> - now returning status from os_consoleapi_init so debug warnings will get reported correctly on errors <section> build and executed unit tests , passed ( note the os_consoleapi_init test does not check status ) <section> will send debug message on error <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> see # <number> to add full branch coverage to unit tests w / return checking <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"implement <percent> branch coverage with return verification <section> see os_consoleapi_init test , called once with no return checking . <repeated> does not meet expectations for coverage ( current minimum goal is all lines , all branches ) . note future standards may require mc / dc . <url> <section> add full branch coverage to unit tests <section> add mc / dc coverage to unit tests <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"consolidate around single base set of unit test apis ( can extend , but should be based on a consistent set ) <section> i realize we have discussed this before , but our unit tests are all over the place . <section> we should implement gold - standard patterns , and drive the rest of the system towards that goal as we update unit tests . really the <allcaps> assert </allcaps> * macros at this point seem like the most informative / standard set but they are not available to <allcaps> osal </allcaps> . update the ut_assert macros or add ones that match this pattern . <section> none <section> developers have added all sorts of non - standard debug statements when if we just used the informative macros the output would be standardized ( see # <number> ) <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean commented out code <section> fix # <number> - cleans commented out code ( all from test code ) <section> build / execute unit test , passes <section> none , just avoids static analysis warnings <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> would really benefit from <allcaps> assert </allcaps> macro in cfe . <repeated> maybe consider moving / consolidating these general macros ? almost all the debug code that was commented out would be better replaced by <allcaps> assert </allcaps> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize locals flagged in static analysis <section> fix # <number> , simply adds initialization where flagged by static analysis as possibly uninitialized <section> build and run unit tests <section> no functional change to non - test code , avoids returning uninitialized values from stubs . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , terminate ut macro variadic lists <section> fix # <number> - terminates the variadic lists with <allcaps> null </allcaps> in the unit test macros <section> build and execute unit tests , pass <section> avoids codeql warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , static allocation of dummyvec in osc_inum_to_ivec stub <section> fix # <number> , declares dummyvec as static to avoid warning ( and returning stack allocated memory ) when returning vectbl . <section> build and execute unit tests , passed . <section> bug in stub fixed ( could have been issues if return value used ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle + this commit <section> codeql warning resolution <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds osal , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , make sure all pointers are checked for null fix # <number> , remove null checks from internal methods . fix # <number> , bring <allcaps> osal </allcaps> code coverage back up to <percent> fix # <number> , add null pointer check . fix # <number> , add workflow timeout and format check fix # <number> , static allocation of dummyvec in osc_inum_to_ivec stub fix # <number> , initialize locals flagged in static analysis fix # <number> , clean commented out code fix # <number> , resolve coercion alters value warnings fix # <number> , return status from os_consoleapi_init fix # <number> , update os - impl - no - symtab . c to match apis fix # <number> , remove unreachable code in os_socketopen_impl for <allcaps> bsd </allcaps> socket fix # <number> , terminate ut macro variadic lists fix # <number> , add check of semaphore to avoid unreachable code in posix fix # <number> , length - limited string length checks fix # <number> , cast args to printf in queue - test fix # <number> , add codeql analysis to workflow fix # <number> , null terminate when using strncpy fix # <number> , apply standard formatting <section> see <url> <section> pr # <number> - adds test cases for <code> , <code> , and others to get <percent> line and function coverage on vxworks and shared / portable layers . pr # <number> - ensures apis check for <code> inputs or have documentation stating that a null value is allowed . pr # <number> - adds timeout to static analysis check and adds format check . removes old . travis . yml and updates badges in readme . pr # <number> - adds code ql analysis on push to main and pull requests ( to main ) pr # <number> - cleans commented - out code in tests to address static analysis warnings pr # <number> - initializes local variables to avoid returning uninitialized values from stubs and address static - analysis findings pr # <number> - replaces two local return codes defined as <code> with <code> to resolve static - analysis warnings pr # <number> - simplifies switch statements based on previous checks . removes unreachable , dead code to resolve static - analysis warnings pr # <number> - terminates unit test macros variadic lists with <code> to address <allcaps> cwe </allcaps> - <number> codeql warning pr # <number> - adds a check to send the semaphore to avoid unreachable code pr # <number> - adds a status return to <code> so debug warnings will get reported correctly on errors . pr # <number> - declares <code> as static to avoid warning and returning stack allocated memory when returning <code> in <code> stub pr # <number> - updates types in <code> to match latest apis pr # <number> - updates types in <code> to match latest apis pr # <number> - fixes missing <code> terminations and applies the standard "" sizeof "" pattern where appropriate . no longer truncates filename in <code> . pr # <number> - fixes <code> conversion in <allcaps> rtems </allcaps> so to address build warning pr # <number> - create a wrapper around <code> that mimics the non - c99 function <code> defined in <allcaps> posix </allcaps> - <number> . use this instead of <code> <code> clang - format ` <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , apply standard formatting <section> fix # <number> - applies standard formatting ( again ) , format check should eliminate need for huge sets of changes like this since we should maintain continuous compliance . <section> na - whitespace only . <section> will pass # <number> <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add workflow timeout and format check <section> fix # <number> , adds timeout to static analysis check and adds format check . removes old . travis . yml and updates badges in readme . <section> ci <section> timeout and format check <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add workflow timeouts and format check <section> - no timeout in workflow ( default is <number> minutes ) could consume allocations - missing format check - remove old travis configuration - update badges <section> add timeout and format check <section> none <section> similar to transition in nasa / cfs and nasa / <allcaps> psp </allcaps> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , bring <allcaps> osal </allcaps> code coverage back up to <percent> <section> adds test cases where necessary to get <percent> line coverage on vxworks implementation + shared / portable layers . fixes # <number> <section> build <allcaps> cfe </allcaps> with unit tests run all unit tests and check coverage report ( <allcaps> fsw </allcaps> not affected ) <section> no impact to <allcaps> osal </allcaps> implementation - only affects coverage tests . coverage testing is now back at <percent> functions + <percent> lines . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , add utdebug message from os_printf stub fix # <number> , resolve typos in unit test assert or statements fix # <number> , document nested tests not supported fix # <number> , remove ut_checkforopensockets fix # <number> , add mqueue functional test fix # <number> , readd extern c in osapi . h to support c + + use fix # <number> , display message when not implemented error occurs fix # <number> , add test teardown failure to test summary fix # <number> , format printf correctly fix # <number> , change file create to use read write fix # <number> , add additional casts fix # <number> , create security policy fix # <number> , update os_time_t definition to <number> ticks fix # <number> , deprecate os_fsblocksfree and os_fsbytesfree fix # <number> , terminate string in testreadwritelseek fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , update ut_setdefaultreturnvalue comments fix # <number> , mqueue test uses sequence of numbers fix # <number> , install modules and clean up files for unit tests <section> see <url> <section> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , make sure all pointers are checked for null <section> fixes # <number> went through all the api ' s and made sure all pointers have a null check , or a comment stating that it can be null . fixes # <number> <section> build and run unit test <section> none <section> ubuntu <number> <section> <number> to do left in here that will be fixed by # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , install modules and clean up files for unit tests <section> fix # <number> - installs the modules used in unit testing and added removal of files where they were left - over after tests completed <section> built and ran unit tests ( also installed and ran osal_loader_ut from build / exe / * directory ) . confirmed no files were left over in / dev / shm <section> ut ' s work and clean up files <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , terminate string in testreadwritelseek <section> fix # <number> , terminate string in testreadwritelseek <section> initialized the character arrays to known values , observed missing termination in report , fixed w / this comment and observed the garbage no longer being reported . <section> no impact to main code , ut only ( and just the report , test passes either way ) . <section> - cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecate os_fsblocksfree and os_fsbytesfree <section> deprecates the <code> and <code> functions because the return value is inadequate for larger file systems . users should call os_filesysstatvolume ( ) and read the respective output members of the structure as indicated . fixes # <number> <section> build <allcaps> cfe </allcaps> and unit test with both omit_deprecated as true and false <section> any calls to these functions will become an error if building with <code> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , read extern c in osapi . h to support c + + use <section> fix # <number> , readd extern c in osapi . h to support c + + use <section> build and unit test , passes . <user> - could you test in c + + context and confirm this resolves your issue ? <section> works to include header in c + + again , no other functional change <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve subtasks not ending on time <section> fix # <number> removed the second semaphore that was trying to make sure the subtasks finish closing and instead just forcibly close them from the main task . <section> ran the select test <number> times on my computer with no fails . <section> test should not fail or hang <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove ut_checkforopensockets <section> fix # <number> - removes ut_checkforopensockets which was an old hack to check if unit tests cleaned up sockets . no longer applicable since the ut framework resets the state for each unit test . <section> built and ran unit tests with nasa / cfe # <number> <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + nasa / cfe # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove ut_checkforopensockets <section> see also nasa / cfe # <number> , was used to check that unit tests closed sockets but is no longer applicable . <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"test case reporting of not - implemented functionality not uniform <section> various messages in the unit tests are used to report <allcaps> api </allcaps> ' s that are not implemented , and it ' s not trivial to get a list : <url> <url> <section> utilize utassert_casetype_na to report all os_err_not_implemented returns . also useful to know if it ' s the <allcaps> api </allcaps> or an option that is specifically being tested . <section> macro <section> see links above <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , document nested tests not supported <section> fix # <number> - adds documentation to the uttest_add <allcaps> api </allcaps> that nesting ( uttest_add from within an added test ) silently fails . <section> none , documentation only . <section> none <section> n / a <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , use iterators instead of for loops fix # <number> , implement separate lock / unlock key fix # <number> , implement exclusive / reserved lock fix # <number> , make os_taskdelete sync fix # <number> , unit test fix # <number> , use <allcaps> posix </allcaps> dir implementation on v fix # <number> , improve fs_based mounts on fix # <number> , chmod error h fix # <number> , order of operations for delete all fix # <number> , add pointer parameter checks fix # <number> , add os_filesyssta fix # <number> , add pointer check fix # <number> , resolve cast - align error in vxworks os_taskget fix # <number> , update <allcaps> osal </allcaps> code to use time ac fix # <number> , check time conversions in coverage test fix # <number> , remove alignment macros fix # <number> , add "" assemble "" routines for milli / mi fix # <number> change uint32 to size_t fix # <number> , resolve subtasks not ending on time <section> see < <url> <section> pr # <number> - address issues with <allcaps> osal </allcaps> global table management : - use iterators whenever possible - use an unlock key rather than task id so os_taskexit ( ) does not trigger a warning - general cleanup of lock / unlock impl and remove redundant logic - unlock global tables during create / delete - keep threads "" attached "" in <allcaps> posix </allcaps> , so they can be joined when deleted . - no longer triggers warning with os_taskexit ( ) on vxworks ( see # <number> ) - <code> on <allcaps> posix </allcaps> does not return until the task has actually exited ( see # <number> ) pr # <number> - the chmod test is now skipped on vxworks rather than failing . the <code> function now returns <code> when run on a file system that does not have permissions , which in turn causes the unit test to be skipped rather than fail . - corrects a file handle leak . pr # <number> - add parameter check to <code> and adjust coverage test to validate . pr # <number> - replace <code> and <code> with <code> . this new <allcaps> api </allcaps> for getting stats on file system . uses existing <code> call and exposes it in the public <allcaps> api </allcaps> . pr # <number> - when cleaning up for shutdown , delete resources that have a task / thread first , followed by other resource types . this helps avoid possible dependencies as running threads might be using the other resources . no detectable external impact ; internally , the tasks are deleted first during shutdown , which only has an impact if / when tasks are actively using other <allcaps> osal </allcaps> resources . pr # <number> - the mount / unmount *vxworks* implementation was not adequately checking for and handling the <code> pass - through mapping type - which should be mostly a no - op . create a mount point directory if it does not already exist when using this mapping type for consistency with <allcaps> posix </allcaps> . - adds a documentation note to <code> : the virtual mount point cannot be empty - so <code> does not work but <code> does work and allows one to open files in the root as <code> from <allcaps> osal </allcaps> applications . mount - point directories do not need to previously exist when using os_filesysaddfixedmap pr # <number> - store <code> return in a <code> , then cast to <code> to avoid a strict alignment compiler error pr # <number> - removes the non - portable <code> and <code> macros . pr # <number> - uses the <allcaps> posix </allcaps> dir implementation on vxworks <number> . the only incompatibility is the prototype for <code> which is missing the second argument ; this is worked around with a compatibility macro for vxworks <number> . x builds . - translate and convert the vxworks coverage test cases to the portable dir implementation , which benefits vxworks7 , <allcaps> rtems </allcaps> , and <allcaps> posix </allcaps> . pr # <number> - fixes prototypes so they run on <allcaps> rtems </allcaps> by replacing uint32 with size_t pr # <number> - adds <code> macros to <code> and <code> so they can handle <allcaps> null </allcaps> pointers and return the correct error . pr # <number> - adds access functions to convert / extract different units from an os_time_t value - so that other code in <allcaps> cfe </allcaps> / <allcaps> psp </allcaps> / apps can be updated to use the access functions and thereby not break when the internal time definition changes . replaces the <code> with <code> in the "" stat "" structure used by the file module . updates the pointer argument to <code> to be <code> . prototype change of <code> should be backward compatible . <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> change file create to use read write <section> fixes # <number> changed the file create to read write to work on <allcaps> rtems </allcaps> <section> ran the test on <allcaps> rtems </allcaps> <number> <section> test should pass <section> ubunto <number> , <allcaps> rtems </allcaps> <number> <section> alex campell <allcaps> gsfc </allcaps>"
"fix # <number> , format printf correctly <section> fixes # <number> fixed the formatting to correctly build . have been unable to test on <allcaps> rtems </allcaps> <number> <section> tested on <allcaps> rtems </allcaps> <number> and worked . <section> able to build <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> needs to be tested on <allcaps> rtems </allcaps> <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add utdebug message from os_printf stub <section> fix # <number> - added utdebug in os_printf stub <section> built tests and confirmed debug output <section> outputs the os_printf input as a debug message from stub <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"vxworks <allcaps> osal </allcaps> missing os_waitforstatechange_impl <section> after the merge of vxworks7 support , a rebase was done . it turns out a new required function os_waitforstatechange_impl in the implementation is missing . <section> p5020 vxworks7 <section> steven seeger , <allcaps> efsi </allcaps> , inc . ( <allcaps> gsfc </allcaps> - <number> )"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , document utassert_message parameters fix # <number> , correct utassert_zero description typo <code> os_binsemflush <code> os_binsemgive <code> os_waitforstatechange ` pr # <number> - add cppcheck static analysis workflow to osal ci <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , re - add automated static code analysis <section> fix # <number> <section> see action runs in fork < <url> <section> static analysis workflow runs on pull requests and push . workflow saves log file as an artifact for analysis . <section> ubuntu <number> <section> part of travis ci to github actions migration <section> n / a"
"fix # <number> , fix or statements <section> fixes # <number> fixed the or statement to correctly compare against both options . <section> build and run unit test <section> will correctly cath failures when they happen <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> - deprecates ut_stub_getforcefail ( ) and allows <allcaps> null </allcaps> for the … … value pointer closes # <number> <section> the <code> was deprecated and replaced with <code> . same has been done for <code> and <code> . also , made it so that <allcaps> null </allcaps> can be passed as the <code> out parameter to <code> for when a user just wants to check whether it ' s set or not but does not care what the value is . <section> built and ran <allcaps> sb ut </allcaps> . <section> <email>"
"deprecate ut_stub_checkforcefail ( ) with the deprecation of <code> , its functionality was replaced with <code> . the <code> should likewise be deprecated . <url>"
"fix # <number> , replace ut_os_log with utprintf <section> fix # <number> - replaces ut_os_log with utprintf ( it was just a duplicated macro ) <section> standard build and run of unit tests <section> no change , just code duplication cleanup <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , os_time_t with single tick counter <section> use a single <number> - bit tick counter to implement <code> , rather than a split <number> bit seconds + <number> bit microseconds counter . this benefits in several ways : - increases the timing precision by 1 0 x ( <number> . 1 us ticks ) - increases the representable range by 4 0 0 x ( + / - <number> yrs ) - simplifies addition / subtraction ( no carry over ) - avoids "" year <number> "" bug w / <number> - bit timestamps fixes # <number> <section> build and run all unit tests , sanity check <allcaps> cfe </allcaps> <section> none <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> + pc686 ( qemu ) <section> this is the final step listed in issue # <number> , and it depends on several dependencies being merged already : - pr nasa / cfe # <number> - pr nasa / psp # <number> - pr nasa / osal # <number> it is submitted as a separate pr from # <number> due to the dependencies , so it does not necessarily all have to be merged at once . however if <allcaps> ccb </allcaps> wants to accelerate the rollout this can be all done in a single merge cycle . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove alignment macros <section> fix # <number> - removes the non - portable os_pack and os_aligned macros <section> built and ran unit tests , no issues ( no dependencies in bundle ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , change uint32 to size_t <section> fixes # <number> change prototypes should be the same , from uint32 to size_t <section> build on <allcaps> rtems </allcaps> <number> <section> able to build <section> ubuntu <number> as build host for <allcaps> rtems </allcaps> <number> . <number> <section> dependant on nasa / osal # <number> to successfully build <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , suppress invalid redundantassignment warning from cppcheck <section> fix # <number> - suppresses the invalid warning . <section> re - ran cppcheck and observed no warnings <section> none except no warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve user ' s guide generation warnings <section> fix # <number> - closed group and removed old group . <section> <code> locally and confirmed no warnings <section> no warnings on user ' s guide build <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , rename ut clear force fail <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue fixes # <number> update the comments of ut_setdefaultreturnvalue to match the more general function <section> build and run unit test <section> no impact to behavior <section> there will be more pull requests from other sub modules that are dependant on this . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"change ut_clearforcefail to ut_cleardefaultreturnvalue <section> ut_setforcefail was deprecated in favor of ut_setdefaultreturnvalue , so ut_clearforcefail is no longer a mirror <section> change ut_clearforcefail to ut_cleardefaultreturnvalue <section> none <section> see also # <number> , the comments should be updated for ut_setdefaultreturnvalue and ut_cleardefaultreturnvalue <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_time_t access functions <section> initially the first commit just adds access functions to convert / extract different units from an <code> value - so that other code in <allcaps> cfe </allcaps> / <allcaps> psp </allcaps> / apps can be updated to use the access functions and thereby not break when the internal time definition changes . there will then be a second commit that updates the actual time format . it also uses os_time_t in the "" stat "" structure used by the file module rather than having this be a <code> . minor detail - also updates the pointer argument to <code> to be <code> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> initially just a set of new access functions - no impact to behavior eventually will change the internal format of <code> which will break any code that is _not_ using the access functions . prototype change of <code> should be backward compatible . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> initial commit which just adds the access functions and updates <allcaps> osal </allcaps> can be merged at any time , it does not have any dependencies and does not break anything . second commit will depend on nasa / cfe # <number> and nasa / psp # <number> ( may be a separate pr depending on how review / merge cycles go ) <section> joseph hickey , vantage systems , inc ."
fix # <number> change sem flush to solve race condition <section> fixes # <number> removed sem flush and changed it to sem give to prevent a rare race condition . change the port numbers to be different from network test for when test are run in parallel . <section> ran the unit tests in parallel <section> test should not lock or fail <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , resolve cast - align error in vxworks os_taskgetid_impl <section> fix # <number> - store tasktcb return in a <code> , then cast to <code> just for the pointer math to avoid a strict alignment compiler error note the error was observed with cast - align = strict on ubuntu <number> with enable_unit_tests = true <section> built without the error after fix . built / ran unit tests on ubuntu <number> and they all passed . <section> none other than avoid compiler error <section> - hardware : cfs dev server - os : ubuntu <number> ( and <number> to confirm strict alignment error resolved ) - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_filesysstatvolume <section> add os_filesysstatvolume as replacement for os_fsbytesfree and os_fsblocksfree . fixes # <number> <section> run all unit tests . <section> new <allcaps> api </allcaps> for getting stats on file system . uses existing os_filesysstatvolume_impl call - just exposes it in public <allcaps> api </allcaps> . <section> ubuntu <number> <section> this pr is only adding a new <allcaps> api </allcaps> , it is not ( yet ) deprecating the existing os_fsblocksfree / os_fsbytesfree calls . applications and <allcaps> cfe </allcaps> will need an update before these calls can be deprecated , but the new <allcaps> api </allcaps> needs to be in place before the existing refs can be fixed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add pointer check <section> add parameter check to os_socketsendto and adjust coverage test to validate . fixes # <number> <section> run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add pointer parameter checks <section> add os_check_pointer macros to os_converttoarrayindex and os_timebasegetfreerun . fixes # <number> <section> run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document utassert_message parameters <section> fix # <number> - document utassert_message parameters , also adds see also for helper macros <section> ci , comment change only . <section> none <section> n / a <section> worth considering making this internal , no identified use case for direct call . would be confusing to output any message other than info / debug . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
replace ut_os_log use in unit - tests with utprintf <section> ut_os_log is the same as utprintf <section> remove duplicate macro <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , order of operations for delete all <section> when cleaning up for shutdown , delete resources that have a task / thread first , followed by other resource types . this helps avoid possible dependencies as running threads might be using the other resources . fixes # <number> <section> build and run unit tests sanity check <allcaps> cfe </allcaps> , ensure shutdown works as expected <section> no visible impact . <repeated> internally the tasks are deleted first during shutdown , which only has an impact if / when tasks are actively using other <allcaps> osal </allcaps> resources . <section> ubuntu <number> ( native ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , chmod error handling <section> implement better error translations in the os_filechmod_impl ( ) function . also corrects a file handle leak . this makes it return os_err_not_implemented when run on a file system that does not have permissions , which in turn causes the unit test to be skipped rather than fail . fixes # <number> <section> build and run all unit tests <section> the chmod test is now skipped on vxworks rather than failing . <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve fs_based mounts on vxworks <section> the mount / unmount implementation was not adequately checking for and handling the <code> ( pass - through ) mapping type - which should be mostly a no - op . but to be consistent with <allcaps> posix </allcaps> it should also create a mount point directory if it does not already exist when using this mapping type . adds a documentation note to <code> regarding the limitation that the virtual mount point cannot be empty - so <code> does not work - never did . however <code> does work and allows one to open files in the root as "" / root / <file> "" from <allcaps> osal </allcaps> applications . fixes # <number> <section> build and run all unit tests on native sanity check <allcaps> cfe </allcaps> confirm behavior of <code> + <code> when mapping to root fs . <section> mount point directories do not need to be already existing when using <code> <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> auto - creating the mount point dir is relevant to unit tests - this simplifies running the unit tests by not requiring the user to pre - create this directory . otherwise without this one gets unit test failures if the directory does not already exist . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use <allcaps> posix </allcaps> dir implementation on vxworks6 <section> instead of keeping / maintaining a one - off implementation for vxworks <number> , use the <allcaps> posix </allcaps> implementation for this module . the only incompatibility is the prototype for mkdir ( ) which is missing the second argument . this can be worked around with a simple compatibility macro that is only enabled for vxworks <number> . x builds . this replaces previous pr # <number> . fixes # <number> . <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> the actual posix dir implementation did not change at all - just using it on vxworks <number> too . also translates / converts the coverage test cases from vxworks specific to the portable dir implementation , which benefits vxworks7 , <allcaps> rtems </allcaps> and <allcaps> posix </allcaps> too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , <number> , <number> , <number> - <allcaps> osal </allcaps> global table management <section> address multiple issues with the <allcaps> osal </allcaps> global table management - general cleanup and bug fixes . fixes # <number> - use iterators whenever possible fixes # <number> - use an unlock key rather than task id so os_taskexit ( ) does not trigger a warning fixes # <number> - general cleanup of lock / unlock impl and remove redundant logic fixes # <number> - unlock global tables during create / delete fixes # <number> - keep threads "" attached "" in <allcaps> posix </allcaps> , so they can be joined when deleted . <section> build and run all tests for all platforms sanity check <allcaps> cfe </allcaps> and also confirmed <allcaps> reload </allcaps> / <allcaps> restart </allcaps> commands are working correctly . <section> no longer triggers warning with os_taskexit ( ) on vxworks ( see # <number> ) os_taskdelete ( ) on <allcaps> posix </allcaps> does not return until the task has actually exited ( see # <number> ) most other changes are internal only and do not change behavior . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> + pc686 vxworks <number> + mcp750 <section> noted other issues when running some unit tests on vxworks target that are not related to this change / preexisting issues . will file separate bugs about those . <section> joseph hickey , vantage systems , inc ."
"update unit tests to work with bug and argument macro non - default settings <section> # <number> /# <number> implement bug and argument check macros . the default setting matches what unit tests currently check for . any other setting will not pass unit tests ( disabling checks will cause segfaults / errors , strict will abort the tests ) . <section> - implement argument check tests in a way they can be easily skipped based on settings - add option to skip <section> none . <section> issue generated from conversion in # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use version_less instead of version_greater_equal <section> the version_greater / less_equal comparisons wer not introduced until cmake <number> . however , the basic version_greater / <allcaps> less </allcaps> ( no equal ) comparison is much older , and <date> has no complaint about it . so use version_less and invert the condition . fixes # <number> <section> build for vxworks <number> on <allcaps> rhel </allcaps> <number> <section> makefiles are generated and build succeeds . <section> vxworks <number> using <allcaps> rhel </allcaps> <number> host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , mqueue functional test <section> fixes # <number> generalized queue timeout test to also test message queue functionality <section> build and run the unit tests <section> adds <number> seconds to the unit tests <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add test teardown failure to test summary <section> fixes # <number> added test teardown failures to the test summary also changed the print out to use the same style as startup failures . <section> used a test that always fails teardown and verified that it was reported in the test summary . <section> n / a <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> integration candidate : <number> - <number> - <number> <section> combines ic - <number> - <number> - <number> and <number> - <number> - <number> fix # <number> add "" <allcaps> osal </allcaps> select "" functional tests fix # <number> , breakup <allcaps> osal </allcaps> includes fix # <number> , avoid ut failure if sem_value_max >= uint32_max fix # <number> , check and report sysconf error return fix # <number> , add vxworks <number> support fix # <number> , clean up task definitions in core test fix # <number> # <number> , improve global lock on <allcaps> posix </allcaps> fix # <number> , convert <allcaps> osal </allcaps> config guide to markdown fix # <number> , use errno in clock_getres error reporting fix # <number> , implement macro to facilitate argument checking <section> see < <url> <section> pr # <number> - convert the <allcaps> osal </allcaps> configuration guide from docx and pdf to a markdown file . pr # <number> - test tasks do not run at <percent> . move all definitions and instantiations out of the core - test header file and reuse the already - existing single task definition . pr # <number> - break up <code> files into units that correspond to the implementation units . kept old header file names for compatibility . pr # <number> - reworks the <allcaps> posix </allcaps> global lock implementation . does not change the <allcaps> posix </allcaps> signal mask when locking / unlocking the global . - fixes a race condition . - adds a condition variable to the global lock structure . improves handling of tasks competing for access to the same object . - no longer changing signal masks repeatedly / unexpectedly . may be relevant to some <allcaps> bsp </allcaps> / driver developers . pr # <number> - checks return of sysconf for error and reports them . only sets pagesize on success . if sysconf fails it provides a mechanism to avoid error propagation . pr # <number> - uses <code> instead of status return from <code> with <code> reporting . pr # <number> - adds support for vxworks <number> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , implement value check and bug report macros <section> provide a set of macros to facilitate the argument value checking typically performed by every public <allcaps> api </allcaps> . - <code> is a printf - like macro that reports an invalid / unexpected condition has been found which indicates a bug in the application ( i . e . uncorrectable ) . - <code> provides a simplified method to confirm a condition is true . if not true , then it invokes <code> and ( possibly ) returns an error code to the caller . this is used for items which __must__ be true or else indicate serious bugs where execution cannot / should not continue normally . - <code> confirms a condition is true , but amy take a mitigation / corrective action rather than treat it as a bug if false . this can be used for "" normal "" range checking which should always produce a soft failure / error code response or enforce a suitable minimum / maximum value . fixes # <number> <section> execute the "" bin sem "" tests - note only the "" bin sem "" implementation has been updated to use these macros thus far . confirm the basic modes work : <number> . normal / default mode where <code> and <code> . in this case the error code is returned and the test passes normally . no change to behavior , but new error printfs are visible when running the test programs and they pass in bad values . <section> : this is the historical behavior and the application keeps running . this requires the application to actually check / handle the error code . as these indicate bugs , it is quite likely that the application does not expect the error response and / or is already in a bad state such that it will not handle it correctly , causing a more obfuscated failure later on . <number> . efficient mode where <code> ( <code> is not used ) . may be used by applications that have reached a high level of stability and have been confirmed never to invoke functions with outrightly bad arguments . bug checks are not performed at all , but other argument checks still are . <number> . strict mode where <code> and <code> . in this mode any <allcaps> bugreport </allcaps> actions result in an <code> which in turn intentionally causes the application to generate core dump if possible ( i . e . if <code> permits ) . the core file may then be opened via debugger to determine the cause of the failure with full context available . the intent here is to catch the error early while the context / stack is still present , and avoid the obfuscation that is likely to occur with ( <number> ) . <section> no impact to behavior ( beyond additional debug printfs ) when using default mode . other modes change behavior as noted above . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add "" <allcaps> osal </allcaps> select "" functional tests <section> fixes # <number> added new functional tests for the the select and select multiple functions . <section> ran the new tests . <section> none <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , check and report sysconf error return <section> fix # <number> - checks return of sysconf for error and if so reports , only sets pagesize on success . <section> build and run unit tests <section> none since sysconf should never fail , but if it does provides mechanism to avoid error propagation <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , avoid ut failure if sem_value_max >= uint32_max <section> fix # <number> - avoids a potential unit test failure if an invalid semaphore value can not be passed in <section> build and run unit tests , passed <section> none . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> unable to reproduce error from issue ( requires feedback from <user> ) but this fix avoids a potential error case . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> integration candidate : <number> - <number> - <number> <section> fix # <number> , exit console loop on shutdown fix # <number> , remove obsolete printf tests fix # <number> , add <allcaps> rtems </allcaps> <number> . x support fix # <number> , add new functional tests for os_chmod fix # <number> , scrub array references in shared layer fix # <number> , rename internal fields for consistency fix # <number> , sanitize array refs on impl layer fix # <number> , use full object id in timecb list fix # <number> , os_chmod uses read or write access . fix # <number> , change type of sync callback argument to osal_id_t <section> pr # <number> - add support for <allcaps> rtems </allcaps> <number> . the change provides defines and necessary ifdefs so <allcaps> rtems </allcaps> <number> can continue to be supported . pr # <number> - <code> now checks for either read or write access instead of just read access pr # <number> - adds functional test for <code> pr # <number> - refactor the table array access across <allcaps> osal </allcaps> . use a token concept in combination with a macro to obtain the table entry instead of indexing arrays directly . all access is then done through this table pointer . use the full object id in the timer call back list . update the timer sync callback prototype . pass the entire <allcaps> osal id </allcaps> to the sync function , not just the index . this is technically an <allcaps> api </allcaps> change . pr # <number> - replaces condition on forever loops to end on shutdown . loops now exit on shutdown . pr # <number> - removes obsolete printf tests that did not work <section> see <url> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> and # <number> , update global locks <section> reworks the <allcaps> posix </allcaps> global lock implementation . - does not change the <allcaps> posix </allcaps> signal mask when locking / unlocking the global . aside from being unnecessary , there was also a race condition in here ( fixes # <number> ) - adds a condition variable to the global lock structure . in the event that there is more than task competing for access to the same object , this allows the second task to be woken immediately instead of polling for a change ( fixes # <number> ) . <section> build and run all unit tests build and sanity check <allcaps> cfe </allcaps> <section> no longer changing signal masks repeatedly / unexpectedly . ( may be relevant to some <allcaps> bsp </allcaps> / driver developers ) <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , synchronous task delete on <allcaps> posix </allcaps> <section> make os_taskdelete actually wait for the task to exit , not simply a cancellation request . fix # <number> <section> build and run <allcaps> cfe </allcaps> and all unit tests test the <allcaps> cfe </allcaps> "" reload app "" command as documented in nasa / cfe # <number> which depends on having os_taskdelete actually exit the task <section> no impact to external <allcaps> api </allcaps> / observed behavior . internally , the global tables are now _unlocked_ when using an <allcaps> exclusive </allcaps> lock type , which is used for create and delete ops . instead of holding the global lock , the id is set to "" <allcaps> reserved </allcaps> "" ( <allcaps> f <elongated> </allcaps> ) which effectively prevents any other task from obtaining a reference to that object . this way <allcaps> osal </allcaps> can more safely call c library functions which block , including ( but not limited to ) pthread_join , while allowing ops on other records to proceed . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> required as part of the fix for <allcaps> cfe </allcaps> requirement documented in nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , breakup includes <section> break up <code> files into units which correspond to the implementation units . the old header file names still exist for compatibility . fix # <number> <section> build and run <allcaps> cfe </allcaps> and unit tests . <section> none - just header refactoring , no actual change . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove obsolete printf tests <section> fix # <number> - removes obsolete printf tests <section> none , this code did not work to begin with . <section> none <section> n / a <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean up task definitions in core test <section> move all definitions and instantiations out of the header file . reuse the single task definition that was already defined . also only define <number> instances of each type , as this is all that the test actually uses ( no need for <number> ) . fixes # <number> <section> build and run the unit tests <section> test tasks do not run at <percent> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
type mismatch variable return_code should be of type int32 .
"fix # <number> , <number> , <number> - refactor all table array access <section> refactor the table array access across <allcaps> osal </allcaps> . multiple fixes combined into one pr as they depend on each other . fix # <number> : rather than indexing arrays directly , use a token concept in combination with a macro to obtain the table entry . all access is then done through this table pointer . the token contains all relevant information about an object , importantly it has the "" truth "" as to what actual object id is being manipulated . this is necessary when operations such as new / delete may change the value in the table itself - the token always has the right value . fix # <number> : use the full object id in the timer call back list . this avoids complexities ( and issues ) associated with trying to regenerate the id when the list changes . fix # <number> : update the timer sync callback prototype . pass the entire <allcaps> osal id </allcaps> to the sync function , not just the index . this is technically an <allcaps> api </allcaps> change ( although they are both uint32 , the value changes ) . <allcaps> afaik </allcaps> this sync feature is not actively used so this should not really have an impact though . <section> build and run all tests for native ( <allcaps> posix </allcaps> ) , rtems <number> and vxworks <section> no impact to behavior - just a substantial cleanup of the internal patterns . <section> ubuntu <number> , rtems <number> <section> this is also necessary as a prerequisite to a couple other <allcaps> osal </allcaps> issues - where the original id needs to be preserved across ops which create / delete entities . the token provides this . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add new functional tests for os_chmod <section> fixes # <number> by adding new function tests <section> these new test , but ran them on the branch from # <number> <section> the new tests added to make test <section> dependant on # <number> <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
fix # <number> os_chmod uses read or write access . <section> fixes # <number> by checking for either read or write access instead of just read access <section> used the chmod tests i am building in another branch that found this issue in the first place . <section> a clear and concise description of how this contribution will change behavior and level of impact . - no changes <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , refactoring ut_setforcefail to ut_setdefaultreturnvalue fix # <number> , add typedefs for osal stack and priority fix # <number> , use <number> argument form of open fix # <number> , use unsigned types in vxworks stack calculation fix # <number> , cleaning up rebasing fix # <number> , add functional test of one shot timer <section> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing pr # <number> - add a 5 th timer to timertest functional to test the one shot ( zero - length time interval ) case . pr # <number> - ensure all apis use the proper type . sizes are now size_t ; these will now be <number> bits on a <number> bit platform . pr # <number> - fix build issue on vxworks <number> by using the <number> argument form of <code> . passing <code> as the mode solves the build issue . this parameter is ignored when not creating a file . pr # <number> - the address calculations now use <code> instead of <code> to ensure that all rounding and base address adjustments behave the same way in the event that the addresses lie in the upper half of memory ( i . e . start with a <number> bit ) which would put it in the negative range of a long type . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> - add <allcaps> rtems </allcaps> <number> . x support <section> fix # <number> this change adds support for <allcaps> rtems </allcaps> <number> in the <allcaps> osal </allcaps> . the change provides defines and necessary ifdefs so <allcaps> rtems </allcaps> <number> can continue to be supported . <section> following the instructions in the pc - rtems <allcaps> psp </allcaps> : <url> and the updated readme_rtems_5 . txt from <allcaps> psp </allcaps> pull request <number> , i built the <allcaps> rtems </allcaps> toolchains , the pc686 bsps and cfs bundle for both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . x . i then ran the bundle on both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> on <allcaps> qemu </allcaps> x86 . note , that for <allcaps> rtems </allcaps> <number> , the latest <allcaps> rtems </allcaps> <number> . x git repository has to be used , since there was an <allcaps> rfs </allcaps> file system bug that prevented the bundle from working on the pc - rtems platform . i did not run the complete set of tests yet on <allcaps> rtems </allcaps> <number> . <section> for <allcaps> rtems </allcaps> <number> there should be no behavior changes at all . for <allcaps> rtems </allcaps> <number> there should be no behavior changes as well . <section> - hardware : <allcaps> qemu </allcaps> x86 - os : <allcaps> rtems </allcaps> - versions : <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> this change requires cfe pull request <number> . it is associated with <allcaps> psp </allcaps> pull request <number> , but since that contains readme files , it is not required to build . <section> n / a <section> alan cudmore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , add markdown version of <allcaps> osal </allcaps> configuration guide <section> pandoc was used to convert the <allcaps> osal </allcaps> configuration guide to a markdown file . during the conversion , issues were presented such as broken tables . tables were fixed and block codes were added where appropriate . fix # <number> <section> please provide feedback on whether the markdown file is acceptable in terms of formatting . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , use unsigned types in vxworks stack calculation <section> this should avoid any inconsistencies in the event that the memory address translates to a negative numeric value . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> none - just avoids possible sign conversions . <section> ubuntu <number> vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use <number> argument form of open <section> vxworks only provides the <number> argument form of <code> . passing <number> as the mode solves the build issue . this parameter is ignored when not creating a file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> no behavior change . fixes build issue on vxworks <number> <section> vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reduce use of uint32 , add more <allcaps> osal </allcaps> typedefs <section> scrub all uses of <code> type across <allcaps> osal </allcaps> , and replace most usage of this generic type with more appropriate , purpose - specific typedefs . all use of <code> to store an object size is now replaced with <code> . adds proper typedefs for : - <code> - used for indicating a task priority - <code> - for indicating a task stack pointer - <code> - for indicating a table position / array index of all internal tables - <code> - for indicating the type of an object fixes # <number> <section> build and sanity test <allcaps> osal </allcaps> on supported platforms run all unit tests <section> none . this is mainly a scrub of all apis to use the proper type , but keeps it as <code> most of the time , so it really should not change anything . except for sizes which are now <code> - so they will be <number> bits on a <number> bit platform . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> this does expose another <allcaps> api </allcaps> problem with functions that return a size as an <code> ( e . g . os_read , os_write , etc ) . <repeated> as an <code> cannot represent the full range of possible values . we may need a type to correlate with <allcaps> posix </allcaps> <code> to address this . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add one shot timer functional test <section> fixes # <number> , added a one shot timer . added a 5 th timer to functional test to test the one shot ( zero - length time interval ) case . <section> build and run unit test . <section> no behavior change <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , static module unload fix fix # <number> , add flags to os_moduleload <section> bundle ci on astrogeco : <url> <section> pr # <number> - ensure that the handle is not <allcaps> null </allcaps> before invoking dlclose ( ) . in particular the handle will be <allcaps> null </allcaps> for static modules . shutdown after <allcaps> ctrl </allcaps> + c occurs normally ( no segfault ) . pr # <number> - add a "" flags "" parameter to os_moduleload ( ) to indicate the desired symbol visibility : - <allcaps> global </allcaps> ( <number> , the default , and matches current behavior ) - <allcaps> local </allcaps> which hides from other modules and prevents other modules from binding to symbols in this module , thereby ensuring / preserving the ability to unload in the future <allcaps> cfe </allcaps> should use <allcaps> local </allcaps> flag for apps , and <allcaps> global </allcaps> flags for libraries . <section> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , rename set force fail <section> fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> <section> alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_moduleload flags <section> add a "" flags "" parameter to os_moduleload ( ) and use this to indicate the desired symbol visibility - either <allcaps> global </allcaps> ( <number> , the default , and matches current behavior ) or <allcaps> local </allcaps> , which means symbols are hidden from other modules . this is intended as a "" hint "" to <allcaps> osal </allcaps> as to how the module will be used - <allcaps> local </allcaps> prevents other modules from binding to symbols in this module , thereby ensuring / preserving the ability to unload in the future . <allcaps> cfe </allcaps> should use <allcaps> local </allcaps> flag for apps , and <allcaps> global </allcaps> flags for libraries , which are typically not ever unloaded . fixes # <number> <section> build and run unit test sanity check <allcaps> cfe </allcaps> ( update / patch required update to <allcaps> cfe </allcaps> to add flags parameter on <allcaps> api </allcaps> call ) <section> no impact to behavior if flags are passed as <number> . <section> ubuntu <number> <section> related to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> and fix # <number> , squash <allcaps> lgtm </allcaps> warnings fix # <number> , add debug messages for mutex double locks fix # <number> , update utassert macros with dynamic string formatting <section> see framework - bundle ci : <url> <section> pr # <number> - when <code> is enabled , this adds a message if mutex give / take actions occur outside the expected sequence . this informs the user ( via the debug console ) if a lock is taken more than once or if a lock is given by a different task than the one that originally took it : <code> pr # <number> - no behavior changes - removes all <allcaps> fixme </allcaps> comments - resolves security / filename race issue by opening file and acting on descriptor by adding fstat stub - squashed the minor recommended bugs pr # <number> - utassert macros now accept variable string arguments . the <code> wrapper around call is no longer needed to accommodate dynamic string output , thus removing the double assert . utassert macros will now be able to offer more information by themselves . <section> ubuntu ci <section> <url> <section> none <section> <user> <user> <user>"
"fix # <number> , fix os_moduleunload for static modules <section> ensure that the handle is not <allcaps> null </allcaps> before invoking <code> . in particular the handle will be <allcaps> null </allcaps> for static modules . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> with apps linked statically . <section> - shutdown after <allcaps> ctrl </allcaps> + c occurs normally ( no segfault ) - also confirmed that specifying an incorrect entry point symbol in startup script also benign . ( because a bad entry point also causes module to be "" unloaded "" as part of cleanup , which triggered the bug too ) <section> ubuntu <number> i686 - rtems4 . <number> / pc686 via <allcaps> qemu </allcaps> <section> this issue only affects statically linked apps , which "" go through the motions "" of module loading for consistency in operation , but do not actually load a module - because its already linked . <section> joseph hickey , vantage systems , inc ."
clean out old osprintf tests related to arinc653 and <allcaps> ghs </allcaps> <section> old tests no longer in scope are still in code base . see <url> and all related code . <section> prune . <section> none . if platforms ever do get brought back in should be implemented using current techniques . <section> none . <section> full name and company / organization if applicable
"fix # <number> , add debug messages for mutex double locks <section> if <code> is enabled , this adds a message if mutex give / take actions occur outside the expected sequence . in particular , this warns if a task takes a mutex more than once . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> with debug events enabled , confirm normal boot and operation . send "" remove packet "" request to to_lab . confirm warning is generated as follows ( this is a known issue in <allcaps> cfe </allcaps> doing multiple locks ) : os_mutsemtake ( <sad> <number> : <allcaps> warning </allcaps> : task <number> taking mutex <number> while owned by task <number> <section> if debugging is enabled this now informs the user ( via the debug console ) if a lock is taken more than once . it will also warn if a lock is given by a different task than what originally took it . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> and # <number> , squash <allcaps> lgtm </allcaps> warnings <section> - turned all <allcaps> fixme </allcaps> comments into issues ( and removed <allcaps> fixme </allcaps> ) - fix # <number> : security / filename race issue resolved by opening file and acting on descriptor ( had to add fstat stub ) - fix # <number> : squashed the minor recommended bugs <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> , # <number> - new issues from <allcaps> fixme </allcaps> # <number> - uncovered missing functional test on os_chmod <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
os_chmod missing functional test <section> missing functional test ( coverage test exists ) . <section> add functional test <section> none <section> required for cert <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> <section> ubuntu ci <section> part of < <url> <section> none <section> <user>
"os_filerename_impl yields different results on different operating systems <section> an fm test is showing different behavior on linux and vxworks . the issue is in a test that does a file rename . there ' s a test that renames a file to the name of an existing file . on linux , this file is overwritten . on vxworks , the call to rename ( ) fails . it would be good to have consistent behavior for fm across both operating systems . <section> walt moleski can provide more information on reproducing . <section> it would be ok for the rename to fail or for the rename to succeed . the <allcaps> ccb </allcaps> should decide what the desired behavior should be . fm test except the rename to succeed . the expected result is consistency across both operating systems , so that fm can pass its tests on both . <section> linux ( pc ) and vxworks <number> ( mcp750 ? ) <section> steven seeger <allcaps> gsfc </allcaps> - <number> ( embedded flight systems , inc . )"
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - deprecate <code> and <code> to and replaced them with by <code> , which implements both functions via flags , and follows the correct <allcaps> osal api </allcaps> patterns . pr # <number> - change use of uint32 for id to the correct typedef . also use objectidfrominteger / objectidtointeger where it is intended to convert these values to integers e . g . for the "" name "" fields in <allcaps> rtems </allcaps> . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , use osal_id_t in <allcaps> rtems </allcaps> implementation <section> change use of uint32 for id to the correct typedef . also use objectidfrominteger / objectidtointeger where it is intended to convert these values to integers e . g . for the "" name "" fields in <allcaps> rtems </allcaps> . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> on <allcaps> rtems </allcaps> confirm all unit tests working <section> none <section> <allcaps> rtems </allcaps> <number> . <number> / pc686 ( <allcaps> qemu </allcaps> ) via ubuntu <number> build host <section> for consistency with all other modules <section> joseph hickey , vantage systems , inc ."
"fix # <number> , deprecate os_open and os_creat <section> these functions are replaced by os_opencreate , which implements both functions via flags , and follows the correct <allcaps> osal api </allcaps> patterns . fixes # <number> <section> build and run all tests , sanity check <allcaps> cfe </allcaps> check coverage of file - related apis ( still <percent> ) <section> <code> and <code> are deprecated . <section> ubuntu <number> <section> this initially puts the items inside an <code> block for review and testing , like has been done traditionally . should discuss at <allcaps> ccb </allcaps> whether this should become a hard - cut given that the next release will be a major one . although the previous discussions on the topic agreed to hard cut at major releases , these are such widely - used routines that this will cause grief to a lot of users . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> rtems </allcaps> build issues <section> correct issues involving recent os_milli2ticks change . note - for os_taskdelay it is important that this does not degrade into a no - op . so if os_milli2ticks fails here , this returns the error but still also does a non - zero delay . <section> build and sanity check <allcaps> cfe </allcaps> under <allcaps> rtems </allcaps> run all unit tests <section> builds and runs correctly <section> <allcaps> rtems </allcaps> <number> . <number> + pc686 <allcaps> bsp </allcaps> target ( <allcaps> qemu </allcaps> ) using ubuntu <number> build host <section> includes the typo fix in # <number> plus others . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci : <url> <section> pr # <number> - adds an event callback mechanism to certain state changes in <allcaps> osal </allcaps> . this allows the <allcaps> cfe psp </allcaps> to be notified at these points , and therefore it can add platform - specific functionality . this can , for instance , set the task name as requested in # <number> or set the processor affinity in a multi - core setup . pr # <number> - correct issues involving recent os_milli2ticks change . <section> ubuntu on travis ci <section> part of <url> <section> none <section> <user>"
"update <allcaps> osal </allcaps> configuration guide <section> the <allcaps> osal </allcaps> configuration guide <url> is out of date . more specifically , i found in section <number> . <number> , setup the <allcaps> osal </allcaps> source distribution , that the <allcaps> osal </allcaps> source distribution directories are not aligned with our current directories . for example , osal / src / make and osal / src / inc no longer exists . <section> a new revision should be published . last revision was on <date> . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes os_tick2micros and internalize os_milli2ticks . pr # <number> - adds ut_assert address equal macro . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
nasa
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - sets revision to <number> for development builds <section> ubuntu - ci <section> <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add vxworks7 support <section> this is a more joe - approved vxworks7 addition without the copy of the code . fix # <number> <section> none yet . i am going to bed . but i wanted to look at it with the <allcaps> ccb </allcaps> . i will try and do testing before the <allcaps> ccb </allcaps> . <section> steven seeger , embedded flight systems , inc ."
"new osal_id_t code and unit tests using osal stubs <section> the <allcaps> sbn </allcaps> application ' s coverage tests include tests of tasks , such as : <code> the issue is , now , the result of os_taskgetid ( ) is an osal_id_t value that i need to compute to put into the sendtaskid field above . there is a helper function <code> that could be used by unit tests but it is not currently exposed . for now , i have removed the <code> call and instead i hand - copied the id to write it <code> ( the value returned by <code> ) which is clearly not sustainable . <section> expose the objidcompose ( ) function from the <allcaps> osal </allcaps> stubs so that unit test code can generate matching id ' s . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - move this existing function into the public <allcaps> api </allcaps> , as it is performs more verification than the <code> function . pr # <number> - the c library type is signed , and this makes the result check work as intended . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , promote os_objectidtoarrayindex to public <allcaps> api </allcaps> <section> move this existing function into the public <allcaps> api </allcaps> , as it is performs more verification than the <code> function . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all tests <section> none . <section> ubuntu <number> <section> no change to function , just moved to public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , change ocs_off_t to a signed type <section> the c library type is signed , and this makes the result check work as intended . fixes # <number> <section> run all unit tests . note ocs_off_t is only used in coverage testing for <allcaps> osal </allcaps> . <section> fixes issue if caller uses correct type <code> to store result . <section> ubuntu <number> <section> issue was exposed by travis ci failure in change suggested in pr # <number> , but really a separate issue . <section> joseph hickey , vantage systems , inc ."
"vxworks7 <section> this is changes for vxworks7 , built on top of a standalone branch to solve several wconversion warnings when compiling for the platform . <section> i built it and ran my environment with cf <number> on a <allcaps> ppc </allcaps> <number> with vxworks <number> . <section> none , but this branch suggests some small <allcaps> api </allcaps> typing changes . <section> powerpc <number> ( dual - core <number> - bit powerpc ) vxworks <number> <section> there were some issues building base stuff with conversion and cast - align issues with the vxworks7 <number> - bit powerpc toolchain . <section> steven seeger , <allcaps> gsfc </allcaps> - <number> . embedded flight systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - introduces a new <code> , in <code> , which should be used to represent an <allcaps> osal id </allcaps> . all <allcaps> api </allcaps> structures / functions are updated to use this typedef in place of the uint32 type wherever it actually refers to an <allcaps> osal id </allcaps> . pr # <number> - fail tests on startup or tear down failures . these are failures , just a different severity ( likely mean the test did not work as expected and needs to be fixed ) . pr # <number> - max timer create test was using <code> ( the limit for adding timers to a time base ) , but creating timers is limited by <code> since the create adds a new time base . <allcaps> hotfix </allcaps> <number> - fix documentation warnings in <allcaps> osal </allcaps> . <allcaps> hotfix </allcaps> <number> - hide the call graph on utility functions . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"apply # <number> to bootes , set revision to <number> for development build <section> fix # <number> for bootes <section> built and ran locally based on bundle tag for bootes - rc1 built in ci , see <url> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> approved for main branch in < <url> also see nasa / cfe # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , set revision to <number> for development builds <section> fix # <number> <section> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> also see nasa / cfe # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use os_max_timebases for max timer create unit test <section> fix # <number> - max timer create test was using os_max_timers ( the limit for adding timers to a time base ) , but creating timers is limited by os_max_timebases since the create adds a new time base . <section> build and ran osal_timers_ut , passed without <allcaps> tsf </allcaps> <section> all unit tests now pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> <allcaps> tsf </allcaps> failures started getting reported as test failures as part of # <number> . this pr should be merged with ( or before ) # <number> or unit tests will fail . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - in the next major <allcaps> osal </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . this code was already conditional on the <code> flag and as such the <allcaps> ccb </allcaps> has already tested / verified running the code in this configuration as part of ci scripts . after this change , the build should be equivalent to the result of building with <code> . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"osal_timer_ut test setup failure <section> <code> <section> fix failure , related to # <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , fail tests on startup and tear down failures <section> fix # <number> - fail tests on startup or tear down failures . <repeated> these are failures , just a different severity ( likely mean the test did not work as expected and needs to be fixed ) <section> built tests with a known startup failure , test failed as expected <section> now will fail on startup / tear down failures <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes internal functions that are no longer used or defined but whose prototypes and stubs were still present in <code> pr # <number> - removes repetitive clearing of the global id and unlocking global table and replaces these with common implementation in the idmap source file . this moves deleting tables to be similar to creating tables and provides a common location for additional table - deletion - related logic . pr # <number> - propagates return code from <code> . if this routine fails then return the error to the caller , which also prevents the task from starting . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , provide typedef for <allcaps> osal id </allcaps> <section> introduces a new typedef , <code> , in <code> , which should be used to represent an <allcaps> osal id </allcaps> . all <allcaps> api </allcaps> structures / functions are updated to use this typedef in place of the <code> type wherever it actually refers to an <allcaps> osal id </allcaps> . adds inline functions for basic equality / validity check , and conversion back to bare integer for logging purposes . fixes # <number> <section> build and run all unit tests execute and sanity test <allcaps> cfe </allcaps> . <section> should be none . as the <code> typedef is a <code> , this is just an alias for the same thing . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , consolidate delete finalization code <section> remove repetitive clearing of the global id and unlocking global table and replace with common implementation in the idmap source file . in addition to removing repeated logic , this makes deletion more like an inverse of creation , and provides a common / single point where additional deletion - related logic can be added . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> confirm all unit tests <section> no impact to external <allcaps> api </allcaps> or behavior . internal code consolidation only . <section> ubuntu <number> <section> see also # <number> and # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , propagate return code from os_taskregister_impl ( ) <section> if this routine fails then return the error to the caller , which will also prevent the task from starting . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> build and run all unit tests incl . coverage . <section> no impact to behavior , as no known way to force this error , but will correctly propagate an error if one were to occur . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds <allcaps> osal </allcaps> network apis missing functional tests as well as tests for os_timedread and os_timedwrite pr # <number> - allows separate , dynamic registration of test setup and teardown routines which are executed before and after the normal test routine , which can create and delete any global / common test prerequisites . pr # <number> - adds filesysaddfixedmap missing functional <allcaps> api </allcaps> test <section> ubuntu - ci <section> part of nasa / cfs # <number> <section> none <section> yasir khan , emergent space technologies , inc joseph hickey , vantage systems , inc ."
"fix # <number> , remove all deprecated code <section> in the next major <allcaps> osal </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . fixes # <number> <section> build on native , <allcaps> rtems </allcaps> , and vxworks and confirm no issues / errors . run all unit tests . sanity check <allcaps> cfe </allcaps> core . <section> all old compatibility code is removed . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> this code was already conditional on the <code> flag and as such the <allcaps> ccb </allcaps> has already tested / verified running the code in this configuration as part of ci scripts . after this change , the build should be equivalent to the result of building with <code> . <section> joseph hickey , vantage systems , inc ."
"stub for cfe_sb_msg_t should not get return value from passed in message pointer <section> a stub should not have it ' s return value based upon a passed in value ; a stub ' s return value should be able to be set directly from the unit test . <section> steps to reproduce the behavior : write a unit test and attempt to set the return value of cfe_sb_getmsgid with a null ptr as the passed in value . <section> the value returned from cfe_sb_getmsgid should be the one that it is set to , not derived from a passed in message . <section> if applicable , add references to the software . <section> <allcaps> rhel </allcaps> <number> <section> the current design is more in lines with a "" mocked "" method , which can provide output based upon input ; a stub should not have this much deterministic behavior ( this is more in line with a ut hook ) . i do think it is a good thing to have a mocked version of this function , but it should not be the default stub . when unit testing it is doubtful there is an actual message available and a unit test will have to build a dummy with the message id installed within it . this adds many steps to what would be a much easier job with just being able to set the return value . <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , remove os_objectidmap / unmap prototype and stub <section> these internal functions were no longer used or defined but the prototype and stub were still present . this removes them . fixes # <number> <section> compile and run unit tests . <section> none - unused / stale code cleanup . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add function groups to ut assert <section> clean up and refactor the internal list storage structures to support having multiple list heads / groups . define a separate list / group for setup , normal test , and teardown . the existing uttest_add ( ) routine maps to the normal test group . added a uttest_addsetup ( ) and uttest_addteardown ( ) routine that maps to the setup and teardown group , respectively . the existing uttest_run ( ) routine then merges the groups and executes the full suite of tests . this allows separate , dynamic registration of test setup and teardown routines which are executed before and after the normal test routine , which can create and delete any global / common test prerequisites . fixes # <number> <section> build and run all unit tests update a unit test to additionally register separate setup and teardown functions and confirm that these are always run first and last , respectively . <section> test programs may now register global setup and teardown routines . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> osal </allcaps> network apis missing functional tests and fix # <number> os_timedread and os_timedwrite missing functional tests fix # <number> , add <allcaps> osal </allcaps> network apis missing functional tests fix # <number> , os_timedread and os_timedwrite missing functional tests <section> added <allcaps> osal </allcaps> network and os_timedread and os_timedwrite missing functional tests . <section> steps taken to test the contribution : standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
fix # <number> - ut_assert doc updates <section> fixes # <number> fixes a typo in ut_assert <allcaps> readme </allcaps> and clarifies stub documentation . <section> <email>
"would like a single function to reset all stubs in writing unit tests , i would find it useful to be able to reset the stub configurations per each test , and while there is a way to reset individual stubs , there is not a global reset capability in the ut_assert framework . the ut_resetstate ( ) resets one stub , and makes reference to ut_init ( ) , but the ut_init ( ) function is not exposed publicly . <url>"
"fix # <number> , add event callback framework <section> adds an event callback mechanism to certain state changes in <allcaps> osal </allcaps> . this allows the <allcaps> cfe psp </allcaps> to be notified at these points , and therefore it can add platform - specific functionality . this can , for instance , set the task name as requested in # <number> or set the processor affinity in a multi - core setup ( <allcaps> tbd </allcaps> ) . fixes # <number> <section> create an event handler in the pc - linux <allcaps> cfe psp </allcaps> and register it , and print out each event received . confirm events are generated as expected , and that it did not break the <allcaps> fsw </allcaps> in any way . note - not completely tested yet - - this is mainly a proof of concept and pushed for design review at this time . <section> adds ability to implement custom platform - specific functionality for defined events . <section> ubuntu <number> <section> previous discussion in # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct loop variable for coverage install <section> install use the loop variable ( <allcaps> tgt </allcaps> ) not <allcaps> tgtname </allcaps> for <allcaps> destination </allcaps> . fixes # <number> <section> build with enable_unit_tests = <allcaps> true </allcaps> and a configuration with multiple cpus sharing a single arch + platform config . <section> without this fix , the coverage binaries are installed twice to cpu2 but not at all for cpu1 . with this fix , they are correctly installed for cpu1 and cpu2 . <section> ubuntu <number> <section> no change to behavior at all - just an install path fix . <section> joseph hickey , vantage systems , inc ."
"resolve # <number> , add baseline and build number <section> resolve # <number> <section> bundle ci docker - based testing using gcc image <section> new macros defined . no changes on it ' s own . when combined with nasa / cfe # <number> and nasa / psp # <number> then startup reporting looks like < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> <section> ubuntu <section> left in a commented - out section for replacing the version string for official releases . <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , adjust ut assert buffer sizes <section> avoids a possible truncation in snprintf call . fixes # <number> <section> build and run unit tests . <section> no buffer size / truncation warning when building with optimization enabled . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set pthread names to match <allcaps> cfe </allcaps> tasks names <section> this change allows underlying os tools to view thread names for platforms that support the pthread_setname_np function . <section> steps taken to test the contribution : <number> . set <hashtag> define </hashtag> os_have_pthread_setname_np in osconfig for target <number> . run <allcaps> cfe </allcaps> environment <number> . run htop under linux and verify thread names appear <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : adds a task_name parameter to the os_posix_internaltaskcreate_impl function - behavior change : none <section> - hardware : pc - os : ubuntu <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> <section> none <section> none <section> daniel burns <allcaps> gsfc </allcaps> - code <number> <email>"
"set posix thread names using task name when creating <allcaps> cfe </allcaps> tasks <section> it would be helpful for the pthread name to match the <allcaps> cfe </allcaps> task name in the underlying os on <allcaps> posix </allcaps> platforms . this would allow for a better user experience when debugging <allcaps> cfe </allcaps> applications using linux based utilities i . e . strace , htop , etc . <section> this can be accomplished by using the _pthread_setname_np_ function in the _os_posix_internaltaskcreate_impl_ function . since this is a non - posix function , each <allcaps> bsp </allcaps> can specify the availability of this function through a <hashtag> define </hashtag> in osconfig . h <section> none <section> none <section> dan burns ( <allcaps> gsfc </allcaps> - <number> ) <email>"
"add build number and codename to version . h <section> need a better way to describe versions during development <section> as discussed , we will add a a build name string and a continuously incrementing build number to <code> <section> see notes from <allcaps> ccb </allcaps> : < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"os_fpuexcsetmask and os_fpuexcgetmask vxworks <allcaps> osal </allcaps> unit tests fail <section> the vxworks <allcaps> osal </allcaps> unit tests for os_fpuexcsetmask and os_fpuexcgetmask are <allcaps> cpu </allcaps> specific , not just os specific . these functions have conditionally compiled code that is conditional on whether or not the platform is the ppc440 , but the unit test code does not . <section> the unit test should pass , though i am unsure whether the break is in the <allcaps> osal </allcaps> or the unit test code . <section> - aitech sp0 - s - os : vxworks <number> - <allcaps> osal </allcaps> <number> . <number> - bv <section> mathew benson windhover labs"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - changed timer - test to be able to use os_max_timers value on top of the hard - coded number_of_timers value . this will allow the test to be functional even if the os_max_timers value is reconfigured . pr # <number> - <code> sets <code> and returns a status when successful . pr # <number> - ensures that - all stub routines register their arguments in the context , so that the values will be available to hook functions . - the argument names used in stubs match the name in the prototype / documentation so the value can be retrieved by name . pr # <number> - adds back rounding up to pthread_stack_min and also adds rounding up to a system page size . keeps check for zero stack at the shared level ; attempts to create a task with zero stack will fail . allows internal helper threads to be created with a default minimum stack size . pr # <number> - avoids a possible truncation in snprintf call . no buffer size / truncation warning when building with optimization enabled . pr # <number> - added new macros to <code> to report baseline and build number pr # <number> - the coverage binaries are now correctly installed for cpu1 and cpu2 as opposed to installed twice to cpu2 but not at all for cpu1 . pr # <number> - fixes a typo in ut_assert <allcaps> readme </allcaps> and clarifies stub documentation . <section> ubuntu - ci <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> yasir khan , emergent space technologies , inc joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , ensure <allcaps> posix </allcaps> stack size meets requirements <section> the <code> function stipulates that it may fail if the user - supplied stack size is not at least <code> and also possibly a multiple of page size . this partially reverts previous pr # <number> and adds back rounding up to <code> and also adds rounding up to a system page size . however the check for zero stack still remains at the shared level so attempts to create a task with zero stack will still fail . this allows internal helper threads to be created with a default minimum stack size , however . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> executing as both normal user and root user . execute all unit tests as both normal user and root user . <section> no failure due to stack size not meeting system requirements . <section> ubuntu <number> , running as normal user . centos <number> in vm running as root user . <section> this also moves the <code> call such that it is configured regardless of whether task priorities are enabled nor not ( i . e . non root user ) . the normal user should still be able to configure the stack size even if they lack permission to set scheduling priority . also confirmed that by moving the call to <code> that the original bug report is reproducible in a non - root environment - which is also fixed by this change . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub <allcaps> osal </allcaps> stubs <section> ensure that : <number> . all stub routines register their arguments in the context , so that the values will be available to hook functions . <number> . the argument names used in stubs match the name in the prototype / documentation so the value can be retrieved by name . fixes # <number> <section> build and execute all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior . this just makes it so hook functions can access the full set of parameters for all stub apis . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update license and <allcaps> readme </allcaps> for apache <number> , also updated quickstart <section> update license and <allcaps> readme </allcaps> for apache <number> approval fix # <number> fix # <number> <section> ci ( comment / document changes only ) <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> - socketopen stub should set sock_id <section> fix # <number> - os_socketopen ( ) should , on "" success "" , set sock_id and return a status . <section> see os_socketopen ( ) definition in <url> <section> <email>"
"os_socketopen ut stub returns "" socket id "" not status per the os_socketopen ( ) definition , on successful socket creation , it should set the sock_id out parameter and return status . instead the stub does not set the sock_id but returns the id . <url>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - command line options in linux are recognized , no longer ignored / dropped . pr # <number> - no impact to current unit testing which runs ut assert as a standalone app . add a position independent code ( <allcaps> pic </allcaps> ) variant of the ut_assert library , which can be dynamically loaded into other applications rather than running as a standalone <allcaps> osal </allcaps> application . this enables loading ut assert as a <allcaps> cfe </allcaps> library . pr # <number> - unit tests pass on <allcaps> rtems </allcaps> . pr # <number> - resolve inconsistency in how the stack size is treated across different os implemntations . with this change the user - requested size is passed through to the underlying os without an enforced minimum . an additional sanity check is added at the shared layer to ensure that the stack size is never passed as <number> . pr # <number> - update licenses for apache <number> <section> ubuntu : bionic <section> part of <url> <section> none <section> joseph hickey , vantage systems , inc . jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use absolute timeout for timedlock calls <section> the pthread <allcaps> api </allcaps> defines the timeout parameter for the pthread_mutex_timedlock call as an absolute value based on clock_realtime . this introduces a wrapper function to calculate the absolute timeout for this . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> , sanity check <allcaps> cfe </allcaps> operation , and run all unit tests . coverage is not affected because there is no coverage test for <allcaps> posix </allcaps> . <section> the timed lock in binary semaphores should now correctly wait for up to <number> seconds for the lock to become available before failing . the net effect of passing a relative timeout in place of an absolute one meant that the code would not wait , basically turning into a "" trylock "" instead . <section> ubuntu <number> <section> unfortunately this wasn ' t previously noticed during testing because it requires getting two tasks to operate on the same binary sem at exactly the same time , which is difficult to replicate . <section> joseph hickey , vantage systems , inc ."
"osal_timer_ut has an incorrect failure <section> the ut_os_timerset_test ( ) in the osal_timer_ut calls "" os_timerset ( <number> , starttime , intervaltime ) "" , with both starttime and intervaltime set to <number> , expecting that it will fail the id check before it will fail the start and interval time checks . <section> steps to reproduce the behavior : <number> . build and run osal_timer_ut on the sample build from the getting started instructions in the cfs repository . <section> the unit test is written expecting that the id validity check will fail before the start and interval time check fails . its expecting it will return os_err_invalid_id , but when when you run this on using the <allcaps> posix osal </allcaps> from <number> . <number> - bv version , it will actually return os_error because the start and interval times are invalid . <section> a quick fix is to initialize starttime and intervaltime to <number> , which will cause the os_timerset ( ) function to pass the start and interval time checks , and fail on the id check as expected . <section> - virtualbox - ubuntu <number> - <allcaps> osal </allcaps> <number> . <number> - bv <section> while changing the start and interval times to <number> will fix this problem in this specific case , the test is actually specific to the <allcaps> osal </allcaps> ( posix , vxworks , rtems , etc . <repeated> ) under test . i would argue that a better design would be to have <number> common <allcaps> osal </allcaps> unit test to verify functionality , i . e . that tasks function as tasks , and mutexes function as mutexes , but that each <allcaps> osal </allcaps> might have their own individual set of unit tests that are specific to that <allcaps> osal </allcaps> . you can think of the common set as black box tests , that are verifying the <allcaps> osal </allcaps> meets functional requirements , and white box tests for coverage . white box testing , by their nature , are specific to the source code under test . therefore , each <allcaps> osal </allcaps> might have its own set of white box testing to ensure coverage for that particular <allcaps> osal </allcaps> . those unit tests normally exercise all the function parameters , to get coverage . that particular unit test does not exercise the start or interval time arguments , because the original <allcaps> osal </allcaps> they were written to does not have a validity check for the start or interval time arguments . this is an example of a unit test suite that was written for a specific <allcaps> osal </allcaps> . we follow this concept in our <allcaps> cfs </allcaps> fork . the unit tests originally created by <allcaps> gsfc </allcaps> work well as black box tests . they have little to know platform or configuration dependency . we run the same unit tests on all the <allcaps> nasa </allcaps> provided osals , as well as all the osals we have written . the unit tests originally created by <allcaps> jsc </allcaps> work well as white box tests , as this bug report indicates . those unit tests usually fail when we try running them on other osals , because of issues similar to what this issue is referring to . <section> mathew benson owner windhover labs , <allcaps> llc </allcaps>"
"fast track for integration candidate <number> - <number> - <number> <section> fast tracked changes to integration candidate <number> - <number> - <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - added the following wrappers macros around <code> for commonly - used asserts : - <code> - check equality as <number> bit signed int - <code> - check equality as <number> bit unsigned int - <code> - check pointer not null - <code> - check pointer is null - <code> - check integer is nonzero - <code> - check integer is zero - <code> - check stub count pr # <number> - using <code> instead of <code> to fix support for vxworks <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> - add text to make clear that ids are non - zero fix # <number> , add missing stub functions for <allcaps> osal api </allcaps> fix # <number> , increase ut assert buffer sizes <section> bundle ci : <url> <section> pr # <number> - adds "" non - zero "" to the out variable description for os_create ( and related ) <allcaps> api </allcaps> ' s . pr # <number> - the buffer for context info increases from <number> to <number> bytes and the total report buffer to <number> bytes . pr # <number> - added stub functions for <code> , <code> , <code> , <code> , and <code> <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc . christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , remove uintmax_t usage <section> some systems may not provide this type . using <code> instead should be sufficient . fixes # <number> <section> build on vxworks run all unit tests on native system and on <allcaps> rtems </allcaps> . <section> no impact to behavior <section> ubuntu <number> <allcaps> gsfc </allcaps> vxworks lab build machine ( gs582w - cfelnx ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , enforce nonzero stack size <section> resolve inconsistency in how the stack size is treated across different os implemntations . <allcaps> posix </allcaps> would enforce a minimum , where <allcaps> rtems </allcaps> would not . with this change the user requested size is passed through to the underlying os exactly as is , no enforced minimum . an additional sanity check is added at the shared layer to ensure that the stack size is never passed as <number> . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> and sanity test build and execute all unit tests . also tested creating a task with zero stack size and confirm error is generated on linux . <section> the <code> passes on <allcaps> rtems </allcaps> . attempting to create a task with zero stack now will result in error . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> / pc686 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , warnings in time base <allcaps> api </allcaps> test <section> add requisite cast to printf . also use <code> rather than hardcoded size of <number> . fix # <number> <section> build and execute all unit tests <section> unit tests pass on <allcaps> rtems </allcaps> . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> / pc686 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> pic </allcaps> library for ut assert <section> add a position independent code ( <allcaps> pic </allcaps> ) variant of the ut_assert library , which can be dynamically loaded into other applications rather than running as a standalone <allcaps> osal </allcaps> application . this enables loading ut assert as a <allcaps> cfe </allcaps> library . this required moving some symbols / functions around . mainly , the <allcaps> pic </allcaps> library does _not_ contain the <code> file which has the bindings to the <allcaps> osal bsp </allcaps> when running as a standalone app , but everything else should be the same . fixes # <number> <section> build and execute all unit tests . also test linking new <allcaps> pic </allcaps> library into a <allcaps> cfe </allcaps> loadable app and running tests . <section> no impact to current unit testing which runs ut assert as a standalone app . <section> ubuntu <number> <section> some functions were moved to support the alternative linking structure but no <allcaps> api </allcaps> / functionality changes . the moved functions include the buffer length extension that were originally part of pr # <number> . <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add extra assert macros <section> add the following macros for ut assert : <code> - check equality as <number> bit signed int <code> - check equality as <number> bit unsigned int <code> - check pointer not null <code> - check pointer is null <code> - check integer is nonzero <code> - check integer is zero <code> - check stub count these are all just wrappers around <code> for commonly - used asserts . the description message is auto generated so it is consistent . fixes # <number> <section> build and run all existing unit tests . also test with new <allcaps> psp </allcaps> coverage tests that use the new macros and confirm they work as described . <section> no impact to current behavior . these are just new macros for new test case , to improve ease of use and consistency for future testing . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , store all arguments in generic - linux <allcaps> bsp </allcaps> <section> keep the entire argc / argv from the shell . do not prune the command name as getopt expects this to be there . fixes # <number> <section> execute unit tests , confirm all passing . execute new <allcaps> psp </allcaps> tests , confirm command line options are being recognized . <section> command line options in linux are recognized , no longer ignored / dropped . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing stub functions for <allcaps> osal api </allcaps> <section> did a quick scrub for public <allcaps> osal </allcaps> apis defined in <code> but not defined in stub library . added stub functions for : <code> required for testing other modules that use these functions . also correct a name mismatch issue in <code> . fixes # <number> <section> build and run all unit tests . <section> no change to behavior or <allcaps> fsw </allcaps> . just adds stubs for future use . <section> ubuntu <number> <section> these were not actively used anywhere yet ( otherwise would be a link failure ) but likely to become an issue as <allcaps> psp </allcaps> coverage tests are implemented . <section> joseph hickey , vantage systems , inc ."
"add testexit function to ut assert <section> it would often be useful to exit a test function and resume at the next test function in a group of tests . this is useful in two cases : - when something goes wrong or it is determined that the test block is unnecessary , so it is pointless to continue running tests in the same block , but the next test case still should run ( i . e . do not abort ) . in some existing cases ( e . g . <allcaps> osal </allcaps> unit - test ) this type of situation was implemented using a <code> statement to skip the rest of the test . - functions which contain infinite loops are not testable right now , because the test case will never exit . this is often the case for "" run loops "" within tasks that do not have any exit condition . this can be used from a hook function to exit the test . <section> add a <code> <allcaps> api </allcaps> call that would return control back to ut assert to resume with the next test case . <section> leave as - is . any infinite loops would have to be rewritten with an exit condition in order to be tested . test writers continue to use <code> to skip remainder of test , when desired . <section> this would be useful but to actually implement it would require setjmp / longjmp to return back to ut assert control logic rather than the immediate caller . flight software is not supposed to call this , as this is unit test framework , maybe its ok ? without it , we may have to modify some <allcaps> psp </allcaps> functions in order to do coverage test , which would violate another objective in that we should be able to test code without changing the code . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , race condition in idmap api test <section> add a delay loop to ensure that the child task has executed before continuing with the rest of the test . this also uses a separate "" setup "" function to create the resources for the test and adds asserts that the setup worked . fixes # <number> <section> execute unit tests and confirm passing . <section> no more race condition in idmap - api - test . <section> ubuntu <number> ( native ) centos <number> vm ( single core ) <section> may want to fast track as this causes occasional ci failures in current master branch . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase ut assert buffer sizes <section> the buffer for context info increases from <number> to <number> bytes and the total report buffer to <number> bytes . fixes # <number> <section> build and execute all unit tests . <section> confirmed that long report lines that had been truncated are no longer truncated . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"allow longer messages in ut assert <section> currently the ut assert library truncates messages at <number> characters due to the buffer sizes used internally . with macros using function names as well as more complete context info in tests , this is easy to hit . <section> increase message buffer size and maximum report line length . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix timer - test to be able to use os_max_timers value fix # <number> , fix timer - test to be able to use os_max_timers value <section> changed timer - test to be able to use os_max_timers value on top of the hard - coded number_of_timers value . this will allow the test to be functional even if the os_max_timers value is reconfigured . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
"fix # <number> , add filesysaddfixedmap functional <allcaps> api </allcaps> test fix # <number> , add filesysaddfixedmap functional <allcaps> api </allcaps> test . <section> added filesysaddfixedmap functional <allcaps> api </allcaps> test <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> <url> <section> pr # <number> - rename bsps that can be used on multiple platforms . <code> becomes <code> <code> becomes <code> pr # <number> - new features only , does not change existing behavior . ut hook functions now have the capability to get argument values by name , which is more future proof than assuming a numeric index . pr # <number> - add functional test for <code> pr # <number> - added functional tests for <code> on <code> , <code> , <code> , <code> , <code> , <code> <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> - add text to make clear that ids are non - zero <section> fix # <number> - adds "" non - zero "" to the out variable description for os_ <obj> create ( and related ) <allcaps> api </allcaps> ' s . <section> <email>"
"use ut_assert macros in tests / unit - test - coverage / unit - tests <section> upgrade tests in time - base - api - test . c to use new macros in <url> really in general could be used all over for consistency . note there ' s typos in the use of utassert_true , example : <url> <section> see # <number> <section> gerardo cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
hotfix for # <number> object utilitys missing functional api tests hotfix # <number> object utilitys missing functional api tests <section> fixed os_converttoarrayindex failing test . added copyright . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add functional tests for <code> , <code> and <code> functions . pr # <number> - fix doxygen warnings pr # <number> - unit test cases which use <code> and run on an <code> volume will be skipped and categorized as "" na "" due to <code> response , rather than a failure . pr # <number> - the device_name field was using the wrong length , it should be of <code> also correct another length check on the local path name . pr # <number> - for <allcaps> rtems </allcaps> , will not shutdown the kernel if test abort occurs . pr # <number> - unit tests work on <allcaps> rtems </allcaps> without <allcaps> bsp </allcaps> preallocating ramdisks pr # <number> - if <code> cache variable is set , this location will be checked first for a <allcaps> bsp </allcaps> / os implementation layer . pr # <number> - implement <code> and <code> , which are new functions that allow for additional query capabilities . no impact to current behavior as the <allcaps> fsw </allcaps> does not currently use any of these new apis . pr # <number> - - a functional test enhancement to <code> which replicates the specific conditions for the observed bug to occur . deletes the task calling <code> and then attempts to use the semaphore after this . - employ a <code> "" cleanup handler "" to handle the situation where a task is canceled during the <code> call . this ensures that the <code> is unlocked as part of the cleanup , so other tasks may continue using the semaphore . - change all initial <code> locking to be a finite "" timed "" wait rather than an infinite wait . in all cases , the condition variable is only held for brief periods of time and should be readily available . if a task blocks for a long time , this considers the mutex "" broken "" and aborts , thereby avoiding deadlock . this is a "" contingency "" fix in that if an exception or signal or other unknown / unhandled async event occurs that leaves the mutex permanently locked . pr # <number> - adds the mutex to protect the timer callback <code> resource table . <section> see prs <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc . leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add os_timebase api functional tests fix # <number> , add os_timebase api functional tests <section> added os_timebase api functional tests for os_timebasecreate , os_timebaseset , os_timebasedelete , os_timebasegetidbyname , os_timebasegetinfo , os_timebasegetfreerun <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add name association to stub arguments <section> add the capability to store parameter names in addition to pointers as part of the stub argument context data . macroize the ut_stub_registercontext function utstubs . h to also pass the parameter name in addition to the pointer . add hook - side accessor functions / macros to make it easier and more reliable to get this information from the context data . also other minor items : - increase max "" fixed "" args from <number> to <number> - add convenience macros for variable argument stubs fixes # <number> <section> build and execute unit tests , confirm all passing ( baseline ) . update <allcaps> evs </allcaps> stub and sample_app test cases to use new functions and confirm operation . <section> new features only , does not change existing behavior . ut hook functions now have the capability to get argument values by name , which is more future proof than assuming a numeric index . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add global lock / unlock wrapper <section> add a wrapper at the shared layer to provide a common location to check the status of global lock / unlock ops . all calls to os_lock_global_impl and os_unlock_global_impl from the shared modules are replaced with calls to this wrapper . notably - this detects and reports the problem described in # <number> , in case something similar happens in the future . fixes # <number> <section> build and execute all unit tests , and sanity check <allcaps> cfe </allcaps> operations . <section> now detects and reports errors in global mutex lock / unlock ops . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> if this patch is applied in isolation without any other changes , one will see debug trace generated as it is detecting the problem previously reported in # <number> : <code> these errors go away as soon as the pr # <number> is also applied <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - <code> will return an error code if the depth parameter is larger than the configured <code> . <section> ubuntu : bionic <section> see prs for detailed test and change information part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add timecb global mutex <section> adds the mutex to protect the timer callback ( timecb ) resource table . fixes # <number> <section> build and confirm all unit tests pass , <allcaps> cfe </allcaps> runs normally . <section> timer callback ( timcb ) resource types are mutex protected . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , binary sem task delete issues <section> corrects issue when a task waiting on a binary semaphore is deleted , it left the mutex in a locked state preventing other tasks from using the mutex . this has <number> parts : <number> . a functional test enhancement to bin - sem - test which replicates the specific conditions for the observed bug to occur . it deletes the task calling <code> and then attempts to use the semaphore after this . ( without the rest of this change , it fails ) . <number> . employ a pthread "" cleanup handler "" to handle the situation where a task is canceled during the <code> call . this ensures that the mutex is unlocked as part of the cleanup , so other tasks may continue using the semaphore . this is the main fix as it directly addresses the root cause of the issue , which is that the mutex was left in a locked state . <number> . change all initial mutex locking to be a finite "" timed "" wait rather than an infinite wait . in all cases , the condition variable is only held for brief periods of time and should be readily available ; tasks should almost never block on this initial lock . if a task blocks for a long time , this considers the mutex "" broken "" and aborts , thereby avoiding deadlock . this is a "" contingency "" fix in that if an exception or signal or other unknown / unhandled async event occurs that leaves the mutex permanently locked , it at least does not deadlock the system and allows it to be restarted . fixes # <number> fixes nasa / cfe # <number> <section> build and run all unit tests . confirm that including only the unit test change ( item <number> above ) reliably reproduces the failure . in this mode , bin - sem - test will get stuck when attempting to give the semaphore after task deletion . confirm that the bin sem changes ( items <number> and <number> above ) correct the issue . note each one taken individually will avoid deadlock in a different way . item <number> ( timed mutex ) alone will cause the subsequent calls to return <code> rather than deadlock , so shutdown will continue and the test exits with a failed status rather than pending forever . sanity check <allcaps> cfe </allcaps> operation and <allcaps> ctrl </allcaps> + c handling - all works ok . <section> binary semaphores after task deletion continue to work as expected and are usable by other tasks . <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc ."
"fix # <number> , expand <allcaps> api </allcaps> for object queries <section> implement <code> and <code> , which are new functions that allow for additional query capabilities . <code> modified to accept <code> as the first parameter , to allow it to work with any object type , not just objects for which a specific type is expected / known . also adds unit test ( functional + coverage ) for <code> and <code> fixes # <number> <section> run all unit tests , sanity check <allcaps> cfe </allcaps> and confirm normal operation <section> no impact to _current_ behavior as the <allcaps> fsw </allcaps> does not currently use any of these new apis . existing apis are unchanged . <section> ubuntu <number> <section> querying objects by type is potentially needed for nasa / cfe # <number> and nasa / fm # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add external source directory for os / <allcaps> bsp </allcaps> <section> if the "" osal_ext_source_dir "" cache variable is set , this location will be checked first for a <allcaps> bsp </allcaps> / os implementation layer . this can point to an out - of - tree implementation layer if necessary . fixes # <number> <section> configure a test project to use a <allcaps> bsp </allcaps> provided in the external source dir , and confirm that it builds correctly and sanity check result ( unit tests , <allcaps> cfe </allcaps> runs normally ) . <section> no impact to behavior unless user requires a <allcaps> bsp </allcaps> / os implementation which is not part of the included set . <section> ubuntu <number> <section> it is discouraged from actually doing this as there is no attempt at <allcaps> api </allcaps> stability at the low level implementation layer . the actual location of the implementation layer being used is now also displayed during "" prep "" so that one can confirm its the correct / expected one . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename bsps to be generic <section> rename bsps that can be used on multiple platforms . mcp750 - vxworks becomes generic - vxworks pc - linux becomes generic - linux ( pc - rtems stays the same for now ) <section> build for all supported operating systems ( linux , vxworks , rtems ) and confirm all unit tests pass and <allcaps> cfe </allcaps> runs normally . <section> no impact to behavior , but build scripts in external entities need to change the name . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 / <allcaps> qemu </allcaps> vxworks <number> on mcp750 <section> see related issue nasa / psp # <number> and pr nasa / psp # <number> which changes the refs to these . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , dynamically create <allcaps> ram </allcaps> disk devices on <allcaps> rtems </allcaps> <section> rather than relying on the <allcaps> bsp </allcaps> to preallocate , the ram disk block devices can be created based on request . this correlates with the way <allcaps> ram </allcaps> disks are implemented on vxworks and is cleaner and more flexible by making it more independent of the <allcaps> bsp </allcaps> . this allows all the unit tests to work on <allcaps> rtems </allcaps> without the needing the <allcaps> bsp </allcaps> to preallocate a ramdisk . fixes # <number> <section> build and run all unit tests , and sanity check <allcaps> cfe </allcaps> operation <section> unit tests work on <allcaps> rtems </allcaps> without <allcaps> bsp </allcaps> preallocating ramdisks <section> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , provide <allcaps> bsp </allcaps> shutdown handler <section> this provides a better method of handling test abort , in a <allcaps> bsp </allcaps> - specific manner . fixes # <number> <section> build and execute unit tests on <allcaps> rtems </allcaps> platform , and run a test that has a problem causing an abort . ( e . g . <code> ) . confirm that in normal ( non - batch ) mode the system stays alive and allows use of the shell to check the system state . when using batch mode the system still shuts down ( as expected ) . <section> no impact to behavior on linux / vxworks . for <allcaps> rtems </allcaps> , will not shutdown the kernel if test abort occurs . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct length of device_name in filesys <section> the <code> field was using the wrong length , it should be of <code> also correct another length check on the local path name . fix # <number> <section> build and execute unit tests , and sanity check <allcaps> cfe </allcaps> operation . <section> no impact to behavior <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , better error translation on statvfs ( ) <section> map the <allcaps> enosys </allcaps> errno to os_err_not_implemented , which is more appropriate than os_error . fixes # <number> <section> build and execute unit tests on <allcaps> rtems </allcaps> <number> . <number> <section> unit test cases which use os_statfs and run on an <allcaps> rtems imfs </allcaps> volume ( default for the root file system ) will be skipped and categorized as "" na "" due to os_err_not_implemented response , rather than a failure . <section> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , select <allcaps> api </allcaps> and unit test updates <section> on some os ' s ( notably <allcaps> rtems </allcaps> ) one must only call select ( ) socket file handles . this is indicated in <allcaps> osal </allcaps> via the "" selectable "" flag on each file handle . the select implementation needs to check this before invoking select ( ) . also update unit tests to match . fix # <number> <section> confirm unit tests passing on relevant platforms <section> calls to select apis on <allcaps> rtems </allcaps> where unsupported will return os_err_operation_not_supported , rather than crashing . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on i686 via <allcaps> qemu </allcaps> <section> this also affects # <number> in that it improves the test , but the functional test still could be better in that it currently only checks for file handles being set , not file handles being unset , after select . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , <number> , <number> , deprecate os_volumetable and other fixes <section> deprecate the os_volumetable structure , which is no longer necessary with the current <allcaps> osal </allcaps> . remove the os_volumetable definition from all bsps , and provide a default ( empty ) one to support linking when omit_deprecated is not set . note due to unit test dependencies this pr also has to include fixes for other related issues . fix # <number> fix # <number> fix # <number> fix # <number> these are all in separate commits and they each build individually but there are some dependencies in making the unit tests work , so they were added to this pr . <section> build with unit tests , confirm unit test execution and sanity check <allcaps> cfe </allcaps> on supported platforms <section> <allcaps> osal </allcaps> no longer defines the types or symbols associated with os_volumetable when omit_deprecated is set . any external psps should replace their respective os_volumetable with calls to the runtime registration <allcaps> api </allcaps> . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on i686 via <allcaps> qemu </allcaps> vxworks <number> on mcp750 <section> nasa / psp # <number> exists to remove these references from the <allcaps> cfe psp </allcaps> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fix # <number> , add new <allcaps> api </allcaps> for obtaining exception task id fix # <number> , changes for string ops warnings <section> see prs bundle ci - <url> <section> pr # <number> - resized buffers and added explicit termination to string copies . no warnings on gcc9 with strict settings and optimization enabled . pr # <number> - new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add os_timeradd functional test fix # <number> , add os_timeradd functional test <section> added os_timeradd functional test <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , resolve doxygen warnings <section> fixes # <number> , additional doxygen warnings <section> steps taken to test the contribution : <number> . corrected the issues referenced in the <code> file <number> . rebuilt the docs with <code> <number> . observed no recurrence of same warnings in <code> <section> no doxygen warnings for the affected files <section> leor bleier , <allcaps> nasa gsfc </allcaps> \ code <number>"
"fix # <number> , add new <allcaps> api </allcaps> for obtaining exception task id <section> the os_task_prop_t had contained an <code> field which was used for reverse - mapping the <allcaps> osal </allcaps> task id during exception processing by <allcaps> cfe </allcaps> . unfortunately this was a uint32 and not compatible with any os which used task identifiers that were not convertible to such a value ( e . g . <code> , or <number> - bit pointers , etc ) . deprecate the old field and replace with a new <allcaps> api </allcaps> that performs reverse lookup within <allcaps> osal </allcaps> using an abstract pointer and size , so its compatible with any os task representation object . fix # <number> <section> tested as part of testing exceptions within the scope of pr ' s nasa / psp # <number> and nasa / cfe # <number> . confirm that the newly - added apis are performing as expected . <section> new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> ubuntu <number> <allcaps> lts </allcaps> vxworks <number> on mcp750 <section> prerequisite to the <allcaps> psp </allcaps> / <allcaps> cfe </allcaps> prs listed above . <section> joseph hickey , vantage systems , inc ."
"integration candidate : fast track <section> fixes # <number> <section> see <url> bundle ci - <url> <section> changes build system considerably : - no more user - maintained osconfig . h file , this is now replaced by a cmake configuration file - breaks up low - level implementation into small , separate subsystem units , with a separate header file for each one . <section> see pr bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor <allcaps> osal </allcaps> to avoid inclusion of c files <section> use separate source files and cmake - based source selection based on feature configuration , rather than using the c preprocessor for including / excluding different <allcaps> osal </allcaps> function groups . refactor all implementation units to provide a separate header file for each functional group / subsystem . remove "" static "" declaration on internal helper functions so they can be invoked from unit test . fixes # <number> also fix # <number> and fix # <number> ( trivial fixes rolled in as part of refactoring ) <section> build and execute <allcaps> cfe </allcaps> for vxworks , <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> . sanity check of <allcaps> cfe </allcaps> functions . confirm all unit tests passing and coverage test of vxworks is working . also confirm build with each inclusion / exclusion of each option ( loader , network , shell ) and with / without omit_deprecated . <section> no impact to runtime code . changes build system considerably , however . - no more user - maintained <code> file - now replaced by a cmake configuration file - break up low level implementation into small , separate subsystem units , with a separate header file for each one . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit ( build host , native test ) i686 - rtems4 . <number> cross build using <allcaps> qemu </allcaps> ppc - vxworks6 . <number> cross build using mcp750 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , deprecate os task id and add replacement <allcaps> api </allcaps> for <allcaps> psp </allcaps> exceptions <section> the os_task_prop_t had contained an <code> field which was used for reverse - mapping the <allcaps> osal </allcaps> task id during exception processing by <allcaps> cfe </allcaps> . unfortunately this was a uint32 and not compatible with any os which used task identifiers that were not convertible to such a value ( e . g . <code> , or <number> - bit pointers , etc ) . deprecate the old field and replace with a new <allcaps> api </allcaps> that performs reverse lookup within <allcaps> osal </allcaps> using an abstract pointer and size , so its compatible with any os task representation object . <section> tested as part of testing exceptions within the scope of pr ' s nasa / psp # <number> and nasa / cfe # <number> . confirm that the newly - added apis are performing as expected . <section> new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> ubuntu <number> <allcaps> lts </allcaps> vxworks <number> on mcp750 <section> prerequisite to the <allcaps> psp </allcaps> / <allcaps> cfe </allcaps> prs listed above . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix string manipulations to avoid warnings <section> resize buffers and add explicit termination to string copies . avoids warnings on gcc9 with strict settings and optimization enabled . fixes # <number> <section> build with default config and gcc <number> . <number> and confirm warnings are gone <section> warnings fixed . <section> ubuntu <number> <allcaps> lts </allcaps> <section> currently a draft because it uses pr # <number> as a baseline . will mark as non - draft once prerequisite is merged . <section> joseph hickey vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate <number> - <number> - <number> fixes : # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> ci - <url> bundle ci - <url> see prs for other tests <section> <number> . pr # <number> - adds library build , functional , and coverage test to ci <number> . pr # <number> - deprecates <code> from from osapi - os - filesys . h <number> . pr # <number> - individual directory names now limited to <code> <number> . pr # <number> - fix tautology , <code> is now compared with <code> <number> . pr # <number> - module files are generated when the <code> test is built and run <number> . pr # <number> - consistent osal - core - test execution status <section> ci - ubuntu : bionic <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> dan knutsen , <allcaps> nasa </allcaps> / goddard yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , add object utility <allcaps> api </allcaps> functional tests fix # <number> , object utility <allcaps> api </allcaps> ' s missing functional test <section> created missing functional tests for the os_identifyobject , os_converttoarrayindex and os_foreachobject functions . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , infer osal_system_ostype from osal_system_bsptype <section> simplify user configuration by inferring the <code> from the <code> if the former is not set . this means the user does not have to explicitly set both of these configuration options . in the event they are _both_ explicitly set ( as is done in the current configurations ) but refer to an invalid / unexpected combination of os + <allcaps> bsp </allcaps> , this adds a warning message to the cmake setup ( make prep ) stage , as this is likely a mis - configuration that deserves attention , but there could be valid reasons for doing this during development . fixes # <number> <section> build <allcaps> osal </allcaps> for various platform combos ( native , x86 - linux cross , i686 - rtems4 . <number> cross ) . confirm successful build . <section> no <allcaps> fsw </allcaps> affected , only build script . also fully backward compatible with old configs . - builds successfully using the inferred os when only osal_system_bsptype is set ( not osal_system_ostype ) . - generates a warning when osal_system_bsptype and osal_system_ostype are both set but are mismatched . confirmed this works by intentionally mismatching in a config . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> prerequisite to pr nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
"unhandled output truncation errors when building on centos <number> <section> on centos <number> , when cfs is being built with enabled unit tests , <code> returns the following unhandled output truncation errors ( <code> ) related to osal unit tests : <code> <section> steps to reproduce the behavior : on an up - to - date centos <number> , follow the current cfs <code> while enabling unit tests ( step <number> <sad> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> <code> should not return any error . <section> n / a <section> - imac ( retina 4 k , <number> ) - os : centos <number> ( <code> ) ( via vmware fusion <number> . <number> ) / minimal installation / packages installed : git , make , cmake , gcc . - <allcaps> gcc </allcaps> : <code> - versions : master bundle <section> for convenience and mainly to investigate the possibility of performing automated end - to - end testing ( for instance , to make a pseudo - <allcaps> gsw </allcaps> deterministically interact with the <allcaps> fsw </allcaps> and check the telemetry ) , i have taken the initiative to dockerize cfs . in this context , these errors occurred when creating a centos - based docker image . their occurrence was then confirmed using a centos virtual machine ( the logs provided above come from the unit tests performed on the virtual machine ) . no such errors occur on ( a virtualized ) ubuntu <number> . this behavior seems then specific to centos , or perhaps to a certain version of <allcaps> gcc </allcaps> . ( because these errors are directly related to osal , i have decided to open this issue here instead of the cfs repository ) . <section> guillaume lethuillier personal"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci - <url> <section> <number> . pr # <number> - coverage test added to os_timercreate for os_err_name_too_long . updated comments related to sizing includes null terminator for : os_max_api_name , os_max_path_len , os_buffer_size <number> . pr # <number> - updated comments in ostimer . c to reflect what the code is actually doing . added debug message if microsecs per sec value does not equal <number> . <number> . pr # <number> - externalizes enum for selectsingle , ensures that pointers passed to selectfd . <repeated> ( ) apis are not null , ensures that pointer to selectsingle is not null . <number> . pr # <number> - removes a duplicate reference doxygen warned about <number> . pr # <number> - none <number> . pr # <number> - none <number> . pr # <number> - command to run in shell and output to fill will fail with default ( not implemented ) setting . open issue to resolve is nasa / cfe # <number> <number> . pr # <number> - no <allcaps> fsw </allcaps> affected , only build script . also fully backward compatible with old configs . builds successfully using the inferred os when only <code> is set ( not osal_system_ostype ) . generates a warning when <code> and <code> are both set but are mismatched . confirmed this works by intentionally mismatching in a config . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of <url> <section> chris d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"fix # <number> , unit - tests / osloader - test : make modules always be built for the test <section> fixes # <number> . <section> running <code> on macos as described in the linked issue . <section> without this patch , the <allcaps> module </allcaps> * files are not generated in the build folder . after this patch is applied , the module files are generated when the <code> test is built and run : <code> <section> - hardware : macbook - os : macos mojave <number> . <number> ( 1 8 g1012 ) - versions : <allcaps> osal </allcaps> as of a66eb2dc00136a77779414452835bb6364d5e1fb commit . <section> none . <section> none . <section> stanislav pankevich , <allcaps> pts </allcaps> gmbh the hand signed <allcaps> cla </allcaps> has been sent before ."
"when running standalone , osal_loader_ut test binary file is missing test module files <section> this is another piece of the work on macos support in # <number> . when i run the <code> from <allcaps> ide </allcaps> ( clion ) , some of the tests are failing because the module files they exercise are not there . example : <code> the test expects the <code> files to be there in the build directory and they are not found : <code> the underlying problem is that the modules are not built automatically when the <code> target is built : <code> <section> i will open a pr where adding the following fixes the problem : <code> adding explicit build dependency makes sure that the module files are built . having this added i see this : <code> <section> i see no alternatives given the current design of the test and its build rules . <section> i am using the <allcaps> posix </allcaps> port on macos with my addtions from # <number> configured as follows : <code> <section> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , correct test_os_converttoarrayindex assertion typo fix # <number> test_os_converttoarrayindex : tautological assertion <section> unit test test_os_converttoarrayindex implements the following assertion : osal / src / unit - test - coverage / shared / src / coveragetest - idmap . c lines <number> to <number> in 7 d9c4c8 utassert_true ( local_idx1 = = local_idx1 , "" local_idx1 ( % lu ) = = local_idx2 ( % lu ) "" , ( unsigned long ) local_idx1 , ( unsigned long ) local_idx2 ) ; this is a tautological assertion as it compares local_idx1 with itself . update : local_idx1 is now compared with local_idx2 : utassert_true ( local_idx1 = = local_idx2 , "" local_idx1 ( % lu ) = = local_idx2 ( % lu ) "" , ( unsigned long ) local_idx1 , ( unsigned long ) local_idx2 ) ; <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , refactor <allcaps> osal </allcaps> code selection <section> use separate source files and cmake - based source selection based on feature configuration , rather than using the c preprocessor for including / excluding different <allcaps> osal </allcaps> function groups . refactor all implementation units to provide a separate header file for each functional group / subsystem . remove "" static "" declaration on internal helper functions so they can be invoked from unit test . fix # <number> ( primary ) also fix # <number> and fix # <number> ( trivial fixes rolled in as part of refactoring ) and fix # <number> ( separate commit ) <section> build and execute <allcaps> cfe </allcaps> for vxworks , <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> . sanity check of <allcaps> cfe </allcaps> functions . confirm all unit tests passing and coverage test of vxworks is working ( lcov shows <percent> for covered modules ) . <section> no impact to runtime code . changes build system considerably , however . - no more user - maintained <code> file - now replaced by a cmake configuration file - break up low level implementation into small , separate subsystem units , with a separate header file for each one . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit ( build host , native test ) i686 - rtems4 . <number> cross build using <allcaps> qemu </allcaps> ppc - vxworks6 . <number> cross build using mcp750 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add looping wait for self exiting task <section> loops the parent os_taskdelay until child task exits before testing os_taskdelete . avoids the test depending on system loading / performance with single delay approach . fix # <number> <section> steps taken to test the contribution : <number> . standard build , ran <code> and observed loop count of <number> ( i have never experienced the failure , which if avoided would have a loop count > <number> ) <section> consistent osal - core - test execution status <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle + this commit <section> issue seen on dev server <number> and mac os <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consistent directory entry size limit <section> changes filename in os_dirent_t from os_max_path_len to os_max_file_name , and moves os_check_name_length into os_translatepath so it is consistantly applied everywhere . also fixes the length checks in os_check_name_length to account for terminating null . unit tests updated to match new directory name limit . fix # <number> note - since this was merged with the # <number> fix , this will also resolve that issue . <section> steps taken to test the contribution : <number> . ci - <url> <section> individual directory names now limited to os_max_file_name <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle + this branch <section> note it ' s based on # <number> to avoid conflicts and help with ic merge . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecates os_fs_ * defines that are not unique to fs <section> fix # <number> deprecates the following os_fs * defines from osapi - os - filesys . h : os_fs_success , os_fs_error , os_fs_err_invalid_pointer , os_fs_err_no_free_fds , os_fs_err_invalid_fd , and os_fs_unimplemented used sed to perform a bulk find / replace on each one to swap with common definitions . <section> steps taken to test the contribution : <number> . ran unit tests . <section> none <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , shell related <allcaps> api </allcaps> separated for optional implementation <section> adds a portable os_shelloutputtofile_impl no - shell implementation following the no - network model splits posix / rtems / vxworks os_shelloutputtofile_impl into a separate osshell . c ( was in osfileapi . c ) defaults to use the not implemented version ( to match certification target ) added unit test wrapper fix # <number> <section> steps taken to test the contribution : <number> . built for posix with and with not implemented version <number> . ci test with not implemented - <url> <allcaps> note </allcaps> - build for vxworks attempted , but ran into other issues introduced since last check on that system ( elf2cfetbl casts missing to match format ) <section> command to run in shell and output to fill will fail with default ( not implemented ) setting . open issue to resolve is nasa / cfe # <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle w / this commit on top of nasa / cfe # <number> , nasa / <allcaps> psp </allcaps> # <number> , nasa / osal # <number> - [ ] recommend build / test on <allcaps> rtems </allcaps> - [ ] resolve unrelated issue for vxworks and complete test <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> see bundle ic at <url> <section> see prs bundle ci - <url> <section> - pr # <number> - fixed typo , no behavior changes - pr # <number> - code cleanup , no behavior changes - pr # <number> : - use the target_include_directories and target_compile_definitions functions from cmake to manage the build flags per target . - build implementation components using a separate cmakelists . txt file rather than aux_source_directory . - provide sufficient framework for combining the <allcaps> osal bsp </allcaps> , <allcaps> ut bsp </allcaps> , and the <allcaps> cfe psp </allcaps> and eliminating the duplication / overlap between these items . - change the <allcaps> osal </allcaps> coverage test to be built with the standard build whenever enable_unit_tests is set . <section> see prs bundle ci - ubuntu : bionic <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc . david archuleta jr . , self gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , deprecated exception handling apis <section> deprecates the <allcaps> fpu </allcaps> exception and exception handling apis never fully implemented and more appropriate in <allcaps> psp </allcaps> layer due to platform dependencies note - also removes old interrupt unit test header ( missed in interrupt deprecation ) fixes # <number> <section> ci - <url> <section> none <section> ci - with master bundle <section> may need slight mods relative to cmake related to listing c files vs aux <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecate os_fs_err_name_t <section> fix # <number> deprecates the define and updates the reference in unit test <section> ci - <url> <section> none <section> - ci , master bundle w / this branch <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , osal select <allcaps> api </allcaps> unit tests and fixes <section> fixes # <number> , fixes # <number> - - adds unit tests for <allcaps> osal </allcaps> select <allcaps> api </allcaps> partially addresses # <number> , but full solution is a functional test that includes an operational scenario ( actually select on a resource , confirm it pends until that resource is available ) . <repeated> bonus points if it illustrates the differences between os ' s so it ' s clear from a user perspective what will work and what wont . <section> built unit tests , tests passed . <section> externalizes enum for selectsingle , ensures that pointers passed to selectfd . <repeated> ( ) apis are not null , ensures that pointer to selectsingle is not null . <section> debian <number> <section> <email>"
"integration candidate <number> - <number> - <number> <section> integration candidate fixes # <number> , # <number> , # <number> , and # <number> <section> see related prs bundle ci - <url> test log : <url> <section> pr # <number> - the more descriptive return value <code> ( instead of <code> ) will now be returned from the following functions (): <code> , <code> , <code> , <code> pr # <number> - no more config warnings reported by travis - ci pr # <number> - the correct variable values will now be displayed when the test is executed . pr # <number> - wraps <code> prototype and unit test wrapper additions in <code> . <section> see prs bundle ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , comment update to correct for microseconds not always rounding up + a … describe the contribution fixes # <number> , microsecond round up code does not round up . updated comments in ostimer . c to reflect what the code is actually doing . added debug message if microsecs per sec value does not equal <number> . testing performed ran unit tests . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , remove old unit test example , add <allcaps> readme </allcaps> . md , further macro cleanup <section> removes outdated unit test examples , adds macros for concise and clear unit tests , converted binsem unit tests to new macros . fix # <number> <section> built unit tests and executed . <section> same behavior , concise code . <section> debian <number> . <section> <email>"
"fix # <number> , # <number> , and # <number> , <allcaps> osal </allcaps> build cleanup ( multiple issues ) <section> general cleanup and rework of the <allcaps> osal </allcaps> build scripts . fixes several issues : fixes # <number> fixes # <number> fixes # <number> fixes # <number> these are combined into a single pull request as they each depend on the previous fix - they cannot be easily isolated into separate pull requests . however , each specific issue fix is still an individual commit for review . summary of changes : - do not clobber ( or generally even rely upon ) the <code> variable , instead use the preferred approach of using the <code> and <code> functions from cmake to manage the build flags per target . - build the implementation components using a separate cmakelists . txt file per - directory rather than aux_source_directory . this allow allow <allcaps> bsp </allcaps> - specifc or os - specific compiler flags to be set , where required . - provide sufficient framework for combining the <allcaps> osal bsp </allcaps> , <allcaps> ut bsp </allcaps> , and the <allcaps> cfe psp </allcaps> and eliminating the duplication / overlap between these items . - change the <allcaps> osal </allcaps> coverage test to be built with the standard build whenever enable_unit_tests is set . <section> - built <allcaps> cfe </allcaps> for all three supported platforms ( native / x86 - <number> linux , i686 - rtems4 . <number> , ppc - vxworks6 . <number> ) and confirm successful build . - confirm ut passing on <allcaps> rtems </allcaps> <number> and native / x86 - <number> linux - sanity check on <allcaps> cfe </allcaps> ( execute , send command ) in <allcaps> rtems </allcaps> <number> and native / x86 - <number> linux - confirm standalone <allcaps> osal </allcaps> builds ( without <allcaps> cfe </allcaps> ) on basic posix / pc - linux combo and passes unit tests . <section> - <allcaps> osal </allcaps> coverage testing results shown in standard <allcaps> cfe </allcaps> test build ( make test , etc ) . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native ) - <allcaps> qemu </allcaps> for testing <allcaps> rtems </allcaps> <number> builds <section> vxworks testing limited to building only at this point . runtime tests pending on mcp750 hardware availability . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adds library build , functional , and coverage test to ci <section> fix # <number> , adds library build , functional , and coverage test to ci <section> steps taken to test the contribution : <number> . ci from fork - <url> <section> just adds tests to ci <section> - hardware : <allcaps> amd </allcaps> - os : ubuntu <number> - versions : bundle + warning fix from previous pull request + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , pthread stack min typo <section> fixes # <number> pthread_stack_min typo . i could have changed the number to <number> but i thought ( <number> * <number> ) was more true to where the number comes from . let me know if this is not inline with <allcaps> nasa </allcaps> code style preferences . <section> steps taken to test the contribution : <number> . build steps : built with cmake : <code> <number> . ran all tests and unit tests . note that osloader module test nominal <number> failed ( ut_osloader_module_test . c : <number> ) but it failed no matter whether my changes were implemented or not . i assume it ' s a quirk of my system / environment . <section> - no impact to behavior <section> - hardware : <allcaps> asus </allcaps> zenbook laptop - os : debian <allcaps> gnu </allcaps> / linux <number> vm on hyper - v manager - versions : <allcaps> osal </allcaps> <number> . <number> <section> n / a <section> n / a <section> david archuleta jr . personal"
integration candidate <number> - <number> - <number> <section> fixes # <number> <section> pr # <number> bundle ci <url> <section> os_socketaccept ( ) should work to accept new incoming <allcaps> tcp </allcaps> connections . <section> bundle ci - ubuntu : bionic <section> christopher . d . knight - <allcaps> nasa </allcaps> / <allcaps> arc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
fix # <number> - strawman for discussion <section> strawman for discussion at the <allcaps> ccb </allcaps> . <section> builds / runs / passes .
"fix # <number> , add test for name too long and update comments describe the contribution fixes # <number> , add test for name too long and update comments . coverage test added to os_timercreate for os_err_name_too_long . updated comments related to sizing includes null terminator for : os_max_api_name , os_max_path_len , os_buffer_size testing performed ran unit tests . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , deprecate interrupt related apis <section> removes coverage test code completely . marks os_int * <allcaps> api </allcaps> ' s as deprecated and implementations removed if osal_omit_deprecated defined fixes # <number> only changes under review for this request are 3 6 1 8 ae3 , the rest of the commits were included to avoid merge conflicts ( they were included in other pull requests for review ) <section> steps taken to test the contribution : <number> . remove calls from cfe / fsw / cfe - core / src / es / cfe_es_perf . c , note this change will break until the performance ticket is resolved ( which removes the os_int calls ) - <url> <number> . built and ran test with and without omit_deprecated defined . <section> none <section> - hardware : cfs dev <number> vm - os : ubuntu <number> - versions : bundle , these commits , and changes noted above <section> associated os_int tickets become wontfix - # <number> , # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"adds unit tests for os_select . <repeated> <allcaps> api </allcaps> <section> fix for ticket # <number> which adds unit tests for <allcaps> osal </allcaps> select <allcaps> api </allcaps> ' s . this relies on , and has merges from , # <number> and # <number> . <section> make ; cd cpu1 / osal / unit - tests / oscore - test ; . / osal - core - ut # all passes <section> adds unit tests for select . <section> debian <number> vm <section> <email>"
"fix # <number> , resolve ci config warnings <section> fix # <number> resolve ci config warnings <section> <number> . ci ( ci config change only ) <section> no more config warnings reported by travis - ci <section> - hardware : ci - os : ubuntu <number> - versions : master w / this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , os_selectfd . <repeated> <allcaps> api </allcaps> ' s check that set ! = <allcaps> null </allcaps> <section> fix to os_selectfdzero / set / add / clear / isset to check that set is not <allcaps> null </allcaps> <section> will commit unit tests that check this as a separate pull request for # <number> . <section> <allcaps> api </allcaps> calls should return os_pointer_error when set is <allcaps> null </allcaps> . ( isset returns "" false "" . ) <section> have not tested yet , # <number> will test . <section> <email>"
"fix # <number> , replaces task_1_work with correct variable names describe the contribution fixes # <number> , replace task_1_work with correct variable names testing performed ran unit tests expected behavior changes the correct variable values will now be displayed when the test is executed . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , updated osapi - filesys . c + ut_osfilesys_diskio_tes . ct to use … <section> fixes # <number> , updatese osapi - filesys . c + ut_osfilesys_diskio_test . c to use desired return values . <section> <number> . ran unit tests <section> the more descriptive return value ( os_err_name_not_found ) will now be returned from the following functions ( instead of os_fs_error ) : os_rmfs os_mount os_unmount os_fs_getphysdrivename <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , deprecate shared memory apis <section> this just wraps os_shmem * prototype and unit test wrapper additions in osal_omit_deprecated . fixes # <number> <section> steps taken to test the contribution : <number> . pushed bundle branch with this change to fork <number> . bundle ci passed : <url> <section> only impact would be to an <allcaps> osal </allcaps> that implements these apis and compiles with osal_omit_deprecated defined . none of the framework apis do . path forward would be for that <allcaps> osal </allcaps> to own the prototype , or split into a separate library , or however else you want to handle it . <section> - hardware : ci - os : ubuntu <number> - versions : master bundle w / this change <section> only <url> is relevant to this request , i can rebase once the other changes are merged . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate os_int * related apis <section> interrupt abstraction is platform / <allcaps> cpu </allcaps> dependent , and better suited to the <allcaps> psp </allcaps> if needed as indicated by the partial implementation in <allcaps> osal </allcaps> , the related issues , and lack of functional tests at the <allcaps> osal </allcaps> level . <section> deprecate <section> none <section> see # <number> , # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"gcc "" - - wrap "" argument and stubs for os - provided functions <section> i have been frustrated that we do not have unit tests for checking that <allcaps> osal </allcaps> properly handles error conditions when calling os functions ( like open , read , socket , accept , etc . ) apparently if we define - - wrap = open , then all calls to open ( ) will go to our open ( ) function and the os - provided open will be renamed as __wrap_open ( ) . i suggest this be used to stub most / all os calls and we can add unit tests for such things as running out of memory / storage / file descriptors and also support unit testing in sandboxed environments ( do not know if travis ci sandboxes ) where such things as network calls are disabled . <section> stub functions for os functions . <section> been looking around for alternatives and have not seen any . <section> add any other context about the feature request here . <section> <email>"
os_intgetmask os_intsetmask missing functional tests <section> missing functional tests for os_intgetmask and os_intsetmask <section> add tests <section> none <section> certification issue <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> fix # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs <section> see related pr <section> bundle ci ubuntu : bionic - see <url> <section> see pr # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , os_socketaccept ( ) fix <section> fixes # <number> , note that this does *not* include unit tests . there do not seem to be any unit tests for the <allcaps> osal </allcaps> networking code . we should discuss at the <allcaps> ccb </allcaps> . <section> tested with the <allcaps> tcp </allcaps> version of <allcaps> sbn </allcaps> , without the fix it fails on the accept ( ) call , with the fix , <allcaps> sbn </allcaps> nodes connect and traffic flows as expected . <section> os_socketaccept ( ) should work to accept new incoming <allcaps> tcp </allcaps> connections . <section> <number> - bit debian <number> vm . <section> add any other context about the contribution here . <section> none <section> <email>"
"fix # <number> and others , scrub user ' s guide <section> document / comment changes only fix # <number> - see issue for detailed changes fix # <number> - since old doc was removed , and autodoc is correct fix # <number> - replicated changes to old document in <allcaps> api </allcaps> header comments in <url> fix # <number> - documented callback restrictions <url> fix # <number> - document os dependent behavior on open files <url> partially addresses # <number> , # <number> , # <number> , # <number> <section> steps taken to test the contribution : <number> . nominal build ( native ) and run , no issues <number> . make usersguide and confirmed no warnings in build / doc / warnings <number> . cd build / doc / users_guide / latex <number> . make <number> . confirm completes and guide looks ok <number> . make osalguide and confirmed no warnings in build / doc / warnings <number> . cd build / doc / osalguide / latex <number> . make <number> . confirm completes and guide looks ok <section> no behavior change other than warnings resolved for doc build <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle w / the commits below <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"os_intack placeholder resolution <section> "" placeholder "" is not sufficient ( prototype only ) . <section> either implement with a not_implemented error response or eliminate prototype ( deprecate if it is not appropriate ) . if implemented , needs a mechanism to test ( functional / coverage / unit ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ic <number> <section> integration candidate <number> fixes # <number> see pr # <number> for details <section> ci , ubuntu - bionic <section> none <section> see pr # <number> <section> andrei - costin zisu - planetary transportation systems gmbh ( berlin , germany ) . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove os_fs_err_name_t <section> old compatibility typedef <section> deprecate for now , remove in major release . <section> none <section> do after # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove <allcaps> fpu </allcaps> and exception handling apis from <allcaps> osal </allcaps> <section> exception and <allcaps> fpu </allcaps> exception handling only partially implemented in <allcaps> osal </allcaps> <section> remove from <allcaps> osal </allcaps> , better suited to <allcaps> psp </allcaps> if / when fully implemented . <section> none <section> see also # <number> to remove shared memory apis <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> coverage test should be part of normal build <section> currently the <code> directory is an entirely separate build which needs to be invoked separately by the user . as per <allcaps> cfe </allcaps> request nasa / cfe # <number> it is desired to integrate the <allcaps> osal </allcaps> coverage tests as part of the normal unit test builds , so these do not need to be built separately . <section> the tentatively agreed - upon approach is to build _all_ coverage targets by default , and use the target <allcaps> bsp </allcaps> to run them . <section> the side effect is that this may build coverage targets which are not relevant to the deployed platform ( e . g . building and running a vxworks coverage test for a platform that does not use vxworks ) . <section> joseph hickey , vantage systems , inc ."
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes # <number> - fixes memset bug in <code> system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> : src / os / shared / osapi - module . c : handle return value of os_moduleload_impl <section> this changeset fixes # <number> . <section> the change is not detectable by the current test suite in the current master branch ( as of 6 4 ad0f551c01ab846bc79b23411e72cddf987dde ) but i can confirm that building <allcaps> osal </allcaps> and running its tests on ubuntu linux and macos works fine . <section> this changeset only adds a handling of the <code> function ' s return value . in all nominal cases there should be no changes in the existing behavior . <section> - hardware : linux laptop , macos laptop - os : ubuntu <number> , macos <number> . <number> - versions : <allcaps> osal </allcaps> as of 6 4 ad0f551c01ab846bc79b23411e72cddf987dde <section> none . <section> none . <section> stanislav pankevich , personal the signed individual <allcaps> cla </allcaps> has been sent today to the email specified in the <allcaps> cla </allcaps> document ."
"integration candidate <number> <section> fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> resolved <allcaps> lgtm </allcaps> errors , no functional changes <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate multiple "" success "" code options <section> <allcaps> api </allcaps> ' s with multiple "" success "" codes are frequently mishandled <section> single success response , unique information should be passed back in parameters <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> merge # <number> , # <number> fix # <number> , fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> os timer test should now always pass <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove classic build <section> remove classic build <section> steps taken to test the contribution : <number> . make prep <number> . make install <number> . verify build / run cfs <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"os - impl - bsd - sockets . c lgtm warning <section> references <url> and pull request <url> os - impl - bsd - sockets . c <code> <section> use compiletimeassert ( sizeof ( sockaddr_in ) <= os_sockaddr_max_len , addrlenexceedsockaddrlen ) at the top of file or in header . <section> leave it as it is . <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , fix memory corruption produced by misplaced memset ( ) <section> this pr fixes # <number> . the exact change has been recommended by <user> . <section> currently , i cannot test this on linux only on macos . as reported in the issue , i confirm that that the issue gets fixed with this change applied . also , the bug has been confirmed by <user> and the changeset is created from his recommendation . <section> see related issue : # <number> . <section> running osal - core - test tests ( <allcaps> bsem </allcaps> tests ) os : macos mojave <number> . <number> ( 1 8 g87 ) versions : master branch as of 1 5 5 e9ebcd6d <phone> a44237e6883d229d22c . <section> stanislav pankevich , personal the signed individual <allcaps> cla </allcaps> has been sent to the email specified in the <allcaps> cla </allcaps> document ."
"clear pending signal when configuring timer <section> fix # <number> on <allcaps> posix </allcaps> , call sigtimedwait ( ) on the selected rt signal as part of the set up for the timebase . this ensures that if the signal is already pending , it will be cleared . this also simplifies the timer callback routine in the ut code , cleaning up some unnecessary extra logic . <section> build with enable_unit_tests = <allcaps> true </allcaps> and execute <code> in a repeated loop . prior to this fix , it would typically fail after about <number> - <number> iterations , sometimes fewer . after this fix , it does not fail ( <number> + iterations , no failures ) . confirmed normal operation of <allcaps> cfe </allcaps> core ( no change ) . <section> fixes occasional failures in the nominal timer test . no change to <allcaps> fsw </allcaps> code <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> tracked down the root cause of the occasional timer failures to the timer test that preceded it . the previous test involved a short interval ( 5 us ) . depending on the timing of the preceding delete call , the timer signal might fire again before the timer is fully un - configured ( i . e . during the delete process ) . in this case , the system will be left with the signal still pending ( blocked ) but with no task running to accept / clear it . this is ok until the next timer is configured , and the same signal will be selected ( the first rt signal ) . in this case , because the signal was already pending from the previous config , it results in an extra "" spurious "" initial callback at the start . this in turn was interfering with the difference calculations in the timer ut . it is unlikely that this issue would be seen in <allcaps> fsw </allcaps> code , as it depends on deleting and recreating timers and <allcaps> fsw </allcaps> generally does not do this ( i . e . it sets up timers once ) . the main part of the fix is to call <code> with a zero timeout to ensure that the signal is not pending . additionally , there is some cleanup in the ut callback code , which fixes two other possibilities . these were not occurring , but potentially could . - the interval computation could be incorrect if the time elapsed was greater than <number> second . - always set the currtime / endtime in case there is a lag time in stopping the timer . but only set "" g_status "" once . - remove unneeded / invalid "" os_timerset "" call . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> 1 st merge : fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> 2 nd merge : fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve osfileapi . c lgtm issue <section> fixes # <number> resolve osfileapi . c lgtm issue . <section> steps taken to test the contribution : <number> . build dummy repository against lgtm <number> . verify it fixes . <section> a clear and concise description of how this contribution will change behavior and level of impact . - execl ( ) will only execute for / bin / sh . <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , lgtm warning <section> fix lgtm warning . <section> steps taken to test the contribution : <number> . build against dummy repo using lgtm . <number> . verify warning is fixed <number> . cppcheck . <number> . verify no warning <number> . build <number> . verify still build . <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard ."
"fix # <number> , fix lgtm osal issue <section> resolve lgtm issue <section> steps taken to test the contribution : <number> . build dummy repository against lgtm <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"use alternate setup function for tests <section> fix # <number> implements a more layered architecture for test code . rather than having each test provide <code> directly , now the ut assert library provides <code> in common code . the actual test setup is now done by a function called uttest_setup ( ) . this also introduces a new function <code> to implement the test routine . this replaces the existing <code> function . note - by using a more generic name the <code> routine can apply to both normal applications and test applications . this is a prerequisite to a future removal of the separate <allcaps> ut bsp </allcaps> . this allows for better layering where ut - assert provides the notion of an "" <allcaps> osal </allcaps> application "" . this is a step toward simplifying the <allcaps> bsp </allcaps> architecture , eventually combining the normal application and unit test <allcaps> bsp </allcaps> code into a single <allcaps> bsp </allcaps> . <section> build with default config and enable_unit_tests = <allcaps> true </allcaps> for all three supported platforms ( pc - linux , pc - rtems , and mcp750 - vxworks ) . confirm normal operation of <allcaps> cfe </allcaps> core ( no change ) and all unit tests run normally . <section> no changes to behavior . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( via <allcaps> simulation </allcaps> = native ) <section> needs to be merged in coordination with issue in nasa / cfe # <number> <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"avoid infinite sem - speed - test <section> fix # <number> <number> . add a hard limit to the execution ( work ) counter for the sem - speed - test worker threads . with this they will self - exit eventually even if the root task never gets <allcaps> cpu </allcaps> time to stop them . <number> . set the priority of the worker tasks to be logically lower , so it is less likely to preempt the main task . note that the logical priority is inverted from the numeric value . <section> execute unit tests on <allcaps> rtems </allcaps> and native ( posix / x86 - <number> ) and confirm successful operation of the sem - speed - test on both platforms . example output from running in <allcaps> rtems </allcaps> : <code> <section> the test completes normally and does not run infinitely . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native , build host ) <allcaps> rtems </allcaps> <number> on i686 ( <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"update os_vxworks_sigwait test case <section> fix # <number> this is related to the change for # <number> , where the return value of this function depends on the configured timer interval . the coverage test case for this was not updated in the original change . <section> build and execute <allcaps> osal </allcaps> coverage tests <section> test case now passes , as : <code> <allcaps> fsw </allcaps> code is not changed . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"lgtm issue <section> os - impl - bsd - sockets . c <code> os - impl - posix - files . c <code> posix / osfileapi . c <code> shared / osapi - idmap . c <code> shared / osapi - sockets . c <code> shared / osapi - time . c <code> os - posix . h <code> osapi - filesys . c <code> <section> steps to reproduce the behavior : <number> . run against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"refactor <allcaps> osal c </allcaps> library stubs <section> fix # <number> rather than utilizing a separate "" stub - map - to - real . h "" file that would need to be injected into the build of the unit under test , this builds the mappings into the mapping into the override files themselves . the stub functions are then moved into a separate header under a unique name with an ocs_ prefix . this introduces a number of new files , as what previously required a single header now requires two , but it it eliminates the separate map file . <section> build coverage test before and after change , confirm no changes to test operation or result . <section> none , just a structural change to the source file layout / patterns <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"use ut assert for <allcaps> osal </allcaps> unit tests <section> fix # <number> refactor the "" unit - tests "" ( extended / functional tests ) for <allcaps> osal </allcaps> to use the ut assert library for test case reporting and platform support . reduce or eliminate the use of macros for platform abstraction wherever possible . this removes most platform - specific logic from the test cases , leaving that to the <allcaps> osal </allcaps> / <allcaps> bsp </allcaps> abstraction . <section> build unit tests for all three supported test platforms and confirm operation ( <allcaps> posix </allcaps> , vxworks , <allcaps> rtems </allcaps> ) . <section> tests were previously only being built / executed on <allcaps> posix </allcaps> . now the tests are built on all <allcaps> osal </allcaps> platforms , using the ut assert library . output logfiles are in provided by ut assert and are therefore now in the same ut assert style . this test set no longer has a different set of output files . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native / posix ) - <allcaps> rtems </allcaps> <number> on i686 ( using <allcaps> qemu </allcaps> target ) - vxworks <number> on <allcaps> ppc </allcaps> / mcp750 <section> this should be pulled in parallel with # <number> to ensure that the <allcaps> posix </allcaps> platform continues to pass all tests . note that the relevant tests ( <allcaps> fpu </allcaps> , interrupt ) were being skipped on <allcaps> posix </allcaps> . , but with this change all tests are executed on all platforms . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"exception / interrupt <allcaps> api </allcaps> updates <section> fix # <number> - ensure the <allcaps> fpu </allcaps> functions that are actually not implemented in <allcaps> rtems </allcaps> / <allcaps> posix </allcaps> all return os_err_not_implemented , not os_success . - the <allcaps> rtems </allcaps> intenable / disable <allcaps> api </allcaps> should not be a duplicate of the intlock / unlock <allcaps> api </allcaps> , as the semantics are slightly different . the enable / disable <allcaps> api </allcaps> should return os_err_not_implemented . - the os_fpuexcgetmask <allcaps> api </allcaps> should confirm that the output buffer is not <allcaps> null </allcaps> . <section> sanity check on basic <allcaps> cfe </allcaps> operation on native / simulation build - no changes to <allcaps> fsw </allcaps> behavior . modified apis are exercised in the <allcaps> osal </allcaps> unit tests . unit tests executed on <allcaps> rtems </allcaps> , <allcaps> posix </allcaps> ( native ) , and vxworks in conjunction with changeset for # <number> . <section> no change to <allcaps> fsw </allcaps> . unit tests related to these particular <allcaps> api </allcaps> calls now all <allcaps> pass </allcaps> or are skipped appropriately for the ones that are actually not implemented . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native / posix ) - <allcaps> rtems </allcaps> <number> on i686 / pc ( <allcaps> qemu </allcaps> - emulated target ) - vxworks <number> on <allcaps> ppc </allcaps> / mcp750 <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"issue # <number> , adding cppcheck to bsp and os <section> adding travis . yml file for cppcheck on flight code . src / bsp and src / os <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , remove unsupported bsps <section> remove unsupported <allcaps> bsp </allcaps> and change genppc - vxworks6 . <number> → mcp750 - vxworks <section> - hardware - ubuntu <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cpp warning in os dir . <section> resolve cppcheck for os dir . possible cppcheck bug for structure member - suppress . <section> steps taken to test the contribution : <number> . make prep , make , make install <number> . run <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck test dir . <section> from issue # <number> <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cppcheck warning ut_stubs <section> resolve cppcheck warning . <section> steps taken to test the contribution : <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test <number> . verify passing unit - test <number> . cppcheck - - force - - inline - suppr - - std =c 9 9 - - language =c - - error - exitcode = <number> enable = warning , performance , portability , style - - suppress = variablescope - - inconclusive osal / src <number> > osal . txt <section> - hardware - os : ubuntu <number> - osal <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning ut - stubs <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning unit - test <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning misc . dir . <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning . <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning coverage test <section> cppcheck warning from issue # <number> for coverage - test . <code> <section> resolve cpp warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"stricter cppcheck <section> resolve the follow cppcheck . <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix minor warnings in <allcaps> osal </allcaps> code <section> fix # <number> fix warnings that are triggered by compiling the <allcaps> osal </allcaps> coverage unit test with strict settings . - the <code> function needs to be prototyped as accepting a function pointer ( not <code> ) - const - correctness on <code> - use <code> instead of <code> for buffer pointer as the specific type is not known - cast the function passed into <code> on vxworks <section> build code on all three supported os ' s ( <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , vxworks ) with full warnings and enable_unit_tests = <allcaps> true </allcaps> execute all unit tests and confirm passage execute cfe and confirm normal operation <section> none . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> - bit ( native ) - vxworks <number> / mcp750 ( <allcaps> gsfc </allcaps> build machine ) - <allcaps> rtems </allcaps> <number> / i686 ( running within <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"add alignment wrapper to os_sockaddr_t <section> fix # <number> add a union wrapper for the abstract data field such that it will be aligned for <number> bit integer values and / or pointers , whichever is greater . this removes cast alignment warnings in this code with compiling on <allcaps> cpu </allcaps> architectures with strict alignment requirements . <section> build code with full warnings ( including - wcast - align ) on both native (x 8 6 - <number> ) and mips32 execute <allcaps> cfe </allcaps> on native (x 8 6 - <number> ) ( with ci_lab / to_lab that use <allcaps> osal </allcaps> - provided socket abstraction ) , confirm no changes in behavior . <section> no compiler warning . no changes to runtime behavior . <section> linux <allcaps> mips </allcaps> <number> bit ( build ) ubuntu <number> <allcaps> lts </allcaps> , <number> bit ( build + run ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes , all doxygen / cppcheck warning / error cleanup <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : cppcheck warnings <section> replace use of <code> and <code> with <code> which should squelch the cppcheck warnings about the left shift as well as being more correct ( the values in question are uint32 ' s , not int ' s ) . also address two false positives about a return value being unassigned , by simply initializing the value to be <number> . fixes issue # <number> <section> build coverage test and ensure all tests passing and line coverage is unaffected build and run <allcaps> cfe </allcaps> and confirm no effect . ran cppcheck and confirmed that warnings are gone . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix cppcheck warning for unit - test <section> resolve cppcheck warning for unit - tests . did not compiled unit test . <section> steps taken to test the contribution : <number> . cppcheck - force - - inline - suppr . <number> > cppwarning <number> . verify warning is gone . <section> - hardware - ubuntu <number> - <allcaps> osal </allcaps> <number> . 2 a , cppcheck <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"remove explicit disable priorities flag or warn if disabled <section> user unknowningly was disabling priorities , causing issues <section> remove the explicit disabling of priorities . <allcaps> permissive </allcaps> mode should try to set requested priorities , and if it fails then go to default vs having a separate flag . <section> warn user when using default priorities <section> note may have already been solved , but getting ticket in to confirm . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( from thad )"
"cpp check error <section> cppcheck returns warning : osal / src / os / posix / osapi . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / shared / src / coveragetest - time . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / shared / src / coveragetest - timebase . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / ut - stubs / src / libc - stdio - stubs . c : <number> <url> uninitialized variable : actual osal / src / unit - test - coverage / ut - stubs / src / libc - stdio - stubs . c : <number> <url> uninitialized variable : actual osal / src / unit - tests / oscore - test / ut_oscore_binsem_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_countsem_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_exception_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_interrupt_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_misc_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_mutex_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_queue_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> <url> syntax error osal / src / unit - tests / osfile - test / ut_osfile_dirio_test . c : <number> <url> syntax error osal / src / unit - tests / osfile - test / ut_osfile_fileio_test . c : <number> <url> syntax error osal / src / unit - tests / osfilesys - test / ut_osfilesys_diskio_test . c : <number> <url> syntax error osal / src / unit - tests / osloader - test / ut_osloader_module_test . c : <number> <url> syntax error osal / src / unit - tests / osloader - test / ut_osloader_symtable_test . c : <number> <url> syntax error osal / src / unit - tests / osnetwork - test / ut_osnetwork_misc_test . c : <number> <url> syntax error osal / src / unit - tests / osprintf - test / ut_osprintf_misc . c : <number> <url> sprintf format string requires <number> parameter but only <number> are given . osal / src / unit - tests / osprintf - test / ut_osprintf_misc . c : <number> <url> snprintf format string requires <number> parameter but only <number> are given . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ap ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / ostimer - test / ut_ostimer_timerio_test . c : <number> <url> syntax error <section> <number> . cppcheck - - force . <number> . see warning <section> hardware <number> . <number> <number> . cppcheck <number> , cfe <number> . <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , fix misc . doxygen warning <section> fix # <number> , fix misc . doxygen warning <section> steps taken to test the contribution : <number> . make users guide <number> . verify warning is gone <section> - hardware - ubuntu <number> - doxygen <date> , rc - <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings <section> coverage test updates ( more coverage and works for vxworks ) timer bug fixes sem - speed - test functional test fix for vxworks <section> - cfs dev server - os : ubuntu <number> - versions : bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : avoid possible deadlock of timer callback <section> fix issue # <number> , avoids timer callback deadlock if actual tick_time is consistently bigger than the configured iinterval_time . <section> modify <code> to choose an interval that is not a multiple of the system clock tick , such that it will be rounded up to the next tick by the implementation . verify that evenually , two callbacks are generated in a single time tick , such that the long - term average of callbacks over time is consistent with the configured interval_time . confirm that callbacks continue normally until the application is stopped , as expected . <section> callbacks no longer cease once the "" overrun "" condition occurs ( callbacks behind by >= <number> full interval time ) confirm consistent behavior on <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , and vxworks <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit ( <allcaps> posix </allcaps> / simulation ) <allcaps> rtems </allcaps> <number> pc686 <allcaps> bsp </allcaps> running in <allcaps> qemu </allcaps> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct interval time computations <section> fixes issue # <number> , corrects the time intervals returned by the sigwait ( ) routines for all three operating systems ( <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , vxworks ) . <section> testing is focused on the operation of the <code> example program and variations thereof . verified that all callbacks from all timers correlate with the configured "" start_time "" and "" interval_time "" parameters passed to the os_timerset ( ) configuration . verified <allcaps> cfe </allcaps> still boots and runs ok . ( stops <allcaps> flywheel </allcaps> as normal based on 1 hz tick ) <section> no changes to applications / <allcaps> cfe </allcaps> . the <code> example program now runs and passes consistently on all platforms . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> bit ( simulation ) <allcaps> rtems </allcaps> <number> pc686 <allcaps> bsp </allcaps> running in <allcaps> qemu </allcaps> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct format code in debug message <section> fixes issue # <number> just adds a typecast to avoid the warning <section> build code on i686 - rtems4 . <number> platform , with - wall - werror and os_debug_printf option enabled . <section> observe no more warning about the format mismatch . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> bit ( build host ) using i686 - rtems4 . <number> cross toolchain <section> joseph hickey , vantage systems , inc ."
"fix # <number> : use 4 k stack for sem - speed - test tasks <section> fix issue # <number> use a nonzero stack size for this test . <section> build and execute "" sem - speed - test "" on the mpc750 vxworks platform . <section> test now runs and passes reliably with no odd / inconsistent behaviors <section> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"correct error checking for taskspawn <section> fixes # <number> , corrects the error check after taskspawn in the vxworks implementation . the test for failure of taskspawn should be for the value of <allcaps> error </allcaps> , not <number> , per the vxworks <allcaps> api </allcaps> documentation . found when implementing the unit test improvements in # <number> . this issue is generally only reproducible in ut where taskspawn can be made to fail . in normal <allcaps> fsw </allcaps> / runtime use , the taskspawn call is not likely to fail , and this issue cannot be seen . <section> build <allcaps> osal </allcaps> coverage tests ( see # <number> ) and confirm passage of all tests . <section> all unit tests pass , fixes a failure in one test due to this incorrect error test . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"improve coverage on <allcaps> osal </allcaps> unit tests <section> fixes issue # <number> , improving coverage of shared and vxworks modules in the <allcaps> osal </allcaps> coverage tests . <section> <number> . build coverage using : <code> <number> . make and execute all unit tests for shared and vxworks implementations . <number> . run "" lcov "" to collect results : <code> <number> . examine coverage results ( use genhtml to convert to html format ) : <code> <section> code coverage is substantially improved . all non - deprecated lines are visited . before change : <code> after change : <code> <section> ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> bit <section> this fixes one very minor <allcaps> fsw </allcaps> code issue found while running ut . the return value of the vxworks "" taskspawn "" is documented to be <code> , not zero , in the event of failure . the <allcaps> fsw </allcaps> was testing the wrong value here in one instance . the only non - covered lines of <allcaps> fsw </allcaps> code are in <number> deprecated directory functions . <section> joseph hickey , vantage systems , inc ."
"fix # <number> : rename "" vxworks - ng "" and "" posix - ng "" coverage tests rename to "" vxworks "" and "" posix "" , respectively , to match the actual implementation names . the build scripts rely on the name being the same and will fail if different . fixes issue # <number> <section> build coverage test for vxworks using cmake command : <code> followed by "" make "" as usual . <section> the build completes successfully . <section> ubuntu <number> . <number> <number> - bit <section> this only fixes the specific issue of the name mismatches and subsequent build failure . there are a couple other issue tickets about coverage testing which this does not address . these will be addressed in other commits / pull requests . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> <section> covers the following pull requests : - # <number> - unit test warnings ( merged to rc branch ) - # <number> - os_timerset return os_error on <number> - # <number> - os_timerset <allcaps> api </allcaps> update - # <number> - function description block updates ( merged to rc branch ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> only functional change is os_timerset returns os_error on <number> , see pull requests for full details <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"wrap os_taskregister in omit_deprecated define comments suggest this function is obsolete , wrap in <hashtag> if def </hashtag> so code can easily be checked for dependence ."
scrub and remove depreciated elements common_types . h - boolean typedef - software_big_bit_order define - software_little_bit_order define and likely others .
resolve klocwork issues found in <number> . 1 a see attachment
"os_api_init in the <allcaps> bsp </allcaps> from # <number> comments : <allcaps> ccb </allcaps> had quite a lot of discussion around this , and i think the concensus was that in the long term , the responsibility for initializing <allcaps> osal </allcaps> moves into bsps , and we allow all <allcaps> osal </allcaps> entry points to assume that os_api_init has been called , rather than having it be a runtime check . should also update the related unit tests ."
"semaphore apis do not allow for desired signals to be handled from the original reporter : "" the call to os_interruptsafelock ( ) blocks all signals in order to force mutual exclusion with signal handlers . however , it is often the case that the semaphore we are waiting on is given inside a signal handler , which now is never executed because the signals are blocked . this results in deadlock . """
"os_moduleload should copy the module before loading . many os ' s will allow you to modify / overwrite a shared library and any running executables that have loaded that library will be immediately affected ( likely causing a crash . ) clearly missions will want to upload updates to modules and not have them affect the running cfe . a simple solution is to copy the module library file to a temporary file . yes this will increase the storage space required , so a <hashtag> define </hashtag> switch to enable this behavior should be used to ensure folks know this is going to happen ( or they risk crashing the cfe if they upload a module file directly over the existing module file . ) ( note that file locking mechanisms are unreliable in many os ' s . )"
"pc - linux test results for <allcaps> osal </allcaps> <number> . <number> ( in response to cfs <allcaps> ccb ai </allcaps> <number> ) . this ticket holds the test results for <allcaps> osal </allcaps> <number> . <number> ( <number> . <number> with # <number> changes applied ) . results of interest : * ran the functional tests and unit tests twice , once for the default mqueue implementation , and once for the socket implementation . * the only difference between them was the expected queue depth semantics problem with sockets , resulting in one expected unit test failure ( see # <number> discussion ) . execution notes of interest : * executed on x86_64 machine , - m32 edit in osal - config . mak required . * encountered # <number> , and required a manual edit before testing . * there was a minor build problem with the osloader unit test (x 8 6 _64 test files were built , instead of the requested <number> - bit item under test ) . a re - build using a makefile in the osloader - test was required . (# <number> ) without this the osloader unit tests failed on this x86_64 platform . there were differences ( improvements ) in these unit test results compared to the <allcaps> osal </allcaps> <number> . <number> unit test results in the tarball . the released results had more failures , whereas these current tests had none . could be a packaging problem ? details : * ut_oscore : all tests now passing ( was <number> failures ) , only one is now not - applicable ( was <number> ) , overall several formerly - failing and n / a tests were not executed ( quick look : not found in unit test source code either , so looks intentional ? ) . * ut_osfile : all tests now pass ( was <number> test setup failure ) * ut_osfilesys : all tests pass * ut_osloader & ut_osnetwork : all tests pass , identical results as <number> . <number> files * ut_ostimer : all tests now pass ( was <number> failure ) attached files : * delivered <allcaps> osal </allcaps> <number> . <number> test results from the tarball ( for comparison ) * mqueue test results for this version * socket test results for this version * test notes * script used to execute the tests filed under # <number> ."
"add <allcaps> api </allcaps> to read tick counter from timebase object the "" timebase "" <allcaps> osal api </allcaps> ( already merged ) should include the ability to read the internal counter value . this can cover the same use - cases that the old trac # <number> was targeting , without the pitfalls that were brought up with that solution ."
"utlist can use malloc ( <number> ) and memcpy of <number> size data it ' s ok for memcpy to use <number> byte data , but the behavior of malloc with <number> - byte data is inconsistent across platforms . this is not a required fix , however some static code analyzers might complain . ( the size of the malloc is dependent on data passed into it . ) [ changeset : 9 3 b15ea ] ready for <allcaps> ccb </allcaps> review"
stack_size parameter should be checked for reasonable value in os_taskcreate vxworks implementation os_taskcreate calls vxworks ' s taskspawn ( ) and passes the passed stack_size parameter to it . vxworks does not appear to check this for a reasonable value . the <allcaps> osal </allcaps> should do that and then reject an unreasonable value ( < 4 k or something ) with an error code .
"ut assert library has uninitialized "" uttestdatabase "" global variable the "" uttestdatabase "" global , which is used as the primary node to the list of tests to run , is not initialized to a known state . this mostly works anyway due to the fact that most systems will zero out their <allcaps> bss </allcaps> segment automatically while loading an exe , however some systems do not do this . we should have an "" init "" function for ut assert that can be called during test setup , that can ensure that all globals are put to a known state ."
cleanup relative paths used in makefiles several of the <allcaps> osal </allcaps> makefiles use relative paths i . e . include . <repeated> / . <repeated> / osal - config . mak . use of relative paths is prone to error and requires users to maintain a pre - defined directory structure that is hidden and not clearly documented . relative paths should be replaced with environment variables to allow flexibility in mission / project directory trees .
"ostimer os_timerset may fail when testing on a vm from time to time , i observe the os_timerset test in ostimer failing when being tested in the virtual machine environment used for bamboo testing for the simple reason that the vm itself is not actually a "" real time "" process . it might be useful to work out a way to perform this test that allows for the "" squishiness "" of the vm envinroment , without giving up the tightness of the test for real targets ."
"repeated assignments without using the value ( unit test edition ) cppcheck messages : { { { src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . ( <number> more lines . <repeated> ) } } } there are two lines indicating sources outside testing , a separate bug has been filed as we may put more priority on fixing those lines than on globally smashing this bug in the test code . recommended fix methods , <allcaps> pick one </allcaps> : <number> . actually check the status variables to see if an error was returned <number> . put a <code> cast on the function call instead of storing the data that is not actually ever going to be looked at . this advertises to maintainers and to the compiler and to static analysis that we are purposefully ignoring the return value of the function ."
"cppcheck a vxworks build i need to go through the somewhat manual ( for now ) process of grinding out some cppcheck results for "" development "" osal on our lab machine that has vxworks capability ."
"overwriting unused values in variables as reported by cppcheck performance applied to the "" ic - gll - jsc - merge "" branch : variable % is reassigned a value before the old one has been used . this message is present in <number> files : { { { osal / src / os / vxworks6 / osapi . c osal / src / os / vxworks6 / osnetwork . c osal / src / tests / mutex - test / mutex - test . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_binsem . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_queues . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_tasks . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_time_int . c osal / src / unit - tests - coverage / osfileapi - test / osfileapi_testcase . c osal / src / unit - tests - coverage / osfilesys - test / osfilesys_testcase . c osal / src / unit - tests - coverage / osloader - test / osloader_testcase . c osal / src / unit - tests - coverage / ostimer - test / ostimer_testcase . c osal / src / unit - tests / oscore - test / ut_oscore_binsem_test . c osal / src / unit - tests / oscore - test / ut_oscore_countsem_test . c osal / src / unit - tests / oscore - test / ut_oscore_mutex_test . c osal / src / unit - tests / oscore - test / ut_oscore_queue_test . c osal / src / unit - tests / oscore - test / ut_oscore_task_test . c osal / src / unit - tests / osfile - test / ut_osfile_dirio_test . c } } } need to examine the fingered bits of code , see if any of them need fixing , and figure out how to get cppcheck to be happy ."
"make compiles with - - std =c 9 9 work <allcaps> osal </allcaps> has historically attempted to be strict <allcaps> ansi </allcaps> c90 , with obvious exceptions for cases where the code needed to use a facility that did not yet exist . compile with - - std =c 9 0 if you want to see these . the default compilation we do now does not specify that the code should be strictly conformant to any standard , so what we get in practice is <allcaps> gcc </allcaps> ' s c90 with extensions . turning up all the warnings using { { { gcc - w - wall - wextra - pedantic } } } will include a large number of very useful static code analysis checks , but will warn about the use of c99 facilities that we want to use . what i propose to do is to run a set of trial builds where the build script adjusts the compiler flags , on the fly ( no commits ) , to be : { { { gcc - - std =c 9 9 - o3 - g - w - wall - wextra - pedantic } } } this asks <allcaps> gcc </allcaps> to do as thorough a job as it can do to report any of our code that deviates from <code> . our code does require use of facilities not specified in c99 , and these facilities should be enabled , where necessary , by the use of the appropriate option feature macros . i anticipate that this will only require certain specific source files to have an annotation ( before the <code> lines ) that they are to be considered to contain <code> or <code> standard sources at a specific level of those standards . see also <allcaps> cfe </allcaps> ticket [ cfs_cfe : <number> ]"
"update <allcaps> rtems </allcaps> os_intattachhandler for the <allcaps> ppc </allcaps> ( <allcaps> gsfc </allcaps> # <number> ) <allcaps> atlas </allcaps> uses the <allcaps> osal </allcaps> with <allcaps> rtems </allcaps> on the rad750 , and had to use a different <allcaps> rtems api </allcaps> to attach interrupts . need to research this and either : a : incorporate the <allcaps> atlas </allcaps> code as - is , or b : try to update the function to use the new code for all architectures the <allcaps> atlas </allcaps> code : <code>"
"bogus usage of strncpy in unit tests there are several places in <allcaps> osal </allcaps> where the buffer overflow protection feature of the <code> function is used incorrectly , in a way that causes it to not protect against buffer overflow . correct usage is to pass the size of the destination area as the third argument , so strncpy ( ) will stop before trying to write past the end of the destination storage . incorrect usage observed is passing the length of the <allcaps> source </allcaps> string as the limiting size . the resulting behavior is : - call strlen ( ) to get length of source data . - call strncpy ( ) to copy the string - strncpy ( ) copies bytes until it sees <allcaps> nul </allcaps> or copies n bytes . - in this case , it will always copy all data , and stop before the <allcaps> nul </allcaps> . the upshot of this is <code> always copies the whole source string and never writes a terminating <allcaps> nul </allcaps> . better usage would be to present the destination buffer size as the limiting size in the 3 rd argument ( yes , <code> stops writing after writing the <allcaps> nul </allcaps> ) ."
<number> - <number> - <number> integration candidate this ticket will collect branches to be merged and tested based on the <number> - <number> - <number> <allcaps> ccb </allcaps> . further details will be added in comments .
"document stand - alone build using cmake <section> unable to replicate old make functionality with cmake in a stand - alone <allcaps> osal </allcaps> repo <section> document how to build , execute coverage tests , execute functional tests , and report coverage using cmake ( or if the capability does not exist , add it ) . <section> update build / * <section> n / a <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"stand - alone posix - ng coverage test fails to build <section> posix - ng coverage tests fail to make <section> steps to reproduce the behavior : from a clean directory with base_dir =( your cfs base directory ) <code> builds up to making ut_posix - ng_osapi with the following error : <code> <section> clean build , and execute / pass with make test <section> did not investigate <section> - cfs development server ( vm ) - os : linux <number> . <number> - <number> - generic - versions : rc - <number> . <number> bundle <section> n / a <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> : update function description blocks across <allcaps> osal </allcaps> <section> fix # <number> update inline block comments in function / file headers across all of <allcaps> osal </allcaps> and ensure consistency with the code itself . - all documentation covering the specific details , inputs / outputs and return values should be on the function _declaration_ , not the definition . - the definition should also contain a block comment for visual distinction in the source file , but should be brief and refer back to the prototype / declaration for detail . any detail information that was indicated only with the definition is moved to the declaration . - add doxygen tags / markup to external / public <allcaps> api </allcaps> block comments and expand the descriptions of these functions where needed . - add block comments to the internal <allcaps> api </allcaps> prototypes , but _not_ as doxygen tags / markup . note these functions are internal use , not part of the public <allcaps> api </allcaps> , and are not necessarily intended to be stable across <allcaps> osal </allcaps> releases like the public <allcaps> api </allcaps> is . - removed stray prototypes for functions where there was no actual definition / implementation . <section> : all changes are primarily confined to comments , except where unused / unimplemented prototypes were removed . <section> rebuilt <allcaps> cfe </allcaps> / <allcaps> osal </allcaps> per default config , with unit test enabled . confirm build as successful and unit tests execute . <section> no impact to behavior <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update documentations for os_timerset <section> update timerset and timerdelete <allcaps> api </allcaps> documentations . <section> none <section> none <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update os_timerset to return os_error <section> update os_timerset to return os_error when both parameters are zero . fix # <number> <section> steps taken to test the contribution : <number> . build steps <number> . modify sample app to make os_timerset <allcaps> api </allcaps> call with both parameters as zero <number> . verify return . <section> - <allcaps> api </allcaps> change : os_timerset <section> - hardware - os : ubuntu <date> - cfs <number> , groundsystem <number> . <number> , <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"<allcaps> osal </allcaps> headers define a shared memory <allcaps> api </allcaps> that is not actually implemented anywhere <section> the <code> header defines several prototypes e . g . <code> . however , these functions are not implemented anywhere , and are not used by <allcaps> cfe </allcaps> nor <allcaps> cfs </allcaps> apps . <section> n / a - this is unused code . <section> the headers should not include these prototypes if they are not implemented and there is no plan or requirement to implement them . <section> <code> <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> unit test warnings <section> fixes # <number> - remove unused variable - add local function prototype where missing - qualify all pointers to string literals as <code> <section> rebuild <allcaps> osal </allcaps> per default configuration with unit tests enabled re - ran all unit tests and confirm passage <section> no warnings generated when using ` - wall - werror - std =c 9 9 - pedantic - wwrite - strings - wstrict - prototypes ' <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"many compiler warnings in unit tests when using strict compiler flags <section> for historical backward - compatibility reasons <allcaps> ansi c </allcaps> defines string literals as <code> type , but these strings are typically put into an <code> section on modern processors / linkers , and this section is usually write - protected . if code actually attempts to modify this value , it will generate a segmentation fault and crash . building with <code> causes the compiler to treat string literals as <code> instead , thereby generating a warning if passed or assigned to a non - const pointer value . <section> configure with <code> and observe many warnings generated in the unit test code . <section> the build should be free of warnings , such that <code> can be enabled by default . <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"release candidate <number> merge to master <section> bulk merge to <number> and version update <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> , updated to latest cfe / <allcaps> osal </allcaps> / <allcaps> psp </allcaps> rc branches and setup / built via standard instructions <number> . ran cfe and observed version update <code> <section> major behavior changes will be documented in the <allcaps> vdd </allcaps> upon release ( no major / requirements updates ) - last gen build no longer included - refactored shared code - numerous bug fixes and improvements ( no significant <allcaps> api </allcaps> changes ) <section> - cfs development server - ubuntu <number> . <number> , <number> . <number> - <number> - generic , x64 - <number> . <number> bundle with this update <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added automated build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <number> . verified that each unit test runs and passes <section> - auto build will be performed whenever new code is pushed to github - unit tests will be executed <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"rtems timer can not be disabled i think rtems os_timerset ( ) not satisfy it ' s description in <allcaps> api </allcaps> document image2018 - <number> - 1 _17 - <number> - <number> <img> <url> in <allcaps> posix api </allcaps> , call os_timerset ( ) with "" start_msec = <number> "" causes timer stop but rtems just ignore that parameter i hope to change <allcaps> osal </allcaps> rtems api code to if ( start_time > <number> ) { os_usecstoticks ( start_time , & timeout ) ; status = rtems_timer_fire_after ( os_timer_table [ timer_id ] . host_timerid , timeout , os_timersignalhandler , ( void <wink> timer_id ); if ( status ! = rtems_successful ) { return ( os_timer_err_internal ) ; } } else { * * status = rtems_timer_cancel ( os_timer_table [ timer_id ] . host_timerid ) ; if ( status ! = rtems_successful ) { return ( os_timer_err_internal ) ; }* * }"
"binary semaphore can not be set <number> when it create <url> i think this statement has a problem . if i input semaphore with initial value <number> , this statement ignores input value <number> and make it <number> is there any other intention that i missed ? if not i recommend to fix statement if ( sem_initial_value < <number> ) > > > if ( sem_initial_value <= <number> )"
added missing gitignore rules just adding gitignore rules to prevent the dirty git status when project is built : <code>
"os_queueget bugfix when user uses os_queueget with timeout paramater , then always timeot fails even if actual data aquired"
"pull request partial deadlock fix the <allcaps> osal </allcaps> api uses a global lock to perform some operations using mutex , semaphores , queues and so . this leads to a possible deadlock in the program due the following situation . let "" i "" be the timer interrupt ( sig63 ) : <code> there are some possible solutions to avoid this problem . one is to never use any <allcaps> osal </allcaps> primitives on the interrupt context , which quite limit the library . other would be block all signals during the global lock and let them be pending . this approach may introduce poor performance . other would be find out how to remove these global locks . another could be use safe locks on interrupt handler . this patch implements the blocking signals solution because it is the best trade - off of the current solutions ."
use stdint as common type bases
avoid division by zero in posix targets the tick duration in microseconds may be calculated to zero depending on the processor clock speed . maybe another solution could be using bogomips for calculating the tick duration or even querying sysfs ( i . e . / sys / devices / system / cpu / cpu0 / cpufreq / cpuinfo_max_freq ) . both have drawbacks and in some case zero will be get as a result . also bogomips has recently change and now it can be specified at build time .
