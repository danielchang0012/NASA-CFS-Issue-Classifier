text
update <allcaps> ccsds </allcaps> <number> <allcaps> url </allcaps> in macros . dox
fix nasa # <number> eci not compatible with caelum
fix <number> not compatible bootes rc2
fix <number> github actions main . yaml is not uniform
"github actions main . yaml is not uniform main . yaml borrows from cfs ' s yaml file which outlines the steps more explicitly , should update the other steps to match ."
"fix <number> add clang format and clang format gihub action copied clang - format from cfs , ran clang - format on all . c and . h files , then implemented format check github action from cfs"
"add clang - format and clang - format github action clone cfs ' s clang - format file to <allcaps> eci </allcaps> , make sure all of <allcaps> eci </allcaps> is formatted , and then implement a github actions format check based off of cfe ' s format check here <url>"
fix <number> update ci pipeline to use github actions
"<allcaps> eci </allcaps> is not compatible with cfs version caelum <allcaps> eci </allcaps> needs to be updated to work with cfs caelum . will need to update cfe api calls , ect ."
"init commit for fix <number> first go at fix <number> to make the spg4 example more noisy , have not tested it yet by deliberately triggering the time to go outside the epoch range ."
"<allcaps> eci </allcaps> is not compatible with cfs version bootes - rc2 ( cfs <number> - rc2 ) cfs tag bootes - rc2 ( cfs version <number> , release candidate <number> ? ) , or earlier , removes the boolean type , renames event type level constants , and removes <allcaps> ccsds </allcaps> parsing utilities . the current version of the <allcaps> eci </allcaps> needs to be updated to be compatible with these changes . the immediate files that i have identified as requiring changes are : fsw / src / eci_app . c fsw / src / eci_app . h faultrep / app_faultrep . c faultrep / app_faultrep_priv . h i have not evaluated the unit test files to determine if they are also affected ."
"changed the behavior of non - eci_cmd_mid messages this change aims to remove the failure condition on messages with a value command message id ( 0x 1 xxx ) . the limitations that <allcaps> eci </allcaps> was putting on messages registered with the msgrcv array does not allow for multiple commands and this change will add the ability to create any number of commands with their appropriate command structure . the previous implmenation of the <allcaps> eci </allcaps> commanding basically did one check to see wether or not the command had a function code between eci_func_code_start and eci_func_code_end but then passed the message into the receive message function . by directly passing the message with a command function code into the rcv_msg function , the only check we lose is if that command has a function code within the range . all other checks for length and queue buffer size are still tested within this function . this commit also removes the test that enforces that expects an error to be sent when receiving a command message that is not eci_cmd_mid ."
reorganize includes in eci_app . c to simplify includes for users * reorganize includes which do not depend on <code> earlier so that values are available are defined for <code> * added include of <code> to <code> so that users only need include <code> * clarified comments about include order closes # <number>
segmentation fault i am getting a seg fault when running my app ( cnt_app ) in core - linux . bin . any assistance in tracing this back to the origin would be appreciated . image <img>
testing fixes the ci pipeline / cmake build now properly collects the submodules for the pinned commit of cfs rather than continuing to use master ' s submodules .
pages this was the feature branch off doxy that added github pages support .
main page updates
refined the doxygen documentation this provides the documentation for non - developer usability such as tutorials and information on the interface file . <allcaps> tldr </allcaps> : - added main page for docs - added an eci_interface . h line - by - line explanation - added documentation for all the optional and required macros for <allcaps> eci </allcaps> - added a tutorial on how to build and run the sample apps . this section also talks about how to install an <allcaps> eci </allcaps> app into a non - fresh <allcaps> cfs </allcaps> .
"<allcaps> eci </allcaps> should only subscribe to the eci_tbl_manage_mid if tables are defined since both state and parameter tables are optional , it should make sense that eci_tbl_manage_mid should also be optional . currently , even if there are no tables defined , <allcaps> eci </allcaps> will subscribe to the table management message id ."
"implement counters for status reporting flags some users have expressed the desire for the <allcaps> eci </allcaps> to telemeter a counter of how many times each status flag has tripped , for better insight into how often the flag is set over the current flag value and the latched flag which the <allcaps> eci </allcaps> provides now ."
update <allcaps> eci </allcaps> to be compatible with cfe <number> <allcaps> eci </allcaps> has been <number> compatible for a while now but we have decided to allow <allcaps> eci </allcaps> to work with <number> ( using the make system ) and <number> ( using cmake ) rather than make a separate <number> release . since the <allcaps> nasa pace </allcaps> project uses cfe <number> and <allcaps> eci </allcaps> it makes sense that they should still be able to benefit from newer features in <allcaps> eci </allcaps> . changes : * added basic doxygen documentation to <allcaps> eci </allcaps> source code * added files needed for cmake build system to example apps to support <allcaps> cfe </allcaps> <number> * updated ci pipeline to build example apps under both <allcaps> cfe </allcaps> <number> and <number> * updated <allcaps> mid </allcaps> ' s in example apps to resolve collision with <allcaps> cfs </allcaps> default apps * fixed <allcaps> mid </allcaps> ' s in example apps so that they are consistent with the cmd / tlm header in packet
integrate with <number> this commit merges the code in the master branch with the cfe <number> to make both compatible .
fixed example apps based on <number> changes . after preparing the <allcaps> eci </allcaps> for cfe <number> we noticed a few issues with the example apps . we have taken some of the changes and altered them in a way that works in cfe <number> . these changes have been verified by hand to compile and run in the cfs environment . closes # <number> closes # <number>
fixed the <allcaps> mid </allcaps> collision in sgp4 and simple app . close # <number>
"remove unused files from the cfe <number> branch while converting to cfe <number> , we did not prune the unused files from cfe <number> . this removal would include the makefile in each of the example directories and bash scripts inside the ci directory ."
"adding missing default table and fix segfault in <number> version of sample app also , i think the changes relating to the sample app will need to be propagated to the cfe <number> version ( in master ) . can you submit a pr towards master ? _originally posted by <user> in <url>"
"cfe <number> : add a cmakelists file for building the <allcaps> eci </allcaps> source there is a duplication of effort when compiling the <allcaps> eci </allcaps> source files with a project . so far both the simple app and sgp4 prop examples both require some steps to include the <allcaps> eci </allcaps> source to compile the app . it would be nice , for build simplicity , to include a cmakelists in the <allcaps> eci </allcaps> repository that given a list of source files will compile external code along side <allcaps> eci </allcaps> . this system could be used to remove the need for each app to specify the directories of <allcaps> eci </allcaps> ' s source which was a source of duplicate code ."
"fix <allcaps> mid </allcaps> collision with sgp4prop example and cfe_time the sgp4 propagator example uses 0x 1 8 0 5 as it ' s house keeping message id but this is the <allcaps> mid </allcaps> assigned to cfe_time_cmd_mid . to prevent future collisions with the cfe - core , we should switch all the message id ' s in our examples to something like 0x[ <number> | <number> ] aa [ x] to prevent accidentally assigning to another <allcaps> mid </allcaps> ."
"update the repository target for cfe <number> since the cfe <number> branch of <allcaps> eci </allcaps> was pointing to an experimental branch in the nasa / cfe repository and cfe has pushed cfe - <number> into master , the <allcaps> eci </allcaps> <number> branch should update the links for cfe <number> . the main repository to build the entire cfe <number> has been removed from the cfe repository and has been moved to <url>"
changed <allcaps> eci </allcaps> ' s table path prefix changed the <allcaps> eci </allcaps> path prefix to match the changes made to the cmake build system in cfe <number> . close # <number>
"clarify the installation and building of the example apps in a pre - made system please specify where and what exactly to run the shell scripts contained with <allcaps> eci </allcaps> for cfs <number> . specifically to get it to work in nos3 . a step - by - step guide on how to install and an <allcaps> eci </allcaps> example app would be very useful , mentioning specifically what directories different files have to be located and run in . for example like this under the setup and build and run secions of cfs on github , located here <url>"
"the table path prefix needs to be updated for cfe <number> in the course of organizing the build for <number> , the param_tbl_path_prefix value was changed from "" / ram / "" to "" / cf / tables "" for some separation between the shared objects and the flight software tables . the arch - build . cmake file in cfe <number> does not allow for the ability to specify the output sub - directory of shared objects or tables and places everything into the target directory . the default directory of cfe <number> is "" / cf / "" which the <number> compatible version of <allcaps> eci </allcaps> should match ."
baseline testing branch as master initial commit to master branch
added support for sphinx + hawkmoth c autodocs set up the sphinx framework and integrated the hawkmoth extension . also included a quick example .
added support for sphinx + hawkmoth c autodoc this pr adds the basic framework for sphinx auto - doc with hawkmoth as well as a quick example comment for sb_init ( ) .
inconsistently named <allcaps> eci </allcaps> macros some macros <allcaps> eci </allcaps> defines do not follow the naming convention ( starting with <code> ) and should be standardized . known offenders are the event types ( which start with <code> ) and hk and table - related mids ( which start with <code> ) .
