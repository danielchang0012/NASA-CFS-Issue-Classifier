text
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove unnecessary characters from memory dump event testing performed * * build & run + unit tests . <section> increases the number of bytes that can be dumped in the event message string dramatically ( by around double , depending on the value that is set for <code> ) . <section> <user>"
fix # <number> : revert merge of pr # <number> . fixes # <number> . <section> reverts # <number> . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"revert pr # <number> the changes included in pr # <number> introduce bugs . we will revert the pr for this release , then revisit it following release . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , moved command validation out of command functions fixes # <number> , validate command before calling the command function instead of after . <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"apps should check / verify msg <allcaps> before </allcaps> calling handler copy of <url> the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : case sample_app_noop_cc : if ( sample_app_verifycmdlength ( & sbbufptr - > msg , sizeof ( sample_app_noopcmd_t ) ) ) { sample_app_noop ( ( sample_app_noopcmd_t <wink> sbbufptr ) ; } this is different from mm , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove redundant use of "" dummy "" in test code testing performed * * github ci actions all passing successfully ( incl . unit tests etc . ) <section> no change to behavior . test code is simpler and cleaner when redundant qualifiers are removed . <section> avi weiss <user>"
"remove redundant use of "" dummy "" in test code expected behavior * * simplify test code by removing redundant qualifiers . <section> avi weiss <user>"
null termination of strings - static analysis audit mm_dump . c : mm_dumpineventcmd - function should be updated to ensure <allcaps> null </allcaps> termination of eventstring . <section> function should be updated to ensure <allcaps> null </allcaps> termination of eventstring . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , <number> - bit align cmd / tlm structures adds padding to cmd & tlm data structures for <number> - bit alignment . <section> updated ground database file ( s ) and ran build verification tests against both <number> & <number> bit systems . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
cmd / tlm structures not <number> - bit aligned <section> mm command and telemetry data structures are not <number> - bit aligned . <section> <number> - bit align the data structures <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> the make and lcov tests were successfully executed on these code changes with the werror flag <url> commented out . <url> is a separate piece of work that addresses the outstanding compile errors . <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
new cppcheck errors : ' [ unreadvariable ] ' and ' [ unusedvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch mm source code . <section> cppcheck should run without errors . <section> avi <user>
"fix # <number> , add mm_segmentbreak ( ) to mm_fillmem ( ) testing performed * * ci run + build & unit tests still passing successfully . <section> removes this source of potential <allcaps> cpu </allcaps> hogging . <section> avi weiss <user>"
"fix # <number> , remove unnecessary characters from memory dump event testing performed * * build & run + unit tests . <section> increases the number of bytes that can be dumped in the event message string dramatically ( by around double , depending on the value that is set for <code> ) . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , move memory types to enums fix # <number> , created enum mm_memtype_t for memory types <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . v testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in mm that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , initialize return code to false fix # <number> , initialize return codes and remove return statements from the end of void functions <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments testing performed n / a expected behavior changes no impact to behavior system ( s ) tested on n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , requirements cleanup and add mm2000 . <number> - fix # <number> <section> na <section> none , requirements updates only ( cleanup and add missing ) <section> na <section> needs careful review . <repeated> just submitting the changes to start the process <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale mm3400 and mm3500 requirements rationale are empty : <url> <section> fill in <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove stray terminators <url> <url> <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"clarify incomplete or unclear requirements for commands some requirements are unclear or derive their meaning from the parent requirement <section> in general , rewrite <allcaps> all </allcaps> requirements in <allcaps> ears </allcaps> format . <section> fix a small subset of requirements , specifically | number | new text | | - - - | - - - | | mm2000 | when mm receives a poke command , mm shall write the command - specified number of bits of data to the command - specified <allcaps> ram </allcaps> address . | mm2000 . <number> | when mm writes data to <allcaps> ram </allcaps> , mm shall generate an event message containing the following data : < br / > <number> . address written ; < br / > <number> . length of data written ; < br / > <number> . value of the data written | | * <allcaps> new </allcaps> * <section> | when mm receives a poke command , if the data size is not <number> , <number> , or <number> bits , mm shall reject the command . | | mm2002 | when mm receives a peek command , mm shall read the command - specified number of bits of data from the command - specified <allcaps> ram </allcaps> address and generate an event message containing the following data : < br / > <number> . address read ; < br / > <number> . length of data read ; < br / > <number> . value of the data read | mm2003 | when mm receives a “ write with interrupts disabled ” command , mm shall write up to a compile - time - specified number of bytes to the command - specified <allcaps> ram </allcaps> memory address with interrupts disabled . | | mm2003 . <number> | when mm receives a “ write with interrupts disabled ” command , mm shall verify that the command - specified <allcaps> crc </allcaps> matches the computed <allcaps> crc </allcaps> of the data . | | mm2003 . <number> | when mm receives a “ write with interrupts disabled ” command , if the command - specified <allcaps> crc </allcaps> fails validation , mm shall reject the command . | | mm2004 | when mm receives a “ dump to event ” command , mm shall read the command - specified number of consecutive bytes from the command - specified <allcaps> ram </allcaps> memory address and generate an event message containing the data . | | mm2004 . <number> | when mm receives a “ dump to event ” command , if the number of bytes exceeds the maximum event message size then the command shall be rejected . | | mm2100 . <number> | when mm receives a “ load from file ” command , if the <allcaps> crc </allcaps> contained in the command - specified file fails validation , mm shall reject the command . | <section> none <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>"
"fix # <number> , remove cfe_psp_memset and cfe_psp_memcpy use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use %p for printing addresses , resolves truncation - fix # <number> <section> built and ran unit tests , passed <section> no longer truncates addresses in event messages <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit ( w / app additions ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict strict cppcheck style warning - fix # <number> <section> ci <section> none , just squashes strict cppcheck warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
