text
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , explictly size md dwell table unit test string - fix # <number> <section> ci <section> fixes build error identified in issue <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , combine multiple unnecessary <code> / <code> variables testing performed * * github ci actions all passing successfully . <section> no change to functional behavior . code is simplified - improving future maintainability . <section> avi weiss <user>"
"multiple unnecessary <code> / <code> variables can be combined code snips * * example : <url> the result of <code> is just assigned to <code> anyway , so they can be combined without any change to the functional behavior . <section> simplify code by removing unnecessary <code> / <code> variables . <section> avi weiss <user>"
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"combine consecutive , mutually - exclusive status checks code snips * * <url> <url> <section> combine into an <code> / <code> - no need to do <number> evaluations . <section> avi weiss <user>"
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
md <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"fix # <number> , remove unintentionally repeated identical assert testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . coverage unchanged : <code> <section> test code cleaner without unintentional ( and redundant ) duplicate assert . <section> avi weiss <user>"
identical assert repeated twice ( unintentionally ) code snips * * <url> <section> removing unintentionally repeated test will make cleaner test code . <section> avi weiss <user>
"md dwell table tests string error while compiling the latest version of md with unit tests enabled , my build environment gave me the following error : <code> <section> the bug relates to this line and a few others with the same variable used for testing md signatures . it seems as though the compiler does not like that <code> is implicitly a <number> byte string as opposed to a <number> byte string , which is what the function <code> expects <url> for now , simply explicitly using the size of the array in the variable definition seems to work successfully . <code> after changing to this locally wherever it appeared , my build works fine ."
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove initializations causing cppcheck errors testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . cppcheck now passes without error again . <section> avi <user>"
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch md source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , add enum to remove magic number error codes from getdwelldata ( ) testing performed * * github ci actions ( incl . build + run , md unit tests ) all passing successfully . <section> no change in logic . removes magic number error codes , making error types easier to identify . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in md that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments testing performed n / a expected behavior changes no impact to behavior system ( s ) tested on n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove unreachable code - fix # <number> removed unreachable code . <section> ci <section> none <section> ci <section> not eventually the command processing will likely be replaced w / <allcaps> api </allcaps> calls and generic support , so just doing minimal fixes here for coverage . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update code coverage for md_app_tests . c fix # <number> updated unit tests for md_app_tests . c for more coverage . <section> <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> no impact to behavior <section> os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"uncovered lines / branches - fix # <number> : found instances of branches that can never be reached by unit tests . <section> functions with statements that can never be reached : md_app . c : md_execrequest can not hit default case since command codes are already verified by <code> <url> md_app . c : md_searchcmdhndlrtbl can not reach this else statement because the message type can not be anything other than <code> or <code> <url> md_dwell_tbl . c : md_tablevalidationfunc <url> <section> <percent> coverage <section> see above <section> ci <section> none <section> haven carlson , <allcaps> nasa </allcaps>"
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> steps taken to test the contribution : ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add missing requirements rationale - fix # <number> <section> na - requirements rationale updates only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , gave md_tbl_val_null_ptr_err_eid unique id a clear and concise description of what the contribution is . changed the id of md_tbl_val_null_ptr_err_eid to <number> to be unique . fix # <number> <section> steps taken to test the contribution : <number> . push change <number> . check unit test output to confirm the event ' s new id <section> no impact to behavior <section> browser <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> , resolve ut uninit var static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"md is unable to dwell on application - private symbols md is unable to get application symbols , due to changes in cfe to make application symbols private : <url> <section> using os_modulesymbollookup should be an option to peek / telemeter app - private symbols <section> leave as - is ; implementation of os_modulesymbollookup is the same as os_symbollookup on vxworks anyways , so it would appear this would only affect linux . <section> <url> <section> john pham , northrop grumman"
"fix # <number> , resolve strict cppcheck style warnings - fix # <number> <section> ci <section> none , just squashes strict cppcheck warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"static analysis issues relative to flight code handful of static analysis issues in the "" red "" identified ( non - style issues ) . need to resolve these . filter : - file : elf - file : ut - file : cfe - file : os - file : cf_ - file : _lab_app . c ! ( significance : style ) should resolve and / or disposition the higher ranked ones at minimum . note license restricts publishing issues . imported from <allcaps> gsfccfs </allcaps> - <number>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable <section> other coverage failures : failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
incorrect unit tests are in this repository the unit tests in this repository are not the same as the tests on sourceforge and do not work correctly .
