text
"fix # <number> , uninitialized filestats in fm_getvolumefreespace - fix # <number> <section> ci <section> no static analysis uninitialized variable warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
uninitialized filestats in fm_getvolumefreespace uninitialized variable warning in codesonar : <url> from : <url> <section> run static analysis <section> no uninitialized variable warnings <section> static analysis <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , consolidate hk variables that are duplicated in the global struct testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior other than storage location of the variables as outlined above . simpler pattern , reduces duplication and eases future maintenance . <section> avi weiss <user>"
"hk struct members that are duplicated in the global struct could be consolidated code snips * * <url> <url> <section> consolidate duplicated struct members to only exist ( and be updated / accessed ) in the housekeeping struct . this more parsimonious approach is taken by several of the apps ( cf , cs , mm , sc ) as well as <allcaps> evs </allcaps> and sb in the cfe . <section> avi weiss <user>"
"fix # <number> , make padding explicit in <code> & <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change . <section> avi weiss <user>"
compiler - added implicit padding in <code> & <code> code snips * * <url> <url> <section> make implicit padding explicit . <section> avi weiss <user>
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully . <section> all variables declared top of function as per cfs conventions / guidelines - eases future maintenance and improves consistency . <section> avi weiss <user>"
variables declared mid - function in test code expected behavior * * all variables should be declared at the top of the function - eases future maintenance and improves consistency . <section> avi weiss <user>
"fix # <number> , remove redundant use of "" dummy "" in test code testing performed * * github ci actions all passing successfully ( incl . unit tests etc . ) <section> no change to behavior . test code is simpler and cleaner when redundant qualifiers are removed . <section> avi weiss <user>"
"remove redundant use of "" dummy "" in test code expected behavior * * simplify test code by removing redundant qualifiers . <section> avi weiss <user>"
"fix # <number> , update command handler function message pointers and return testing performed * * github ci actions ( incl . build and run , unit tests etc . ) all passing successfully . <section> behavior largely unchanged . compiler error is now thrown if the command handler functions are invoked with *any* type other than their own specific command type . using a defined set of error return macros and the <code> return type improves code clarity and makes fm more consistent with cfe and the other cfs apps . <section> avi weiss <user>"
"use <allcaps> cfe </allcaps> pattern for command handler functions <allcaps> cfe </allcaps> has an established pattern for message dispatch routines in that : <number> . it returns a <code> ( standard return value ) <number> . it accepts a single argument which is a const pointer to the message , of the actual / unique message type ( e . g . <code> , etc ) . fm does not follow this pattern , its message processor functions return <code> and they accept the generic <allcaps> cfe sb </allcaps> message buffer rather than the specific message type . <section> make fm follow the <allcaps> cfe </allcaps> pattern <section> this makes every command handler prototype unique , so they cannot be inadvertently interchanged without a compile error ( this is a good thing ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , separate msg size verify move the <allcaps> cmd </allcaps> message input size validation to a separate function , so the command handler does not do this itself . this allows the handler to focus on the real message action as opposed to the structure of the message itself . fixes # <number> <section> build and run all tests . run fm in <allcaps> cfe </allcaps> and send commands to check behavior . <section> no impact to behavior - improve source code structure / unit separation only <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use size_t for ' size ' variables testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> variables representing size should use <code> where possible - more expressive and more compliant with the various ( relevant ) coding guidelines . <section> avi weiss <user>"
use size_t for ' size ' variables code snips * * <url> <url> <section> all size variables that can use size_t should do so - size_t is more expressive and more consistent with the relevant coding guidelines . <section> avi weiss <user>
"fix # <number> , use cfe_msg_ptr macro use of cfe_msg_ptr requires objects and members to be named correctly per cfe_msg definitions . includes other remaining cleanup items . mainly : <number> . consistency in naming of header objects <number> . consistency in naming between command names and command handler functions ( fix missing words , fix mismatch abbreviations , etc ) fixes # <number> <section> build and run all tests <section> no impact to behavior . more future proof code . <section> debian <section> joseph hickey , vantage systems , inc ."
"fm should use generated stubs directly fm appears to use generated stubs that have been modified or added to by hand . this makes it difficult when apis need to change and the stubs need an update , as the hand - edits will need manual propagation after regenerating the stubs . <section> use generated stubs directly and do not edit or modify the outputs if possible . move any extra stub objects into separate source files instead of editing the generated file . <section> this way , invoking the regenerate stubs script will not step on any of the hand - written files . <section> joseph hickey , vantage systems , inc ."
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from fm , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , change evs_register failure from sendevent to writetosyslog testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . coverage maintained at <percent> : <code> <section> failure can be successfully recorded somewhere even without the <allcaps> evs </allcaps> now . <section> avi weiss <user>"
fm tries to send an event message on failure of registering with <allcaps> evs </allcaps> code snips * * <url> <section> <code> on failure . <section> avi weiss <user>
"fix # <number> , remove superfluous assignments at the top of functions testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
superfluous assignments at the top of functions code snips * * <url> <url> <url> <url> <section> remove / combine assignments - unnecessary code . <section> avi weiss <user>
"fix # <number> , add payload submember for all cmd / tlm adds a "" payload "" submember to all cmd / tlm structs . the message content is found in this sub - structure . this matches the patterns currently implemented in <allcaps> cfe </allcaps> . fixes # <number> <section> build and run all tests <section> none expected . this _may_ affect the padding in some circumstances , but should not change anything if the headers were properly aligned to begin with . <section> debian <section> this pattern of using a payload sub - structure matches <allcaps> cfe </allcaps> and keeps things more consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove static from table definition this is not needed , and it ends up also needing a compiler - specific attribute to avoid a warning . much simpler without it . fixes # <number> <section> build and run all tests <section> none <section> debian <section> <allcaps> fsb </allcaps> coding standards restrict use of compiler - specific attributes - should limit to standard <allcaps> ansi </allcaps> / <allcaps> iso c </allcaps> . this makes it comply . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , compression selectable at source file level adds a cmake option for compression sub - component implementation . this replaces the fm_include_decompress option in fm_platform_cfg . h . currently available options are : - fslib ( should be equivalent to fm_include_decompress set ) - none ( should be equivalent to fm_include_decompress unset ) - zlib ( stub for future work ) this lays the groundwork to support compression in addition to decompression , using an external 3 rd part library if desired . fixes # <number> <section> build and run all tests <section> compression option no longer in header file - now in a cmake option with source selection . basically equivalent though . <section> debian <section> all conditional compilation ( <code> ) around compression has been removed . this comprised a fair bit of code in fm that was not being tested in any workflow because compression is usually disabled . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , generate stubs for internal functions regenerate the stubs for fm_child , fm_cmds , and fm_tbl internal units using the ut assert stub generator tool . fixes # <number> <section> build and run all tests <section> none ( but see notes ) <section> debian <section> other apis have been changed in parallel prs so those stubs are <allcaps> not </allcaps> updated here . those stubs will be updated with their respective prs ( avoids merge conflict ) . this also requires the changes from nasa / osal # <number> in order to deal with the differently - sized return values . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move app global to internal include global data structures should not be defined in the public include files , they should be private to the local source directory . unit test is justified in accessing this file directly , so provisions are also made to permit this . fixes # <number> <section> build and run all tests . sanity check on fm running in <allcaps> cfe </allcaps> . <section> no impact to behavior . private struct that was in public_inc is now back in a private header . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update const - ness of inputs correct the const qualifiers on functions in fm_cmd_utils . c . most of these functions do not modify their inputs , but were not const , except for the one function that _was_ marked const and _did_ modify its inputs ( backwards ) . fixes # <number> <section> build and run tests <section> nothing visible externally . message processors no longer modify input buffers . <section> joseph hickey , vantage systems , inc ."
"conditional compile of decompress file cmd there is a substantial amount of code that is conditionally compiled based on the <code> platform config option . while the intent is reasonable - to not require the dependency on ( large ) compression routines for users that do not need this feature - the problem is that this is disabled in the default config thus in all build and test workflows - and a significant chunk of code goes untested as a result . the <code> option disables two entire <allcaps> fsw </allcaps> functions , plus <number> - <number> more ut functions , which is quite substantial . code in any of these functions can become stale / invalid due to changes elsewhere in the <allcaps> fsw </allcaps> as fm is maintained . <allcaps> gsfc </allcaps> coding practices discourage large chunks of "" compiled - out "" code for this reason . <section> reduce the amount of code that is disabled by <code> . when this is disabled , dispatch tables probably should still include the cc and go through the basic motions , call the handler , put it in the work queue , etc . generally , only the actual call to <code> needs to be disabled . <section> this could potentially be done as a cmake compile - time option , with a source file selection . this is the way many optional components are implemented in other modules such as <allcaps> osal </allcaps> ( e . g . network sockets ) . <section> trying a basic compile of fm with <code> enabled looks like its already broken . fm itself seems ok but the fs_lib is already stale and does not compile with draco . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems <section> full name and company / organization if applicable"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"remove <code> designation from cfe_tbl_filedef objects having a global declared as <code> is supposed to be for cases where the symbol is not to be referenced outside of that compilation unit ( that is , it makes the symbol "" hidden "" , so to speak ) . it prevents other compilation units being linked with this unit from seeing the symbol . somewhere along the way , this keyword got applied to table definitions in many <allcaps> cfs </allcaps> apps . this is not required and even a bad idea for several reasons : <number> . technically , the <code> tool does need to find the symbol . ( thus if it is truly "" hidden "" it will not work - this seems to rely on the name still appearing in the <allcaps> elf </allcaps> but simply as a different type of symbol ) <number> . tables are not linked with other compilation units ( and thus no reason / justification on why the symbol name would ever need to be hidden ) <number> . <section> ( because it is a global that does not appear to be used anywhere , at least in the compiler ' s view ) <number> . in order to get around the previous issue and fix the warning , an <code> was added . attributes like this are a non - standardized extension , and these are not supposed to be used in <allcaps> fsw </allcaps> code . <section> just make it a regular ( non - static ) symbol with no special attributes - everything "" just works "" this way . <section> see <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , clean up strncpy calls call "" strncpy "" with the size parameter indicating the size of the destination buffer , rather than the input string length . a buffer overflow was avoided due to a length check already in the code , but calling the function properly should avoid a warning . fixes # <number> <section> build and run all tests send the <code> and <code> and confirm correct behavior . <section> no compiler warnings . no change to functionality . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove initializations causing cppcheck errors testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully if separate issue <url> is suppressed image <img> the log from the successful build ( with the <allcaps> gcc </allcaps> suppressions that can not be included in this pr ) can be viewed here : <url> <section> no impact on code behavior . cppcheck now passes without error again . <section> avi <user>"
new <allcaps> gcc </allcaps> warnings causing build failure [ - werror = stringop - overflow <happy> to reproduce * * run the build + run github action on the current main branch fm source code . <section> build + run workflow should run without errors . <section> avi <user>
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch fm source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , add monitor table replace the "" free space "" table with a more general disk monitoring table , which can have entries for volume free space ( which is what was there ) as well as an estimate of directory usage . table and <allcaps> tlm </allcaps> was renamed accordingly . this changes the definition of the <allcaps> tlm </allcaps> report to include the extra info , so it requires a ground system update . fixes # <number> <section> build and run fm in <allcaps> cfe </allcaps> , issue "" monitor "" command ( <number> ) and confirm correct / expected <allcaps> tlm </allcaps> is sent run all tests , confirm <percent> coverage <section> the "" free space "" command is replaced with a more general "" monitor "" command that allows for multiple types / flavors of monitoring . the volume_free_space type implements the same logic as the original free space table / command , and the newly added directory_estimate type implements the request in # <number> . <section> ubuntu <number> <section> this is effectively replacing the old free space <allcaps> tlm </allcaps> packet ( fm_free_space_tlm_mid ) with a monitor report <allcaps> tlm </allcaps> that is more general . notably , it contains a type indicator , and it can report either space used or space free depending on type . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in fm that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , added function to verify the given state of a file fix # <number> , created function to verify the given state of a file or sends an error event message . <section> unit testing <section> no impact to behavior <section> ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , use cfe_fs_initheader ( ) to initialize <allcaps> cfe </allcaps> header fix # <number> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"gateway managed storage support telemetry we need to maintain current usage tracking on a directory - by - directory bases . if fm is used to modify the contents of our directories , our tracking would not be accurate which could lead to a loss of data . for most commands to fm , we can gain the needed information by subscribing to the fm commands and querying <allcaps> osal </allcaps> directly . however , fm_delete_cc , fm_delete_all_cc , and fm_decompress_cc commands are a problem because we would not have foreknowledge of the files size before the command is executed by fm . this would cause us to traverse an entire directory to correct the usage tracking . we will have multiple remote drives . with potentially terabyte drives , traversing the directories on a remote drives is too <allcaps> cpu </allcaps> and network intensive . <section> fm_delete_cc : typedef struct { cfe_msg_telemetryheader_t tlmheader ; /* *< \ brief telemetry header */ uint32 filesize ; /* *< \ brief size of the file deleted */ char filename [ os_max_path_len ] ; /* *< \ brief delete filename */ } fm_deletefiletel_t ; fm_delete_cc : typedef struct { cfe_msg_telemetryheader_t tlmheader ; /* *< \ brief telemetry header */ uint64 freed ; /* *< \ brief bytes freed in directory */ char directory [ os_max_path_len ] ; /* *< \ brief directory name */ } fm_deletealltel_t ; fm_decompress_cc : typedef struct { cfe_msg_telemetryheader_t tlmheader ; /* *< \ brief telemetry header */ uint32 sourcesize ; /* *< \ brief size of the compressed file */ uint32 tagetsize ; /* *< \ brief size of the uncompressed file */ char source [ os_max_path_len ] ; /* *< \ brief source filename */ char target [ os_max_path_len ] ; /* *< \ brief target filename */ } fm_decompresstel_t ; <section> similar feedback telemetry on following would be nice but not required fm_copy_cc fm_move_cc fm_concat_cc maybe there a way to have a common telemetry packet that include function code . <section> add any other context about the feature request here . <section> nathan lynch <allcaps> jsc </allcaps> - er611"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize dirlistdata with zeros before using fix # <number> , zero out dirlistdata buffer in fm_childdirlistfileloop <section> unit testing <section> dirlistdata . entryname will not have garbage values . <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove return statements from void functions fix # <number> removed unnecessary return statements from void functions <section> build and run unit tests <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove unrequired internal delete command handling - fix # <number> <section> ci <section> no longer supports fm_delete_int_cc or the related strange ( out of family ) logic . fm is operator interface to file management ( even the design document says it does not do "" automated "" actions ) . <section> ci <section> could have deprecated , but can not find any external references to it so put in this pr to see if there is support for a direct removal . it did not behave as described to begin with . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> # <number> # <number> , ut cleanup , remove unreachable code , initialize filemode on os_stat failure - fix # <number> - fix # <number> - fix # <number> - fix # <number> <section> ci <section> will now initialize filemode on os_stat failure ( will not write uninitialized data ) <section> ci <section> can break up if needed , but easier to submit together since they resolve related coverage and ut issues . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unreachable code in fm_child . c , entrylength never larger than sizeof ( dirlistdata . entryname ) since both dirlistdata . entryname and tempname are both os_max_path_length , and and the os_dirent_t filename is limited by os_max_file_name , the first condition below can never be false : <url> <section> remove , the second condition is sufficient ( add comment ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
directory entries are read even after packet is full ( not necessary ) could simplify logic and avoid looping through entire directory even after packet is full : <url> <section> <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , updated code coverage limits fixes # <number> , recomputed coverage and updated the limits in the code - coverage workflow <section> pushed changes and observed results from unit test and coverage workflow <section> no impact to behavior <section> browser <section> haven carlson - <allcaps> nasa </allcaps>"
"update code - coverage count and add to workflow n / a <section> when # <number> and # <number> are merged , recompute coverage and update the limits in the code - coverage workflow <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , remove redundant conditional to support full coverage - fix # <number> removes the redundant length check . <section> ci <section> none , the element sizes are already sufficient to fit . <repeated> can not fail check without overflowing local variables . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove random numbers from unit tests several unit tests use the ut_utils_any_ * function to introduce randomness to tests that do not need it ( and might actually be hurt by it ) . see for example : <url> and following searches <url> <url> <url> <url> <url> <section> remove use of these macros where unnecessary <section> none <section> none <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>
"fm_child . c has an unreachable branch <code> is immutable in testing code coverage . therefore , full branch coverage starting on line <number> below is not possible . example code coverage result : <code> <section> the following expression can not be achieved : <code> ) <url> <section> <percent> coverage . <section> see code snip above <section> continuous integration <section> add any other context about the problem here . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"part # <number> , update code coverage increases code coverage for fm_child_tests . c and fm_cmds_tests . c a clear and concise description of what the contribution is . - part # <number> <section> <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> none <section> - os : ubuntu <number> <section> none <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fm_cmd_utils . c has branches that can not be reached ( <number> / <number> ) looking at code coverage for <url> there are several functions in fm_cmd_utils . c that have else statements that can never be reached . these functions check the return value of fm_getfilenamestate . total uncovered here is <number> lines <number> branches . <section> functions with else statements that can never be reached : - fm_verifyfileclosed <url> - fm_verifyfileexists <url> - fm_verifyfilenoexists <url> - fm_verifyfilenotopen <url> - fm_verifydirexists <url> - fm_verifydirnoexists <url> function if an if statement that can not be reached - searchopenfiledata <url> <section> <percent> coverage <section> see above <section> ci <section> none <section> haven carlson , <allcaps> nasa </allcaps>"
"fix # <number> , update code coverage for fm_cmd_utils . c - part # <number> updated unit tests for fm_cmd_utils . c to cover loadopenfiledata , searchopenfiledata , and branches . <section> steps taken to test the contribution : <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> no impact to behavior <section> - os : ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fix # <number> , remove cfe_psp_memset use on <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> - ci - versions : bundle main + this commit + added app <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , add missing rationale and allow for multiple command counters in requirements - fix # <number> - fix # <number> <section> na , requirements updates only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict cppcheck warnings - fix # <number> <section> ci <section> none , just resolves workflow failures <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
app requirement issues <number> . lc3002 . <number> & lc3002 . <number> - don ’ t see where event filter is able to be specified in action point or watchpoint definition tables . <number> . ds8000 – <allcaps> ds hk </allcaps> packet <number> . fm4000 – <allcaps> fm hk </allcaps> packet <number> . ds3000 - requirement incomplete imported from <allcaps> gsfccfs </allcaps> - <number>
"fm_delete_int_cc appears to be redundant with fm_delete_cc the doxygen comment for fm_delete_int_cc states : "" this is a special version of the <hashtag> fm delete cc </hashtag> command for use when the command is sent by another application , rather than from the ground . this version of the command will not generate a success event , nor will the command increment the command success counter . the intent is to avoid confusion resulting from telemetry representing the results of delete commands sent by other applications and those sent from the ground . "" however , this does not appear to be the case . both fm_delete_int_cc and fm_delete_cc call the same functions . it appears that fm_delete_int_cc does increment the command success counter , but does not send an event message from the child task . i think that the need for fm_delete_int_cc needs to be reevaluated and if it is needed , it should be updated to match its description . imported from <allcaps> gsfccfs </allcaps> - <number>"
"replace fm internal command code with internal <allcaps> mid </allcaps> instead currently , the fm app has an "" internal "" command code defined for a delete file request that originates from another app instead of the ground . however , the definition for that command code ( fm_delete_int_cc ) is located in a the header file fm_msgdefs . h , which is located in the app ' s "" fsw / src "" directory , and strictly speaking , not accessible by other apps . instead of using an internal command code , fm could use an internal message id ( e . g . , fm_internal_cmd_mid ) that can be defined in fm_msgids . h , which is located in the platform_inc directory . other cfs apps could then access that command <allcaps> mid </allcaps> and send the internal delete command to the fm app without reaching into what should be an fm - local header file . imported from <allcaps> gsfccfs </allcaps> - <number>"
"clarify command counter requirements allow for multiple contexts ( tasks ) some of the command acceptance check requirements are implemented at in the child task . for those requirements , it ' s the child task command error counter that increments instead of the main task command error counter . this is not really clear in fm1004 which implies a single error counter . <section> since the concept is the same and it ' s somewhat implementation dependent ( there ' s no requirement for a child task ) the suggestion is to update the rationale to state this can be the case . <section> could update each requirement that is handled by the child task , but also could result in over - specifying the design . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , move function prototypes to header file testing performed * * github ci actions all passing successfully . local testing with full cfs suite confirms app performance unaffected . <section> no change to behavior . makes the file content more consistent with the rest of cfs . <section> avi weiss <user>"
function prototypes can be moved out of <code> code snips * * <url> <section> consistent content of implementation / header files across cfs . <section> avi weiss <user>
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . local testing with full cfs suite passing all tests and showing not change to coverage . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
ci_lab <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"ci_lab integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run tests , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> make install <section> no impact to behavior <section> - ubuntu <number> <section> depends on similar pull request in sch_lab <url> . <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"moves interface definition to inc <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , check returns from <allcaps> cfe </allcaps> calls during init testing performed * * build + run cfs locally to confirm ci_lab still running fine with these changes . screenshot <number> - <number> - <number> <number> <number> <number> <img> also ran with inverse for each event ( checking if <code> ) to confirm structure and format of events is fine - they are shown here : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> program logic not changed , but new events reports will now be generated for failures generated by these <allcaps> cfe </allcaps> calls . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch cfs bundle . <section> avi <user>"
"fix # <number> , add version information to <allcaps> noop </allcaps> event testing performed * * run / build and confirmed <allcaps> noop </allcaps> command event reporting as expected . screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> adds version information to <allcaps> noop </allcaps> command to align with the other cfs components / apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , rename commandcode variable to fcncode testing performed * * standard cfs bundle tests all passed . build / run cfs and test <allcaps> noop </allcaps> and other commands with the groundsystem tool . all working fine . <section> no impact on behavior . improves code clarity and consistency in the lab apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev143 , <allcaps> psp </allcaps> v1 . <number> - rc4 + d sample app v1 . <number> - rc4 + dev35 ci lab app v2 . <number> - rc4 + dev39 to lab v2 . <number> - rc4 + dev31 <section> avi weiss <user>"
recommend using fcncode ( instead of commandcode ) terminology in the code expected behavior * * rename the <code> variable in <code> to <code> to better align with the cfe <allcaps> api </allcaps> . <section> <url> <section> avi weiss <user>
"fix # <number> , standardize ci_lab function names testing performed * * only github ci workflow actions . <section> no impact on behavior . <section> <user>"
apply standard naming convention ( ci_lab . <repeated> ) <section> copy of <url> there ' s at least one case in ci_lab as well - will scrub and ensure consistent naming convention ( ci_lab . <repeated> ) . requires a single change to the cfe startup script as well . a few files in the ground system should also be updated for consistency . <section> apply standard naming pattern ( ci_lab . <repeated> ) <section> <url> screenshot <img> <section> avi weiss <user>
"ci_lab integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , remove redundant comments pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"ci_lab integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . pr # <number> - fix # <number> , remove ' return ; ' from last line of void functions . <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in ci_lab that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"ci_lab integration candidate : caelum - rc4 + dev12 <section> pr # <number> - fix # <number> , update cmake_minimum_required <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , update cmake_minimum_required <section> fixes the warning that support for old versions will be removed the build does not actually expect such an old version fixes # <number> <section> build using cmake <number> <section> no more deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> disable warning ? <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove registration of empty <allcaps> evs </allcaps> filters <section> - fix # <number> <section> ci <section> initializes with an empty filter set ( use <allcaps> evs </allcaps> add filter command to add ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> # <number> , standardize version . h <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"ci_lab integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> nasa / cfs # <number> <section> none <section> <user>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ci_lab integration candidate : caelum + dev1 <section> pr # <number> from jphickey / fix - <number> - messagetype - conv - fix nasa # <number> , use cfe_msg_ptr conversion macro <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> ci_lab codeql reuse : <url> ci_lab format check reuse : <url> ci_lab static analyis reuse : <url> <section> <allcaps> psp </allcaps> will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"workflows overly restrictive run , missing duplicate check , format job name incorrect , remove - - quiet from cppcheck <section> branch restriction unnecessary : <url> branch restriction unnecessary , missing duplicate check , incorrect job name : <url> branch restriction unnecessary , missing duplicate check : <url> remove <code> flag to report files processed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"ci_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> ci_lab checks < <url> cfs bundle checks < <url> <section> see pr <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows ci_lab to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
typos in documentation <section> found typos md files and code comments <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>
"fix # <number> , correct typos in <allcaps> security </allcaps> . md and ci_lab_app . c <section> - fix # <number> fixed a couple of minor typos in the _text_ of : - <allcaps> security </allcaps> . md . <repeated> and in the _comments_ of : - fsw / src / ci_lab_app . c <section> none ( non - executable code ) . <section> none ( minor markdown doc and comments changes ) . <section> n / a <section> n / a <section> n / a"
"ci_lab integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard rules in codeql"
"fix # <number> , implement coding standard rules in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"ci_lab integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration fix # <number> , use zero copy <allcaps> api </allcaps> # # testing performed ci_lab checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes unnecessary call to <code> since app registration is done automatically . # # # pr # <number> demonstrates the use of the zero copy <allcaps> api </allcaps> . adds a step that obtains a buffer prior to calling os_socketrecvfrom then transmits that same buffer directly rather than copying it . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , use zero copy <allcaps> api </allcaps> <section> updates ci_lab to obtain a buffer prior to calling <code> , and then transmit that same buffer directly rather than copying it . this demonstrates use of the zero copy <allcaps> api </allcaps> . fixes # <number> <section> build <allcaps> cfe </allcaps> along with nasa / cfe # <number> and send various commands using "" cmdutil "" . confirm that commands were received correctly . <section> internal change only - no impact to external behavior . <section> ubuntu <number> <section> requires nasa / cfe # <number> as prerequisite <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> # <number> <section> bump to v2 . <number> - rc1 + dev30 and update readme
"fix # <number> , use cfe . h instead of individual headers <section> use <code> in ci_lab rather than the individual component - specific headers . the all - inclusive header should give everything needed , and be more future proof in case component names ever need to change . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> no impact <section> ubuntu <number> <section> needed for nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
ci_lab integration candidate : <number> - <number> - <number> <section> pr # <number> <section> <url> <section> none <section> ci <section> na <section> none <section> <user>
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - path theoretically limited to ci_lab , has timeout , and "" security and quality "" , and only does the build ( run not necessary for codeql analysis ) <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ci_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"ci_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , apply message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , apply message alignment pattern <section> fix # <number> ( updates related to nasa / cfe # <number> , implementing a consistent message alignment pattern ) - use cfe_sb_buffer_t for receiving and casting to command types - use cfe_msg_commandheader_t and cfe_msg_telemetryheader_t in comamnd and telemetry type definitions - use cfe_sb_transmitmsg_t to copy the command and telemetry into a cfe_sb_buffer_t and send it where needed - avoids need to create send buffers within the app ( or union the packet types with cfe_sb_buffer_t ) - eliminates references to cfe_sb_cmdhdr_t and cfe_sb_tlmhdr_t that formerly enforced alignment since these had potential to change the actual packet sizes - no need to cast to cfe_msg_message_t anywhere since it ' s available in the cfe_sb_buffer_t union <section> normal build , tested cmd / tlm interface and noops <section> none . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> see nasa / cfe # <number> <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove non - portable os_pack <section> fix # <number> - removes os_pack ( not portable ) <section> did not confirm offsets , but checked size before and after and there was no change ( <number> ) . cfs - groundsystem does not display the message , but passed unit tests and ran a few commands through the system . <section> no impact , but removes undesirable pattern <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> will update other patterns to match # <number> in a separate commit / pr . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis fix # <number> , remove non - portable os_pack <section> bundle ci on astrogeco : <url> <section> pr # <number> - replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> pr # <number> - no behavior impact , removes undesirable pattern use of <code> <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
integration candidate <number> - <number> - <number> <section> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - update the socketid field to be <code> instead of uint32 <section> ubuntu ci <section> part of < <url> <section> none <section> <user>
"fix # <number> , update ci_lab to use osal_id_t <section> update the socketid field to be <code> instead of <code> fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> <section> none . <section> ubuntu <number> <section> this makes it consistent with other modules <section> joseph hickey , vantage systems , inc ."
"close # <number> , add buildnumber and baseline <section> close # <number> <section> bundle test - <url> <section> version reporting uses version string macro and reports development versions build number . development version display shows up as <code> <section> augmented <allcaps> gcc </allcaps> docker image <url> <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> <url> <section> pr # <number> - replace references to <code> types with the <code> - provided type . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci : <url> <section> pr # <number> - apply the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle testing in ci , see <url> <section> see pr , ci_lab changes its listening port when either using a config with multiple cpus or using the - - cpuid option to override ( in pc - linux at least ) . <section> ci ubuntu : bionic <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"add git clone command to setup . separate work into a style - check stag … … e and an integration stage . <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix comment issues in recent ic - <number> merge <section> minor fixup for comments in recent merge the recent name fixes created two occurrences of <code> inside commends which was not noticed during review . minor fix . <section> sanity check only - build and run , confirm no issues . <section> none - fixes code comment issue only . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"fix # <number> , offset the <allcaps> udp </allcaps> base port per - <allcaps> cpu </allcaps> <section> avoid port conflicts when having more than one <allcaps> cpu </allcaps> within the same mission load ci_lab app . instead of binding to the port directly , add the <allcaps> cpu </allcaps> number as an offset . subtract <number> so that cpu1 remains at the same port ( <number> by default ) and cmdutil is not affected . <allcaps> note </allcaps> : the "" cpu number "" can be overridden on the command line when using the pc - linux <allcaps> psp </allcaps> , thereby also permitting the listen point to be tuned for each launch config , if necessary . <section> build using default config , ensure no errors . run <allcaps> fsw </allcaps> and test sending commands with <code> - confirm no impact when using defaults , still listens on port <number> as before and can send commands . run <allcaps> fsw </allcaps> using <code> switch , confirm that listening port has changed , observing syslog trace : <code> confirmed that <code> still works to send commands if the <code> option is given . <section> - no behavior changes in the default / example config when also running with all defaults . - ci_lab changes its listening port when either using a config with multiple cpus or using the <code> option to override ( in pc - linux at least ) . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , # <number> , # <number> , and # <number> see pr # <number> for more details <section> ci testing only <section> # <number> - use <allcaps> osal </allcaps> socket <allcaps> api </allcaps> instead of <allcaps> bsd </allcaps> sockets # <number> - drop <allcaps> pdu </allcaps> introspection code # <number> - update command and telemetry logic to match other modules and recommended conventions # <number> - collect globals as a single top - level global structure # <number> - ci again runs with clang - format <section> os : ubuntu - bionic <section> see pr # <number> and # <number> for more details <section> joseph hickey - vantage systems , inc . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"multiple cleanup items for <allcaps> ci lab </allcaps> <section> cleans up multiple aspects of the ci_lab implementation . details below . fixes # <number> fixes # <number> fixes # <number> these change sets are submitted as a single pull request , as they have inter - dependencies between them and will trigger conflicts if presented individually . this pull request still contains each fix as an individual commit , so each one can be independently reviewed . for # <number> / commit 1 5 7 aac0 : <allcaps> pdu </allcaps> introspection code in <allcaps> ci lab </allcaps> has numerous quality issues and has repeatedly been a maintenance problem , and also is of questionable usefulness . it was agreed in the <allcaps> ccb </allcaps> to drop this feature . for # <number> / commit 3 ff5cc1 : use the <allcaps> osal </allcaps> socket <allcaps> api </allcaps> instead of calling <allcaps> bsd </allcaps> sockets functions directly . this is fairly straightforward . for # <number> / commit 5 f873e0 : update the ci_lab local command / telemetry processing logic to match the recommended patterns used in other modules . this applies the recommended naming conventions , message structure , and functional structure by giving each command a dedicated handler function . <section> build for native for both debug / release builds , with unit tests enabled . confirmed normal operation of ci_lab for command ingest by running <allcaps> cfe </allcaps> and sending commands with cmdutil . <section> <allcaps> cfdp pdu </allcaps> manipulation with <allcaps> ci lab </allcaps> is no longer supported . normal command ingest behavior does not change . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"remove <allcaps> cfdp pdu </allcaps> introspection from ci_lab <section> fix # <number> : <allcaps> pdu </allcaps> introspection code in <allcaps> ci lab </allcaps> has numerous quality issues and has repeatedly been a maintenance problem , and also is of questionable usefulness . it was agreed in the <allcaps> ccb </allcaps> to drop this feature . <section> build for native platform in both debug / release config , with unit tests . confirmed normal operation of ci_lab for command ingest by running <allcaps> cfe </allcaps> and sending commands with cmdutil . <section> <allcaps> cfdp pdu </allcaps> manipulation with <allcaps> ci lab </allcaps> is no longer supported . normal command ingest behavior does not change . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> <section> merge # <number> , # <number> fix # <number> , fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> none - code style and enforcement <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , enforce standard style in ci <section> fix # <number> - ci enforcement of style <section> see ci results - no independent testing required <section> style enforced , ci will fail if new pull request does not meet expected style . <section> - ci , requires <url> to be merged to master to work <section> none <section> jacob hagement - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with ci_lab included by default and observed : <code> <number> . sent tlm_enable command , observed : <code> <number> . verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - performance id updated but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , change perfid changed to <number> , <number>"
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , unit tests read past array bounds and general cleanup - fix # <number> also consolidated "" result "" asserts using modern apis , removed low - value / high - maintenance checks on event string and type ( id is sufficient to confirm path ) . recommend a follow - on issue to replace the rest of the utassert_true uses . <section> ci ( including coverage ) <section> greatly reduced technical debt wrt unit tests ( large reduction in lines , and consistent table initialization ) <section> ci <section> note this should make the remaining bug fixes and updates easier , by reducing ut change overhead . could squash if <allcaps> ccb </allcaps> wants , just tried to break down the changes a little . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , moved command validation out of command functions fixes # <number> , validate command before calling the command function instead of after . <section> unit testing <section> no impact to behavior <section> os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"apps should check / verify msg <allcaps> before </allcaps> calling handler copy of <url> the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : case sample_app_noop_cc : if ( sample_app_verifycmdlength ( & sbbufptr - > msg , sizeof ( sample_app_noopcmd_t ) ) ) { sample_app_noop ( ( sample_app_noopcmd_t <wink> sbbufptr ) ; } this is different from sc , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , make compiler - added padding in <code> explicit testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change . <section> avi weiss <user>"
"fix # <number> , ut support for larger sc_rts_buff_size - fix # <number> ut change only . updates logic to properly test buffer fill cases . <section> ci + a setting with sc_rts_buff_size = <number> <section> none <section> - ubuntu <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
support larger sc_rts_buff_size configurations in unit test unit tests only work if <code> can be used up with < <number> packets of size <code> <section> support larger settings <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , ut fix to support sc_last_rts_with_events = = sc_number_of_rts - fix # <number> <section> ci and tested with sc_last_rts_with_events = = sc_number_of_rts <section> none <section> - ubuntu <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
should <code> be called with <code> or <code> ? code snips * * <url> <section> avi weiss <user>
"fix # <number> , remove <code> - related macros testing performed * * github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
remove <code> - related macros expected behavior * * use the direct bit - check / manipulation expression rather than the abstracted macro which is being removed . <section> avi weiss <user>
"sc relative timing discards seconds , and accumulates error <url> sc nominally gets a <number> hz wakeup , but discards seconds . if the 1 hz is right around the subsecond rollover , relative timing could accumulate a second of error on a command . for example <number> hz at <number> , then <number> would look like <number> twice , delaying the relative command to the next frame . since the next command absolute time is not calculated until the current command is sent this error would accumulate every time it happens ( could be multiple seconds "" late "" by the end of the <allcaps> rts </allcaps> . <section> code review . just started looking at this so maybe i missed something . <section> bounded , predicable errors for <allcaps> rts </allcaps> timing . worst case over an entire <allcaps> rts i </allcaps> ' d think should be bounded by the wakeup rate . <section> see above . <section> n / a <section> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sc relative timing logic based on <allcaps> cfe time </allcaps> which is not monotonic sc gets a version of cfe_time at the start of wakeup processing for calculating when to send the next command : <url> cfe time is subject to adjustments , which means <allcaps> rts </allcaps> ' s time offsets would be affected . for example , if you ask for a relative time offset of <number> seconds and adjust cfe time <number> seconds forward you will only get a relative time gap of <number> second . i ' d have thought <allcaps> rts </allcaps> ' s would use the monotonic <allcaps> psp </allcaps> time or a timer to avoid cfe time adjustment impacts . <section> just code inspection . <section> relative command times should be good to within a predicable , bounded accuracy . <section> above . <section> n / a <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
support better than <number> second resolution commanding currently <allcaps> rts </allcaps> and <allcaps> ats </allcaps> both can only command to a <number> second resolution <section> support higher resolution table time tags and check at whatever rate the wakeup is received <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , use os_stat instead of os_opencreate to verify file existence testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> simplifies function and eases future maintenance . <section> avi weiss <user>"
"fix # <number> , split up multiple - variable declaration statements testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . eases future maintenance . <section> avi weiss <user>"
split up decl . statements that define multiple variables on the same line code snips * * <url> <url> <section> split up . declarations are clearer when kept to one definition per line . <section> avi weiss <user>
"fix # <number> , replace quotes with angle brackets in / inc a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , include sc_msgdefs . h in sc_msg . h ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
include sc_msgdefs . h in sc_msg . h sc_msg . h includes macros defined in sc_msgdefs . h - which is not currently <hashtag> included </hashtag> . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , deletes duplicate header files - fixes # <number> <section> make install lcov <section> no impact to behavior <section> - ubuntu <number> <section> bug introduced in <url> this proposed pull request also restores lost comments from <url> <section> n / a <section> justin figueroa , vantage systems"
"delete duplicate header files there are duplicate files "" fsw / platform_inc / sc_msgids . h "" , "" fsw / src / sc_events . h "" , "" fsw / src / sc_msg . h "" , "" fsw / src / sc_msgdefs . h "" , and "" fsw / src / sc_tbldefs . h "" that need to be removed . <section> view fsw directory <section> no impact to behavior <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"fix # <number> , re - acquire tbl data pointer in sc_managetable - updates sc_managetable to successfully re - acquire table data pointer [ fixes # <number> ] <section> build and run all tests ' <section> sc functions nominally <section> ubuntu <number> and <number> ( workflows ) <section> dan knusten <allcaps> nasa </allcaps> / goddard"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove initializations causing cppcheck errors testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on code behavior . cppcheck now passes without error again . <section> avi <user>"
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch sc source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , move table header definitions from sc_app . h to sc_tbldefs . h testing performed * * github ci build + run & unit tests . <section> no impact on behavior . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"unit test sc_sendhkpacket_test fails the <code> unit test fails . the expected <code> and <code> are not sent to the sb . <section> <number> . create a cfs bundle that includes a cfe , <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , and sc as an app <number> . <code> <number> . <code> the <code> unit test will fail : <code> <section> this unit test should pass . i am not sure why the unit test is expecting <number> for the first and middle element and <number> for the last element in <code> . also not sure why the first and middle elements use different asserts compared to the last element but these do not appear to affect the behavior as they result in the same assert . <section> /* check first element */ utassert_true ( sc_operdata . hkpacket . rtsexecutingstatus [ <number> ] = = <number> , "" sc_operdata . hkpacket . rtsexecutingstatus [ <number> ] = = <number> "" ); / / fails utassert_true ( sc_operdata . hkpacket . rtsdisabledstatus [ <number> ] = = <number> , "" sc_operdata . hkpacket . rtsdisabledstatus [ <number> ] = = <number> "" ); / / fails /* check middle element */ utassert_true ( sc_operdata . hkpacket . rtsexecutingstatus [ <number> ] = = <number> , "" sc_operdata . hkpacket . rtsexecutingstatus [ <number> ] = = <number> "" ); / / fails utassert_true ( sc_operdata . hkpacket . rtsdisabledstatus [ <number> ] = = <number> , "" sc_operdata . hkpacket . rtsdisabledstatus [ <number> ] = = <number> "" ); / / fails /* check last element */ utassert_int32_eq ( sc_operdata . hkpacket . rtsexecutingstatus [ lastrtshkindex ] , <number> ); / / fails utassert_int32_eq ( sc_operdata . hkpacket . rtsdisabledstatus [ lastrtshkindex ] , <number> ); / / fails ` ` ` <section> - hardware - os : <number> . <number> - ubuntu - versions : cfe v7 . <number> - rc4 + dev143 , osal v6 . <number> - rc4 + dev87 , psp v1 . <number> - rc4 + dev41 <section> n / a <section> jeff st . jean <email>"
"unit test sc_startrtscmd_test_startrtsnoevents fails the <code> unit test fails . an informative <code> event is sent instead of the debug <code> event that is expected by the test . <section> <number> . create a cfs bundle that includes a cfe , <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , and sc as an app <number> . <code> <number> . <code> the <code> unit test will fail : <code> <section> this unit test should pass . i believe this is due to the inclusive comparison on in fsw / src / sc_rtsrq . c <url> but i am not intimately familiar with the expected behavior here . <section> sc_rtsrq_tests . c <code> sc_rtsrq . c : <code> <section> - hardware - os : <number> . <number> - ubuntu - versions : cfe v7 . <number> - rc4 + dev143 , osal v6 . <number> - rc4 + dev87 , psp v1 . <number> - rc4 + dev41 <section> n / a <section> jeff st . jean <email>"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consolidate common patterns in sc_app . c fix # <number> , use loops to consolidate common code patterns in sc_app . c <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , consolidate functions for managing tables fix # <number> , consolidate <code> , <code> , and <code> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , consolidate loops in sc_buildtimeindextable fix # <number> , combine <number> loops in sc_buildtimeindextable ( ) <section> unit testing <section> no impact to behavior <section> ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments testing performed n / a expected behavior changes no impact to behavior system ( s ) tested on n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request haven carlson - <allcaps> nasa </allcaps>"
"fill in missing requirements rationale the following requirements have empty rationale : sc2000 . <number> , sc2002 . <number> , sc2005 . <number> , sc2007 , sc2007 . <number> , sc2008 , sc2008 . <number> , sc2008 . <number> , sc2008 . <number> , sc2008 . <number> , sc2008 . <number> , sc2008 . <number> , sc2008 . <number> , sc2009 , sc3000 , sc3001 . <number> , sc3003 , sc3003 . <number> , sc3003 . <number> , sc3003 . <number> , sc4001 . <number> , sc4001 . <number> , sc4003 , sc4004 , sc4005 or use query : <code> <section> fill in missing rationale <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove stray ut printf and clean related test - fix # <number> <section> ci <section> removed stray printf from test output <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove stray printfs in ut and clean related test <url> <section> clean up <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove stray terminators <url> <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"configuring basic sc example hello , i am rather new to cfs and trying to get a basic example of the sc application running , but i am unsuccessful in doing so . i was hoping to get any form of guidance here to get up and running with the application . i see out of the box the application comes with sc_ats1 . c and sc_rst001 . c to serve as baseline examples of stored commands that can be sent . i am trying to get those two example tables to work . my cfs build is a freshly cloned v6 . <number> . a to a ubuntu <number> vm . the <allcaps> sch </allcaps> application ( version rc - <number> . <number> ) has been installed and is up and running correctly . furthermore , the sc application version <number> . <number> was cloned into the apps directory . inside , the <allcaps> sch </allcaps> cfs / apps / sch / fsw / tables / sch_def_msgtbl . c file , i changed : <code> then in the cfs / apps / sch / fsw / tables / sch_def_schtbl . c file , i changed : <code> <code> in addition , my sc cmakelists . txt file is changed to the following : <code> after compiling the project , running the script . / core - cpu1 in build / exe / cpu1 i get the following output : <code> is there a step that i am missing or have done incorrectly up to this point ? i am noticing that there is no <allcaps> rts </allcaps> table loaded but i am unsure of the steps to follow to load one . any help is greatly appreciated . thank you !"
"fix # <number> # <number> # <number> , code coverage improvements topics separated by commit , but submitted together to achieve <percent> coverage - fix # <number> - fix # <number> - fix # <number> <section> ci <section> none , just refactors to remove redundant conditions <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use real message types in tables - fix # <number> note so far this is just partial / example , is not backwards compatible with caelum framework and has a dependency on nasa / cfe # <number> . marking as draft for now . <section> ran with the cfe changes , confirmed noops were sent / received using the following cmds : <code> <section> behavior is the same , just makes table maintenance easier and slightly more portable across different endian systems and w / different header implementations . <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit / repo and additions to build / run sc as well as the commit that adds the macro header macro <section> depends on cfe update nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> rts </allcaps> not loaded event no longer implies failure in text - fix # <number> rewords event and simplifies unit test <section> ci <section> event text no longer implies failure <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict cppcheck style warnings - fix # <number> <section> ci <section> none , just squashes strict cppcheck style warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
"sc untestable branch condition sc has an untestable branch condition in sc_state . c sc_updatenexttime . the function checks the rtsnumber using <= sc_number_of_rts . however , the sub function called before the check , sc_getnextrtstime , guarantees that the rtsnumber cannot ever exceed sc_number_of_rts . imported from <allcaps> gsfccfs </allcaps> - <number>"
"create test a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"fix # <number> , fixes errors in ic bundle workflow file addresses issue # <number> . <section> generated ic branch in fork . <section> no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / mcp750 - vxworks / inc / psp_version . h no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / pc - linux / inc / psp_version . h no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / pc - rtems / inc / psp_version . h <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"formatting issues with icbundle workflow <section> similar to nasa / cfe # <number> . there are some small formatting issues that should be corrected in the changelog / version . h updates made by the icbundle workflow : <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / mcp750 - vxworks / inc / psp_version . h <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / pc - linux / inc / psp_version . h <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_psp_impl_build_number . <repeated> "" in fsw / pc - rtems / inc / psp_version . h <section> steps to reproduce the behavior : <number> . push a code change to a user - owned feature branch <number> . submit a pull request for that code change <number> . go to the "" actions "" tab in github and run the "" integration candidate bundle generation "" workflow with the pr number as the input argument for the field labeled "" the pull request numbers to include ( comma separated ) : "" <number> . wait for the workflow to complete <number> . inspect the newly updated / generated "" integration - candidate branch "" <number> . observe the changes made to the fsw / mcp750 - vxworks / inc / psp_version . h , fsw / pc - linux / inc / psp_version . h , and fsw / pc - rtems / inc / psp_version . h files by the workflow <section> <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in fsw / mcp750 - vxworks / inc / psp_version . h <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in fsw / pc - linux / inc / psp_version . h <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in fsw / pc - rtems / inc / psp_version . h <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"implement vxworks sysmon <section> implement a vxworks sysmon to calculate <allcaps> cpu </allcaps> utilization . <section> none . <section> add any other context about the feature request here . <section> full name and company / organization if applicable anh van , <allcaps> gsfc nasa </allcaps>"
"fix # <number> , implement <allcaps> rtems </allcaps> sysmons a clear and concise description of what the contribution is . fixes <number> , implemented a rtems sysmon not fully tested for <allcaps> smp </allcaps> <section> steps taken to test the contribution : <number> . build with rtems <number> / <number> <number> . modify sample app to call and run rtems_sysmon <number> . make <allcaps> simulation </allcaps> = i686 - rtems6 / i686 - rtems5 prep <number> . make insall <number> . run on qemu <section> none <section> - simulated : - i686 - rtems5 / <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions . anh van , <allcaps> gsfc </allcaps>"
implement <allcaps> rtems sysmon </allcaps> <section> <section> implement a version of linux_sysmon for rtems <section> none <section> none <section> full name and company / organization if applicable anh van . <allcaps> gsfc </allcaps>
"<allcaps> rtems </allcaps> . cmake : add quotes around ${ rtems_bsp_c_flags } . without the quotes , only the first argument is actually passed to the compiler by rtems - syms . a clear and concise description of what the contribution is . - this change ensures that all flags from <code> are passed from <code> to the compiler . <section> steps taken to test the contribution : <number> . only tested to check if compilation succeeds . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : n / a - behavior change : x <elongated> ( if applicable ) before : the only flag that <code> passes to the compiler is <code> . this causes a crash because the compiler assumes the wrong floating point <allcaps> abi </allcaps> . <code> after : all flags are correctly passed to the compiler . the floating point <allcaps> abi </allcaps> is correctly specified . <code> <section> - hardware : raspberry pi <number> . - os : building on ubuntu <number> for <allcaps> rtems </allcaps> <number> . - versions : <allcaps> psp </allcaps> <code> . <section> n / a <section> n / a <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - jacob killelea / personal"
static analysis warnings <section> several coding violations were flagged by software assurance . we need to adjudicate the warnings defined in the attached spreadsheet . staticanalysiswarnings . xlsx <url> <section> dan knutsen <allcaps> nasa </allcaps> goddard
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev47 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , create workflow for ic bundle generation a clear and concise description of what the contribution is . - addresses issue # <number> . <section> generated ic branch in fork . <section> adds new workflow for integration candidate branch generation . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps> <number>"
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , replace hand - written function names with __func__ testing performed * * github ci actions all passing successfully and local cfs bundle tests confirm no issues . <section> no change to behavior . <section> avi weiss <user>"
a few hand - written function names in printf strings could be updated to use <code> code snips * * <url> <url> <section> use the <code> predefined identifier where possible to lower future dependencies to updating hand - written comments . <section> avi weiss <user>
"fix # <number> , adds generic driver interface and linux sysmon module defines an "" iodriver "" interface with a simple module id + opcode + argument interface , which can be extended as necessary for different purposes . also adds a "" linux_sysmon "" module that implements this interface to provide system monitoring capabilities . this includes , but is not limited to , the <allcaps> cpu </allcaps> utilization that hs needs . fixes # <number> <section> build and run <allcaps> cfe </allcaps> with ( patched ) hs , observe <allcaps> cpu </allcaps> utilization getting reported correctly via the <allcaps> psp </allcaps> module <section> adds "" iodriver "" pluggable / extendable interface , and "" linux_sysmon "" for health monitoring <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace exit ( <number> ) and exit ( - <number> ) with exit_failure macro testing performed * * github ci actions all passing successfully . tested locally to confirm no change to test outcomes or coverage . <section> no change to behavior . the macros are more expressive and potentially more portable . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
replace exit ( <number> ) and exit ( - <number> ) with preferred macro exit_failure expected behavior * * recommend replacing with the more expressive and more portable <code> or ' exit_success ' macros . <section> <url> <url> <section> avi weiss <user>
"fix # <number> , cleanup and add doxygen for cfe_psp . h testing performed * * just github ci . <section> documentation changes only . <section> avi weiss <user>"
"fix # <number> , align mismatched function prototype / implem . parameter names testing performed * * github ci actions all passing successfully . local test build - <percent> tests passing successfully . <section> no change to behavior . code clarity and consistency improved . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
scrub for mismatched function prototype / implementation parameter names expected behavior * * mismatched parameter names can be confusing for maintenance and application programming . best for them to match for the sake of code clarity . <section> avi weiss <user>
"must ' else if ' constructs always have a final ' else ' ? <section> do the coding guidelines ( or general cfs custom ) require all <code> constructs to have a final ' catch all ' <code> block ? if so , there are a couple of remaining cases here in <allcaps> psp </allcaps> that are missing one . <section> <url> <section> 1 st case can simply be replaced by an <code> ( there are only <number> options for the validity flag ) or just leave as is , but add an empty <code> at the end to make it explicit ) . screenshot <number> - <number> - <number> <number> <number> <number> <img> note : there is <number> more case in the test code <section> avi weiss <user>"
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev34 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , separate network logic in pc - rtems to support generic targets - fix # <number> <allcaps> note </allcaps> : really this is just a draft proof of concept to show this can be used generically if the network config is removed <section> spot checked with leon3 <allcaps> qemu </allcaps> . <section> eventually plan to use source selection to include platform specific config . <repeated> or consider making this generic in some other way . <allcaps> psp </allcaps> module would be nice but i am not aware of a way to select from a toolchain file or based on platform without making another psp . <section> leon3 <allcaps> qemu </allcaps> , see <url> <section> depends on an as - yet submitted toolchain file . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , squash constparameter warning in linux cfe_psp_memory . c - fix # <number> <section> ci <section> squash ci failure / cppcheck style warning <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove obsolete _using_rtems_includes_ - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , free ( close ) filedescriptor resource to avoid leak *checklist* * * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> added additional <code> for <code> which was missing before the end of the function . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> <code> freed ( closed ) before going out of scope , avoiding slight resource leak . <section> avi <user>"
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"cfe_psp_watchdoginit method is not present in ut_psp_stub . c file <section> receiving an error during building unit tests that states "" undefined reference to ` cfe_psp_watchdoginit ' "" while testing a method that calls the cfe_psp_watchdoginit method . <section> steps to reproduce the behavior : <number> . find a production code method that uses the cfe_psp_watchdoginit <number> . write a unit test that tests that function <number> . attempt to build <number> . see error <section> build successfully , run tests with them able to use the stubbed behavior from cfe_psp_watchdoginit . <section> the production code declaration : <url> <section> - hardware : dell precision <number> - os : <allcaps> rhel </allcaps> <number> - versions : tag v1 . <number> - rc4 , also <section> branch <section> this is only one of many watchdog methods in <allcaps> psp </allcaps> ; none are present in the ut_psp_stubs . c file . i did not encounter the usage of any other of these watchdog methods , yet . <section> alan gibson <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , stop empty function catching ci workflow format checks quick fix of # <number> <section> none <section> empty function will stop catching up workflow check and causing its failure . <section> <user>"
"ci workflow check catching empty function > > <user> can you take a look at the format check workflow and fix the issue caught by it ? specifically about <code> . thank you ! > > it seems that the warning was deemed ignorable in this case , given that the pull request was merged , which is good because i was having trouble deciphering exactly what the error was referring to anyway . was it just due to the empty function ? the "" error on differences "" step of the format check workflow ( <url> looks something like this : <number> - void cfe_psp_setdefaultexceptionenvironment ( void ) <number> - { <number> - } <number> + void cfe_psp_setdefaultexceptionenvironment ( void ) { } the check recommends removing lines <number> - <number> by "" - "" before the line . the check recommends adding line <number> by showing "" + "" before the line . _originally posted by <user> in <url>"
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , create changelog file pr # <number> - fix # <number> , remove unnecessary parentheses around return values . pr # <number> - fix # <number> , remove ' return ; ' from last line of void function . <section> <allcaps> psp </allcaps> checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user> <user>"
"fix # <number> , remove ' return ; ' from last line of void function . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in <allcaps> psp </allcaps> that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev16 <section> pr # <number> - fix # <number> , correct <allcaps> psp </allcaps> module ids and lookups <section> <allcaps> psp </allcaps> checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"pass extra ldflags to <allcaps> rtems </allcaps> . cmake <section> i am working on ti tms570lc4357 soc with <allcaps> rtems </allcaps> running cfs . this soc is a <code> device . during build process , the linker does not properly pass <code> flag , i suggest passing an extra <code> to allow additional flags here <url> is my proposal commit for it , but i am still not ready to send a pr yet . without extra <allcaps> linker flags </allcaps> , the link cmd will be <code> and reported error : <code> another corresponding commit <url> is the <code> needs <code> to wrap <code> to properly use all <allcaps> c flags </allcaps> <section> build for a big - endian device on <allcaps> rtems </allcaps> <section> a clear and concise description of what you expected to happen . <section> if applicable , add references to the software . <section> - hardware : 1 1 th gen intel ( r ) core ( tm ) i7 - 1 1 8 0 0 h - os : debian <number> - versions : cfe draco - rc2 , <allcaps> psp </allcaps> for custom tms570lc4357 <section> yang hongbo , qingdao iotpi information technology ltd ."
"fix # <number> , correct <allcaps> psp </allcaps> module ids and lookups correct the cfe_psp_module_findbyname and cfe_psp_module_getapientry lookups to use the correct length of the config data ' pspmodulelist ' . the internal variable that had been used reflected the total across two lists and thus was not a correct limit . rather than having these functions search both lists , this instead keeps it to only exposing the user - specified modules in pspmodulelist , it does not expose the built - in / base modules . this makes the change simpler , as typically the built in modules would not be accessed through these functions at all . fixes # <number> <section> boot <allcaps> cfe </allcaps> and confirm modules being initialized as expected . confirm that module lookup is working and returning correct module id . <section> - will not segfault if attempting to find a module that does not exist - will return the same id that the module was initialized with ( this was different and should not have been ) <section> ubuntu <number> <section> this pr does _not_ currently add a coverage test for this code , although that should be considered as a follow on . <section> joseph hickey , vantage systems , inc ."
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev13 <section> pr # <number> - fix # <number> , remove commented out code <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , remove commented out code clean up code block that was ifdef ' d out fixes # <number> <section> build and run tests <section> none ; code was already disabled <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"remove commented out code <section> while developing other software i noticed some "" jphfix "" comment tags remaining . these should have been removed before commit but were missed ( mistake ) . <url> <section> remove commented out code <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe_psp_statustostring and cfe_psp_status_c - fix # <number> <section> added a few calls in cfe startup to exercise the function and it worked . <allcaps> psp </allcaps> coverage for shared does not look to be fully implemented so did not add tests yet . <section> none , just adds an a useful <allcaps> api </allcaps> <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this change + a few calls to exercise the new <allcaps> psp api </allcaps> <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"psp integration candidate : caelum - rc4 + dev10 pr # <number> - fix # <number> , resolve uninit var static analysis warning <section> <allcaps> psp </allcaps> checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> format check workflow failure expected for integration candidates <section> if included , identify any third party code and provide text file of license <section> skliper"
"fix # <number> , resolve uninit var static analysis warning - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> psp </allcaps> integration candidate : caelum - rc4 + dev9 pr # <number> - fix # <number> , update codeql workflow for reusable updates pr # <number> - fix # <number> , add cpu affinity example pr # <number> - fix # <number> , update <allcaps> rtems </allcaps> cmake platform file <section> rtems <number> , <number> ubuntu <number> <section> see prs <section> <allcaps> rtems </allcaps> <number> , <number> ubuntu <number> <section> part of <url> <section> none <section> skliper acudmore"
"fix # <number> , add cpu affinity example - fix # <number> <section> built and ran core , <code> replacing <allcaps> pid </allcaps> with the core - linux <allcaps> pid </allcaps> reported from top . confirmed cfe_ * tasks were all assigned to core <number> ( mask = = <number> ) , the rest floated ( mask = = ff ) . <section> tasks w / the name starting with cfe_ and their children are now assigned to core <number> <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> note we would not actually have to merge this . <repeated> it ' s just an example . it works though , and merging it will ensure it does not rot . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update <allcaps> rtems </allcaps> cmake platform file please note : this pr depends on cfe pr <number> : <url> - fixes # <number> updates the <allcaps> rtems </allcaps> . cmake platform file to account for : - differences in <allcaps> rtems </allcaps> <number> , <number> , <number> . x , and the gaisler provided <allcaps> rcc </allcaps> toolchain - building the cfe core as a standalone executable or a dynamically loaded module <section> i built pc - rtems for <allcaps> rtems </allcaps> <number> and <number> and ran them both on the ci containers . this was with : <url> applied <section> no impact on behavior to existing pc - rtems builds . <section> tested on <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> ci systems . ( pc - rtems ) <section> this enables upcoming <allcaps> rtems </allcaps> changes documented here : <url> <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"support <allcaps> rtems </allcaps> <number> , gaisler <allcaps> rcc </allcaps> , and dynamically loaded cfe build in <allcaps> rtems </allcaps> . cmake platform file <section> a few minor modifications to the <allcaps> rtems </allcaps> . cmake platform file are needed to support <allcaps> rtems </allcaps> <number> , gaisler <allcaps> rcc </allcaps> ( <allcaps> rtems </allcaps> <number> ) , and dynamically loaded cfe core builds . <section> modify cmake / modules / platform / <allcaps> rtems </allcaps> . cmake to add : rtems_dynamic_load variable to select how the <allcaps> cmake </allcaps> executable rule is defined add a rtems_bsp_specs_flags variable in the rtems_sys_specs_flags define to allow of toolchain file customizations . this will allow existing <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> pc - rtems platforms to still build , while enabling <allcaps> rtems </allcaps> <number> , <allcaps> rcc </allcaps> , and other <allcaps> rtems </allcaps> platforms . <section> the alternative here would be to use separate cmake platform files , which creates more cmake files to maintain and makes it more confusing to setup a new <allcaps> rtems </allcaps> target . <section> depends on the following cfe issue for minor toolchain file updates : <url> <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , update codeql workflow for reusable updates - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add <allcaps> eeprom </allcaps> read and block read / write apis <section> no <allcaps> psp api </allcaps> ' s for <allcaps> eeprom </allcaps> write block , or any <allcaps> eeprom </allcaps> reads . <section> add cfe_psp_eepromwriteblock , read [ <number> | <number> | <number> | block ] <section> none <section> # <number> this would better support <allcaps> mm eeprom </allcaps> actions with specific apis for reading writing vs the former use of the generic cfe_psp_memcpy , cfe_psp_memset . could consider deprecating all the ram <allcaps> api </allcaps> ' s since they are not really useful , the calls are surrounded w / validity checks already so not really clear why they are necessary . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , relative strict - dir - list for static analysis workflow <section> - fix # <number> <section> needs nasa / cfs # <number> in main to actually test with ci <section> will work once nasa / cfs # <number> is in <section> ci <section> depends on nasa / cfs # <number> , similar update as what ' s implemented in nasa / cf # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update static analysis workflow strict directory list for nasa / cfs # <number> <section> see # <number> , really <allcaps> psp </allcaps> was the only repo that worked right in the presence of the leading <code> applied within the shared workflow since it ' s a single directory . <section> provide directory relative to local repo such that a list will also work <section> none <section> nasa / cfs # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"apply latest contributor license agreement links <section> changes links from the old contributor license agreement location to its new location . <section> working links <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , apply latest contributor license agreement links <section> - fixes # <number> adds checklist for <allcaps> cla </allcaps> and contributing guide . <section> working links <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"psp integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> psp checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"psp integration candidate : caelum - rc4 + dev4 <section> pr # <number> - fix # <number> , remove explicit filename doxygen comments pr # <number> - fix # <number> , apply header guard standard <section> psp checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> and <number> <section> part of <url> <section> none <section> <user>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the osal codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe_psp_getcfetextsegmentinfo returns success even though it failed to get module info <section> when moduleinfoget ( ) function returns <allcaps> error </allcaps> , cfe_psp_getcfetextsegmentinfo ( ) returns cfe_psp_success <url> <section> i would think that if the <allcaps> cfe </allcaps> text segment cannot be retrieved , the function should return cfe_psp_error <section> - aitech sp0 - vxworks <number> - versions latest <section> claudio olmi - <allcaps> metecs </allcaps>"
"psp integration candidate : caelum + dev1 <section> pr # <number> from pavll / fix - <number> - sleep - before - exit - fix # <number> , sleep before exit when printing pr # <number> from jphickey / fix - <number> - stub - databuf - fix # <number> , check the address in <allcaps> psp </allcaps> get segment stubs <section> <allcaps> psp </allcaps> checks < <url> bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> <allcaps> psp </allcaps> codeql reuse : <url> <allcaps> psp </allcaps> format check reuse : <url> <allcaps> psp </allcaps> static analysis : <url> <section> <allcaps> psp </allcaps> will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the workflow simply uses <code> and the full path of the workflow . the cfs workflows , or targeted workflows , must include workflow_call and can include inputs seen below . <code> <section> keep it as is . <section> tested in forked cfs : <url> tested in forked <allcaps> osal </allcaps> : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check and restricting to main push , remove - - quiet flag <section> missing duplicate check , overly restrictive to main push : <url> remove <code> flag so files processed will be listed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , check the address in <allcaps> psp </allcaps> get segment stubs <section> checks the correct local variable ( tempaddr ) to see if the data buffer address was set by the test case fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none to <allcaps> fsw </allcaps> stub should work correctly in ut <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"get text segment stubs seem to be bugged <section> looks like the stubs are checking input values vs successful ut_getdatabuffer , which does not make sense to me since it ' s used to decide if the buffer values should be used or not : <url> <url> <section> you will get an uninitialized error on the input pointer if not already set , if it ' s nonzero and you do not set the buffer that will utilize the temp values which does not make sense to me . <section> use buffer values if passed in , otherwise use local dummy segment . <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"replace _init and _fini references in pc - linux <allcaps> psp </allcaps> <section> when compiling the cfs main pc - linux target for ubuntu <number> on <allcaps> risc </allcaps> - v , the build fails with undefined references to the "" _init "" and "" _fini "" symbols . these symbols are used by the <allcaps> psp </allcaps> to get the cfe core text segment addresses . the build works on ubuntu <number> aarch64 . these symbols are deprecated on all targets and only still exist on the x86 and <allcaps> arm </allcaps> targets to support legacy software . the <allcaps> risc </allcaps> - v target does not include them . we can replace them with other symbols such as : __executable_start for _init , and __etext for _fini . <section> just build the main branch of cfs on ubuntu <number> on <allcaps> risc </allcaps> - v . i am using the sifive hifive unleashed board , but <allcaps> qemu </allcaps> can also be used . <section> - sifive hifive unleashed board - os : ubuntu <number> server - versions : main branch ( as of <date> ) <section> alan cudmore / <allcaps> nasa gsfc </allcaps>"
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactively created for # <number>"
"psp integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , check that module type is not invalid pr # <number> - fix # <number> , do not override add_psp_module for coverage test <section> psp checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> part of < <url> <section> none <section> <user>"
"fix # <number> , do not override add_psp_module for coverage test <section> implements a differently - named function instead , which does mostly the same thing as the override had done , but does not directly re - add the original subdirectory . this does repeat some info ( e . g . the list of <allcaps> fsw </allcaps> source files ) that was not repeated otherwise , but it works in general . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> in a configuration that uses several <allcaps> psp </allcaps> modules for hardware access <section> cmake builds the <allcaps> fsw </allcaps> modules correctly <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"override of "" add_psp_module "" for coverage test gets global scope <section> in order to ( attempt to ) implement coverage test for <allcaps> psp </allcaps> modules without redefining the sources for that module , the cmake script currently redefines the <code> function to do something different when building for coverage tests . problem is , this override ends up getting global scope , not directory scope . so in the event that multiple modules are specified and if the psp library gets built first ( which will include coverage test if enabled ) , then any modules built after the psp will fail , because they use the coverage test override function rather than the proper function as defined in <code> <section> create a project utilizing several <allcaps> psp </allcaps> modules / extensions for custom hw access . modules will fail to build when enable_unit_tests is set true , even if they do not contain a coverage test , because the <allcaps> fsw </allcaps> build is using the wrong definition of the <code> function . <section> should build successfully . <section> root of the problem is this override at : <url> <section> ubuntu <section> this function definition ends up getting global scope , not directory scope , so even after returning to the parent directory , this modified definition remains active . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check that module type is not invalid <section> rather than only calling "" init "" on a "" <allcaps> simple </allcaps> "" module type , just check that it is not invalid instead . even extension types still have an init routine that needs to be called . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , including using some hw access extension modules <section> module gets initialized as it should <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , sleep before exit when printing <section> - fixes # <number> <section> - print before exit [# <number> ] <section> - considering if <number> milliseconds would be better than <number> to save time and have a print . - considering fflush ( stdout ) instead of os_taskdelay <section> paul oberosler , individual"
"fix # <number> , correct various typos in docs and comments <section> fixed various typos in <allcaps> readme </allcaps> docs , comments and explanatory text . - fix # <number> <section> none . all modifications are to non - executable code . <section> none ( minor text changes ) . code execution is unaffected . <section> n / a <section> n / a <section> n / a"
"support test override of <code> defined in <allcaps> psp </allcaps> stubs to support coverage <section> could improve coverage if the <code> could be defined by the test ( need a <allcaps> null </allcaps> case , valid case , and various error cases which can not be done all with one definition ) . <url> <section> provide a way to override / exclude the <allcaps> psp </allcaps> stub definition . <section> none <section> nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"enable "" format check "" workflow for push to all branches <section> the format check workflow only runs for pull requests or for pushes to "" main "" so it will not run on work done in forks . <section> remove branch restriction for "" push "" trigger and add "" check for duplicates "" job <section> none"
"psp integration candidate : <number> - <number> - <number> # # testing psp checks < <url> cfs bundle checks < <url> # # context part of < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , implement coding standards in codeql # # # pr # <number> fix # <number> , rename doc to docs"
"fix # <number> , implement coding standards in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"format codes <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"psp integration candidate : <number> - <number> - <number> # # describe the contribution # # # pr # <number> fix # <number> , use <allcaps> osal </allcaps> timebase for <allcaps> cfe </allcaps> timers cleans up stale code from the previous methods of generating 1 hz . adds a new <allcaps> psp </allcaps> module that instantiates an <allcaps> osal </allcaps> abstract timebase for use with cfe services . this single module is used across all psp implementations ( mcp750 , pc - linux , pc - rtems ) . results in 1 hz timing tick on mcp750 will be more accurate . no changes to linux or <allcaps> rtems </allcaps> # # # pr # <number> fix # <number> , modularize the ram , port , and eeprom access fixes segfaults when <code> routines are invoked on linux . converts <code> and <code> into modular components and removes from the "" shared "" directory . the existing implementations become the corresponding "" direct "" module , and are enabled based on the psp module selection . adds a "" notimpl "" variant where all the functions return <code> . this is used on linux or any other system where direct access is not possible . renames the existing <code> module to be <code> for consistency and to avoid confusion with the unit test stubs . # # # pr # <number> fix # <number> , psp module to implement timebase no impact to behavior . implements two <allcaps> psp </allcaps> modules to provide <code> and <code> , one for <allcaps> posix </allcaps> - compliant <allcaps> rtos </allcaps> using <code> and the other specifically for powerpc processors on vxworks that have the <code> routine . clarifies and documents the difference and use cases for <code> and <code> . adds a coverage test for the vxworks <allcaps> psp </allcaps> timebase module and provides an example of how this can be implemented for other modules . # # additional context part of < <url> # # tests psp checks < <url> cfs bundle < <url> # # third party code none # # authors"
"<allcaps> psp </allcaps> integration candidate : <number> - <number> - <number> # # change description and behavior impacts # # # pr # <number> fix # <number> , remove psp configdata global object removes unnecessary global config structure <code> and associated elements infavor of the new version <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , cleanup memory range table the mem pool stats <allcaps> tlm </allcaps> command now works on <number> - bit linux and sends out the expected telemetry packet . converts <code> to internal object ( instead of external ) that should only be accessed via the <allcaps> psp api </allcaps> . replace <code> s with <code> . use full range ( size_max ) in the linux / <allcaps> rtems </allcaps> implementation . # # testing psp < <url> bundle < <url> # # context part of < <url> # # authors <user>"
"fix # <number> , remove psp configdata global object <section> cleans up unneeded global to simplify things . this global config structure is not really necessary . the original intent was to allow dependents ( e . g . <allcaps> cfe </allcaps> ) to get vars at runtime but keep them stored within <allcaps> psp </allcaps> . however for all those cases where <allcaps> cfe </allcaps> needs <allcaps> psp </allcaps> info , an <allcaps> api </allcaps> function is defined to get the info . there should not be any need to read this variable directly . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> co - dependent with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use <allcaps> osal </allcaps> timebase for <allcaps> cfe </allcaps> timers <section> add a new <allcaps> psp </allcaps> module that instantiates an <allcaps> osal </allcaps> abstract timebase for use with cfe services . this single module is then used across all <number> implementations ( mcp750 , pc - linux , pc - rtems ) and does not need to be duplicated . cleans up stale code from the previous method ( s ) of generating 1 hz fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests make sure 1 hz timing ticks are working as expected <section> 1 hz timing tick on mcp750 will be more accurate no changes to linux / <allcaps> rtems </allcaps> <section> mcp750 vxworks <number> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> ( qemu ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , psp module to implement timebase <section> implements two <allcaps> psp </allcaps> modules to provide cfe_psp_gettime and cfe_psp_gettimebase , one for <allcaps> posix </allcaps> - compliant <allcaps> rtos </allcaps> using <code> and the other specifically for powerpc processors on vxworks that have the <code> routine . this also clarifies and documents the difference / use cases for cfe_psp_gettime and cfe_psp_gettimebase . finally this includes a coverage test for the vxworks <allcaps> psp </allcaps> timebase module , providing an example of how this can be implemented for other modules . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests confirmed timebase operation on mcp750 <section> no impact to behavior <section> ubuntu <number> mcp750 / vxworks <number> <section> this included a fair bit of investigation as to what the cfe_psp_gettime and cfe_psp_get_timebase functions actually do on mcp750 , and why they both exist to begin with . for compatibility , this keeps things mostly as they were as far as <allcaps> api </allcaps> goes ( i . e . neither function is removed / deprecated at this time ) . however now that it is documented what the difference between these functions is , <allcaps> cfe </allcaps> should probably focus on using only cfe_psp_gettime ( ) since it is more platform - agnostic . once existing use cases of cfe_psp_get_timebase ( ) have been transitioned away , it would be a good idea to deprecate it . when using this implementation the time reported by cfe_psp_gettime ( ) is sourced by the same underlying function as cfe_psp_get_timebase ( ) uses . it no longer uses the separate countdown timer within the raven <allcaps> pci </allcaps> device on the mcp750 . this should be more efficient because vxtimebaseget ( ) simply reads a local <allcaps> cpu </allcaps> register , whereas reading the raven register requires <allcaps> pci </allcaps> access and obscure conversion logic . the other benefit is that it does not wrap every <number> seconds , thereby allowing <allcaps> cfe </allcaps> time to be simplified at a future date , too . <section> joseph hickey , vantage systems , inc ."
"ensure all functions in cfe_psp . h have a stub routine defined <section> it is possible ( or even likely ? ) that the set of stub functions in the stub library is not complete . <section> before next release should do a check to make sure all functions defined in cfe_psp . h have a stub implementation defined as well as the normal / real one . <section> see # <number> for recent issue . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cleanup memory range table <section> a number of cleanup items related to the <allcaps> psp </allcaps> memory range <allcaps> api </allcaps> - make the table itself an internal object - should only be accessed via the <allcaps> psp api </allcaps> . - update to use size_t instead of uint32 - update the linux / <allcaps> rtems </allcaps> implementation to use full range ( size_max ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> issue the mem pool stats <allcaps> tlm </allcaps> command on linux , confirm that the <code> call now succeeds <section> the mem pool stats <allcaps> tlm </allcaps> command now works on <number> - bit linux , and sends out the expected telemetry packet . <section> ubuntu <number> vxworks <number> on mcp750 <allcaps> rtems </allcaps> <number> . <number> on <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , modularize the ram , port , and eeprom access <section> this is another attempt at resolving the long - standing issue of platform - specific code in the shared directory which is not easy to replace / override . convert the current "" cfe_psp_ram . c "" and "" cfe_psp_port . c "" routines into modular components , and remove from "" shared "" dir . the existing implementations become the corresponding "" direct "" module , and are enabled based on the psp module selection . also added is a "" notimpl "" variant , where all the functions return cfe_psp_err_not_implemented . this is used on linux or any other system where direct access is not possible . note this also renames the existing "" eeprom_stub "" module to be "" eeprom_notimpl "" for consistency and to avoid any confusion with the unit test stubs . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> on <allcaps> rtems </allcaps> , vxworks / mcp750 and native linux run all unit tests confirm that the "" direct "" implementation of port / <allcaps> ram </allcaps> access is used only on vxworks build confirm that the "" notimpl "" implementation is used on linux . <section> no longer segfaults if e . g . cfe_psp_port routines are invoked on linux . instead an error code is returned . <section> ubuntu <number> ( native ) mcp750 ( vxworks ) <allcaps> rtems </allcaps> <number> . <number> + <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"psp integration candidate : <number> - <number> - <number> # # # describe the contribution fix # <number> , add version file fix # <number> , adds a ut stub for cfe_psp_getkerneltextsegmentinfo # # # testing psp tests < <url> bundle tests < <url> <section> # # # pr # <number> includes <code> in the cmake source list , which was mistakenly omitted previously . # # # pr # <number> applied the patch and confirmed that cs cmake unit tests build . unit tests relying on <code> will build . # # # additional context part of < <url> # # # authors <user> <user>"
"fix # <number> , add version file <section> cfe_psp_version . c should have been included in the source list , but was mistakenly omitted in previous pr . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run unit tests <section> references to version <allcaps> api </allcaps> will now successfully link <section> ubuntu <number> <section> corrects an omission from # <number> . required for nasa / cfe # <number> to work . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add stub for cfe_psp_getkerneltextsegmentinfo <section> fix # <number> , adds a ut stub for cfe_psp_getkerneltextsegmentinfo <section> applied the patch and confirmed that cs cmake unit tests build . <section> unit tests relying on cfe_psp_getkerneltextsegmentinfo will build . <section> - ubuntu <number> - main branch of cfs bundle <section> - elizabeth timmons / <allcaps> nasa gsfc </allcaps>"
"unit test stub needed for cfe_psp_getkerneltextsegmentinfo <section> there is no unit testing stub for cfe_psp_getkerneltextsegmentinfo . this prevents unit testing the checksum ( cs ) application . <section> steps to reproduce the behavior : <number> . build cs cmake unit tests this produces the error "" undefined reference to ` cfe_psp_getkerneltextsegmentinfo ' "" . <section> unit tests should build . <section> if applicable , add references to the software . <section> - ubuntu <number> - "" eval - cert2 "" branch of the cfs repository <section> elizabeth timmons / <allcaps> nasa gsfc </allcaps>"
"psp integration candidate : <number> - <number> - <number> # # describe the contribution fixes # <number> - make <allcaps> psp </allcaps> more modular fix # <number> - use quotes for local includes fix # <number> , add contributing guide # # tests part of < <url> # # behavior changes # # # pr # <number> this is a very simple approach to addressing the issue of incompatible / non - portable code blobs in "" shared "" directory of the <allcaps> psp </allcaps> . it uses the same modular init pattern as is used elsewhere in <allcaps> cfe </allcaps> . cmake is used to generate a list of "" base "" modules correlating with the selected <allcaps> psp </allcaps> ( i . e . pc - linux , mcp750 - vxworks , etc ) . these modules are then initialized ( in order ) before the rest of <allcaps> psp </allcaps> runs . the "" direct write "" <allcaps> eeprom </allcaps> is not used unconditionally . instead the proper eeprom implementation module is selected based on which <allcaps> psp </allcaps> is selected . mcp750 uses direct write , pc - linux uses an mmap file , and pc - rtems uses a stub ( not implemented ) . it is currently not easy to override items in the "" shared "" directory even for platforms which it does not apply . for example , in the "" cfe_psp_ram . c "" and "" cfe_psp_port . c "" files this contains code that directly writes to physical memory addresses , which may work on mcp750 , but will likely segfault on an pc - linux system . the code should be better structured as modules so the "" correct "" implementation can be used for each system without breaking the other system . there really should not be much in the <code> directory ( the existence of such a directory implies its not platform - specific , but yet its in the <allcaps> psp </allcaps> ) . # # # pr # <number> replaces <code> used on non - system header <code> s with <code> # # # pr # <number> added a contributing guide that links to the main cfs contributing guide . # # additional context part of < <url> # # authors <user> <user> <user>"
"fix # <number> , use quotes for local includes <section> fix # <number> - use quotes for local includes <section> build / run unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> <section> bump to v1 . <number> - rc1 + dev82 update readme , fix <allcaps> url </allcaps> for ic - <number> - <number> - <number> entry in changelog"
integration candidate : <number> - <number> - <number> <section> <allcaps> hotfix </allcaps> - for older cmake support <section> ci <section> see prs <section> ci <section> none <section> none <section> <user>
integration candidate : <number> - <number> - <number> <section> <allcaps> hotfix </allcaps> - for older cmake support <section> ci <section> see prs <section> ci <section> none <section> none <section> <user>
"fix # <number> , modular psp implementation <section> this is a very simple approach to addressing the issue of incompatible / non - portable code blobs in "" shared "" directory of the <allcaps> psp </allcaps> . it uses the same modular init pattern as is used elsewhere in <allcaps> cfe </allcaps> . cmake is used to generate a list of "" base "" modules correlating with the selected <allcaps> psp </allcaps> ( i . e . pc - linux , mcp750 - vxworks , etc ) . these modules are then initialized ( in order ) before the rest of <allcaps> psp </allcaps> runs . fixes # <number> <section> build and run <allcaps> cfe </allcaps> for pc - rtems and pc - linux confirm the correct / expected <allcaps> eeprom </allcaps> implementation was used <section> the "" direct write "" <allcaps> eeprom </allcaps> is not used unconditionally . instead the proper eeprom implementation module is selected based on which <allcaps> psp </allcaps> is selected . mcp750 uses direct write , pc - linux uses an mmap file , and pc - rtems uses a stub ( not implemented ) . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> <section> this pattern could be applied to much more of the <allcaps> psp </allcaps> stuff . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add psp_module_api interface target <section> adds a new target for <allcaps> psp </allcaps> modules and use this to propagate the compile definitions and include directories for all <allcaps> psp </allcaps> code . this is basically analogous to the <code> interface library provided by <allcaps> cfe </allcaps> , but for <allcaps> psp </allcaps> code . it is used by <allcaps> psp </allcaps> internal components and extensions . the public / external <allcaps> psp api </allcaps> is still provided by the interface properties on the normal ( static ) <allcaps> psp </allcaps> library . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior ( build system change only ) <section> ubuntu <number> <section> nasa / cfe # <number> will also require this . <section> joseph hickey , vantage systems , inc ."
"add "" psp_module_api "" interface target <section> <allcaps> psp </allcaps> should provide and use an interface library target for all of its own modules . this simplifies the build . <section> add a <code> interface library target to go along with the <code> interface target being added in nasa / cfe # <number> . fix remaining uses of directory - scope properties and change to target properties . <section> continuation of # <number> /# <number> - where # <number> just made <allcaps> psp </allcaps> work with <allcaps> cfe </allcaps> after <allcaps> cfe </allcaps> transitioned to interface libraries , this makes <allcaps> psp </allcaps> also use interface libraries internally and for all its components . <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> pr # <number> pr # <number> <section> ci <section> see prs <section> ci <section> none <section> none <section> <user> <user> <user>
"fix # <number> , add <allcaps> psp </allcaps> version <allcaps> api </allcaps> <section> add a <allcaps> psp </allcaps> implementation of the version <allcaps> api </allcaps> discussed in nasa / cfs # <number> fixes # <number> <section> build <allcaps> cfe </allcaps> and sanity check <section> adds an <allcaps> api </allcaps> to get version info rather than using macros / globals . this just returns the values of the globals . <section> ubuntu <number> <section> attempting to make the version info patterns consistent between all components . see nasa / cfs # <number> for full background . <section> joseph hickey , vantage systems , inc ."
"implement <allcaps> psp </allcaps> version functions <section> a simple <allcaps> api </allcaps> to get version info was discussed in nasa / cfs # <number> . <section> <allcaps> psp </allcaps> should implement the same <allcaps> api </allcaps> discussed there , to evolve the current macros / globals . <section> already implemented in nasa / osal # <number> - this will make <allcaps> psp </allcaps> consistent with that . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cmake to publish interface details <section> use <code> and <code> to propagate the interface details for <allcaps> psp </allcaps> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm building successfully <section> none <section> ubuntu <number> <section> this becomes required to support nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"update <allcaps> psp </allcaps> library to work with cmake interface logic <section> <allcaps> psp </allcaps> should "" publish "" its public <allcaps> api </allcaps> interface via cmake using target_include_directories and target_compile_definitions such that other modules that link to <allcaps> psp </allcaps> ( e . g . <allcaps> cfe </allcaps> core ) will automagically get the include dirs and definitions without having to hard - code them . <section> use "" target_include_directories "" and "" target_compile_definitions "" to advertise the interface <section> required for moving toward an interface - based build . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix comment style <section> fixes # <number> remove the unused code <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"implement "" cfe_psp_getversion ( ) "" function <section> as described in nasa / osal # <number> it is better to acquire version info strings / values at runtime rather than via a macro , because of where and how it will get evaluated . <allcaps> psp </allcaps> is actually in better shape than <allcaps> osal </allcaps> / <allcaps> cfe </allcaps> because <code> currently refers to a string which is stored in global_psp_configdata . but still , it would be better and more conventional to get this value via an <allcaps> api </allcaps> call . <section> implement <code> and related apis to get the various version strings . <section> leave in global object . <section> see details in nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"<allcaps> psp </allcaps> integration candidate : <number> - <number> - <number> <section> fix # <number> , add workflow timeout and format check fix # <number> , apply standard formatting fix # <number> , add codeql analysis to workflow fix # <number> , add missing ' + dev ' string to development version report <section> see < <url> <section> pr # <number> - updates continuous integration workfow by adding static analysis with timeout and code format check . adds status badges to readme and removes old travisci artifacts . pr # <number> - adds codeql analysis to continuous integration pr # <number> - apply standard formatting to psp codebase . only changes whitespace . pr # <number> - adds missing "" + dev "" to development version output <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds psp - pc - linux , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply standard formatting <section> fix # <number> - apply standard formating <section> whitespace changes only , build confirmed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> note - did refactor a couple comments which looked ugly after autoformat , trivial to redo in a way that looks good ( to me ) and works with the autoformatting <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add workflow timeout and format check <section> fix # <number> - update static analysis with timeout and add format check into github workflow , includes badges in readme and removal of old travis config <section> ci <section> added format check in workflow and timeouts <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"support vxworks "" muncher "" for c + + <section> vxworks requires a tool called a "" muncher "" in order to generate stubs required for static destructors / constructors to run , when building for c + + . <section> run the muncher . an example implementation is below : in vxworks - <allcaps> cfe </allcaps> . cmake , change <code> to <code> somewhere in the target - specific <allcaps> psp </allcaps> cmakefiles or toolchain file , define something like ( the below is for sp0 - s , derived from the workbench - generated makefiles ) <code> <section> leave <code> unset so it can be overridden in the toolchain file . <section> n / a <section> john n pham , northrop grumman"
"psp integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , refactor cfe_psp_moduletype_t enum fix # <number> , create security policy <section> see <url> <section> pr # <number> - add <code> with instructions on reporting vulnerabilities . pr # <number> - rename <code> as <code> to reflect < <url> pr # <number> - remove unused elements in <code> enum to avoids irregular enum warning <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , add missing + dev to development version string <section> fix # <number> , version string not reported correctly increase size of <code> element of <code> to char [ <number> ] and rename as <code> <section> ran on local linux host , cfe <allcaps> evs </allcaps> output now shows correct format for psp development version <code> <section> version report matches osal and cfe for development versions . increased structure <section> ubuntu <section> none <section> none <section> <user>"
"psp integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods <section> see < <url> <section> pr # <number> - instead of accessing <code> member values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence and abstraction from the specific <code> definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
fix # <number> create <allcaps> psp </allcaps> security policy
fix # <number> create <allcaps> psp </allcaps> security policy
"fix # <number> , refactor cfe_psp_moduletype_t enum <section> fix # <number> - avoids irregular enum warning <section> build bundle and unit test ( passed ) <section> none other than eliminates static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> psp </allcaps> integration candidate : <number> - <number> - <number> <section> fix # <number> , add cppcheck github action workflow <section> see github actions < <url> <section> pr # <number> - adds cppcheck github actions workflow file <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , re - add automated static code analysis <section> fix # <number> <section> see action runs in fork : < <url> <section> static analysis workflow runs on pull requests and push . workflow saves log file as an artifact for analysis . <section> n / a <section> n / a <section> n / a"
"fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods <section> instead of accessing <code> member values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence / abstraction from the specific <code> definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . fixes # <number> <section> build and run tests , sanity check <allcaps> cfe </allcaps> <section> none <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> + pc686 ( qemu ) <section> also adjusts the conversion factors within in <code> to get a more precise result on vxworks . linux / <allcaps> rtems </allcaps> are just pass - thru to <allcaps> osal </allcaps> anyway . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> dependant on nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
change ut_clearforcefail to ut_cleardefaultreturnvalue <section> ut_clearforcefail was refactored to ut_cleardefaultreturnvalue for nasa / osal # <number> . it needs to have its name changed here as well . <section> part of nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>
"<allcaps> psp </allcaps> integration candidate : <number> - <number> - <number> <section> fix # <number> , updated readme file for pc - rtems <allcaps> psp </allcaps> and added a new readm … fix # <number> , remove obsolete os_taskregister comment <section> see <url> <section> pr # <number> - updates the readme for <allcaps> rtems </allcaps> and adds <code> . the changes include removing references to the <allcaps> cexp </allcaps> module loader , and describing the development environment setup for <allcaps> rtems </allcaps> <number> . pr # <number> - remove obsolete os_taskregister comment <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user>"
"cleanup <allcaps> rtems </allcaps> ifdefs using cmake <user> please flesh out , based on conversation from # <number> _originally posted by <user> in <url>"
reformat and refine readme for <allcaps> rtems </allcaps> - combine into a single readme and have the <allcaps> rtems </allcaps> <number> as an appendix - maybe reformat from . txt to markdown ( open a new issue ) _originally posted by <user> in <url>
"fix # <number> , remove obsolete os_taskregister comment <section> fix # <number> , remove obsolete os_taskregister comment ( really only called for es tasks . <repeated> remaining comment is what is important ) <section> none , comment only <section> none <section> n / a <section> nasa / osal # <number> <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"psp integration candidate : <number> - <number> - <number> <section> fix # <number> , refactoring ut_setforcefail to ut_setdefaultreturnvalue fix # <number> , use size_t in <allcaps> psp </allcaps> stubs <section> see events for "" github actions test "" at < <url> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing . pr # <number> - use of the size_t type instead of uint32 in unit - tests to avoid a compiler type mismatch error on some platforms . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , update readme file for pc - rtems <allcaps> psp </allcaps> and added a new readme file for <allcaps> rtems </allcaps> <number> <section> fix # <number> this change updates the <allcaps> readme </allcaps> . txt file and adds a readme_rtems_5 . txt for the pc - rtems <allcaps> psp </allcaps> . no code changes in the <allcaps> psp </allcaps> were necessary to support <allcaps> rtems </allcaps> <number> for the pc - rtems <allcaps> psp </allcaps> . the changes include removing references to the <allcaps> cexp </allcaps> module loader , and describing the development environment setup for <allcaps> rtems </allcaps> <number> . <section> no testing is required for these <allcaps> readme </allcaps> changes , but i did create both the <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> development environments according to the <allcaps> readme </allcaps> files . i also tested building and running the cfs bundle on both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . <section> - no impact to behavior <section> - hardware : <allcaps> qemu </allcaps> i686 - os : <allcaps> rtems </allcaps> - versions : <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> n / a <section> n / a <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , use size_t in <allcaps> psp </allcaps> stubs <section> recent <allcaps> api </allcaps> updates require use of the <code> type instead of <code> . this change is required at the same time as nasa / osal # <number> is merged ( dependency ) . fixes # <number> <section> build and run all unit tests . <section> none . no <allcaps> fsw </allcaps> changes , only ut stub update here . <section> ubuntu <number> <section> this is only ut stubs . <allcaps> fsw </allcaps> requires <allcaps> api </allcaps> change to use <code> and that will be a separate issue / pr . ( see # <number> ) <section> joseph hickey , vantage systems , inc ."
"refactor <allcaps> psp </allcaps> "" memory area "" <allcaps> api </allcaps> <section> <allcaps> psp </allcaps> implements dedicated apis to retrieve the pointer / size of special memory areas such as es reset area , <allcaps> cds </allcaps> , <allcaps> ram </allcaps> disk , etc . - [ ] cfe_psp_getuserreservedarea - [ ] cfe_psp_getvolatilediskmem - [ ] cfe_psp_getresetarea - [ ] cfe_psp_getkerneltextsegmentinfo - [ ] cfe_psp_getcfetextsegmentinfo - [ ] cfe_psp_getcdssize <section> - currently these apis use <code> type for sizes . this should change to <code> . - each memory area has a distinct / separate <allcaps> api </allcaps> . should change to a more extensible approach , allowing more memory blocks to be allocated without creating a new <allcaps> api </allcaps> for each one ( e . g . id based , where ids can be more easily added in the future , but functions stay the same ) . <section> creating a better <allcaps> api </allcaps> here can help clean up some issues in the <allcaps> cfe </allcaps> side where there is only one "" reset area "" that is part of es . however both <allcaps> evs </allcaps> and <allcaps> time </allcaps> core apps also store data here , and therefore this creates issues where these subsystems have to make their private data structs into public ones so they can be combined into this area . cleaning this up would help make the <allcaps> cfe </allcaps> core apps more independent and modular . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on nasa / osal # <number> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , set kernel task name for <allcaps> osal </allcaps> tasks <section> see framework - bundle ci : <url> <section> pr # <number> - use event callback mechanism to invoke pthread_setname_np ( ) such that the os kernel is informed of the <allcaps> osal </allcaps> task name . <code> filesystem on linux now has actual task name , instead of all being core - cpu1 . the <code> <allcaps> api </allcaps> requires <code> to be defined when compiling - this can be local to <allcaps> psp </allcaps> . <allcaps> hotfix </allcaps> - move variable declaration in fsw / pc - linux / src / cfe_psp_start . c <allcaps> hotfix </allcaps> - set <allcaps> revision </allcaps> to "" <number> "" to indicate development version in version . h <section> ubuntu on travis ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , set kernel task name for <allcaps> osal </allcaps> tasks <section> use event callback mechanism to invoke <code> such that the os kernel is informed of the <allcaps> osal </allcaps> task name . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> check <code> and confirm that the correct name is shown for <allcaps> cfe </allcaps> tasks e . g . cfe_evs , cfe_sb , etc . <section> <code> filesystem on linux has actual task name , instead of all being <code> . <section> ubuntu <number> <section> the <code> <allcaps> api </allcaps> requires <code> to be defined when compiling - this can be local to <allcaps> psp </allcaps> . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> - improves the module id lookup when getting the <allcaps> cfe </allcaps> core text segment info . vxworks <allcaps> psp </allcaps> should use the real module name , not assume cfe - core . o when getting text segment info <section> ubuntu ci <section> part of < <url> <section> none <section>"
"add a functional test for cfe_psp_getcfetextsegmentinfo <section> related to # <number> - really need functional tests for all the apis , but there was a bug in this routine ( if executable file name did not match hardcoded value ) that wasn ' t noticed until verification testing a different app . <section> add a functional test , should check for proper behavior or not_implemented . <section> none <section> # <number> , functional test brought up in discussion for # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ces1503 requirement compliance ( clear volatile file system ) relies on actual power cycle or wrapper logic not included in bundle <section> current requirement verbiage : upon a power - on reset , the cfe shall clear the volatile file system . when executing in the context in which a power on reset command does not actually cause a true power on reset ( typical when running locally in a development context from a command line ) the bundle does not autonomously cause a power cycle or clear the volatile file system due to the risks of doing this on a development platform . a "" wrapper "" or some other external action is necessary in this context to be compliant with ces1503 . typical real deployments have the wrapper logic to cause a power on reset ( which clears the volatile file system ) . note this also means processor resets and power on resets when running from the command line do not actually restart the software . typically there ' s a background service ( systemd or similar ) that would perform those actions . <section> on a linux system : <number> . place a file in the volatile file system - / dev / shm / osal : <allcaps> ram </allcaps> / <number> . start the software with - <allcaps> rpo </allcaps> ( power - on reset ) option . <number> . verify that the file still exists . <section> example wrapper logic should be included to demonstrate a pathway to compliance with this requirement . other potential solution - provide a setup ( docker ? vm ? ) in which this could be implemented / demonstrated . <section> os : ubuntu - <number> versions : cfe : v6 . <number> + dev295 ; osal : v5 . <number> + dev247 ; psp : v1 . <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard <allcaps> edit </allcaps> - updated per <allcaps> ccb </allcaps> discussions by jacob hageman"
"fix # <number> , do not assume a specific core name <section> improve the module id lookup when getting the <allcaps> cfe </allcaps> core text segment info . - ideally get the id directly from what was loaded by startcfecore - as a fallback use the actual <allcaps> cfe </allcaps> core name from the configdata do not use a hardcoded name . fixes # <number> <section> build and run unit tests <section> vxworks <allcaps> psp </allcaps> should use the real module name , not assume <code> when getting text segment info <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - use the osal_id_t typedef whenever dealing with an <allcaps> osal id </allcaps> value . pr # <number> - resolves build error regarding redefinition of <allcaps> ppc </allcaps> macros in the coverage test , when building on the actual ppc / vxworks target . <section> bundle ci , ubuntu <section> part of <url> <section> none <section> <user>"
"fix # <number> , redefinition of macros in <allcaps> ppc </allcaps> vxworks unit test build <section> fix # <number> resolves build error regarding redefinition of <allcaps> ppc </allcaps> macros in the coverage test , when building on the actual ppc / vxworks target . this is due to the fact that the system limits . h file implicitly provides these <allcaps> ppc </allcaps> symbols . it does not appear that there are any current test cases that depend on values of these symbols . <section> build verification only at this time ( resolves compile error ) <section> none <section> <allcaps> gsfc </allcaps> vxworks build machine ( gs582w - cfelnx ) <section> joseph hickey , vantage systems , inc ."
"no error message emitted when shmget ( ) fails . <section> on certain platforms , <code> may fail with <code> but the error handler does not call <code> . interestingly enough , replacing the <code> call with regular <code> worked and displays an error message . this happened to me with a raspberry pi zero when <code> was left at the default of <code> . this can be fixed by reducing the size to <code> . <section> steps to reproduce the behavior : <number> . clone cfs on an ubuntu <number> x86_64 host machine with <allcaps> arm </allcaps> cross compilers ( arm - linux - gnueabihf - gcc version <number> . <number> ) . <number> . copy the build config files for cpu1 to cpu2 and modify <code> for <allcaps> arm </allcaps> ( change architecture and compiler paths ) . <number> . edit <code> to compile for cpu2 . <number> . build for cpu2 , copy the directory <code> to the target machine <number> . run on the target machine ( a raspberry pi zero ) with <code> <number> . cfs exits with error code <number> ( - <number> as a signed integer ) , but no error message is observed . <section> cfs should either launch or fail with an error message . <section> cfs exits with error code - <number> but no error message . <code> <section> - raspberry pi zero - os : linux raspberrypi <date> + # <number> mon <date> <time> <allcaps> bst </allcaps> <number> armv6l <allcaps> gnu </allcaps> / linux - versions : current submodule versions listed in github . com / nasa / cfs on <date> . <section> jacob killelea"
"fix # <number> , update <allcaps> psp </allcaps> to use osal_id_t <section> use the osal_id_t typedef whenever dealing with an <allcaps> osal id </allcaps> value . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> on all supported platforms <section> none <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> / pc686 ( <allcaps> qemu </allcaps> ) on ubuntu <number> host vxworks <number> <section> this is for consistency with other components and to future proof against type changes . <section> joseph hickey , vantage systems , inc ."
"add support for vxworks <number> <section> cfs traditionally has supported vxworks <number> . there are projects interested in using vxworks <number> with cfs , so support must be added . this requires work in <allcaps> psp </allcaps> and <allcaps> osal </allcaps> . <section> an ideal solution is to support both vxworks <number> and <number> with as little cloning of old vxworks <number> as possible . on <allcaps> psp </allcaps> , the current work is to copy mcp750 - vxworks for the working platform . ( <number> ) <allcaps> osal </allcaps> ' s goal is to have the vxworks osal support both <number> and <number> . <section> <section> <section> steven seeger / embedded flight systmes , inc . / <allcaps> gsfc </allcaps> code <number>"
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - sets the stub config data spacecraft id to historical value 0x 4 2 , was <number> . pr # <number> - installs unit test to target directories . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"vxworks7 <section> this is changes for vxworks7 , built on top of a standalone branch to solve several wconversion warnings when compiling for the platform . <section> i built it and ran my environment with cf <number> on a <allcaps> ppc </allcaps> <number> with vxworks <number> . <section> none , but this branch suggests some small <allcaps> api </allcaps> typing changes . <section> powerpc <number> ( dual - core <number> - bit powerpc ) vxworks <number> <section> there were some issues building base stuff with conversion and cast - align issues with the vxworks7 <number> - bit powerpc toolchain . <section> steven seeger , <allcaps> gsfc </allcaps> - <number> . embedded flight systems , inc ."
"<number> . x <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , set stub spacecraft id to historical value ( 0x 4 2 ) <section> this is the pr copy of # <number> , just for the main branch ( via the integration - candidate branch ) . fix # <number> - set the stub config data spacecraft id to historical value 0x 4 2 , was <number> . <section> nominal build / test , passed . <section> anything using the stub config data will now get the default . the point is really to reduce confusion the mismatch could cause . nothing should actually be using this stub data directly . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds <code> pr # <number> - removes classic make artifacts <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"remove classic make artifacts <section> classic make no longer supported , * . mak files not used . <code> <section> remove <section> n / a <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> pr # <number> <section> bundle ci - <url> <section> pr # <number> - provide a new framework and perform <allcaps> psp </allcaps> coverage tests . new coverage test executable is built and several files within <allcaps> psp </allcaps> are targeted . <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reverted broken include path change <section> fix # <number> , broken include paths <section> build on vxworks host <section> builds without errors . <section> - cfs vxworks host - os : vxworks <number> - versions : bundle / w this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"resolve # <number> , add baseline and build to version . h <section> resolve # <number> <section> steps taken to test the contribution : built on top of current integration candidate built with other integration candidates as well as with nasa / osal # <number> and nasa / cfe # <number> <section> new macros defined . no changes on it ' s own . when combined with nasa / cfe # <number> and nasa / osal # <number> then startup reporting now looks like < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> <section> docker ubuntu - based gcc image on <allcaps> osx </allcaps> <section> also tested with nasa / osal # <number> and nasa / cfe # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - restructure code to make more amicable for rebuilding in a unit test environment . no major changes , primarily just shifting code between locations / headers to support unit testing . pr # <number> - adds a char element <code> to <code> . defines new macros for the build number and the build baseline . <section> ubuntu - ci <section> part of <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> - store the size of the stored data into the exception record on mcp750 - vxworks platform . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> psp </allcaps> coverage unit test <section> add a framework and example for coverage test of the <allcaps> psp </allcaps> code . fix # <number> <section> build and run unit test build and sanity check <allcaps> cfe </allcaps> ( no changes to <allcaps> fsw </allcaps> ) <section> new <allcaps> psp </allcaps> coverage test executable is built , and several files within <allcaps> psp </allcaps> are targeted . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , make separate targets for <allcaps> psp </allcaps> <section> restructure code to make more amicable for rebuilding in a unit test environment . no major changes , primarily just shifting code between locations / headers to support unit testing . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> on <allcaps> rtems </allcaps> and linux run all unit tests and confirm passing . <section> no impact to behavior . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> / pc686 <section> makes the code structure better for unit testing . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> <url> <section> pr # <number> - this changes the <allcaps> psp </allcaps> reference to be compatible with the change in nasa / osal # <number> making the <allcaps> bsp </allcaps> modules more generic and changes the name . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - replace ' os_volumetable ' with <code> in all psps . <section> ubuntu bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> ans # <number> <section> see prs bundle ci - <url> <section> pr # <number> - removes non - termination string warnings when building with gcc9 . pr # <number> - exception handling is now implemented on <allcaps> posix </allcaps> . there is no longer a separate handler for <allcaps> sigint </allcaps> - it is now treated as an exception and goes through the normal process which ends up "" restarting "" <allcaps> cfe </allcaps> . on pc - linux causes the process to exit normally . there is now a mechanism to capture the <allcaps> ctrl </allcaps> + c exception code and use it during normal test cycles . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement exception storage in <allcaps> psp </allcaps> <section> implements exception capture and storage within the <allcaps> psp </allcaps> . provides a new <allcaps> api </allcaps> so that <allcaps> cfe </allcaps> can poll for exceptions at a later time and also record the information in the er log . <section> add a divide by zero "" bug "" to sample_app confirm that the <allcaps> psp </allcaps> captures the exception context correctly and it is later logged by <allcaps> cfe </allcaps> confirm <allcaps> sigint </allcaps> , <allcaps> sigquit </allcaps> , and <allcaps> sigterm </allcaps> are appropriately handled on <allcaps> posix </allcaps> <section> exception handling is now implemented on <allcaps> posix </allcaps> . the initial config will capture arithmetic errors ( <allcaps> sigfpe </allcaps> ) as well as <allcaps> sigint </allcaps> and <allcaps> sigterm </allcaps> . the latter is notable in that there is no longer a separate handler for <allcaps> sigint </allcaps> - it is now treated as an exception and goes through the normal process which ends up "" restarting "" <allcaps> cfe </allcaps> , which on pc - linux causes the process to exit normally . importantly , as <allcaps> ctrl </allcaps> + c is frequently used during testing , this means that there is now a mechanism through which the exception code will get used during normal test cycles . otherwise the code is very infrequently used and could suffer from bit - rot . <section> ubuntu <number> <allcaps> lts </allcaps> vxworks <number> on mcp750 i686 - rtems4 . <number> ( pc - rtems ) on <allcaps> qemu </allcaps> ( no exception handling here , just tested to ensure nothing broke ) <section> goes along with nasa / cfe # <number> , nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"many string truncation warnings with newer <allcaps> gcc </allcaps> <section> ubuntu has released <number> <allcaps> lts </allcaps> which includes <allcaps> gcc </allcaps> <number> . <number> . when using this compiler it implements a much stricter ( and often over - zealous ) checking of string ops . for instance : <code> <section> build code with default config using <allcaps> gcc </allcaps> <number> . <number> , with optimization enabled and full warnings . <section> code should build cleanly . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fixes # <number> and # <number> <section> bundle ci : <url> see prs <section> <number> . pr # <number> - slightly slower calculation of microsecond conversiondepending on hardware , but exact ( to the resolution provided ) conversion <number> . pr # <number> - changes to documentation only <section> bundle ci - ubuntu : bionic see prs <section> part of <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , and # <number> see bundle ic at <url> <section> see prs , bundle ci - <url> <section> pr # <number> <allcaps> rtems </allcaps> builds successfully without errors pr # <number> build script uses a proper cmakelists . txt instead of the aux_source directory pr # <number> code structure / linking change only . <section> see prs bundle ci <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> integration candidate fixes # <number> <section> see pr # <number> bundle ci - <url> test log : <url> <section> no travis ci configuration warnings <section> bundle ci - ubuntu : bionice <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , unify <allcaps> cfe psp </allcaps> with <allcaps> osal bsp </allcaps> <section> instead of redefining the basic entry point symbols , use the <allcaps> osal bsp </allcaps> and its abstractions . the <allcaps> cfe psp </allcaps> just becomes an extension to the <allcaps> osal bsp </allcaps> , and only needs to define the os_application_startup symbol like any other <allcaps> osal </allcaps> application . fixes # <number> <section> build code for all supported targets ( ppc - vxworks6 . <number> , i686 - rtems4 . <number> , native / x86 - <number> linux ) . verify clean build . confirm <allcaps> cfe </allcaps> boots and responds to commands as normal for <allcaps> rtems </allcaps> and native linux targets . <section> no behavior changes . code structure / linking change only . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit ( native , build host ) <allcaps> qemu </allcaps> for <allcaps> rtems </allcaps> <number> <section> vxworks testing pending on availability of test platform <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add separate cmakelists . txt for each implementation <section> do not use aux_source_directory to assemble a list of source files . instead , put a proper cmakelists . txt file in each implementation and build the implementation separately from the shared / common parts . in addition to avoiding the aux_source_directory this allows <allcaps> psp </allcaps> - specific compile definitions to be set on a per - implementation basis because it is defined separately . fixes # <number> <section> build code for all supported targets ( ppc - vxworks6 . <number> , i686 - rtems4 . <number> , native / x86 - <number> linux ) . verify clean build . confirm <allcaps> cfe </allcaps> boots and responds to commands as normal . <section> no impact to behavior - changes build script only . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit + <allcaps> gsfc </allcaps> vxworks build machine <section> joseph hickey , vantage systems , inc ."
"fix # <number> , microsec conversion lost resolution <section> full precision conversion implemented , and documented options for speed fix # <number> <section> steps taken to test the contribution : <number> . ci - <url> <section> slightly slower calculation depending on hardware , but exact ( to the resolution provided ) conversion <section> - hardware : <allcaps> amd </allcaps> - os : ubuntu <number> - versions : bundle w / this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update <allcaps> rtems </allcaps> cmake module <section> addresses various compatibility / usability issues observed during testing - correctly set / export the cmake_exe_exports_c_flag - incorporate the system specs directly into the compile_object templates so these do not need to be specified by the toolchain or cmake_c_flags - similarly include the always - needed linker flags flags for entry point and relocation address into the linker command template fixes # <number> <section> build for i686 - rtems4 . <number> ( in combination with nasa / cfe # <number> ) . execute <allcaps> cfe </allcaps> and perform basic sanity check ( boots , accepts cmd msgs ) <section> <allcaps> rtems </allcaps> builds successfully without errors <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit build host with cross tools for <allcaps> rtems </allcaps> <number> . <number> / pc686 built according to <allcaps> readme </allcaps> . <section> joseph hickey , vantage systems , inc ."
"integration candidate - <number> <section> fix # <number> <section> see pr # <number> integrated ic testing on cfs repo , see <url> <section> build for mcp750 using default config and procedure , confirm warnings are fixed ( others still exist in other modules , however ) . <section> - ci - ubuntu : bionic <section> see pr # <number> <section> jacob hageman - <allcaps> nasa gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa gsfc </allcaps>"
ic - <number> <section> integration candidate <number> fixes # <number> see pr # <number> for details <section> ci only <section> see pr # <number> <section> see pr # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes pr # <number> - simplifies array handling in ' fsw / mcp750 - vxworks / src / cfe_psp_memory . c ' system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"implement psps without relying on aux_source_directory <section> the cmake documentation presents the following caveat for <code> : > it is tempting to use this command to avoid writing the list of source files for a library or executable target . while this seems to work , there is no way for cmake to generate a build system that knows when a new source file has been added . <section> the targets should have a list of files that go into making the specific psps . <section> andrei zisu of planetary transportation systems ( berlin , germany ) ."
"fix # <number> : abstract out path to cfe_system_psppath <section> this change allows us to move custom psps out of tree , so that we do not have to keep a set of patches on top of upstream <allcaps> psp </allcaps> code . future forseeable changes : - a better , although more involved , solution might involve pulling the shared files in their own library , <code> , and allowing custom psps to be defined entirely out of tree while depending on <code> as a library . - using targets more extensively would also allow the elegant use of <code> with <code> , <code> and <code> descriptors . - making the build system less reliant on <code> . the cmake documentation presents the following caveat : > it is tempting to use this command to avoid writing the list of source files for a library or executable target . while this seems to work , there is no way for cmake to generate a build system that knows when a new source file has been added . <section> build of the sample cfs configuration . <section> <code> is introduced as a configuration variable in the build system . if not specified , it will fallback to previous behavior . <section> - pc , ubuntu <number> - current cfs master <section> andrei - costin zisu of planetary transportation systems gmbh ( berlin , germany ) . company - wide <allcaps> cla </allcaps> is being signed and will be sent soon ."
"integration candidate <number> <section> fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> resolved warnings <section> - ci : ubuntu <number> , ic bundle <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> merge # <number> fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> none - cppcheck error cleanup <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"do not directly use a literal for char * members <section> fix # <number> instead of directly using a literal , declare a static <code> variable with the string and use that instead . this resolves a warning . <section> build for pc - <allcaps> rtems </allcaps> ( i686 - rtems4 . <number> ) and confirm warning is no longer triggered . execute <allcaps> cfe </allcaps> using <allcaps> qemu </allcaps> and confirm that network is functioning normally . <section> no impact to behavior <section> ubuntu <number> build host , i686 - rtems4 . <number> target using pc - rtems <allcaps> psp </allcaps> . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"<allcaps> rtems psp </allcaps> using string literal for non - const char * <section> when setting up the network driver , the pc - <allcaps> rtems psp </allcaps> is using string literals to assign <code> data types . this triggers a warning when compiling with strict warnings . <section> build for pc - <allcaps> rtems </allcaps> using strict compiler settings , including <code> . warnings are generated in <code> . <section> should build cleanly . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit , building for i686 - rtems <number> ( pc - rtems ) <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> <section> fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
recommended lgtm issues : <section> recommended issue from lgtm : cfe_psp_module . h <code>
"# <number> , fix lgtm issue <section> fix lgtm issue . <section> steps taken to test the contribution : <number> . make prep <number> . make <number> . make install <number> . verify still run . <number> . mock pull request on dummy repository <number> . verify lgtm indicates issue has been resolve . <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , adding travis . yml for cppcheck on flight <section> adding travis . yml for cppcheck on psp / fsw <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolved cppcheck warning <section> resolve <allcaps> psp </allcaps> cpp check warning <section> steps taken to test the contribution : <number> . cppcheck - - force - - inline - suppr - - std =c 9 9 - - language =c - - error - exitcode = <number> - - enable = warning , performance , portability , style - - inconclusive psp / fsw <number> > psp . txt <number> . verify warning is gone <number> . make prep <number> . make <number> . make install <number> . verify cfs still runs . <section> - hardware - ubuntu <number> - <allcaps> cfs </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , simplified code to use just the array names where correct <section> fixes issue # <number> . made changes to file <code> in order to simply code to use just the array names when correct . used grep to find any instances as instructed . <section> zufishan ali , seneca college of applied arts & technology <section> pending : you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes , doxygen warning cleanup . <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , fix doxygen warning <section> fix # <number> , fix doxygen warning <section> steps taken to test the contribution : <number> . make usersguide <number> . very warning is gone <section> - hardware - ubuntu <number> - doxygen <date> , rc - <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"mark memcpy / set as deprecated as discussed related to # <number> and # <number> ( <date> <allcaps> ccb </allcaps> ) , see related discussions on those tickets ."
"redundant assignments one common anti - pattern in cfs is to call functions that return potential error codes , store the return values in variables , then never bother to check the value of the variable . cppcheck reports this as a redundant assignment . current cases in <allcaps> psp </allcaps> : { { { psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . psp / fsw / pc - linux / src / cfe_psp_memory . c : <number> : performance : variable ' return_code ' is reassigned a value before the old one has been used . } } } not sure how we missed this in the <number> - <number> - <number> sweep ."
remove obsolete psps <allcaps> ccb </allcaps> meeting on <number> - <number> - <number> agreed that we can remove the following psps that have not been maintained lately : - mac - osx - mcf5235 - rtems - pc - cygwin
"<allcaps> psp </allcaps> <number> version description document review cycle attached <allcaps> psp </allcaps> <number> <allcaps> vdd </allcaps> is open for <allcaps> ccb </allcaps> review . please attach any tracked changes / comments with initials included in document filename i . e . "" <allcaps> osal </allcaps> <number> . <number> version description document - sls . docx "" . following the <allcaps> ccb </allcaps> review cycle , when all changes have been reviewed / accepted or rejected , the document will be open for signature and release ."
"<number> - <number> - <number> integration candidate <allcaps> ccb </allcaps> meeting on <number> - <number> - <number> authorized joe ' s changes currently merged in the <allcaps> cfe </allcaps> project , together with cmake support in all projects , as the next development branch . the final list of changesets is as follows : * [ changeset <happy> c29724 ] # <number> cmake support * [ changeset <happy> d3d2c5 ] # <number> change uint32 to cpuaddr * [ changeset : f633fda ] # <number> dependency management * [ changeset : 7 3 1 c533 ] # <number> pc - rtems <allcaps> psp </allcaps> * [ changeset : daf6ab4 ] intermediate merge of the above changes * [ changeset : cea350d ] # <number> ( rebased ) compatibility with <allcaps> cfe </allcaps> "" const "" <allcaps> api </allcaps> * [ changeset : 4 6 9 5 f60 ] # <number> ( rebased ) clean up build macros * [ changeset : 9 4 5 cb59 ] revised merge including the above changes"
"<number> - <number> - <number> integration candidate <allcaps> ccb </allcaps> meeting on <number> - <number> - <number> authorized inclusion of the cmake related changes as part of the next integration test and merge cycle . for the cfs_psp project , this includes * [ changeset <happy> c29724 ] # <number> enhanced build system"
"add <allcaps> psp </allcaps> unit tests currently , the <allcaps> jsc </allcaps> developed <allcaps> psp </allcaps> unit tests are not included in the <allcaps> cfs </allcaps> release . they currently work with pc - linux and orionscp psps . updates to so that they work with a vxworks target <allcaps> psp </allcaps> are in work ( ut699 - vxworks6 . <number> <allcaps> psp </allcaps> ) these updates are being tracked in the <allcaps> jsc </allcaps> subversion repo and need to be pushed into a proper git branch and further work continued from there ."
"release candidate <number> merge to master <section> bulk merge to <number> , plus bug fix # <number> and version update <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> , updated to latest cfe / <allcaps> osal </allcaps> / <allcaps> psp </allcaps> rc branches and setup / built via standard instructions <number> . ran cfe and observed version update <code> <section> minor behavior changes will be documented in the <allcaps> vdd </allcaps> upon release ( no major / requirements updates ) <section> - cfs development server - ubuntu <number> . <number> , <number> . <number> - <number> - generic , x64 - <number> . <number> bundle <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
switch <allcaps> psp </allcaps> to use <allcaps> osal </allcaps> timers rather than itimers [ ( this is the same as trac <number> in babelfish ) <allcaps> psp </allcaps> should use the <allcaps> osal </allcaps> timer <allcaps> api </allcaps> for the main ( 1 hz ) timer .
"inconsistent prototype in elf2cfetbl . c : outputdatatotargetfile <section> the function <code> in <code> is prototyped on line <number> with a <code> argument list but defined on line <number> with an empty argument list . this causes the compilation to error out if the compiler and its flags are sufficiently strict . <code> the fix is to change the line <number> argument list to <code> <section> by inspection : e . g . this description here <url> > according to the c standard , subclause <number> . <number> , paragraph <number> [ <allcaps> iso </allcaps> / <allcaps> iec </allcaps> <number> <time> <number> <url> ] , > > an identifier list declares only the identifiers of the parameters of the function . an empty list in a function declarator that is part of a definition of that function specifies that the function has no parameters . the empty list in a function declarator that is not part of a definition of that function specifies that no information about the number or types of the parameters is supplied . > subclause <number> . <number> states that > > the use of function declarators with empty parentheses ( not prototype - format parameter type declarators ) is an obsolescent feature . > consequently , functions that accept no arguments should explicitly declare a void parameter in their parameter list . this holds true in both the declaration and definition sections ( which should match ) . > this is caught and rejected by sufficiently - strict ( with flags ) compilers . one example is the current apple mac clang compiler <code> with flags including <code> . admittedly , the mac is not a cfs supported system , but <code> is a pretty standard compiler , and eventually you can expect <code> to complain as well . <section> - macbook pro ( intel ) - os : macos ventura <number> . <number> - versions : clang version <number> . <number>"
"fix # <number> , update references to cfe_fs_header_t time members <section> - fixes # <number> - references to the <code> file create time members are updated to go through to the <code> substruct . <section> github codeql tasks failing to build because this goes along with updates to cfe : <url> local testing confirms all working together successfully when both changes implemented together . <percent> of tests passing and net coverage unaffected . screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
references to time members in cfe_fs_header_t should be converted to cfe_time_systime_t <section> cfe pr <url> converts all remaining seconds / subseconds time struct members to use <code> that were not already doing so . elf2cfetbl requires some updates as it references one of them directly ( for cfe fs ) in a few locations . <section> <url> <section> needs to be updated to reference the time members through the <code> sub - struct . <section> avi weiss <user>
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
variables declared mid - function expected behavior * * all variables should be declared at the top of the function . <section> avi weiss <user>
"fix # <number> , check return value of stat ( ) testing performed * * github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> no impact on behavior . adds error message for an ( unlikely ) error return from <code> . <section> avi weiss <user>"
"fix # <number> , check return from chmod testing performed * * github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> in cases of error ( non - zero ) <code> from <code> the error info will be printed and early return with <allcaps> failed </allcaps> will occur . <section> avi weiss <user>"
"fix # <number> , add checks for all return values from fseek ( ) testing performed * * github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> in cases of error ( non - zero ) return from <code> the error info will be printed and early return with <code> will occur . <section> avi weiss <user>"
"fix # <number> , redo symbolnames malloc to remove out - of - bounds write testing performed * * just github ci actions so far . <section> logic stays the same , but the possibility of an out - of - bounds write is removed . <section> avi weiss <user>"
"elf2cfetbl integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> elf2cfetbl checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"elf2cfetbl integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> elf2cfetbl checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , remove c + + - style comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . <section> <user>"
"remove c + + - style comments expected behavior * * only c - style comments (/* . <repeated> */) will remain , aligning with the cfs coding style / standard . <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"poorly documented file <section> poorly documented large function <section> same behavior . better documentation for future users / developers . either document functions or remove empty comment blocks . <section> one function example out of many : <url> <section> caught by codeql - security queries . several functions have empty comment blocks where documentation should go . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"cmake script refers to obsolete path <section> the cmake build script for elf2cfetbl is outdated and refers to a <allcaps> cfe </allcaps> path that no longer exist in the <allcaps> cfe </allcaps> bundle . <url> <section> at a minimum , the incorrect path should be removed a better approach altogether would be to use an interface library that refers to the <allcaps> osal api </allcaps> <section> does not really break anything because nonexistent paths are typically ignored by <allcaps> gcc </allcaps> ( although that may not be the case with some other compilers ) <section> joseph hickey , vantage systems , inc ."
"replacing sprintf with snprintf to avoid overflow . <section> replaced sprintf ( ) with snprintf ( ) to avoid overflow <section> ctest <section> protect against overflow by setting the buffer to n + <number> of the char string [ <number> ] to avoid overflow that may occur . <section> - hardware : pc , raspberry pi - os : ubuntu <number> <allcaps> lts </allcaps> , windows <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> awf wiswasi - california state university , fullerton"
"elf2cfetbl integration candidate : caelum - rc4 + dev10 <section> pr # <number> - fix # <number> , resolve uninit var static analysis warnings <section> elf2cfetbl checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> none <section> skliper"
"fix # <number> , resolve uninit var static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"elf2cfetbl integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> elf2cfetbl checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool contains potentially null pointers that are de - referenced in function this issue was observed in iv & v ' s analysis of the roman space telescope ' s <allcaps> wfi </allcaps> instrument <allcaps> icdh fsw </allcaps> build <number> software release . see attachment for code reference . cfs tims . pdf <url> <allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool contains potentially null pointers that are de - referenced in function allocatesymbols <allcaps> ivv </allcaps> severity : <number> issue category : code issue type : incorrect code count : <number> description : there are <number> instances where pointers are checked for null and then later de - referenced by function allocatesymbols in file elf2cfetbl . c [ ref . <number> ] , regardless of whether they are valid : <number> . pointer ' symbolnames ' , of type elf_sym , is checked for <allcaps> null </allcaps> on line <number> , and is dereferenced on line <number> . <number> . pointer ' symbolptrs ' , of type elf_sym , is checked for <allcaps> null </allcaps> on line <number> , and is dereferenced on line <number> . if either pointer is null , a local variable , status , of type int32 , is set to <allcaps> failed </allcaps> . however , the status is not checked prior to de - referencing the pointers . null pointers should not be de - referenced as doing so will result in application exit or other unpredictable or undesired behavior . recommended actions : recommend only de - referencing pointers , symbolptrs and symbolnames , when status is set to <allcaps> success </allcaps> . impact : de - referencing a null pointer , in this case , will create an inconvenience for operators , crew or other projects ' personnel since the function , which is part of ground software , will crash and exit . options"
"<allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool “ elf2cfetbl ” experiences a buffer overflow when the section header description exceeds <number> characters this issue was observed in iv & v ' s analysis of the roman space telescope ' s <allcaps> wfi </allcaps> instrument <allcaps> icdh fsw </allcaps> build <number> software release . see attachment for code reference . cfs tims . pdf <url> this was veing tracked in the <allcaps> wfi fsw </allcaps> jira system under : <url> <allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool “ elf2cfetbl ” experiences a buffer overflow when the section header description exceeds <number> characters <allcaps> ivv </allcaps> severity : <number> issue category : code issue type : incorrect code count : <number> description : when reading the section header using the function getsectionheader ( ) on line <number> of file elf2cfetbl . c [ ref . <number> ] , the array of “ verbosestr ” , which is of size <number> , will experience a buffer overflow when “ i ” , the iteration integer used in the while loop on the same line , exceeds the value of <number> . this can occur because the maximum characters allowed for the section header is <number> as defined by the macro max_section_hdr_name_len on line <number> in the same file . on line <number> , “ verbosestr ” is expected to have length max_section_hdr_name_len - <number> , which is <number> . so , if the “ srcfiledesc ” points to a section header with longer than <number> characters , on line <number> , the iterator "" i "" will exceed <number> . note : the elf2cfetbl utility is a ground tool that provides a method of converting an object file containing the desired contents of a cfe application ' s table image into a binary file that is compatible with the cfe table services for loading the image . recommended actions : declare the “ verbosestr ” in function getsectionheader ( ) to be an array of characters for at least max_section_hdr_name_len , <number> . impact : a buffer overflow can result in unpredictable / undesired behavior during the execution of the elf2cfetbl utility . with the current code , the user would need to change the section header description to be shorter than <number> characters and re - run the elf2cfetbl tool if the header were greater than <number> characters long . this creates inconvenience for operators or other project personnel ."
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"elf2cfetbl integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> , check get_sh_entsize ( sectionheader ) value <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> elf2cfetbl codeql reuse : <url> elf2cfetbl format check reuse : <url> elf2cfetbl static analysis reuse : <url> <section> elf2cfetbl will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> # <number> , remove workflow branch restrictions , add duplicate check , remove - - quiet <section> - fix # <number> - fix # <number> remove workflow branch restrictions , add duplicate check , remove - - quiet <section> ci <section> - no longer restricts branches - skips duplicate runs - now reports cppcheck analyzed file list <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <user>"
remove static analysis workflow cppcheck - - quiet flag <section> analyzed files not reported : <url> <section> remove flag <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , check get_sh_entsize ( sectionheader ) value <section> fixes # <number> <section> github actions <section> checks the value of get_sh_entsize ( sectionheader ) to ensure numsymbols does not divide by <number> . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , out - of - bounds write for verbosestr <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"out - of - bounds write for verbosestr <section> bad while loop causing out - of - bounds write <section> fix while loop <section> <url> <section> coverity : <url> <section> checking i < 6 0 ul implies that i is <number> on the false branch . overrunning array verbosestr of <number> bytes at byte offset <number> using index i ( which evaluates to <number> ) . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> toctou </allcaps> bug for chmod <section> calling function chmod that uses dstfilename after a check function . this can cause a time - of - check , time - of - use race condition <section> use fchmod as seen in os_filechmod_impl . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"truncated stdio return value <section> there are <allcaps> api </allcaps> usage errors with fgetc . <section> check <allcaps> eof </allcaps> then cast value . <section> <url> <url> <url> <url> <section> coverity : <url> <section> assigning the return value of fgetc to char abyte truncates its value . assigning the return value of fgetc to char verbosestr [ i ] truncates its value . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of stat <section> calling stat ( dstfilename , & dststat ) without checking return value . this library function may fail and return an error code . <section> check the return value of stat <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of chmod <section> calling chmod ( dstfilename , dststat . st_mode & 0 xffffffc0u ) without checking return value . this library function may fail and return an error code . <section> check the return value of chmod . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of fseek <section> the return value of fseek is not checked which may cause an unexpected failure . <section> check the return value for fseek in elf2cfetbl . c . <section> <url> <url> <url> <url> <section> identified by coverity : <url> possible solution : <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"remove workflow branch restrictions , add duplicate check , fix format check name <section> the format check and static analysis workflows only run on pushes to main or on pull requests so community users will not get the alerts on their forks . the codeql workflow may run on pull requests to branches other than <code> <section> fork repo , commit new branch : format check and static analysis workflows are not triggered . <section> all workflows run on fork branches , even those without pull requests . <section> <url> <url> <url> <section> github <section> should also add check - for - duplicates job to workflows after relaing the branch requirement on the push trigger <section> full name and company / organization if applicable"
"fix # <number> , correct comment and event message typos <section> fixed various minor text typos in comments and event message strings . - fix # <number> <section> only automated checks . <section> none ( minor comments and event message strings that do not interact with any max lengths etc . ) . code execution is unaffected . <section> n / a <section> n / a <section> n / a"
"elf2cfetbl integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
integration candidate : <number> - <number> - <number> <section> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user>
"elf2cfetbl integration candidate : <number> - <number> - <number> <section> fix # <number> , fix comment stlye <section> see < <url> <section> pr # <number> - changes cpp - styled comments to c - style to meet coding standard <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , fix comment stlye <section> fixes # <number> change the comment style <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds elf2cfetbl , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"elf2cfetbl integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation , add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - restricts destination file permissions pr # <number> - squash int comparison warning pr # <number> - replace ctime ( which generates <allcaps> lgtm </allcaps> warning ) with ctime_r pr # <number> - deconflicts global / local parameters <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"file created without restricting permissions <section> allows anyone to open and write the file , dstfiledesc . <section> must set user permissions to file . <section> <url> <section> <url> <section> previously mentioned in ticket # <number> references : - <url> - <url> - <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"resolve # <number> , add baseline and build number to version . h <section> resolve # <number> resolve # <number> <section> bundle built using docker gcc + cmake image . <section> version reporting now uses the version numbers defined in <code> and reports build number . < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> pm "" src = "" <url> <section> ubuntu <section> none <section> if included , identify any third party code and provide text file of license <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> resolve # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - adds a null to the end of srcfilename and dstfilename when using strncpy . pr # <number> - support <allcaps> elf </allcaps> files that have all strings , including <allcaps> elf </allcaps> section names , in one single "" . strtab "" section in the <allcaps> elf </allcaps> file . pr # <number> - version reporting now uses the version numbers defined in <code> and reports build number . <section> ubuntu - ci <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
fix # <number> - null terminates src / dst filenames <section> adds a null to the end of srcfilename and dstfilename when using strncpy . <section> <email>
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - no string termination warnings in gcc9 . pr # <number> - fix typos <section> see prs bundle ci <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . pierre grimaud , self"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> see pr bundle ci - <url> <section> pr # <number> - builds for vxworks w / <number> - bit host <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"<allcaps> rfc </allcaps> : bin2cfetbl . py tool ( <allcaps> elf </allcaps> and mach - o support ) <section> this work complements the work i did for <allcaps> cfs </allcaps> / <allcaps> osal </allcaps> in <url> in order to run <allcaps> cfs </allcaps> on macos the <code> tool has to be updated to support mach - o . this work is based on the following comment by <user> : > when i said there is no requirement to use this specific tool , you will need to somehow generate appropriate binary . tbl files for your target if you want to use apps that load runtime tables . the format is pretty simple ( c struct encapsulated with a fs + <allcaps> tbl </allcaps> header ) so its not hard to hack out a python script to create these files , there is just no python tool already written <allcaps> afaik </allcaps> . i have decided to rewrite the tool in python and made it to support both <allcaps> elf </allcaps> and mach - o files . i would like to get feedback about the approach : if the direction is approved i would to complete the implementation and add all missing test cases . this is a small plan of what is done and what still has to be done : - [x ] reading mach - o <number> - bit and writing <code> file ( little endian binaries ) - [x ] reading <allcaps> elf </allcaps> <number> - bit and writing <code> file ( little endian binaries ) - [x ] integration tests using <allcaps> llvm </allcaps> integrated tester ( <allcaps> lit </allcaps> ) - [x ] integration of the python tool and integration tests into cmake tree - [ ] supporting reading command - line arguments as supported by current <code> - [ ] big endian binaries - [ ] <number> - bit binaries - [ ] supporting more output of what the current <code> does ( example : <code> ) - [ ] add more test fixtures . for now i am only using <code> and <code> which are built by <allcaps> cfs </allcaps> by default . <section> <code> run the <code> cmake target . the <allcaps> lit </allcaps> tests should pass . <section> - i have tried to preserve existing behavior <number> to <number> . the only difference i am seeing is in what gets printed . - i consider my implementation cleaner and easier to follow . - current c implementation uses global variables a lot and that makes the code harder to follow . i have tried to package all functions in such a way that the reasoning would be easier to follow . <section> - hardware : macbook pro - os : macos mojave <number> . <number> - versions : the latest master branch of this repository . <section> none . <section> - <code> , apache license version <number> - <code> , apache license v2 . <number> with <allcaps> llvm </allcaps> exceptions <url> - <code> , apache license version <number> <section> stanislav pankevich . personal . the individual <allcaps> cla </allcaps> has been signed and sent to the <allcaps> gsfc </allcaps> - softwarerelease ."
"possible world - writable file creation , <allcaps> lgtm </allcaps> warning <section> <allcaps> lgtm </allcaps> warning : a file may be created here with mode <number> , which would make it world - writable . <url> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard * <allcaps> edit </allcaps> * - removed warnings covered by other issues ( split ) * <allcaps> edit </allcaps> * - updated per latest warning"
"fix # <number> , path_max not defined with - std =c 9 9 <section> fixes # <number> <section> steps taken to test the contribution : <number> . built with - std =c 9 9 defined , elf2cfetbl now builds <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
path_max not defined if - std =c 9 9 set <section> make with - std =c 9 9 gives the following error <code> <section> steps to reproduce the behavior : <number> . add_definitions ( - wall - wstrict - prototypes - std =c 9 9 - pedantic ) to mission_build . cmake prepare function <number> . make prep <number> . make <section> clean build <section> n / a <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> integration candidate for pull requests approved at <number> - <number> - <number> <allcaps> ccb </allcaps> covers the following pull requests : # <number> - add guide on creating table files # <number> - add validation for rtncode and update bracket to standard # <number> - init dstfile and srcfile to <allcaps> null </allcaps> , validate dstfile and srcfile # <number> - use path_max instead of os_max_file_name # <number> - clean up elf2cfetbl build logic <section> build code for native host ( <allcaps> simulation </allcaps> = native ) with unit test enabled execute <allcaps> cfe </allcaps> core , issued various test commands from cmdutil execute all unit tests and confirm passage . <section> none <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> na <section> joseph hickey , vantage systems , inc ."
"fix # <number> : clean up elf2cfetbl build logic remove the now - unnecessary inclusion of <allcaps> cfe tbl </allcaps> internal definitions . all logic in this tool is based on public include files only . <allcaps> cfe </allcaps> ensures that the header sizes are always a multiple of <number> bytes , so the logic to selectively byte - align is unnecessary . <allcaps> cfe </allcaps> now requires this to be <number> - byte aligned . clean up all hacks in the cmake recipe , the build is now much more straightforward when internal headers are not being used . <section> fixes issue # <number> , cleans up the build process for this tool . _important_ - this depends on nasa / cfe # <number> and cannot be merged / tested prior to this being merged . this can only be cleaned up on this side once it is ensured that the internal cfe_tbl definitions are no longer required here . note this also removes the <code> option to the tool , as nasa / cfe # <number> now guarantees this to be <number> - byte aligned through the use of compile - time checks . it is not possible for this option to do anything , and the code that implemented this option was depending on a symbol that was no longer available , so it was easiest and cleanest to just prune it out . <section> rebuild code with sample table definitions . table is built successfully . <section> no impact to behavior <section> ubuntu <number> . <number> , <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , use path_max instead of os_max_file_name <section> fix # <number> , used path_max instead of os_max_file_name . <section> steps taken to test the contribution : <number> . build <number> . create sample_table . tbl file using elf2cfetbl . used full path to trigger warning : <number> . verify warning and that tbl file is still created . <code> <number> . used sample_table . tbl file and verify it still work in cfs . <section> - hardware - <date> - cfe <number> . <number> , elf2cfetbl <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , init dstfile and srcfile to <allcaps> null </allcaps> , validate dstfile and srcfil … <section> fix # <number> , initialize dstfile and srcfile to <allcaps> null </allcaps> . validate before closing . <section> <number> . build <number> . execute with d <elongated> <number> . forced return status of allocatesectionheader ( ) to - <number> <number> . verify that git dstfiledesc was <allcaps> null </allcaps> and did not cause program to crash . <section> no impact to behavior <section> - hardware - ubuntu <date> - cfe <number> , elf2cfetbl <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , add validation for rtncode and update bracket to standard <section> fix # <number> . resolve warning with flags - wall - std =c 9 9 - pedantic - wstrict - prototypes - wwrite - strings <section> steps taken to test the contribution : <number> . build <number> . verify warning does not appear <number> . execute elf2cfetbl against table object <number> . verify * . tbl is generated <number> . execute again with <allcaps> d <elongated> </allcaps> <number> . force rtncode = - <number> <number> . verify * . tbl is generated <section> no impact to behavior <section> - hardware - ubuntu <date> - elf2cfetbl version <number> . <number> , cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> covers the following pull requests : - # <number> - string format mismatch warning ( <allcaps> fasttracked </allcaps> ) - # <number> - remove classic build support ( <allcaps> fasttracked </allcaps> ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> none <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"issue # <number> , delete for_build and top makefile <section> delete for_build and makefile . <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix long string mismatch <section> fix # <number> , fix mismatch in printf . used cppcheck with options - - enable = performance , portability , warning - - std =c 9 9 - - std = posix - - inconclusive - j <number> <section> <number> . run cppcheck with options - - enable = performance , portability , warning - - std =c 9 9 - - std = posix - - inconclusive - j <number> <number> . verify warning is gone <number> . build <number> . verify elf2cfetbl still compile and pass table . o through <section> no impact to behavior <section> - hardware - ubuntu <number> - cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , add guide on creating table files <section> fix # <number> , add guide on creating table file using elf2cfetbl <section> steps taken to test the contribution : <number> . create a table file using elf2cfetbl <section> no impact to behavior <section> - hardware - os : ubuntu <date> - elf2cfetbl version <number> . 0 a <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> <section> steps taken to test the contribution : <number> . checked out <url> master and followed setup instructions <number> . checked out ic - <number> <number> . followed standard build instructions ( no cmdutil build warnings observed ) <section> - no impact to behavior from this change , just replaced deprecated dependencies <section> - server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle release candidate <number> with this branch <section> none <section> jacob hageman / <allcaps> nasa </allcaps> <section> <allcaps> cla </allcaps> on file"
"remove use of <allcaps> osal </allcaps> boolean type migrate away from using the <allcaps> osal </allcaps> boolean typedef , prefer to use the c99 <code> type going forward . existing refs to this typedef should be fixed ."
# <number> replace deprecated defines fixes issue # <number> built with unit tests enabled on linux after fix ( with the <allcaps> omit deprecated </allcaps> defined ) .
"invalid pointer casts ( byteswap ) originated by glimes ( <number> on babelfish ) : cppcheck has a very useful warning about invalid pointer casts which is triggered by the a call to byteswap . we could patch this with a double - cast . <repeated> or we could fix it , by having byteswap take a ( void <wink> pointer parameter . but fixing it is a good idea , so future cppcheck messages about this condition are more useful ."
"fix # <number> , remove multiple returns from <code> , <code> and <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> no change to function logic / behavior other than removing the early returns . <section> avi weiss <user>"
"factor out multiple returns from <code> , <code> and <code> expected behavior * * refactor to a single exit point . <section> avi weiss <user>"
"fix # <number> , lowers hs_util_per_interval_hogging from <number> - - > <number> lowers hs_util_per_interval_hogging from <number> - - > <number> . fix # <number> <section> started a test app that enters into an infinite loop to induce a <allcaps> cpu </allcaps> hogging and verified that the expected event message was triggered . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
lower threshold required to declare <allcaps> cpu </allcaps> hogging lower the <allcaps> cpu </allcaps> utilization threshold required for hs to declare ' hogging ' . <section> lower hs_util_per_interval_hogging from <number> to <number> . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , removal of hs6013 , hs6014 , and hs6015 removes hs6013 , hs6014 , and hs6015 from hs_functionalrequirements . csv . fixes # <number> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) dan knutsen <allcaps> nasa </allcaps> goddard"
removal of hs6013 and hs6014 need to update hs_functionalrequirements . csv to remove hs6013 and hs6014 . the set utility diagnostics and set utility parameters commands were removed in the latest version of the app . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , rename files according to convention updates the hs file naming to be consistent with the documented recommendations . this also removes "" hs_custom . h "" as it was no longer used ( remnant ) . fixes # <number> <section> build and sanity check <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"update header file naming based on documented convention header file names need to be adjusted to match the convention described in nasa / cfe # <number> <section> rename the files <section> improving consistency between <allcaps> cfs </allcaps> apps for file names and content <section> joseph hickey , vantage systems , inc ."
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
hs <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"fix # <number> , use "" generated_file "" option to generate_config_includefile for an <allcaps> eds </allcaps> build , the include files are generated , and do not yet exist when cmake runs . the generate script now has more error checking than it used to and now throws an error if the file does not exist . use of the generated_file flag causes it to bypass the the search / verify and unconditionally link to the file . fixes # <number> <section> build hs with <allcaps> eds </allcaps> <section> build succeeds using <allcaps> eds </allcaps> - generated headers as it should <section> debian <section> joseph hickey , vantage systems , inc ."
"update <allcaps> eds </allcaps> build "" generate_config_includefile "" call the hs script needs to use the new "" generated_file "" option ( added in nasa / cfe # <number> ) so that the <allcaps> eds </allcaps> build can link to headers that are not ( yet ) generated at the time cmake runs . <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use non - designated initializer for command header do not assume specific member names on structs that are not directly part of the hs app itself . fixes # <number> <section> build <allcaps> hs mat </allcaps> table in both environments <section> better source compatibility , no difference in output <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update documentation for cpu load monitor update the cpu load documentation to reflect the recent changes where this information is now obtained from the <allcaps> psp </allcaps> rather than an idle task . fixes # <number> <section> build documentation <section> none - documentation now matches current implementation . <section> debian <section> joseph hickey , vantage systems , inc ."
remove <code> - related macros expected behavior * * use the direct bit - check / manipulation expression rather than the abstracted macro which is being removed . <section> avi weiss <user>
"remove doc refs to custom functions the custom functions were removed in a recent pr but some doxygen files still have some refs to functions that were in these files . this triggers some warnings in the documentation build . <section> run documentation build , view warnings <section> should be clean <section> github workflow <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> eds </allcaps> file for hs includes the <allcaps> eds </allcaps> file itself , plus cmake logic to source the various include files from the generated version . fixes # <number> <section> build hs with and without <allcaps> eds </allcaps> tooling <section> hs should work out of the box with the <allcaps> eds </allcaps> tooling , no patches or alternate version needed . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move system monitoring to <allcaps> psp </allcaps> removes all "" custom "" routines from hs , and instead calls into <allcaps> psp </allcaps> via the new iodriver mechanism . this is used to obtain average <allcaps> cpu </allcaps> utilization information rather than an idle task . this architecture allows support for many more variables , such as per - cpu utilization information , temperature , fan speeds , and other health info . that is not implemented here , but could be added in the future . fix # <number> <section> monitor hs telemetry , vary system load and confirm <section> no more idle task , system load should be reported correctly on multi - core systems . <section> debian <section> only linux is implemented thus far , will need to create an <allcaps> rtems </allcaps> and vxworks variant - but that is only in <allcaps> psp </allcaps> - hs does not change <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use separate dispatcher for messages isolate the message verification and dispatch from the general message processing . functions in the "" cmds "" file now strictly handle the command content , and do not get involved in general validation . the "" custom "" code isolation is also in a separate dispatcher . there is a separate issue to address this . fixes # <number> <section> build and run hs and all tests , sanity check results <section> none , better source code organization <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , split configuration move configuration include files to a separate "" config "" subdirectory , and use the "" generate_config_includefile "" cmake function to select the one to use and create a wrapper . this makes it easier to override the file and / or use a generated file in place of the distribution / default copy . fixes # <number> <section> build and run hs and all tests , sanity check operation <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor <allcaps> mat </allcaps> table to be more portable the updated <allcaps> mat </allcaps> table uses the cfe_msg_cmd_hdr_init macro to make <allcaps> mat </allcaps> commands header agnostic . further this implementation makes the tables endian agnostic . fixes # <number> <section> steps taken to test the contribution : <number> . modified hs_monitors . c to print each table entry when the table gets read in by <allcaps> fsw </allcaps> . <number> . ran a test to confirm that the expected commands / mids get read in when the table is validated . <number> . ran a test to ensure that the expected commands get sent when the table is used / executed . <section> none . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"hs does not calculate <allcaps> cpu </allcaps> utilization correctly on multi - core systems hs does not calculate <allcaps> cpu </allcaps> utilization correctly on multi - core systems . <section> hs has only one idle task . multiple idle tasks would need to be spawned / pinned to each core in an <allcaps> smp </allcaps> / multi - core setup in order to correctly calculate <allcaps> cpu </allcaps> utilization . alternatively , os specific task hooks could be utilized to report the <allcaps> cpu </allcaps> utilization for each core . <repeated> which would likely be the most accurate / desired approach . <section> dan knutsen <allcaps> nasa gsfc </allcaps>"
"split "" platform_cfg "" into external and internal components currently , all configurable items for the app are contained in a single <code> header file . this contains macro definitions that affect both the internal operation of the application ( such as operational limits ) as well as the external interface in <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> and table files . <section> split this header into two components , one that contains only public items ( i . e . those that affect <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> / table definitions ) and one that contains private / internal items that are only used within the local application code and do not affect the interface . <section> mainly a scoping concern , separate files for separate scopes . these files could also be generated in the future , but scope still needs to be consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use generated stubs separate the global variables into separate stub source units , then re - run the stub generator for all internal apis . the committed result here is the exact output of the tool , unmodified . this eases future maintenance , when an internal <allcaps> api </allcaps> changes one just needs to re - run the stub generator tool to update it . fixes # <number> <section> build and run all tests . ( affects ut only ) <section> stubs easier to maintain going forward . no changes in behavior . <section> debian <section> joseph hickey , vantage systems , inc ."
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from hs , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use payload sub - struct in all messages puts the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> content in a member struct called "" payload "" . this makes it consistent with other <allcaps> cfe </allcaps> modules and provides a predictably named member for determining the position of non - header content . fixes # <number> <section> build and run all tests , sanity check app in <allcaps> cfe </allcaps> <section> none . <section> debian <section> joseph hickey , vantage systems , inc ."
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . no test changes required . coverage still at <percent> . <section> avi weiss <user>"
combine consecutive mutually exclusive status checks into an if / else code snips * * <url> <url> <section> combine into an <code> / <code> - no need to do <number> evaluations . <section> avi weiss <user>
"fix # <number> , use cfe_msg_ptr macro this also updates all data structures and function names to use the proper naming conventions - that is : - structure for each command that matches command name - consistent application of camelcase and command code name ( _cc ) this also fixes a few other unsafe / improper casts regarding message buffers . fixes # <number> <section> build and run all tests , sanity check hs <section> safer code , no impact to behavior <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check correct global in appmon ut the appmon unit test was checking the array in the hk packet rather than the array in the global - which is the one that was updated in the unit under test . fixes # <number> <section> build and run all tests <section> affects ut only , no change to <allcaps> fsw </allcaps> <section> ubuntu <section> it appears these checks in the ut might be inconsequential anyway because they are all zero , and nothing sets it nonzero . this is why they were passing even though it was "" verifying "" the wrong thing ( i . e . the wrong thing was also <number> ) . fixing that is left to a future exercise , if desired . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , unread variables do not assign a value to variables where a value is assigned later and the first value is never read . fixes # <number> <section> build and run all tests <section> cleans up cppcheck errors , no change to <allcaps> fsw </allcaps> behavior . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix # <number> , remove conditional compiles from code do not conditionally compile code based on hs_max_exec_cnt_slots being <number> . it will now be required that the option is > <number> . note that a configuration of <number> was not being tested / validated , so this removes an untested option . fixes # <number> fixes # <number> <section> build and run all tests . <section> no change with default config ( default value was <number> , so all code was being compiled in normally ) . attempting to build hs with the value of <number> will result in a verify error now ( min value is now <number> , whereas it was <number> previously ) . <section> debian <section> removes an untested configuration option . <section> joseph hickey , vantage systems , inc ."
"refactor "" custom "" code ( not really customizable ) the structure of the hs code includes <code> and <code> that imply that these contain user - defined functions . however the current code does not really allow for this . notably - <number> . the interface between "" custom "" and standard routines is not well defined <number> . unit tests directly use the hs_custom_internal . h data structures in non - custom tests ( e . g . see <code> , among others ) furthermore , the code is simply in the same src directory as the rest of hs , so any customizations mean creating a fork of hs and the user having to manage that fork . <section> attempt to change the contents of <code> - such as removing the <code> and and <code> fields and replacing with some other logic . this will break seeming unrelated code that assumes these fields exist . <section> if hs depends on a computation working a certain way , it should not be labeled as <code> . conversely , if a section of code is truly intended to be customized by the user , the interface into that custom function needs to be well - defined and no other parts of the code should assume it works a certain way or has certain fields in its global data . <section> example of a place where unit test is directly accessing custom fields from a non - custom test : <url> <section> n / a <section> could this custom logic potentially be refactored into a separate support library , so the user would not have to fork hs to customize these routines ? <section> joseph hickey , vantage systems , inc ."
"refactor "" compiled - out "" code ( ifdef ) hs contains a significant amount of code that can be compiled - out via <code> to comply with coding standards this should be refactored so it does not need to be compiled out . <section> n / a <section> should not remove entire functions via <code> as this can negatively affect unit testing . switches like this increases the testing permutations required - technically should test it both ways , but we are not currently doing so . <section> n / a <section> in this case the default value of hs_max_exec_cnt_slots is <number> , so this is compiled - in by default , but we never actually test the compiled - out option to see if it works correctly . requirement for this feature should be revisited first ( i . e . is there a reason why we really need to have the option to set hs_max_exec_cnt_slots to <number> , as other configurable parameters do not have such an option ) . if it is required to compile this out entirely , then a source - selection would be preferable over chunks of <code> code . <section> joseph hickey , vantage systems , inc ."
"hotfix # <number> , correct whitespace per clang - format corrects a whitespace issue from a previous pr # <number> <section> check clang - format is clean <section> none <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove compiler extensions from tbldefs do not declare tables as "" static "" w / attribute "" used "" , neither are needed , and build works fine without any special sauce . this also makes the table name consistent by removing the "" default "" in the name - it is still the same table , the name does not need to change just because it happens to be the default value . fixes # <number> <section> build and run all tests run hs app and confirm normal startup , tables loaded <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"remove use of compiler extension in table file definitions the <code> is a <allcaps> gnu </allcaps> compiler extension flag and such constructs should be avoided in portable code . <section> remove <section> this flag is only in there to avoid a warning due to the use of <code> - but this object should not be static to begin with , then everything works without the use of special flags . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove extraneous assignments to cfe_success testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
extraneous assignment to cfe_success code snips * * <url> <url> <section> remove assignments - unnecessary code . <section> avi weiss <user>
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , moves custom commands and eids to public interface - fixes # <number> <section> make install , lcov <section> no impact to open source . successful build for <allcaps> jsc </allcaps> ' s intended use <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"make hs_custom . h commands and eids public the commands and eids curently in hs_customs . h need to be made public . <url> <section> make new file hs / fsw / inc / hs_custom_internal . h and move the aforementioned definitions to it . <section> simply move the aforementioned definitions to fsw / inc / hs_extern_typedefs . h <url> <section> <allcaps> jsc </allcaps> needs this change to build successfully <section> justin figueroa , vantage systems"
"fix # <number> , make hs_tbl . h public ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
make hs_tbl . h public hs_tbl . h defines macros used in table generation and should be made public . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove initializations causing cppcheck errors testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . cppcheck now passes without error again . <section> avi <user>"
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch hs source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in hs that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , add utility command requirements for existing implementation - fix # <number> <section> ci <section> none , just adds missing requirements for traceability <section> ci <section> note there are future work issues that may change this current behavior , but we need to have requirements for what currently exists . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"hs missing requirements for setutildiagcmd , setutilparamscmd , and utildiagreport ( all hs_custom . c ) although these are in the custom section and may need adjustment depending on resolution of the hogging task related issues , the current implementation is missing associated requirements for hs_report_diag_cc , hs_set_util_params_cc , hs_set_util_diag_cc : <url> <url> <url> <section> all commands should have associated requirements , add . <section> none in the short term . longer term may update behavior based on : - # <number> - # <number> <section> really should be at minimum in the draco - rc2 requirements documents ( as well as many historical versions ) . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping for awareness : <user>"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cancellation point to idle task - fix # <number> just adds cancellation point to the idle task <section> ci , and confirmed cfs exits cleanly with ctrl - c <section> hs idle task now exits cleanly <section> ci and linux <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <user>"
"fix # <number> , performance id usage inconsistency fixed all occurrences - fixes # <number> <section> personal"
"fix # <number> , remove all mentions of <allcaps> asist </allcaps> or <allcaps> itos </allcaps> artifacts from docs - fixes # <number> <section> personal"
"fix # <number> # <number> # <number> # <number> , coverage improvements split by topic ( mostly ) in the commits , but submitted as a group for <percent> coverage ( line / branch ) - fix # <number> - fix # <number> - fix # <number> - fix # <number> <section> ci <section> none , refactors just eliminated dependent conditionals <section> ci <section> none <section> none <section> none"
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , add missing rationale and update application table requirements - fix # <number> - fix # <number> <section> none , requirements updates only <section> none <section> na <section> deleted related test cases for deleted requirements <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add idle task while loop back in - fix # <number> just adds idle task loop back in <section> ci <section> idle task loops and should report hogging correctly ( should check with functional test ) <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> still need to finish testing <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add ut verification of startup sync - fix # <number> <section> build and run unit tests <section> none , just verifies hs8006 and hs8006 . <number> <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> , resolve ut static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"hs requirements imply <number> tables / entry types where only <number> exists there are several hs requirements that imply that there are <number> tables and / or entry types - core / non - core . that is not the case . there is one app table . <repeated> and there is no distinction between core / non - core app types ( with the exception that hs does not support restarting a core app ) . hs2000 – the term ‘ critical ’ should be removed from the application table name . hs2000 . <number> , hs2000 . <number> , hs2000 . <number> – requirements are duplicate and need to be removed . they are covered by hs2000 . <number> , hs2000 . <number> , hs2000 . <number> . hs2000 . <number> – needs to be updated to remove verbiage specifying the type ( core / non - core ) of entry in application table . further , it should specify that item ( a ) only applies to non - core apps ."
"fix # <number> # <number> , resolve reassignment before use style warnings - fix # <number> - fix # <number> <section> ci <section> none , just removes extraneous settings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"static analysis issues relative to flight code handful of static analysis issues in the "" red "" identified ( non - style issues ) . need to resolve these . filter : - file : elf - file : ut - file : cfe - file : os - file : cf_ - file : _lab_app . c ! ( significance : style ) should resolve and / or disposition the higher ranked ones at minimum . note license restricts publishing issues . imported from <allcaps> gsfccfs </allcaps> - <number>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
"hs : remove <allcaps> psp </allcaps> stubs once available from the <allcaps> psp </allcaps> hs_utils_stubs . c has cfe_psp_watchdog * stubs , since they are not provided in caelum <allcaps> psp </allcaps> . eventually these should be removed once supported by <allcaps> psp </allcaps> . pending on <url> imported from <allcaps> gsfccfs </allcaps> - <number>"
"performance id usage is inconsistent in hs app anytime a task goes into a system delay ( for example a pend on message receipt or task delay ) , an app should do the following : cfe_es_perflogexit ( <performance_id> ); < do the delay function > cfe_es_perflogentry ( <performance_id> ); there appear to be some cases in hs where a task delay called , but the performance monitor is not exited . other apps should also be checked for consistent usage . imported from <allcaps> gsfccfs </allcaps> - <number>"
"compiling unit tests with cfs bootes - rc2 the provided unit tests do not compile with the bootes - rc2 release of cfs . the unit test <allcaps> readme </allcaps> states that "" the ut - assert framework , stubs , and hooks are located in the directory cfe / tools / ut - assert "" . this is no longer the case . i found an older version of cfe that had this ut - assert folder and managed to get the unit tests to compile with that , but many of the unit tests failed , likely because the functions in ut - assert are out of date . it seems that many of the functions within the old ut - assert folder used by these unit tests have moved to various places in cfe , osal , and psp and have since been updated . i am attempting to move files around and link libraries to compile with the updated cfs , but have not had any luck so far . below are the versions of cfe , osal , and psp i am using : - cfe v6 . <number> + dev298 - osal v5 . <number> + dev250 - psp v1 . <number> + dev76"
test issue
"fix # <number> , avoid use of abspath make function the abspath function does not work in <allcaps> gnu </allcaps> make v3 . <number> , which is still used as it is packaged with the wind river tools as part of vxworks <number> . x . the <code> function was used in two places related to generating tables - first for extraction of the <allcaps> elf </allcaps> file from an intermediate lib , second for conversion of that <allcaps> elf </allcaps> file to a table file . in the first case , the path should already be absolute , as it comes from cmake . in the second case , the path should always be relative , because it is intended to match another pattern rule starting with "" elf / %"". for the second rule , prefixing with $( <allcaps> curdir </allcaps> ) should achieve the same effect . fixes # <number> <section> build with both older ( v3 . <number> ) and newer ( v4 . <number> ) versions of <allcaps> gnu </allcaps> make <section> successfully builds using make v3 . <number> <section> <allcaps> gsfc </allcaps> vxworks development machine <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adjust dependencies on table lib instead of having the intermediate table library build as part of the "" all "" target , attach it as a dependency under the custom rule . this way it will only be built in the context of the cfetables top level target , not both . fixes # <number> <section> build a configuration with lots of tables ( > <number> ) repeatedly from a clean start using various <code> values . <section> builds succeed , no race conditions / sporadic failures . <section> debian <section> this excludes the intermediate library from the <code> target and instead attaches it explicitly under the generate tables rule . so it should avoid the case of having two legs of a parallel build both finding the dependency and attempting to build it . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixes errors in ic bundle workflow file addresses issue # <number> . also restores incorrectly altered changelog history in <allcaps> changelog </allcaps> . md . <section> generated ic branch in fork . <section> no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h additional occurrences of the string "" changelog "" are not replaced in the changelog . md file , as it is now replacing "" <hashtag> changelog </hashtag> "" . <section> dylan z . baker - <allcaps> nasa gsfc </allcaps> <number>"
"formatting issues with icbundle workflow <section> there are some small formatting issues that should be corrected in the changelog / version . h updates made by the icbundle workflow : <number> . an additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h <number> . additional occurrences of the string "" changelog "" are replaced in the changelog . md file <section> steps to reproduce the behavior : <number> . push a code change to a user - owned feature branch <number> . submit a pull request for that code change <number> . go to the "" actions "" tab in github and run the "" integration candidate bundle generation "" workflow with the pr number as the input argument for the field labeled "" the pull request numbers to include ( comma separated ) : "" <number> . wait for the workflow to complete <number> . inspect the newly updated / generated "" integration - candidate branch "" <number> . observe the changes made to the changelog . md and modules / core_api / fsw / inc / cfe_version . h files by the workflow <section> <number> . no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h <number> . additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev54 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"default cfe_msg_init function will initialize a message with size of <number> <section> the 3 rd argument to <code> indicates the actual / real size of the structure that should be initialized . all of the operations that deal with a primary header assume it must be _at least_ this size , and write to the primary header . however , cfe_msg_init ( ) does not confirm that the size is at least the minimum required . it will still write fields ( e . g . msgid ) into the primary header , even if the size passed in is <number> . <section> call default <code> with size specified as <number> . the msgid is still written into the primary header . this is basically a buffer overflow , as the function wrote to memory that was beyond the end of the buffer . <section> the function should never write beyond the end of the buffer . passing a size of <number> should not initialize / write anything because there is no buffer to write to . <section> implementation of cfe_msg_init - note this proceeds to "" initdefaulthdr "" regardless of size . <url> <section> debian <section> related issue in cf that was relying on this bug - - this is being fixed in nasa / cf # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use correct object extension in table build do not assume "" . o "" for object files , use ${ cmake_c_output_extension } fixes # <number> <section> build tables for vxworks ( using . obj extension ) <section> build should succeed now <section> <allcaps> gsfc </allcaps> vxworks build host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update dev guide to fix out - of - date references and broken links testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> doc changes only . <section> avi weiss <user>"
"cfe dev guide has out - of - date references and some broken links code snips * * - references to <code> module that was removed in <url> - out - of - date names : <code> , <code> , <code> , <code> <section> docs should be up - to - date and correct . <section> avi weiss <user>"
"add c + + header guards adds header guards to public includes so <allcaps> cfe </allcaps> can be called from c + + translation units <section> - <allcaps> todo </allcaps> <section> - no impact to behavior - allow for easy calling from c + + translation units <section> - <allcaps> todo </allcaps> <section> addresses <url> for <allcaps> cfe </allcaps> <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"fix <number> : document es perf enums a clear and concise description of what the contribution is . - fixes # <number> <section> - no impact to behavior ( doc change ) <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"values for triggermode provided to cfe_es_startperfcmd are not documented <section> here is the documentation for the <code> struct : > <number> . <number> triggermode <code> > desired trigger position ( start , center , end ) > definition at line <number> of file <code> there is no indication what values correspond with <code> , <code> , and <code> . some searching reveals that the implementation in <code> compares for values <code> . the public header <code> has the enum values for this , but there is no docstring and therefore does not appear in the user guide . the actual default numeric values would be good to indicate somewhere because the commanding interface may not have access to the <code> macros , ie , when using <code> from the command line . <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"fix # <number> add perfid limit info to es docstring a clear and concise description of what the contribution is . - fixes # <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior ( doc change ) <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"fix # <number> remove nonexist reference for perf tool - remove non - existent reference to performance analyzer tool in cfe_es documentation . <section> none , doc change only . <section> - no impact to behavior <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"cfe_es_perflogadd should document config <section> the docstring for cfs_es_perflogadd makes no mention that the value of <code> is limited by the config value <code> . in my case , i have never altered this limit and was not aware of its existence , so i was surprised when calls to the cfe_es_perflogentry were failing . the only way to know that this value is used is to check the implementation file at <code> <url> or the note under from the documentation of <code> : > performance ids are limited to the range of <number> to cfe_mission_es_perf_max_ids - <number> . this text should also appear in the docstring for <code> i also find the documentation for <code> at <code> <url> confusing : <code> i find this confusing because although the value does affect the size of the <code> telemetry message via the filter and trigger mask buffers , the wording does not indicate that this limits the upper *value* of perfids , not the *number* of perfids . i could have only a few dozen perfids , but if one had a value greater than or equal to this parameter , it would be rejected . <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"es docstrings reference non - existent manual section <section> a clear and concise description of what the bug is . in <code> <url> : <code> there is no section <number> of the manual . <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"avoid generating module - specific msgid files if project has provided an all - inclusive "" cfe_msgids . h "" file <section> as part of the effort to better compartmentalize the various <allcaps> cfe </allcaps> subcomponents , we are working toward having each module manage its own individual header files . during this migration , this presents some confusion for a configuration that already has an all - inclusive <code> - as these individual msgid headers will still be generated ( with default values ) even though they are not used . <section> to reduce confusion - - if the user has a <code> file , then do not generate the individualized msgid files . <section> the other option would be to revert the focused msgid . h file and go back to having cfe_msgids . h being the only msgid header for <allcaps> cfe </allcaps> . <section> there is a possibility that a user has overridden the <code> but in a way that still <hashtag> includes </hashtag> some ( but perhaps not all ) of the focused msgid headers . this proposal would break such a config . <repeated> so if that is a real possibility , this might not be a good idea . <section> joseph hickey , vantage systems , inc ."
"revert "" fix # <number> , do not directly use cfe_test_msgids . h "" reverts nasa / cfe # <number>"
"fix # <number> , uninitialized exceptiontaskid in cfe_es_runexceptionscan - fix # <number> <section> ci <section> squash static analysis warning <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
uninitialized exceptiontaskid in cfe_es_runexceptionscan <section> uninitialized warning : <url> since it ' s not always written in : <url> <section> run static analysis <section> no uninitialized variable warnings <section> static analysis <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , uninitialized pkttime in evs_sendviaports - fix # <number> resolves codesonar warning <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , triggermode unsigned compare with <number> - fix # <number> this allows removal of cpp - check warning suppression and fixes a codesonar static analysis warning . note cfe_es_perf_trigger_start is <number> here : <url> and triggermode is uint32 here : <url> so the check is always true . only useful validity check is < cfe_es_perf_max_modes . <section> ci <section> none <section> ci <section> does not actually impact code coverage since it looks like this check was getting compiled out anyways . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , do not directly use cfe_test_msgids . h for a user that has customized cfe_msgids . h , this will get conflicting values . if / when users have migrated to module - specific msgid files , this will be ok , but for now this can break things . fixes # <number> <section> build using override of <code> ( only ) . <section> no conflicting msgids if user has overridden <code> but not <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build with cfe_mission_time_cfg_default_utc = = true <section> build and test succeeds <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not directly use cfe_test_msgids . h for a user that has customized cfe_msgids . h , this will get conflicting values . if / when users have migrated to module - specific msgid files , this will be ok , but for now this can break things . <section> build and run tests <section> no conflicts if user has modified <code> but not <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build and run <allcaps> cfe time </allcaps> tests <section> tests now pass as expected <section> debian <section> joseph hickey , vantage systems , inc ."
"testcase code should not directly include "" cfe_test_msgids . h "" ( yet ) <section> the module - specific header file is a relatively new addition . but for a user that has overridden the previous all - inclusive <code> file , including the test_msgids . h directly will cause conflict with the overrides . <section> override ( only ) <code> in a build , and change the msgids in here . do not override cfe_test_msgids . h . attempt to build cfe_testcase - - the <code> inclusion will bypass the modified msgids , and get defaults , which will conflict / mismatch . <section> should be backward compatible with an existing override of <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build and run coverage tests <section> <allcaps> time </allcaps> test will pass with cfe_mission_time_cfg_default_utc = = true <section> debian <section> joseph hickey , vantage systems , inc ."
"<allcaps> cfe time </allcaps> coverage test fails if set to use <allcaps> utc </allcaps> <section> when configuration is set to use <allcaps> utc </allcaps> , the "" externaltone "" test case will fail . <section> configure <code> to be true , then compile and run coverage tests . <section> the test should pass regardless of how this configuration item is set . <section> debian <section> this is because it adds leap seconds into the <code> value only when set to use <allcaps> utc </allcaps> . the leap seconds were not configured by this test case , so it still has a value from a previous test case , which is <number> . this larger - than - expected jump causes it to go into the <code> result case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe to prefix list for msgids . h and platform_cfg . h this allows the script to pick up the file if it was named simply "" cfe_msgids . h "" or "" cfe_platform_cfg . h "" , rather than insisting it be named with a platform - specific prefix fixes # <number> <section> build and run with stakeholder configuration <section> a file named <code> is picked up by the build system , as expected . <section> debian <section> joseph hickey , vantage systems , inc ."
"the include file wrapper script does not pick up a "" cfe "" prefix file <section> the include file wrapper script looks for a name - qualified file to use for e . g . <code> and <code> . this means that the file provided in the "" defs "" directory needs to be named based on the config , for example <code> or <code> . <repeated> then this file gets wrapped as <code> for c source files to use . this pattern has some advantages , in that only one copy of a file actually named <code> will exist on the disk , therefore it is clear ( er ) which one is actually getting picked up . however , this name difference / mapping is not well documented and can be confusing or unexpected to some users . <section> create a customized <code> file in the defs dir , and run "" make prep "" observe that the default msgids from <allcaps> cfe </allcaps> were picked up , not the customized version . <section> the customized version should be picked up . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> - cfe_time_print ( ) calls strftime ( ) cfe_time_print ( ) calls strftime to format times and returns a status code rather than creating a syslog entry . note that this may be expanded to allow this to be configurable or parameterized ( although <allcaps> evs </allcaps> may just call strftime directly . ) re - introduced from # <number> . # <number> , # <number> reverted this pr . also collapsed epoch defines to <allcaps> seconds </allcaps> and <allcaps> micros </allcaps> for more performance and simpler configuration . <section> standard build and ut tests updated . <section> function returns cfe_status_t status . _note_ strftime uses time_t which *may* be <number> - or <number> - bit and *may* be signed or unsigned , depending on the platform . <section> ubuntu <number> . 0 4 lts <section> <url> <section> none . <section> <email>"
"fix # <number> , revert "" merge pull request # <number> from cdknightnasa / fix - <number> - time_fmt "" reverts # <number> - fixes # <number> <section> n / a <section> # <number> is removed . <section> n / a <section> dylan z . baker - <allcaps> nasa gsfc </allcaps>"
push off pr # <number> to equuleus - rc2 <section> it has been decided that # <number> should be put into equuleus - rc2 to limit major changes to this release . <section> pr # <number> is reverted . <section> n / a <section> dylan z . baker - <allcaps> nasa gsfc </allcaps>
"fix # <number> , split up and simplify control flow in <code> additional changes * * _ <section> _ simplified the size checks to just a single check and report ( old ] ( <url> [ new <url> . can revert this change if the extra verbosity is desired . previously , if any of the name size checks failed ( and <code> status was set ) , the code would then still run on to verify the specific table options flags ( and re - assign another error code on top of <code> if this failed ) . have updated this logic to only enter the <code> checks if the size checks pass successfully . no need to continue execution if error status already set . _ <section> _ previously the code would search for an access descriptor even if already in error status here ] ( <url> this is unnecessary if already in error status so have changed this conditional to just check for <code> ( [ link <url> . in <number> locations inside the this same main table registration block there were status guards of the form <code> . i have reduced the nesting in this section , and simplified these checks to just check for <code> . the only non - negative ' warning ' status possible there was <code> , which was already being filtered out anyway . also , these warning ( i . e . non - success , non - error ) status / return codes are intended to be deprecated <url> anyway . _ <section> _ simplified this ] ( <url> true / false assignment to [ this <url> . note there are a few open issues already for specific issues inside <code> : - <url> - <url> - <url> ( this one is fixed by this pr as well ) <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing also conducted to confirm all variables and syslog strings printing as expected etc . <section> minor control - flow changes noted above . in general this pr will : - make unit testing much simpler / easier - ease future maintenance - reduce technical debt - ease use of cfe by developers <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"split up and simplify control flow in <code> code snips * * <url> <section> split up <code> , and try to simplify control flow and conditional logic a bit - it currently stands at <number> lines and several dozen branches . <repeated> will make testing and future maintenance easier . <section> avi weiss <user>"
"more script - friendly testcase mode <section> currently , the <allcaps> cfe </allcaps> workflow invokes cfe_testcase which runs all functional tests . however for performance testing it may be important to run certain tests in isolation . <section> allow some method where the user can limit the run to certain test case ( s ) . <section> one alternative could be to split cfe_testcase into separate apps . however this would entail some duplication / overlap between them . it would also require prior knowledge of which tests would be "" allowed "" to run in isolation . would prefer a solution where any test ( including the regular functional tests ) could be run in isolation - this is helpful if e . g . an error occurs in that test and a developer wants to run only that test for debug . <section> joseph hickey , vantage systems , inc ."
"implement multi - thread version of bulk transfer test <section> previous pull request # <number> implemented a "" first pass "" speed test for software bus - but it single threaded , in that the same thread is doing both the "" send "" and "" receive "" side of the transaction . while this gives a general idea of the execution time / cost of these apis , it does not indicate how well they scale across threads . <section> in real usage , it is ( almost ) always different app doing the "" send "" and "" receive "" calls . therefore , it is important to also know how well these sb apis scale across multiple threads / tasks . that is - they involve several "" critical sections "" - and the logic inside these sections runs only in a single task at a time . this will affect the level of concurrency possible between send and receive operations - and this is an important measurement to gauge the efficiency of the <allcaps> sb api </allcaps> . <section> this would be similar to the test done in pr # <number> but using separate tasks to do the sb operations . <section> joseph hickey , vantage systems , inc ."
"github check for pr ' s that make cfe take more <allcaps> cpu </allcaps> time <section> pull requests that significantly alter the performance character of the cfe software , particularly if that change makes cfe run slower , should be elicit inspection and require a good explanation . <section> the "" time "" unix command provides the "" <allcaps> cpu </allcaps> time "" that a process takes to completion . this is independent of wall clock time , and should provide a consistent measure of performance under varying github workflow conditions . i propose a github workflow to check the <allcaps> cpu </allcaps> time against a standard , akin to what we do currently with coverage testing . <section> we have been discussing adding <allcaps> cpu </allcaps> time calls to the <allcaps> psp </allcaps> so that cfe users can take measure of <allcaps> cpu </allcaps> time utilization . this should be a follow - on project , as vxworks and other <allcaps> rtos </allcaps> may not have the same apis or commands . <section> see <url> see <url> <section> <email>"
"fix <number> evs fmt mk2 joe , for your consideration , another pass at the "" % f "" and strftime code . this simplifies it a bit ( but only supports one "" % f "" in the format string . )"
"fix # <number> , refactor sb to support additional use cases cleans up the internal sb implementation so it can better support future enhancements such as message integrity , additional header fields and timestamping . fixes # <number> <section> full suite of tests on sb implementation <section> <allcaps> api </allcaps> behavior is preserved , fully backward compatible <section> debian <section> replaces # <number> based on code review and discussion . this pr represents the refactoring change , along with some other refinements . the routing change will be a separate pr . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement sb bulk transfer test add a functional test that moves a large number of messages across the bus as fast as possible ( i . e . with no delay ) . the process is timed , thus offering some metric as to the single thread / single core performance of the software bus implementation underneath . note that due to vast differences between hardware , results should only be compared between successive runs on the exact same hardware , such as before and after a change was made . fixes # <number> <section> execute test before and after changes made <section> introduce some form of performance check for sb implementation <section> debian <section> the test itself only shows microseconds elapsed ( because this metric is available from the <allcaps> psp </allcaps> today ) but the software can also be run under an external profiling tool for more info . <section> joseph hickey , vantage systems , inc ."
"implement software bus bulk transfer functional test <section> requests have been received to include software bus performance as part of the test matrix . <section> start by implementing a functional test case ( as part of cfe_testcase ) that emulates using the software bus for bulk message transfer , by sending a fixed large number of messages ( e . g . <number> million ) . this process can be timed , and this in turn will give some indication of relative performance of the implementation . <section> this obviously could be much more sophisticated . the proposed test only covers the simplest case , in single thread / single core context , and the results are only comparable to successive runs on the exact same hardware with the same compiler and same compiler flags . nonetheless , monitoring the result before and after a change will provide at least one simple metric of whether that change affects performance or not . a follow - on change should perform a similar test with multiple threads , and thus give some metrics to how well sb scales across cores . <section> joseph hickey , vantage systems , inc ."
"software bus refactoring needed to prepare for future needs <section> requests have been received for software bus features such as : - better message integrity checking - better control over message routing and delivery - timestamped commands ( not just <allcaps> tlm </allcaps> ) <section> the software bus can support all of this but the internal workings need some refactoring and clean up to make it possible to fully integrate such features without duplicating the code . <section> n / a <section> breaking up the software bus functions into smaller bits of functionality allow for : - different transmit / receive variants to use the same basic logic - easier unit testing and maintenance of smaller routines - reduced cyclomatic complexity of smaller routines - more code re - use between the two this needs to be implemented before # <number> can be done . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add code coverage for null check steps taken to test the contribution : <number> . build <allcaps> simulation </allcaps> = native enable_unit_tests = true prep <number> . make <number> . make test <number> . make lcov <section> no impact on behavior <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions . anh van , <allcaps> gsfc </allcaps>"
"fix # <number> , use <code> for variables / parameters representing size testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> some signed variables changed to unsigned but it would have been illogical / impossible to input negative values in those cases . <section> avi weiss <user>"
use <code> for variables / parameters representing size expected behavior * * update to <code> where appropriate . <section> avi weiss <user>
"fix # <number> , add timestamp for sb messages which are missing it testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> messages will be stamped with updated time before being sent . <section> avi weiss <user>"
"fix # <number> <allcaps> tbl ut </allcaps> update for <allcaps> osal </allcaps> / <allcaps> cfe </allcaps> path length mismatch fixes # <number> <section> see reproduction steps from linked issue <section> tests should pass even if <code> is less than <code> <section> - hardware : intel xeon <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> - versions : trunk <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license no third party code <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"<allcaps> osal </allcaps> path length variables cause <allcaps> tbl </allcaps> tests to fail <section> a clear and concise description of what the bug is . for certain values of <code> and <code> , tests for <allcaps> tbl </allcaps> ( and the ds application ) fail . i suspect that the tests are making assumptions about the maximum values these can be set to . <section> steps to reproduce the behavior : <number> . build <allcaps> fsw </allcaps> with <code> set to <number> and <code> set to <number> <number> . test with <code> <section> a clear and concise description of what you expected to happen . expect tests to pass . <section> if applicable , add references to the software . <code> <section> - hardware : intel ( r ) xeon ( r ) <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> linux - versions : draco - rc3 tags for cfe , <allcaps> osal </allcaps> , and apps <section> add any other context about the problem here . related issue in ds : <url> <section> full name and company / organization if applicable isaac rowe , <allcaps> nasa jsc </allcaps> / jacobs technology"
"cfe integration candidate : caelum - rc4 + dev53 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , adds <allcaps> time </allcaps> module command to set cfe_time_print ( ) format adds a <allcaps> cfe time </allcaps> command to configure how to print time information , mostly used by cfe_evs to print to stdout , and <allcaps> cfe es </allcaps> for writing to syslog . <section> build and test using standard cfe coverage tests which have been updated to test different formats and error conditions . <section> enhances cfe_time_print ( ) function and allows for more concise and helpful timestamps . <section> ubuntu <number> desktop vm . <section> <email>"
"fix # <number> , add source routing apis to sb add two new apis that allow more control over the message routing . these allow the caller to directly specify the route ( msgid ) and size of the content , and the message will be delivered based on the passed in values vs . the values inside the message itself . this restructures the existing / historical <allcaps> api </allcaps> calls to use the same underlying mechanism . send / receive actions have a transaction object associated and this tracks the status and events . common event reporting is done based on this transaction object . fixes # <number> <section> build and run <allcaps> cfe </allcaps> including functional test app build and run sanity tests <section> adds two new apis . existing apis should be backward compatible , with some possible changes to the expected event ids that might be generated under some off - nominal conditions . <section> debian <section> the new <allcaps> api </allcaps> allows the passed object to be any arbitrary data - - it does not need to be a <allcaps> cfe </allcaps> / <allcaps> ccsds </allcaps> message at all . therefore this could be more suitable for things like <allcaps> cfdp pdu </allcaps> packets , etc . as it would not need to be forced to look like a <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase cfe_platform_evs_app_events_per_sec to <number> increases cfe_platform_evs_app_events_per_sec to <number> fixes # <number> <section> executed functional tests and confirmed that the results are no longer being squelched . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
functional test results are being squelched <section> functional test results are being squelched such that it appears the tests are not executing successfully . <section> run functional tests <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , increase slp time in funct test workflow increase the wait time required to call a test ' frozen ' . this will prevent tests from erroneously being called ' frozen ' and allow the tests to complete successfully . fixes issue # <number> <section> ran workflow <section> tests complete successfully <section> dan knutsen <allcaps> nasa </allcaps> goddard"
github workflow does not allow enough time for all functional tests to run <section> the current functional test workflow will exit because it thinks the functional tests are frozen if they exceed <number> seconds . <section> run workflow <section> the time required to call a test ' frozen ' should be increased such that all tests can finish successfully <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , update comment re . limits of testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior - documentation changes only . <section> avi weiss <user>"
"make <allcaps> evs </allcaps> stdout timestamps configurable <section> currently the <allcaps> evs </allcaps> output includes a full timestamp of <code> which , for most users , is too much information ( how likely are you going to run cfs for years ? ) and creates a lot of noise in the output . instead , <allcaps> evs </allcaps> should be configurable ( compile - time , load - time , or run - time ) to control what output timestamp format it should use . <section> a runtime - reconfigurable timestamp , at minimum the format string to use for strftime , plus "" % f "" ( not part of the c standard , but adopted from the python strftime <allcaps> api </allcaps> ) for the microseconds . additionally , instead of "" clock time "" , have an option to switch to "" seconds since start "" and / or "" seconds since timer reset "" with an associated reset command . <section> leaving well enough alone . <section> see also <url> <section> <email>"
"cfe integration candidate : caelum - rc4 + dev52 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> - cfe_time_print ( ) calls strftime ( ) cfe_time_print ( ) calls strftime to format times and returns a status code rather than creating a syslog entry . note that this may be expanded to allow this to be configurable or parameterized ( although <allcaps> evs </allcaps> may just call strftime directly . ) also collapsed epoch defines to <allcaps> seconds </allcaps> and <allcaps> micros </allcaps> for more performance and simpler configuration . <section> standard build and ut tests updated . <section> function returns cfe_status_t status . _note_ strftime uses time_t which *may* be <number> - or <number> - bit and *may* be signed or unsigned , depending on the platform . <section> ubuntu <number> . 0 4 lts <section> <url> <section> none . <section> <email>"
"fix # <number> , update readme_functionaltest . md updates readme_functionaltest . md to include sample_app in startup script . fixes # <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , make shared tbl configurable this fix makes the shared table used in the cfe functional tests project configurable fixes # <number> <section> executed functional tests and confirmed that the tests were successful . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , use <code> to swap between ping - pong buffers ( style change only ) testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , format update for additional counters in summary format update to support additional counters in functional test summary . fixes # <number> <section> executed functional tests and confirmed output is as expected . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , rename overloaded <code> to <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , sb_ut corrections and clear event count history after setup testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing confirms net coverage unchanged . <section> no change to code behavior . test behavior updated as described above . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev51 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix nasa # <number> - adding cfe_time_stringfmt ( ) and cfe_time_stringfmtlen … … ( ) functions fixes # <number> , adds cfe_time_stringfmt ( ) and cfe_time_stringfmtlen ( ) functions that behave similarly to strftime ( but limited to % y [ y <elongated> ] , % j [ doy ] , % h , % m , %s , % f [ micro ] ) . cfe_time_print ( ) calls cfe_time_stringfmt ( ) . <section> added ut tests , all pass . <section> no impact to behavior , adds capabilities ( that will be extended to <allcaps> evs </allcaps> so that log message timestamps can be configurable . ) <section> - hardware : pc - os : debian "" bookworm "" ( <number> ) - versions : <allcaps> head </allcaps> of main branch of cfe <section> an alternative would be to use strftime , if all target platforms include it . this would allow for month / day - of - month and other options this code does not include and would be difficult to implement . <section> none <section> <email>"
"fix # <number> , update <code> macro in es_verify . h testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing confirms the checks are behaving as expected when invalid values for the <number> macros are used : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> checks will actually check what they intended to now . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
out - of - date <code> macro in cfe_es_verify . h code snips * * <url> <section> update this compile - time check to use the new macros . <section> avi weiss <user>
"fix # <number> , rename timea / timeb parameter to improve consistency testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> <section> avi weiss <user>"
inconsistent use of time1 / time2 timea / timeb parameter names code snips * * <url> <url> <url> <section> make consistent . <section> avi weiss <user>
"fix # <number> , refactor common logic out of <code> testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . local tests confirm the modified commands are working as expected : screenshot <number> - <number> - <number> <number> <number> <number> <img> net coverage is unchanged ( total lines reduced by <number> , total branches reduced by <number> ) . <section> behavior / logic is unchanged . code duplication reduced , easing future maintenance . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
refactor common logic out of <code> code snips * * <url> <section> pull common logic out into a helper function to reduce duplication and make code more readable / maintainable . <section> avi weiss <user>
"fix # <number> , add msg verify capability adds a "" verify "" <allcaps> api </allcaps> to the msg module . this always returns success in the default implementation , because checksums were not historically enforced . however it can be made more strict in a custom implementation . fixes # <number> <section> build and run tests ( <allcaps> api </allcaps> is not used yet ) <section> none at this time , follow on change to enable it <section> debian <section> joseph hickey , vantage systems , inc ."
"add <allcaps> msg api </allcaps> hook to validate a message prior to returning buffer from sb <section> if a user wants to add additional error checking within the header fields , such as a <allcaps> crc </allcaps> , there is currently no easy way to validate the value as part of the receive buffer process . <section> add a hook to validate the message before returning from sb . <section> this can be a no - op in the default build , as only the cmds have a ( weak ) checksum , and that was never really enforced / checked in <allcaps> cfs </allcaps> anyway . so for backward compatibility the implementation should be permissive . but if the user has customized <allcaps> msg </allcaps> with additional fields and logic , they could implement more validation using this hook . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , generalize update header parameter expand the "" increment sequence "" boolean on transmit message functions to be a more general "" update header "" boolean , so it can be used for other fields like timestamps , checksums , or user - defined fields too . fixes # <number> fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check , confirm headers are as expected <section> headers will be updated more consistently / generically . * note - - * messages classified as commands will have headers updated , too - specifically the sequence count and checksum . this will apply to messages being created by <allcaps> sch </allcaps> / sch_lab , and the time signals sent by <allcaps> cfe time </allcaps> . previously the sequence counter was not set in any of these messages , so it would have always been zero . hence receivers would not be relying on it for anything , and thus setting it nonzero should not break anything , either . but there is a slight chance that some code had a dependency on this always being zero . <section> debian <section> joseph hickey , vantage systems , inc ."
"allow updating more than just sequencecount on message transmit <section> currently , the cfe_sb_transmitmsg ( ) <allcaps> api </allcaps> has a second parameter , to update the sequence count of the outgoing message . this was a bit short - sighted because the <allcaps> msg </allcaps> headers are user - configurable ( via customizing the <allcaps> msg </allcaps> module ) . <repeated> it is possible that there is more than just a sequence count that needs to be maintained . if users can add custom header fields , this hook needs to be more generic to update other headers . <section> generalize the boolean to mean "" update headers "" ( thus not limited to a sequence count ) . this would include a sequence count , of course , to not break existing code . <section> other headers that could conceivably be updated , if applicable to the message being sent : - timestamp - checksum / error control field <section> joseph hickey , vantage systems , inc ."
"uninitialized variable possible in evs_sendviaports <url> there is a possibility of an uninitialized variable in evs_sendviaports in cue_evs_utils . c . i do not have a running example , problem found using static analysis with grammatech codesonar , screenshot attached . screenshot <number> - <number> - <number> at <number> <number> <number> pm <img> line <number> calls cfe_msg_getmsgtime ( cfe_msg_ptr ( evs_pktptr - > telemetryheader ) , & pkttime ) ; this function is in cue_msg_sechdr_time . c however , if either the first , or the second parameter is <allcaps> null </allcaps> , then that function will return cfe_msg_bad_argument on line <number> of that file . second parameter is unlikely to be <allcaps> null </allcaps> as it is a pointer to a local variable from evs_sendviaports ( ) . which means it does not initialize pkttime , which is subsequently used in the cfe_time_print call . this may not be a problem if the compiler initializes local variables to <number> , but there is no guarantee on that . pkttime is used in a time calculation to convert epoch to calendar time , so worst case this could take a long time , and / or print garbage . probably would be better to check the return of the call to cfe_msg_getmsgtime and set pkttime to <number> if cfe_msg_bad_argument is returned ."
"cfe integration candidate : caelum - rc4 + dev50 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , refactor <code> to simplify and unmix variables testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . local testing to confirm net coverage unchanged and test commands also fine . <section> no change to behavior . function is cleaner / simpler which eases future maintenance . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , remove unused cfe_platform_es_reset_area_size fixes # <number> remove unused define cfe_platform_es_reset_area_size <section> pipeline passing <section> no impact to behavior <section> - pipeline <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> <number>"
"fix # <number> , remove unreachable / dead branch in <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . this pr ( slightly ) increases coverage by one branch by removing an unreachable branch . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , remove redundant status check in <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . this pr ( slightly ) increases coverage by one branch by removing an unreachable branch . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , adjust ut pool buffer size for platform config if the cfe_platform_es_max_block_size is increased , then increase the ut pool buffer accordingly . this had been hardcoded to 1 2 8 k . also consider pool exhaustion to be a fatal error , as continuing the test will certainly segfault and this makes the original error harder to spot . fixes # <number> <section> build and run <allcaps> tbl </allcaps> test with configuration specified in issue . <section> <allcaps> tbl </allcaps> tests pass with larger sizes . <section> debian <section> pool buffer being too small will also now stop / abort the test , as this is a bug that will certainly segfault later , better to stop and report the error more obviously . <section> joseph hickey , vantage systems , inc ."
"remove unused define cfe_platform_es_reset_area_size the define is not needed anymore and is currently unused . now the "" <allcaps> psp </allcaps> ( using <code> ) informs es of what the total reserved memory area is , and es informs <allcaps> psp </allcaps> of how to organize / partition it . "" <url>"
"fix # <number> , add element to write error event in <code> testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> no change to behavior other than the variable added to the <code> mentioned above . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev49 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove unnecessary asserts in <allcaps> time </allcaps> invalid command length ut testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing with cfs suite confirms no change to coverage . <section> this simplifies the coverage tests and makes them easier to maintain . also , <allcaps> time </allcaps> is now consistent with the other modules . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
<allcaps> time </allcaps> includes unnecessary asserts in invalid command length tests expected behavior * * can simplify the unit tests for <allcaps> time </allcaps> by removing these extra asserts - checking for <code> being sent seems sufficient . <section> avi weiss <user>
"cfe is inconsistent on whether to increment error counter in case of invalid <allcaps> mid es </allcaps> * * <url> <section> <url> <section> <url> <number> / <number> do not ( <allcaps> tbl </allcaps> and <allcaps> time </allcaps> ) . <section> <url> <section> <url> <section> even though this should never actually occur - it should be consistently implemented across cfe . of note : most , but i believe not all , of the apps do increment their <code> when an invalid <allcaps> mid </allcaps> is received . <section> avi weiss <user>"
"fix # <number> , reorganize headers reorganizes all the headers in <allcaps> cfe </allcaps> to make them comply with the naming convention as described in the developers guide section <number> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> in a variety of configurations <section> header files are split into smaller parts , more manageable . should be backward compatible . <repeated> <section> debian <section> the smaller , more granular header files are not only easier to maintain ( if maintained by hand ) but also are more easily switched to a generated source . it is important to compartmentalize the contents because "" source switching "" will not work if different types of definitions are mixed in the same header . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , uniqueness of tbl target names if the passed - in table name does not use a qualifier suffix , then generate one by computing a hash of the context information . this ensures that the generated intermediate target names will be unique . fixes # <number> <section> replicated original error by doing additional "" add_cfe_tables "" for sample app in local project config , got duplicate name error from cmake . apply this patch , repeat build , and got all table files successfully . <section> no more target name conflict <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct unbalanced brackets in <code> macro testing performed * * github ci actions all passing successfully . <section> balanced brackets - could avoid future compiler warnings / errors or code bugs if not picked up by the compiler . <section> avi weiss <user>"
"wrong closing parenthesis in cfe_msg_cmd_hdr_init macro the cfe_msg_cmd_hdr_init macro ' s parentheses are not properly balanced . the cfe_msg_cmd_hdr_init macro contains a ' ) ' instead of a ' } ' in line <number> as of latest commit [ f9112b4 ] on <date> file : nasa / cfe / modules / msg / option_inc / default_cfe_msg_hdr_priext . h simple inspection shows the problem . opening and closing parentheses should be balanced . line <number> : . systemid = { <number> , <number> ) \ matthias bark , boeing"
"create cfe_time_printfmt ( ); <section> currently the <code> function only produces <code> <url> formatted timestamps . cfe_evs now uses that for stdout messages , which adds quite a lot of text . <section> i suggest the addition of a new <code> function , a - la <code> ( preferably using <code> , if that is available on all our target platforms ) so that applications can produce a time - only format , for example . additionally , i suggest a "" t + "" format for such things as <allcaps> evs </allcaps> stdout output where the first report is the full timestamp for "" t0 "" and all subsequent messages are the number of seconds ( <code> ) after the t0 epoch for even more storage efficiency and readability . once this capability is created , <allcaps> evs </allcaps> should be modified to allow configuring the format . <section> another option is to use something other than <code> in evs_sendviaports ( ) <url> . <section> see the related pr # <number> <section> <email>"
"uniqueness of intermediate table target names <section> previously , each table "" . c "" source file was built into its own static library target based on that source file name . this had the side effect of creating lots of complexly - named static lib targets . with recent changes , this is changed to build all listed table source files listed into a single , simpler - named target . now a new problem occurs if one tries to build table files separately . for example , something like this : <code> will both try to register a static lib target named <code> , which results in a target name collision error . <section> invoking <code> as above should work without a target name collision . <section> the <code> does allow for a name suffix , which is used as part of the lib name - so as long as that suffix is unique , there is no name collision . for example , this works : <code> and listing mutiple source files works too : <code> it is only the case of multiple invocations of <code> with the _same_ first parameter that triggers this conflict . <section> unfortunately , we had previously documented / recommended the first parameter of <code> to match the app name , so there may be more users that were following the problematic pattern above ( <number> is confirmed ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update <allcaps> xml </allcaps> files per interoperability testing verify the <allcaps> json </allcaps> files generated from <allcaps> eds </allcaps> match the expected content and <allcaps> ctf </allcaps> - based tests also pass . this required a few touchups to <allcaps> xml </allcaps> files to adjust sizes and / or padding . fixes # <number> <section> convert <allcaps> eds </allcaps> to <allcaps> json </allcaps> and run <allcaps> ctf </allcaps> - based tests using generated files <section> none <section> <allcaps> ctf </allcaps> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev48 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> , # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , correct fallback file case only include the "" fallback_file "" if the normal search came up empty . do not return a list containing the fallback / default along with the user - supplied files , only return the user - supplied files . this was an issue when using "" allow_list "" in that it had both . fixes # <number> <section> build with normal / default config , and build with overrides <section> overrides should work correctly again . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , simplify and clarify <code> logic testing performed * * github ci actions all passing successfully . would be good to add functional tests for this in the future - i noticed that changing the second block to just a simple <code> also passes all the coverage tests . <section> no change . <section> avi weiss <user>"
"fix # <number> , consistent use of <code> for <code> testing performed * * github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev47 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , document <allcaps> cfs </allcaps> component file naming expand section <number> of the <allcaps> cfe </allcaps> application developer guide with recommended file naming patterns and the expected content of the files . <allcaps> cfs </allcaps> apps should strive to match this pattern for the next release . fixes # <number> <section> n / a ( documentation only ) <section> n / a ( documentation only ) <section> n / a ( documentation only ) <section> if approved , all apps / components should migrate to the described pattern in cases where they do not currently implement it . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add functional tests for cfe sb message id apis testing performed * * github ci actions all passing successfully . <section> test code changes only . <section> avi weiss <user>"
"fix # <number> , remove else statement that was unreachable by unit tests fixes # <number> . <code> could only ever return <code> or <code> . removed else statement that would never be able to be reached . <section> unit tests <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , implement common command - handler return pattern across cfe _es_ * * - move incrementing of command / error counters from the individual commands into <code> - there were <number> locations ( in <code> and <code> ) where <code> was returned during a failure / error event after the <code> was incremented . these now return <code> which improves the clarity of these functions . <section> - move incrementing of command / error counters from the individual commands into <code> - <code> , <code> and <code> were changed from <code> return type to <code> in order to carry through the result of their respective add / subtract versions over to <code> and increment the required counters <section> - move incrementing of command / error counters from the individual commands into <code> - removed the <code> helper function as it is no longer required with these changes - its functionality has been folded into <code> <section> - removed <code> ( essentially replaced by <code> - removed the <code> enumeration - the constants in this enum were already mapped to <allcaps> cfe </allcaps> macros anyway . the only real change here is that <code> which was previously mapped to <code> has now been replaced by the new <code> macro which was introduced in this pr . - _note : i have not added any deprecation for the removal of <code> or <code> - if this is required in this case , just let me know . _ - <code> erroneously noted a possible error return in doxygen comments - this has been removed as the function always returns <code> . _note : <url> which converts the remaining <code> return types to <code> ( along with most of the local <code> / <code> variables ) is complementary to this pr . _ <section> github ci actions all passing successfully . local testing with full cfs suite confirms net coverage unchanged . prior to changes : <code> after changes : <code> <section> behavior largely unchanged , other than the modifications listed above . cfe command - handling code is now simpler , more consistent and easier to maintain . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , add option to link to generated files update the "" generate_config_includefile "" to be aware of generated files . this should not call cfe_locate_implementation_file ( ) in this context because the file may not exist at the time . for this type of use case it should just directly link the file without any checking . fixes # <number> <section> build hs ( with additional patch ) that needs this <section> files that are expected to be generated ( e . g . via <allcaps> eds </allcaps> tool ) do not need to exist . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve add_cfe_tables function improves the functionality and adds additional documentation about how this function is intended to work . the improvements add some flexibility and intelligence and should be backward compatible with existing use cases . the add_cfe_app ( ) function now adds an additional interface target that can be referenced when building tables , and this includes the directory - scope properties from the original app build . therefore , calls to add_cfe_tables from other ( non - app ) contexts can get the full set of include directories . this also makes the target name simpler when adding custom properties , it is simply "" ${ app_name } . table "" finally , instead of invoking the table tool ( elf2cfetbl ) directly in the context of the table build rule , it generates a custom makefile rule instead , which is called from the top - level ( mission ) scope to do the conversions . fixes # <number> <section> build and sanity check table builds of <allcaps> cfs </allcaps> apps in a variety of configurations , with and without mission - provided overrides <section> updates to how the table tool is actually invoked <section> debian <section> this also sets up for an easier migration path to <allcaps> eds </allcaps> - based tables , as in this context the table building process must be run using a host - native compiler rather than the target compiler ( because <allcaps> eds </allcaps> , not the compiler , defines the binary layout ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , create workflow for ic bundle generation a clear and concise description of what the contribution is . - addresses issue # <number> . <section> generated ic branch in fork . <section> adds new workflow for integration candidate branch generation . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps> <number>"
"add option to generate an include wrapper for files that do not yet exist <section> a side effect of a recent change to <code> is that if the name specified fallback_file option does not exist , it now reports that as an error , whereas previously it would create a wrapper to the ( nonexistent ) file . the error is correct for most use cases , but if the underlying file is also generated , then there is an initial condition issue when running the build for the first time from a clean slate . <section> if the source for <code> is in turn also a generated file , should blindly create the wrapper and not check for existence . it should not even do the normal search in this case , as it would be incorrect to override a generated file with a static one . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> , add <allcaps> evs </allcaps> port timestamp and simplify port selection - fix # <number> - fix # <number> <section> ci and on local build with time stamp enabled <section> adds time stamp when configured to do so <section> ci , ubuntu <number> <section> related but does not address ( although should make the change simpler ) : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove sparsely used <code> - related macros testing performed * * github ci actions all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"<allcaps> tbl </allcaps> tableoptionflags confusing <section> the <code> parameter specified when calling <code> is a bit map of flags . many of the <hashtag> define </hashtag> ' d flags are exclusive ( <code> and <code> , for example ) . in reality , <allcaps> sngl </allcaps> is the bit value of <code> and <allcaps> dbl </allcaps> is <code> . so , for example , if you have a bitfield with dbl_buffer defined , you have to <allcaps> and </allcaps> the <allcaps> sngl </allcaps> flag into it . <section> do not specify the "" default "" flag values as bit values , for example , only specify <code> and to switch back to single , you would <allcaps> and </allcaps> the negation of this bit field . also , often apis that have bit field flag specifiers allow callers to specify <code> for the parameter , and this usually means "" use the defaults "" . i believe this is the case with <code> but should be documented and confirmed as such . <section> leave as is . <section> <section> <email>"
"move <allcaps> tbl </allcaps> to use resourceid <section> other <allcaps> cfe </allcaps> core <allcaps> api </allcaps> ' s use resourceids when referring to resources ( tasks , apps , etc . ) <section> the <allcaps> tbl </allcaps> module should use a type based on resourceids , currently it uses int16 as "" table id ' s "" . <section> leave as is . <section> <section> <email>"
"cfe integration candidate : caelum - rc4 + dev46 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , implement common search routine for config files adds a ' cfe_locate_implementation_file ( ) ' function that provides a consistent means to find a file within the ${ mission_defs } subdirectory . similar locate / search logic was necessary in a few places , for generate_config_includefile as well as add_cfe_tables , but these were not consistent in the paths or ordering used . using this function should make them consistent . fixes # <number> <section> confirm that the new file matching routine finds the same file as the old logic did <section> more flexibility with <code> <section> debian <section> currently this pr only employs the new logic for <code> . separate prs will switch <code> and any other logic used to search for other files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove return value doxygen markup the cfe_es_taskrecordsetfree ( ) function is a void , it should not have any documentation about return value . remove this line . appears to be a cut and paste error , produces a warning in newer doxygen versions . fixes # <number> <section> build documentation <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"return code doc on void function cfe_es_taskrecordsetfree ( ) <section> the function <code> has a doxygen comment about a return value , but the function is <code> . newer doxygen versions appear to warn about this , older ones just ignore it . <section> run current version of doxygen , see warning <section> should be clean . <section> debian bookworm ( <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add syslog write for <code> timeout testing performed * * github ci actions all passing successfully . local sanity test with cfs bundle . <section> report on timeout , other than that no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , add helper for <code> with common logic testing performed * * github ci actions all passing successfully . local testing shows net coverage ( for the full cfs bundle ) is unaffected and the changes result in a net reduction of <number> lines and <number> branches . before the changes : <code> after the changes : <code> <section> no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"incorrect include directories when using add_cfe_tables outside app <section> if the <allcaps> tgtname </allcaps> variable is set when this function is called , the function does not examine the include directories of the app ( via the app_name parameter ) . as a result , when this function is used in a custom setting to provide a mission - specific table definition , the include directories used will be different than when this function is used from the context of the app receipe itself . <section> if app_name is valid and is an app target name , then the target <code> for that app should always be included in the table build . currently when this function is used outside the app build context , it tries to get include_directories for a "" cpu1 "" target , which does not exist , and produces an error . <section> this include directory problem only occurs when trying to use customized table files , rather than the default / example files included with apps . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move calls to cfe_sb_getpipename ( ) up higher to reduce duplication testing performed * * github ci actions all passing successfully . a couple of the coverage tests which were checking the error conditions but suppressing the actual sending of an event now have the extra event generated by <code> from earlier in the <code> block . <url> will remove the event from nominal execution of <code> anyway , so these event counts will go back down once that is merged ( also the call will no longer be ' indirectly recursive ' ) . <section> no change to behavior other than that described above . <section> avi weiss <user>"
move calls to <code> to reduce code duplication in <code> code snips * * <url> <section> reduce unnecessary code duplication . <section> avi weiss <user>
"fix # <number> , move calls to <code> higher to reduce code duplication testing performed * * github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
move calls to <code> to reduce code duplication in <code> code snips * * <url> <section> reduce unnecessary code duplication . <section> avi weiss <user>
"fix # <number> , add <allcaps> null </allcaps> check for appfilename parameter in cfe_es_reloadapp testing performed * * github ci actions all passing successfully . coverage unaffected . <section> will fail faster / earlier with <allcaps> null </allcaps> input for <code> clearer error logs ease future maintainability and debugging . <section> avi weiss <user>"
"fix # <number> , align padding explicitly in cfe_tbl_msg . h testing performed * * github ci actions all passing successfully . local testing confirms all cfs bundle tests passing and coverage unaffected . <section> compilers trying to align to <number> - bits will not longer add implicit padding in these <number> locations . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"cmake . <repeated> / has error cmakeoutput . log <url> <section> a clear and concise description of what the problem is . ex . i am always frustrated when [ . <repeated> ] no cmake <allcaps> cli </allcaps> cmd for build in readme , md <section> * * my cmake has many options cmake kate - ninja . <repeated> /* * <code> <section> a clear and concise description of any alternative solutions or features you have considered . cmake has config errors <section> add any other context about the feature request here . <code> <section> full name and company / organization if applicable shaynababe"
"fix # <number> , remove unnecessary memset from cfe_tbl_loadfromfile testing performed * * github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev44 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add status return to cfe_es_waitforstartupsync ( ) testing performed * * github ci actions all passing successfully . local tests confirm all tests passing and <allcaps> lcov </allcaps> confirms coverage of amended lines , and total coverage unaffected . these <number> ut calls to <code> would have had to be updated , but as far as i can tell they are not actually required for coverage , and are not needed for the test blocks that they are part of ( <code> is run immediately after both ) . <url> coverage is already provided by the prior call to <code> : <url> <code> is already fully covered elsewhere . <section> <code> now carries through the status / return of <code> allowing additional handling by the user . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add error report on <allcaps> evs </allcaps> failure during log header write testing performed * * github ci actions all passing successfully . local tests ( seeded with bad value for <code> ) to check formatting etc . : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior other than event report on error as per above . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , use logfullflag instead of checking logcount testing performed * * github ci actions ( incl . functional tests ) all passing successfully . local tests with cfs suite confirm coverage overall unaffected . <section> no change to behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add additional context to log file write error event testing performed * * github ci actions ( incl . functional tests , coverage analysis etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , replace ut_displaypkt ( ) with utprintx ( ) testing performed * * github ci actions ( incl . functional tests and coverage analysis etc . ) all passing successfully . tested locally with standard cfs bundle tests - confirmed output text is correctly displayed and identical to before the change ( the only difference other than the inclusion of the memory address , is the spacing and that the alphanumeric characters / digits in the hexadecimal output are now capitalized ) . before changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> after changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> test log prints now include the memory address along with the data . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add event for numeventfilters over max and remove filterlimit variable testing performed * * github ci actions ( incl . functional tests , code coverage analysis etc . ) all passing successfully . <section> only change to behavior is the new event report added as per the description above . <section> avi weiss <user>"
"fix # <number> , replace for loop copy with single memcpy testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , add struct for version info in <allcaps> es hk </allcaps> tlm packet testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . telemetry packet declaration is cleaner now with less code duplication . note : if this is merged in , it will require a new issue to make updates to the <code> file in the cfs ground system application . <section> avi weiss <user>"
"fix # <number> , align pipe id / name reporting in sb event strings expected behavior changes * * no change to behavior other than what is outlined above . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . local tests confirm no change to coverage . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , update remaining cfe source / tests to use cfe_status_t testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior / logic - <code> is currently typedef ' d to <code> , so no functional change to any types with this pr . synchronizing the return types to <code> simplifies the code , and makes it more type - safe . <section> avi weiss <user>"
"fix # <number> , separate dispatcher for messages isolate the message verification and dispatch from the general message processing . functions in the "" task "" source file now strictly handle the command content , and do not get involved in general validation . also note : this is mostly a simple code move but does add a <code> qualifier to the task pipe function where it was missing before . all of the handlers were already <code> so this just makes it consistent throughout the handling . fixes # <number> <section> build and run <allcaps> cfe </allcaps> and sanity check . run all tests <section> none - this just moves code from one source file into another , does not make any change to functionality . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , convert cfe_tbl_info_table_locked into a negative error code testing performed * * github ci actions ( incl . code coverage analysis , functional test etc . ) all passing successfully . <code> ( which calls <code> ) tests for <code> which is now triggered by <code> as well , and the branch for a non - <allcaps> null </allcaps> <code> was not previously covered . with these changes , that branch is now executed by the existing tests . this results in an increase in coverage of <number> lines and <number> branch : <code> <section> behavior of the function is the same . only the return code in the case of trying to update a locked table is changing from positive to negative . the only use of <code> from other apps where the return value is checked ( e . g . in hk ) use <code> , so will not be affected by this change . other ( non - public ) users who were checking the return of <code> and testing less precisely for <code> ( or similar equivalents ) will see a change , but it seems unlikely that they would consider a non - update as success anyway . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
cfe_tbl_info_table_locked should be a negative error code code snips * * <url> <section> this is a clear error ( as noted by <user> in his analysis in <url> - i . e . nothing was updated . code should be negative indicating failure / error . <section> avi weiss <user>
"fix # <number> , add more generic status codes adds several more generic cfe_status_ codes to be used for common validation and input processing conditions . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , run all tests <section> none - just defines some new status codes that are not ( yet ) used anywhere , does not change any existing status code . <section> debian <section> apps can use these codes to make input validation a bit more consistent . <section> joseph hickey , vantage systems , inc ."
"add generic status code for "" invalid request "" <section> <allcaps> cfe </allcaps> defines several generic status codes , which are not specific to any module . these can be used by any app / module to indicate common status conditions , for example : - <code> - <code> - <code> - <code> however none of these are really appropriate for a validation failure for a request - e . g . if a value was out of range , or something of that nature . <section> add the following generic status codes : - <code> : for requests / inputs that fail structural validations ; this one can also be useful with <allcaps> tbl </allcaps> validation functions . - <code> : for requests that pass structural validation , but an input value is outside the acceptable range . - <code> : for requests that are otherwise valid , but the current system state does not permit its acceptance . <section> each app could define these status codes , but that would be redundant as these are common validation checks that every app should be doing on its inputs , so a common status code is warranted . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev43 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , improve <number> - bit memory address handling in <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> the "" cfe_es_memaddress_t "" and "" cfe_es_memoffset_t "" types were intended to provide a path for easily upgrading the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> structs from <number> - bit to <number> - bit memory addresses . however , this type was a bit overused and in some of those use - cases ( e . g . in <allcaps> tbl </allcaps> header ) it assumed that the type was <number> - bits during the byte swap ops . as a result , the type could not be changed to <number> bits as intended . this reverts those cases in <allcaps> tbl </allcaps> back to uint32 ( meaning that tables will still be limited to <number> bit sizes , even on <number> bit cpus ) but otherwise the addresses and sizes in es / sb telemetry can grow to <number> bits as intended . for unit tests , correct operation depends on the availablily of an updated test macro that can compare integers as "" size_t "" type . ( as opposed to uint32 ) . fixes # <number> <section> build and run all tests <section> changing the definition of "" cfe_es_memaddress_t "" and "" cfe_es_memoffset_t "" should now work as intended , provided that the conversion macros are also updated to match the definition . <section> debian <section> joseph hickey , vantage systems , inc ."
"add pipe option to ignore msglim exceedance <section> currently <code> only reports the first <number> events on any pipe : <url> there ' s a use case where only the oldest or newest ( see # <number> ) message on the pipe should be kept , and the rest dropped . for example on a low rate link you may just want up to one message of each type , even though they may be getting produced at a higher rate ( say if you want to slowly round - robin through hk msgs ) . this intentional dropping causes the error event and if / when it does get filtered since the event id is shared with all the other pipes a legitimate issue ( on a pipe where you do not want to exceed msglim ) would be hidden . <section> add a pipe option to selectively ignore this error . <section> could use <allcaps> qos </allcaps> instead of pipe opts . <section> would be helpful to fix along with keeping newest msg : - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update naming convention document updates to cover event id recommendations fixes # <number> <section> n / a <section> n / a - documentation only <section> n / a <section> this doc could really use additional updates to expand on command naming , camelcase vs . app_caps , etc . <section> joseph hickey , vantage systems , inc ."
"update naming conventions for events and other patterns <section> as <allcaps> cfs </allcaps> apps are under development for the next cycle it should be a goal to reduce all the variation in terminology between them . this includes , but not limited to : <number> . event naming patterns <number> . command naming patterns ( specifically between the function that handles the command , the structure that defines the command ) the first step in fixing pattern violations is to better define the intended pattern . this should be done as part of the <allcaps> cfe </allcaps> documentation and we can go from there . <section> consistency in naming , repeatable patterns . <section> examples of what <allcaps> not </allcaps> to do were recently addressed in nasa / fm # <number> , specifically stuff like : send hk command : command handler was <code> , the command struct name was <code> , and the <allcaps> mid </allcaps> was <code> . why are these all different - should all be <code> ( camel case version ) . for <code> the command handler was named <code> - no "" file "" - and the struct was named <code> - "" permissions "" got abbreviated . other examples of abbreviation mismatch between <code> and <code> exist , and the word <code> / <code> appears in command names in some places but not other places . similar naming chaos occurs in other <allcaps> cfs </allcaps> apps too , fm just provided some good examples of what not to do . <section> joseph hickey , vantage systems , inc ."
"<code> discarding <code> error status <section> many error cases within <code> just set the status code and return ( no reporting ) . then cfe_sb_getbufferfrompool just discards it . arguably not compliant with mission critical code requirements . <url> <section> definitely not the only case where returns get discarded or ignored ( see # <number> ) but this one is a significant shortcoming . affects <code> and <code> . <section> although apps need to check for a null return from cfe_sb_allocatemessagebuffer either way , the error code is lost by that point . another good use case for # <number> , since you would not want to flood events or sys log but the failure type and count is very important for monitoring system health . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , align mismatched function prototype / implem . parameter name testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . code clarity and consistency improved . <section> avi weiss <user>"
mismatched function prototype / implementation parameter name <section> mismatched parameter name ( <code> ) between function prototypes and it ' s implementation . declaration : <url> implementation : <url> <section> prototype and implementation should match ( for clarity and maintenance ) . <section> avi weiss <user>
"fix # <number> , factor out common code for bitmask check testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior or return values . <section> avi weiss <user>"
"fix # <number> , resolve compiler warnings re . signedness comparisons testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally with <code> flag enabled - no warnings issued for cfe . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , use cfe_time_systime_t instead of indiv . sec / subsec members testing performed * * all tests were passing before changes to <code> were added ( see <url> and <url> the functional test and codeql analyses are no longer able to build because elf2cfetbl references the old <code> members in <code> directly , so an additional pr for elf2cfetbl is required at the same time - see <url> local tests with full cfs package confirm all tests passing when both changes are made together , and net coverage unaffected . screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> note : if this is merged it will require updates to some of the txt files in the ground system tool to ensure clean and correct interpretation of the data members . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> no change to behavior . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev39 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , cfe_tbl_filedef does not need static remove the "" static "" qualification from the <allcaps> tbl </allcaps> file def objects , it is not needed , and works fine without any special sauce here . <section> build and run all tests run <allcaps> cfe </allcaps> with apps and confirm tables load normally <section> none <section> debian <section> tables do not need to be declared static because they are just used with a table tool like <code> - they are never linked with other table definition files by the c linker , so the <code> designation is not needed . on the other hand , it may cause issues with alternative table creation methods because it hides the symbol from e . g . <code> . furthermore , it necessitates use of a compiler - specific extension flag to avoid a warning , which is against coding standards . <section> joseph hickey , vantage systems , inc ."
"remove "" static "" and "" os_used "" flags from table definitions <section> in the <code> macro , there is no need to declare the variable as <code> , because there are no cases where multiple objects / translation units are directly linked together . in the case of tables , the content is extracted to a separate runtime - loadable file , and transferred to the target separately . they are not linked in by the c linker , which is where the <code> declaration becomes relevant . by not declaring it as <code> , one also does not need to use the compiler extension flag <code> to squelch a warning , either . <section> remove <code> and <code> flags <section> this makes it more compliant with coding standards that restrict use of compiler - specific extensions . <section> joseph hickey , vantage systems , inc ."
"leverage gcc - fsanitize = options , also a warning about implicit dynamic arrays for testing ( particularly <allcaps> ctf </allcaps> and coverage testing ) , i suggest we utilize some of the <code> options available to gcc ( <url> particularly <code> , <code> , <code> , <code> , <code> , <code> , <code> . but possibly others , like the float - related sanitization . of course , these are gcc - specific capabilities and has performance implications . also , turns out , with c , if you specify a struct like : <code> fundamentally , if you define a fixed - size array at the end of a struct , the bounds checking cannot be enforced because the compiler treats it as a dynamically - defined array . we should place placeholders after every instance of this in cfs code . for example : <url> thanks to this article and the article it references for bringing this to my attention . <url> )"
"fix # <number> , rename unclear filewrite eids testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to code behavior . future maintainability and ease - of - use improved due to clearer <allcaps> eid </allcaps> names . <section> avi weiss <user>"
"correct use of "" memaddress "" and "" memoffset "" <section> the memaddress and memoffset types defined by es are <number> bits by default , but are intended to be expandable to <number> . these should be used for <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> fields that need to hold a memory address on a <number> - bit machine , or the size of an object in memory on such a machine . however <allcaps> tbl </allcaps> services uses this type in some other locations , that generally do not need it . notably , this calls <number> - bit byte swapping routines to read / write this field , and that will not work if the size becomes <number> bits . <section> - these fields in table services will need to remain <number> bits regardless of the <allcaps> cpu </allcaps> address size . - need to make sure that the correct macro - <code> or <code> is used when setting the value . notably , this macro can provide the correct read / write logic in case the memaddress needs to be a struct with a high and low word , for example . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , combine duplicate status check if blocks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . <section> avi weiss <user>"
unnecessary duplicate ' if ( status = = cfe_success ) ' check expected behavior * * refactor to remove ( unnecessary ) duplicate <code> block . <section> <url> identical case for <code> . <section> avi weiss <user>
"cfe integration candidate : caelum - rc4 + dev36 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adds workflow_dispatch to all workflows - fixes # <number> <section> testing performed on fork : <url> <section> all cfe workflows executable using the latest nasa / cfs <section> github ui <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , check return value of cfe_es_putpoolbuf testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> in case of error , the relevant details will be written to the log . <section> simpler version : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> avi weiss <user>"
"fix # <number> , update data types in <allcaps> cfe </allcaps> msgs fix # <number> , changed data types of some fields in certain message packets <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
data type changes <section> data types of fields in some packets need to be updated to types in <allcaps> jsc </allcaps> database . <section> data types should follow the <allcaps> jsc </allcaps> database . <section> haven carlson - <allcaps> nasa </allcaps>
"cfe integration candidate : caelum - rc4 + dev33 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , <allcaps> eds </allcaps> updates to match the current mainline this includes all the updates to <allcaps> eds xml </allcaps> files since the bootes release where they were last synced . this includes <allcaps> eds </allcaps> files for modules that did not yet have one , and updating the other files to match the current message structures in draco . fixes # <number> <section> generate artifacts from <allcaps> eds </allcaps> and confirm the artifacts match the current c code definitions <section> no impact to behavior , <allcaps> eds </allcaps> files are just informational in this tree <section> there are some remaining name mismatches due to [ non ] adherence to the naming conventions , might be a good chance to clean some of that up too . <section> joseph hickey , vantage systems , inc ."
"<allcaps> eds </allcaps> files need update to match current main line <section> the <allcaps> eds </allcaps> files are present in the <code> directory of each module but only as a reference , they are not actively used in the build at this time . in the time since bootes / caelum they have drifted apart a bit , and no longer reflect exactly what is in the c code in the current mainline . <section> n / a <section> provided <allcaps> eds </allcaps> files should match exactly to the c code ( at least as close as reasonably possible ) such that derived files _could_ be generated from them that will match the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interfaces . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update uts to use correct cmd types fix # <number> , update uts to use correct cmd types these are the unit test updates requested by <user> - ito - nasa , and are associated with # <number> the requested change originated from # <number> <section> build and run all tests ' <section> no impact to behavior <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
update unit tests to use correct command types <section> update the unit tests to use the associated applicable command types in place of cfe_msg_commandheader_t . this will allow for additional flexibility when modifying command definitions . note : this is the required unit test update ( s ) associated with # <number> <section> replace cfe_msg_commandheader_t with the corresponding command type ( s ) where applicable . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"cfe integration candidate : caelum - rc4 + dev32 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , replace cfe_msg_commandheader_t w / cfe_tbl_noargscmd_t - replaces cfe_msg_commandheader_t w / cfe_tbl_noargscmd_t & runs clang - format . [ fixes # <number> ] <section> build and run all tests <section> none <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"cfe integration candidate : caelum - rc4 + dev31 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
out - of - date doxygen <user> names code snips * * <url> <url> <section> either update to the correct names / descriptions or delete these <user> commands from the function comment . <section> avi weiss <user>
"fix # <number> , combine <allcaps> message </allcaps> and <allcaps> cmd entry </allcaps> macros - combines the message and command entry macros such that the <allcaps> mid </allcaps> , cc , type , handler function , and message type are all passed in parameters . [ fixes # <number> ] <section> build and run all tests <section> none <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , update event type constants in dev guide testing performed * * just github ci <section> none <section> avi weiss <user>"
"add parameter for sizeof check in cfe_tbl_task macro cfe_tbl_message_entry in cfe_tbl_task . c uses a static structure typedef for the sizeof check that is causing issues with a new feature . add new macro input parameter to have the structure type passed for sizeof check similar to macro cfe_tbl_command_entry . also change line <number> of cfe_tbl_task . c to have the macro input parameter to be cfe_tbl_noargscmd_t as seen below : cfe_tbl_message_entry ( cfe_tbl_send_hk_mid , <section> , cfe_tbl_housekeepingcmd ) nicholas dijkhoffz <allcaps> jsc </allcaps> / metecs"
"fix # <number> , add - fno - common to arch build flags add - fno - common to arch_build_custom_native . cmake so the ci workflows will all build with this option . this is not the default in the version of gcc / binutils used in ubuntu <number> on which the workflows run . fixes nasa / cfe # <number> <section> build and run all tests <section> duplicate global symbol names will trigger errors , rather than being silently merged on some versions of the tools ( consistent behavior ) . <section> ubuntu <number> and <number> ( workflows ) <section> no - common is the default in newer versions of the tools , but was not the default in the versions used in <number> . the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> builds should not require / rely on the use of a common section . <section> joseph hickey , vantage systems , inc ."
"use <code> in ci workflow builds some versions of the <allcaps> gnu </allcaps> toolchains enable <code> by default , so globals end up in a "" common "" section rather than the normal "" bss "" section . the <allcaps> cfs </allcaps> apps should not rely on common sections , as it can mask duplicate symbols and cause strange results if not expected . in particular , this feature hid linking errors in nasa / lc # <number> . <section> add <code> to the default <code> file so this feature is consistently _not_ enabled rather than assuming the default for whatever version of gcc / binutils is being used at the time . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update github action versions use v3 instead of v2 for checkout , cache , and upload - artifacts , which resolves a warning about node . js <number> deprecation . fixes # <number> <section> run all github actions <section> deprecation warnings removed <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"update workflows to use newer action versions <section> calls to the checkout and upload - artifacts actions in the workflow files refer to deprecated version <number> . this should be updated to v3 , which resolves a warning about deprecated node . js versions . <section> see any workflow log , e . g . <url> in the "" annotations "" section . <section> should be clean . <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add abstract documentation dependency target adds a top level target called "" doc - prebuild "" which in turn can be made to depend on any other files that need to exist before documentation can be built . fixes # <number> <section> build documentation <section> abstract dependency target now provided <section> ubuntu <number> <section> needs to be merged with nasa / osal # <number> to work correctly . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev30 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , refactor error handling for evs_getapplicationinfo ( ) testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally as well and confirmed coverage of all new / amended lines of code via <allcaps> lcov </allcaps> report . <section> no impact on behavior . the same events will occur in the same circumstances . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch cfs bundle . cfe v7 . <number> - rc4 + dev205 <section> avi weiss <user>"
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully . <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
variables declared mid - function expected behavior * * all variables should be declared at the top of the function . <section> avi weiss <user>
"fix # <number> , update ci to use ubuntu <number> - fix # <number> <section> ci <section> just updates ci ubuntu version <section> ci <section> required for : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ci to use ubuntu <number> <section> ubuntu <number> <allcaps> eol </allcaps> is approaching cfs was already updated in nasa / cfs # <number> , cfe should match <section> update to use ubuntu <number> in ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev28 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , enforce strict cast alignment on arch - fix # <number> <section> ci <section> none , just enforces strict alignment and currently compliant <section> ci <section> note this strict option is not supported by clang so would need to be removed along with <code> and <code> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"enforce strict cast alignment <section> now that ci is upgraded to ubuntu20 , would be good to enforce strict cast alignment <section> update the cast - align line to read : <code> in <url> <section> none <section> note it ' s fully compliant w / this flag right now based on fixes done during draco , but should enforce to avoid future issues . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , support clang for whole archive flags - fix # <number> - adds a toolchain file for clang to make testing simple <section> w / clang <number> installed , performed the following changes in sample_defs : - removed unsupported flags - compiled permissive to confirm it worked w / standard user privilages - explicitly set cpu1 to use the clang toolchain <code> <section> properly sets the whole archive flags for clang , warns if compiler is unmatched <section> ci shows no impact to base system steps above to prove clang works <section> could add to ci if someone wanted to maintain support , might be overcome if there ' s a target added to ci that uses clang . clang build does depend on nasa / sample_lib # <number> being merged , but does not impact current ci <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , explicit toolchain in sample target . cmake - fix # <number> - removes old cpu <x> toolchains in prep for removing the "" hack "" mentioned in <url> - removes obsolete <allcaps> bspname </allcaps> refs , and unnecessary ( and incorrect ) refs to <allcaps> bsptype </allcaps> pc - linux which is now generic - linux and gets set from psp config based on the <allcaps> psp </allcaps> pc - linux <section> ci , also built locally via <code> <section> none . <section> ci <section> # <number> as followon <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove toolchain cpu <x> hack <section> see <url> cpu toolchain naming hack . <section> remove the cpu toolchain naming hack , explicitly require a toolchain . update related documentation , for example in target . cmake _system description . <section> none <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , factor out construction of fullname to reduce code duplication testing performed * * github ci actions ( incl . build + run , functional tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"consider bumping up the stack size in the sample startup script <section> the startup script in the "" out of the box "" sample uses a stack size of 1 6 k for all apps , e . g . : <url> i was recently debugging a segmentation fault issue on one of my app builds , and i finally thought to check the stack usage after realizing the backtrace had quite a few entries in it . after checking the stack usage , it turns out all the framework sample / lab apps are using about <number> - 1 5 kb ( that is , more than <percent> of the allocated size ) . so while it does not appear to be an issue in the default build , this leaves very little margin for additional development work before the stack will be exceeded , and its <section> obvious that the stack has exceeded once it does get too big . <section> increase the sample script at least to 3 2 k , or preferably 6 4 k , on "" sample_app "" to have some additional room for development , because this is often used as a "" sandbox "" to test new ideas and concepts . <section> at least document that the stack size is right at its margin ( at least on on <number> - bit linux ) . <section> credits to an simple and effective tool to gauge stack usage here : <url> . <repeated> this worked like a charm to measure how much stack usage all the <allcaps> cfe </allcaps> tasks were using . in the future it might be nice to have features like that built into <allcaps> osal </allcaps> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct type of activetableflag variable testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi <user>"
"fix # <number> , move data lock to inside of if block testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> data lock will not occur in the ( unexpected ) case of an error return from <code> , which is fine as no data would be accessed / amended in that case anyway . <section> avi <user>"
"fix # <number> , resolve static analysis errors in tbl_ut . c resolves two uninitialized variable errors reported in the workflow . fixes # <number> <section> build and run all tests run workflow <section> passes static analysis , no behavior change . <section> updated github workflow ( with nasa / cfs # <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor cfe_time_calculateutc to utilize cfe_time_calculatetai testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi <user>"
"disk percentage reserved for decompressing apps <section> es will reformat the volatile drive if the empty space is less than a configured percentage to support decompression of apps . decompression of apps prior to load is not implemented . config option and documentation : <url> start of reformat logic : <url> <section> i am not sure this option makes sense anymore , or at minimum it ' s an incomplete implementation . either complete the implementation , remove the option , or update the documentation ( should not claim it does something it does not ) . <section> see above <section> the label really depends on the solution picked . might be just documentation , could be enhancement . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove cfe_es_formcdsname and merge it ' s functionality into cfe_es_registercds _i think this particular function ( cfe_es_formcdsname ) is a broken <allcaps> api </allcaps> , and should be removed ( its not public ) . it is called in just one place - from cfe_es_registercds ( ) - and that can just do an <code> directly . it actually needs to know the app name anyway for an event later on , so this would also avoid getting it twice . a win - win . _ _originally posted by <user> in <url>"
"fix # <number> , move <allcaps> crc </allcaps> types and convert to enum testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> essentially no change to logic . note - two new issues will need to be opened if / when this is merged : fm : directly references the types that have been changed here . cs : refers to ( in comments only ) <code> <section> avi weiss <user>"
"fix # <number> , combine consecutive mutually exclusive <hashtag> ifs </hashtag> testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior - logical flow is essentially unchanged . <section> avi weiss <user>"
"fix # <number> , rename confusing <allcaps> sb enbl </allcaps> / <allcaps> dsbl </allcaps> route commands testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior ( no logic changes ) . better - differentiated <allcaps> eid </allcaps> names will improve code clarity . <section> avi weiss <user>"
"fix # <number> , rename cfe_sb_removepipecallback_t to . <repeated> backargs_t testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , rename misnomer function name cfe_tbl_notifytblusersofupdate ( ) testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev27 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , make evs_pktptr parameter in evs_addlog ( ) const testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , remove duplicate status check testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . logic does not change as the event is still sent in first <code> . <section> avi weiss <user>"
"fix # <number> , use osal_public_api header targets in doc ensure that <code> is a dependency of all the doc builds . also adds the <allcaps> osal </allcaps> top level directory to the mission build which will define the <code> target , and thus not require the path to be repeated . fixes # <number> <section> build documentation from clean build area <section> order of operations with doc targets does not matter anymore , as the file gets generated correctly no matter which target is built first . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"missing dependency on osal_public_api targets for <allcaps> osal </allcaps> headers <section> in the <allcaps> cfe </allcaps> mission documentation build , this references the osal public <allcaps> api </allcaps> headers . since nasa / osal # <number> was merged there is now an <code> target which exposes the location of the headers via its <code> property , as well as a doxygen - specific target called <code> that generates a list of <allcaps> input </allcaps> files that can be included for doxygen . however , there is a missing dependency in the <allcaps> cfe </allcaps> docs build , as the <code> and <code> targets reference this file , but there is not a dependency in cmake to ensure that the file gets generated before the doxygen tool runs . as a result , if the <code> is built first , then the <allcaps> cfe </allcaps> targets will build ok , but if the <allcaps> cfe </allcaps> targets are built first , one gets an error about a missing <code> . <section> start with a clean build area run only <code> followed by <code> get error : <code> then run <code> followed by <code> again . now it builds fine . <section> dependency should be in place so the doc build will succeed regardless of the order . <section> if applicable , add references to the software . <section> ubuntu <section> the <allcaps> cfe </allcaps> docs build was also repeating the location of the <allcaps> osal </allcaps> include files here : <url> the <code> target properties should be the preferred source of this info , the path should not be specified outside of the <allcaps> osal </allcaps> build script as it can change in the future . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace while loop with single memset testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> achieves same result without going through the loop . <section> avi weiss <user>"
"fix # <number> , remove empty if / endif block testing performed * * just github ci <section> no impact on behavior ( code logic not changed ) . <section> avi weiss <user>"
"fix # <number> , reformat do / while loop to while ( style change only ) testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior - code logic essentially unchanged . <section> avi weiss <user>"
"fix # <number> , align table name reporting in cfe_tbl_register ( ) testing performed * * only github actions . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , add reports for unreported errors in cfe_tbl_earlyinit ( ) testing performed * * just github ci actions so far . <section> no impact on behavior . these missing error reports will now be reported to the syslog ( if they occur ) . <section> avi weiss <user>"
"fix # <number> , update deprecated binary filter constant in dev guide expected behavior changes * * no impact on behavior ( doc changes only ) . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"<allcaps> es crc </allcaps> type enumerations do not belong in cfe_mission_cfg . h <section> the mission config header file contains the following definitions : <url> these enumeration values are really part of the <allcaps> api </allcaps> to the <code> function , as they define the values for the 4 th parameter . they do not belong in "" mission_cfg . h "" because are not values that appear in any telemetry , nor in any command , nor would they need to be configured differently as there is no chance of conflict with anything else . <section> make a proper enumeration type in the in the <code> file , and use this for the 4 th parameter of the <code> function . <section> the "" <allcaps> default </allcaps> "" value is the only thing that ( theoretically ) does belong here : <url> however , this is just a placeholder anyway because only the crc16 algorithm was ever implemented . unless the user also has a patched version of es , no user can set this to anything other than crc16 or else the system will not function correctly . because this is somewhat of a "" dead "" option , and a case could be made to remove it entirely . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove last few uses of sprintf ( ) testing performed * * standard cfs build tests ( covered the fsw change but not test code change ) . <section> no impact on behavior expected . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev193 <section> avi weiss <user>"
"remove remaining stray uses of sprintf ( ) expected behavior * * no use of sprintf ( ) in the code base ( including test code ) . <section> <url> <url> <section> avi weiss <user> previous discussion opening this issue : _i concur that <code> has some caveats / dangers - particularly with respect to the return code and handling that properly - whereas <code> is a buffer overflow exploit in almost all use - cases , and should rightfully be banned . _ _originally posted by <user> in <url> _there are still a few stray uses of sprintf ( ) across cfs . should these be removed ? _"
"cfe integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update ci_lab entry point in cfe_es_startup . scr testing performed * * only the github ci workflow actions . <section> no impact on behavior . <section> avi weiss <user>"
update ci_lab entry point in cfe_es_startup . scr reporter info * * <user>
"fix # <number> , update sch_lab entry point in cfe_es_startup . scr testing performed * * only the github ci workflow actions . <section> no impact on behavior . <section> avi weiss <user>"
update sch_lab entry point in cfe_es_startup . scr reporter info * * <user>
"cfe integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fixes issue # <number> - remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . pr # <number> - fixes issue # <number> - update to_lab entry point in cfe_es_startup . scr pr # <number> - fixes issue # <number> - create <allcaps> changelog </allcaps> . md <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , remove changelog in doxygen config fixes # <number> <section> none <section> cfs workflow will not throw error for <allcaps> psp </allcaps> changelog <section> related to <url> went ahead and moved the code to exclude repo documentation from mission - doc . doxyfile . in to cfe - common . this allows it to be excluded from all the doxygen processing ( all repos ) . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"cfe integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fixes issue # <number> - propagate cmake_export_compile_commands variable pr # <number> - fix # <number> , remove codeql paths ignore # <number> pr # <number> - fix # <number> , duplicated logic in cfe_sb_broadcastbuffertoroute pr # <number> - fix # <number> , remove ' return ; ' from last line of void functions . pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"fix # <number> , update to_lab entry point in cfe_es_startup . scr testing performed * * none so far . <section> no impact on behavior . <section> n / a <section> <user>"
update to_lab entry point in cfe_es_startup . scr reporter info * * <user>
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"non - constant format string <section> passing a non - constant ' format ' string to a printf - like function can lead to a mismatch between the number of arguments defined by the ' format ' and the number of arguments actually passed to the function . if the format string ultimately stems from an untrusted source , this can be used for exploits . <section> same behavior . > if the argument passed as a format string is meant to be a plain string rather than a format string , then pass %s as the format string , and pass the original argument as the sole trailing argument . > > if the argument passed as a format string is a parameter to the enclosing function , then consider redesigning the enclosing function ' s <allcaps> api </allcaps> to be less brittle . <section> <url> <section> caught by codeql . critical in terms of severity . can dismiss as used in tests . i prefer addressing codeql issues , especially if they are marked as critical , for unit tests . by doing so , this can teach good coding practices and the coding standard which can translate into the source code . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in cfe that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix the typos a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"fix # <number> , duplicated logic in cfe_sb_broadcastbuffertoroute fixes # <number> removes duplicated logic in the final if / else in cfe_sb_broadcastbuffertoroute . <section> standard cfs bundle tests performed . lcov ( cfe_sb_api c ) <img> <section> no impact on behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev171 <section> <user>"
"unary minus operator should not be applied to an unsigned expression <section> negation of unsigned value <section> keep same behavior but fix codeql warning . <section> <url> <section> caught by codeql - violation of <allcaps> misra </allcaps> ( part of the coding standard ) . could cast evs_eventburstmax . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove codeql paths ignore fixes # <number> <section> tested on fork at arielsadams / cfe on test - remove - paths branch . as seen in the screenshot , the issues are gone . image <img> <section> same behavior , no issues thrown in codeql workflow . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"remove codeql paths ignore <section> codeql throws two issues : using paths - ignore can prevent code scanning annotating new alerts in your pull requests and on push . <section> view the latest codeql workflow annotations . <section> same behavior , with no issues thrown in the workflow . <section> when removed , documentation files will still be ignored without the issues thrown due to this pr : <url> <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"cfe integration candidate : caelum - rc4 + dev22 <section> pr # <number> - fix # <number> , resolve issues building users guide with ubuntu <number> / doxygen <date> <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fixes issue # <number> - propagate cmake_export_compile_commands variable propagates variable cmake_export_compile_comands to the cmake subprocess in mission_build . cmake this fixes feature request # <number> which has cmake generate a compilation database for all subprojects / targets , helping editors / ides with understanding the full cfs / cfe environment . <section> steps taken to test the contribution : <number> . build steps ( from root of cfs directory ) <code> <number> . execution steps <code> <section> no impact to behavior of cfe itself . simply causes an extra file to be created ( the compilation database ) for cfe / cfs apps when requested by the user . <section> - hardware : linux server / mac book pro - os : rhel8 . <number> , ubuntu <number> - versions : dev ( main branch ) - <section> n / a <section> n / a <section> andrew liounis - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"propagate cmake_export_compile_commands to cmake subprocess <section> when building cfe alongside of other apps the setting for the cmake variable ` <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> ` . <section> this is the simplelest and least disruptive to the existing build process . alternatives would be to use externalproject or add_custom_command / add_custom_target which would probably play nicer than the execute_process , but they would also need to pass the same flag in this manor . <section> n / a <section> andrew liounis , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve doxygen <date> latex make errors - fix # <number> <section> built cfe - usersguide locally and confirmed no warnings and pdf looked good <section> will now build cfe usersguide on ubuntu <number> w / o issues <section> - hardware : i5 / docker - os : ubuntu <number> - versions : main + this comit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add_cfe_app uses deprecated call to target_link_libraries <url> <section> the cmake linking directive in <code> uses the "" plain "" signature ( ie , does not use a <code> , <code> , or <code> keyword to specify how a library is used by a target ' s dependents ) . because of this , one cannot use the keyword - style call on a cfs app without triggering a cmake warning . mixing the plain and keyword styles has been deprecated since cmake <date> . since cfe specifies a minimum cmake version of <number> , this should be updated . as far as i can tell , calling <code> in an app to link in a static library is necessary , because this is not done as part of <code> . <section> <code> directives could be used with keyword signatures in app cmakelists files , and no deprecation warning emitted . <section> - create a static library ( either manually via cmake or by putting the target name in <code> and using <code> . - add the library as a dependency for an app ( either manually via cmake or by using <code> ) - try to link it in an app using <code> - build as usual <section> <url> <section> i am using the cfe v7 . <number> - rc4 release <url> but this is present in <code> and <code> at the time of reporting . cmake verison is <number> . <number> - rc2 . <section> see cmake policy cmp0023 . isaac rowe , jacobs contractor to <allcaps> nasa jsc </allcaps> ( edited to provide information requested by contributor guidelines )"
"runapp table scan waits maximum time for a shutdown app . <section> if es is commanded to stop an app , the runapptablescan background task does not check that the app has reached the desired state of cfe_es_appstate_stopped . instead it continues to decrement the wait time , which means the app will never get cleaned up until the timespan of <code> is reached . <section> steps to reproduce the behavior : <number> . set cfe_platform_es_app_scan_rate to <number> , and set cfe_platform_es_app_kill_timeout large enough to visually inspect the time between an app reaching cfe_es_exitapp and <allcaps> cfe </allcaps> sending the event with <code> <number> . start <allcaps> cfs </allcaps> , command es to stop the target app . note that the stop application takes the full cfe_platform_es_app_kill_timeout before the stop application event is generated . <section> i think the intent of the runapptablescan is to detect when an app is immediately able to be cleaned up or a timeout has been reached . the timeout is in place but the cfe_es_appstate_stopped condition is not checked . <section> if applicable , add references to the software . replacing the <code> code block in <code> with something like : <code> improves this app unload delay . <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] anything <section> add any other context about the problem here . <section> full name and company / organization if applicable thomas brain - <allcaps> metecs </allcaps> contractor to <allcaps> jsc </allcaps> ."
"cfe integration candidate : caelum - rc4 + dev19 <section> pr # <number> - fix # <number> , squash uninit var static analysis warnings <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , squash uninit var static analysis warnings - fix # <number> <section> ci <section> just squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev17 <section> pr # <number> - fix # <number> , increase event burst credit to not squelch at startup in ci pr # <number> - fix # <number> , grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , grammatical / format updates to <allcaps> evs </allcaps> flooding requirements - fix # <number> <section> ci <section> none , minor requirements grammatical / format updates <section> ci <section> fixed one summary typo . note this update will require a requirements document respin ( release artifact ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> import / export of <allcaps> evs </allcaps> flooding requirements caused minor formatting changes . note also fixed a summary typo . <section> update to latest export from requirements cm tool . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , increase event burst credit to not squelch at startup in ci - fix # <number> doubled the event squelch credit ( <number> to <number> ) to avoid es event squelching at startup seen in app ci runs <section> tested with <number> <allcaps> gsfc </allcaps> apps , no squelch observed <section> just increased the default credit , can burst up to <number> events before squelch . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"event squelch triggering at startup on es version reporting in submodule ci <section> squelching es version events on startup in the <allcaps> cf ci </allcaps> : <url> <section> bump up maximum default credit <section> maybe not squelch until in a running mode ? although that somewhat limits the usefulness of the squelching . could switch the event message wording to not say "" error "" or just ignore the returned send event error <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev15 <section> pr # <number> - fix # <number> , use correct loop var in add_cfe_app_dependency pr # <number> - fix # <number> , automatic suppression of flooding events pr # <number> - fix # <number> , remove stray <allcaps> todo </allcaps> in ut <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user> <user>"
"fix # <number> , use correct loop var in add_cfe_app_dependency this function was not using the loop variable , so ended up adding only the first item . fixes # <number> <section> call add_cfe_app_dependency with multiple items <section> all dependency items get registered , and compilation gets full <allcaps> api </allcaps> include paths , not just the first one . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove stray <allcaps> todo </allcaps> in ut - fix # <number> <section> ci <section> comment only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev13 <section> pr # <number> - fix # <number> , remove commented out code <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"read ( ) vs os_read ( ) clarification <section> my application involves reading data from a serial device ( <allcaps> imu </allcaps> ) in a nonblocking fashion . furthermore , i am writing code for a particular linux architecture so benefits from the standpoint of enabling os abstraction are not really important . so , other than that : what is the difference between linux ' s read ( ) and os_read ( ) ? is there a specific one that is recommended given my situation ? if so , why that one ?"
"fix # <number> , remove commented out code clean up old code which was commented out fixes # <number> <section> build and run <section> none ; code was commented out <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"remove commented - out logic <section> when developing other code i noted a commented in <allcaps> cfe </allcaps> core stubs with a "" <allcaps> jphfix </allcaps> "" marking . this is old from a previous change and should have been removed before commit ( mistake ) . <url> <section> remove the commented code <section> joseph hickey , vantage systems , inc"
"account for clang based toolchains in cmake logic for - - whole - archive flag generation <section> in the target cmakelists . txt file , there is logic that conditionally adds the - - whole - archive linker options . this logic currently checks for a compiler id of "" <allcaps> gnu </allcaps> "" . when using a vxworks <number> toolchain that is based on clang , this logic is not triggered . <section> adjust the logic to allow for clang based toolchains . the vxworks toolchain has compatible options so only the toolchain identification needs to be changed . <section> we could move these flags into the toolchain files , but that would require changing all existing toolchain files . <section> the current logic is here : <url> the new logic needs to look something like this : if ((""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" <allcaps> gnu </allcaps> "" ) or (""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" clang "" ) ) <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number> <allcaps> note </allcaps> : this change is likely to be part of a set of changes to support vxworks <number>"
"fix # <number> , endian macro mask before shift to avoid shift overflow warning - fix # <number> <section> ci <section> none , just squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , automatic suppression of flooding events - fix # <number> <section> ci <section> squelches flooding events ( configurable ) <section> ci <section> still a work in progress , needs coverage and functional cleanup <section> none , update suggestion from <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps> context . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , add macro for initializing command header - fix # <number> just adds cfe_msg_cmd_hdr_init <section> built and ran with nasa / sc # <number> , and observed the commands getting sent <section> none , just provides a more portable way to define tables with commands <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : build main + the sc changes and this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add macro for assembling message header for use in defining tables that contain messages <section> without a macro , tables are header implementation specific with their current approach of just using a uint16 array and hard coding the elements . <section> add an overridable macro that will fill in the header elements from "" common "" inputs . something like : <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_es_statustostring and cfe_status_c - fix # <number> adds cfe_es_statustostring and cfe_status_c <section> ci ( coverage tests and app testcase functional ) <section> none , just adds useful apis for future cleanup <section> ci <section> none <section> none <section> none"
"cfe integration candidate : caelum - rc4 + dev10 pr # <number> - fix # <number> , resolve ut uninit var static analysis warnings - fix # <number> , resolve fsw uninit var static analysis warnings - fix # <number> , resolve ut non - distinct identifier warnings - fix # <number> , resolve ut buffer underflow warning pr # <number> - fix # <number> , cfe_users_guide . pdf <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> if included , identify any third party code and provide text file of license <section> skliper paulober"
"fix # <number> , automatic suppression of flooding events - fixes # <number> <section> <number> . built with <allcaps> simulation </allcaps> = i686 - native enable_unit_tests = true <number> . ran unit tests , all passing except time due to local time configuration changes <number> . built for vxworks <number> . ran cfs on vxworks and observed events being squelched and the squelch event message being emitted <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : squelch error code gets returned by event send functions if a squelch happens - behavior change : events get squelched after <number> events within <number> second per app ( default in cpu1_platform_cfg ) ; tokens are returned at a rate of <number> / sec ( default in cpu1_platform_cfg ) to allow a sustained event rate of <number> / sec / app . event is emitted upon squelching , and counters incremented . counters added to event data stored to file and realtime telemetry . <section> - hardware : sp0 - s ( simics ) - os : vxworks <number> - versions : cfe <number> . <number> + dev127 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev66 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev66 w / <allcaps> jsc </allcaps> changes <section> n / a <section> n / a <section> john n pham ( <user> ) , northrop grumman , space systems"
"fix # <number> , cfe_users_guide . pdf <number> a clear and concise description of what the contribution is . - fixes # <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - no <allcaps> http </allcaps> <number> when clicking on cfe users guide link in <allcaps> readme </allcaps> . md <section> - personal"
"redundant word in app developer ' s guide remove "" compute "" <url>"
"fix # <number> # <number> # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
buffer underflow in ut <section> buffer underflow warning observed in ut static analysis <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
non - distinct identifiers in ut <section> non - distinct identifier static analysis warning in ut <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
resolve uninitialized variable static analysis warnings in unit tests <section> uninitialized variable warnings in unit tests identified by static analysis ( license prevents publishing ) <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , ut updates for alternate time configuration - fix # <number> <section> build and run unit tests with alternate time configuration : <code> confirm it builds , tests pass , and coverage matches ( the same <number> lines , <number> branch uncovered in time for either config ) <section> none , just fixes ut for alt time config <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit w / alternate time config <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4_dev9 pr # <number> - fix # <number> update rtems toolchain files pr # <number> - fix # <number> , add support for fractional seconds in epoch pr # <number> - fix # <number> , adds truncation warning suppression flags pr # <number> - fix # <number> , doc deploy from local workflow on main branch push pr # <number> - fix # <number> , redundant word in app developers guide pr # <number> - fix # <number> , ut updates for alternate time configuration <section> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <number> <section> part of < <url> <section> none <section> skliper chillfig jonathan brandenburg - metecs hugo - valentine acudmore"
"fix # <number> update rtems toolchain files - fix # <number> modifies the existing <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> toolchain files to : - change the os define to avoid using a reserved identifier ( _rtems_ ( x ) _ ) - change the <allcaps> rtems </allcaps> <number> define to indicate it is deprecated - add a bsp_specs_flags flag to allow for <allcaps> rtems </allcaps> version variations in the specs flags - add a dynamic load cmake variable to allow for two types of <allcaps> cmake </allcaps> executable types in the platform file added a <allcaps> rtems </allcaps> <number> i686 toolchain file <section> - rebuilt and ran <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> tests - tested <allcaps> rtems </allcaps> <number> build and ran tests ( using local <allcaps> osal </allcaps> mods and ci docker image with <allcaps> rtems </allcaps> <number> ) <section> - no impact or behavior changes on <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> - <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> docker images used in ci workflows <section> - the changes in the toolchain files for <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> are to accommodate the <allcaps> rtems </allcaps> <number> port and allow for additional <allcaps> rtems </allcaps> builds to use the same cmake platform file for <allcaps> rtems </allcaps> . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"update <allcaps> rtems </allcaps> toolchain files for <allcaps> rtems </allcaps> <number> , <number> , and <number> <section> this is part of the <allcaps> rtems </allcaps> updates described here : <url> the <allcaps> rtems </allcaps> toolchain files require a few minor changes in order to : - add compatibility for <allcaps> rtems </allcaps> <number> - allow both static and dynamically linked cfe core implementations - allow the gaisler <allcaps> rcc </allcaps> toolchain to be used <section> i would like do the following to existing <allcaps> rtems </allcaps> toolchain files : - add a define to indicate that the cfe core is dynamically linked - add a define to indicate the version of <allcaps> rtems </allcaps> being used . this is a new define , and when the proper <allcaps> osal </allcaps> and <allcaps> psp </allcaps> changes have been made , the old defines will be removed . the new define has the form - dos_rtems_x where the old define has the form - d_rtems_x_ - add a rtems_bsp_specs variable to allow a version specific specs option to be specified . this allows the same cmake platform file for <allcaps> rtems </allcaps> to be used for <allcaps> rtems </allcaps> <number> , <number> , and <number> . i would also like to add a new toolchain file for i686 - rtems6 <section> the alternative is to create two additional cmake platform files in the <allcaps> psp </allcaps> for <allcaps> rtems </allcaps> <number> and gaisler <allcaps> rcc </allcaps> <number> . this is not ideal because there would be <number> separate <allcaps> rtems </allcaps> cmake platform files to maintain and they would be almost the same . <section> the toolchain file changes are the only changes needed in the cfe to support <allcaps> rtems </allcaps> <number> , <number> , and <number> as well as gaisler <allcaps> rtems </allcaps> <number> ( <allcaps> rcc </allcaps> <number> . x) . these changes also will enable a new generic - rtems <allcaps> osal bsp </allcaps> and <allcaps> psp </allcaps> to be added later . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , doc deploy from local workflow on main branch push - fix # <number> workflow deploys document locally to avoid deployment password issues when trying to deploy from cache in reusable . also does not skip main branch actions so it will deploy on push to main . <section> ci <section> document deploy fixed <section> ci : tested on fork here - <url> <section> depends on updates in cfs reusable workflow so it will not get skipped - nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
documentation deployment fails on push to main <section> see <url> fails deployment step <section> likely due to secret not being passed in explicitly to reusable workflow <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : caelum - rc4 + dev8 <section> pr # <number> - fix # <number> , only increment sb internalerrorcounter on errors pr # <number> - fix # <number> , improve es unit test coverage pr # <number> - fix # <number> , add config module to coverage enforcemnt pr # <number> consistent doxygen flow / naming for generation and use reusable documentation generation workflow - fix # <number> , - fix # <number> , pr # <number> - fix # <number> , remove contributor license agreements <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> and <number> <section> part of nasa / cfs # <number> <section> none <section> skliper chillfig"
"unit test will not build with external time source configuration <section> many failures in build with <code> and the following settings : <code> this has already been noted in the general time unit testing issue # <number> which includes many other unit test issues with changing time config . raising priority on this one with a unique issue since it ' s currently a stakeholder impact . <section> fix this configuration at minimum , which is often used when supplying cfs with time from an external source ( or app ) . <section> time services does need a general refactor as noted in # <number> , many issues w / the unit tests as noted in # <number> . really would benefit from converting the configuration files to cmake as described in # <number> . <section> # <number> fixed the build issue , but unit test fails to build . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> per stakeholder request"
"fix # <number> , add support for fractional seconds in epoch describe the contribution fix # <number> testing performed build / run unit tests , confirm same coverage of time module expected behavior changes epoch contains a value for fractional seconds in the form of a cfe_mission_time_epoch_micros . this value is included in the time value before generating the printable string in cfe_time_print system ( s ) tested on hardware : i7 / virtual box os : centos linux <number> versions : bundle main plus this component additional context none third party code none contributor info - all information <allcaps> required </allcaps> for consideration of pull request jonathan brandenburg - <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps>"
"fix <number> add fractional seconds to epoch <section> fix # <number> <section> build / run unit tests , confirm same coverage of time module <section> epoch contains a value for fractional seconds in the form of a <code> . this value is included in the time value before generating the printable string in <code> <section> - hardware : i7 / virtual box - os : centos linux <number> - versions : bundle main plus this component <section> none <section> none <section> jonathan brandenburg - <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps>"
"fix # <number> # <number> , consistent doxygen flow / naming for generation and use reusable documentation generation workflow <section> - fix # <number> - fix # <number> <section> tested via <url> <section> more consistent naming supports doc generation reusable workflow use <section> ci w / modified reference passed at <url> <section> depends on nasa / cfs # <number> addition of reusable workflow <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"support for fractional seconds in epoch definition would a change to accept fractional seconds for the time epoch be accepted into cfe ? cfe supports setting the epoch of time with a granularity of seconds . here is a relevant extract from <code> : <code> it seems the definition of a commonly used epoch , j2000 , contains fractional seconds : <code> as this issue is written , i have locally modified <code> to account for fractional seconds using a <code> macro , defined in this example to <number> . i have not yet written the unit tests . here is a fragment from <code> : <code>"
"fix # <number> , only increment sb internalerrorcounter on errors <section> - fix # <number> <section> build / run unit tests , confirm coverage ( asserts added to verify behavior ) <section> no longer increments <code> for timeouts or no message which are not internal errors <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve es unit test coverage <section> - fix # <number> <section> build / run unit tests and confirmed coverage <section> improves coverage <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> also tightened up the coverage enforcement <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add config module to coverage enforcemnt <section> - fix # <number> <section> ci <section> none , just adds enforcement <section> ci <section> will update minimum coverage as part of fix to # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"replace cfe <allcaps> cla </allcaps> with bundle bootes <allcaps> cla </allcaps> forms <section> remove the individual and corporate contributor license agreement . <section> removal of the respective individual and corporate contributor license agreement pdfs from nasa / cfe . <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , adds truncation warning suppression flags <section> - fix # <number> adds printf - style format and string operation truncation warning suppression flags . <section> tested on fork : <url> <section> none , flags should prevent warnings on future compilations using latest systems . <section> ubuntu <number> <section> justin figueroa , <allcaps> asrc </allcaps> federal <allcaps> edit </allcaps> - jh : added reference to issue so it will autolink"
"fix # <number> , remove contributor license agreements <section> - fixes # <number> adds checklist for <allcaps> cla </allcaps> and contributing guide . <section> working links . removal of the respective individual and corporate contributor license agreement pdfs from nasa / cfe . <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
es missing coverage in cfe_es_task . c of <code> <section> not covered at all : <url> <section> add coverage <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
add <code> module to coverage enforcement ci <code> <section> config module missing from code coverage ci enforcement <section> add - note the uncovered minimums should also be updated based on latest results ( <number> lines <number> branches ) <section> none <section> <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - fix # <number> , resolve build failure for time cfg source pr # <number> - <allcaps> hotfix </allcaps> # <number> , set cfe_revision = <number> and cfe_mission_rev = 0 xff <section> cfe checks < <url> cfs bundle checks < <url> failed codeql workflow is being examined <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"fix # <number> , resolve build failure for time cfg source <section> - fix # <number> <section> built with settings described in # <number> , note unit tests do not build yet with those settings ( see # <number> ) <section> code will at least build <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> # <number> : revert changes to versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> correct cfs_versions . dox appropriately . <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , expand cmake documentation <section> expands cmake documentation <section> documentation - only , just proofreading <section> none <section> n / a <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> elizabeth timmons ( <user> ) , <allcaps> nasa </allcaps>"
"cfe integration candidate : caelum - rc4 + dev6 <section> pr # <number> - fix # <number> , use osal - common . doxygen to resolve <allcaps> osal </allcaps> doxygen refs pr # <number> - fix # <number> , refactor doxygen mainpage into frontpage <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> / <number> ( bundle ) <section> part of <url> docs build will fail until bundle ic is merged , see successful build at <url> <section> none <section> <user>"
"fix # <number> , use osal - common . doxygen to resolve <allcaps> osal </allcaps> doxygen refs <section> - fix # <number> <section> built osal users guide and cfe users guide and mission doc from bundle level , confirmed contents . <section> docs only , reduces dependencies <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit + nasa / osal # <number> <section> nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev4 <section> pr # <number> - fix # <number> , missing sb include for v2 msgid pr # <number> - fix # <number> , resolve doxygen doc warnings and enforce in ci pr # <number> - fix # <number> , remove explicit filename doxygen comments pr # <number> - fix # <number> , add cfe_es_createchildtask default handler <section> cfe checks < <url> - * <allcaps> note </allcaps> <kiss> failing documentation build passes in bundle ci , requires osal dependency - cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> and <number> <section> part of <url> <section> none <section> <user>"
"incomplete conversion of cfe_sb_msgid_t in test_cfe_msg_msgid_v2 . c <section> building the cfe unit tests with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> fails due to compiler errors in modules / msg / ut - coverage / test_cfe_msg_msgid_v2 . c . the errors are due to calling cfe_msg_setmsgid ( ) with a "" message id "" parameter which is an integer , not a cfe_sb_msgid_t . <section> steps to reproduce the behavior : <number> . configure the sample mission with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> . <number> . attempt to build the unit tests . note compiler errors . <section> the unit tests should compile without error . <section> see attached patch . test_cfe_msg_msgid_v2_patch . txt <url> <section> - "" hardware "" : generic x86 - <number> <allcaps> pc vm </allcaps> on virtualbox <date> , running on macos <number> . <number> . - os : ubuntu <number> . <number> - compiler : gcc <number> . <number> - versions : current head of cfe ' main ' branch , <allcaps> osal </allcaps> v6 . <number> - rc4 , <allcaps> psp </allcaps> v1 . <number> - rc4 <section> toolchain is configured to build <number> - bit apps . <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on <allcaps> isrds </allcaps> - <number> , <allcaps> nasa arc </allcaps> code ti <email>"
"<allcaps> ccsds </allcaps> v2 : msg module unit test inconsistencies with cfe_sb_invalid_msg_id <section> the msg_ut test fails at test_cfe_msg_msgid_v2 . c : <number> . the check at that location expects cfe_msg_setmsgid ( ) to return cfe_msg_bad_argument when given cfe_sb_invalid_msg_id as the message id . instead the function returns cfe_success . when a check against cfe_sb_invalid_msg_id is added , a number of new failures appear , notably at test_cfe_msg_init . c : <number> , test_cfe_msg_ccsdsext . c : <number> , test_cfe_msg_ccsdsext . c : <number> , and test_cfe_msg_msgid_v2 . c : <number> . the first , third , and fourth expect a message id with a value of <number> to be legal . the second check passes the constant cfe_sb_invalid_msg_id itself and expects success . <section> steps to reproduce the behavior : <number> . configure the sample mission with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> . <number> . build the unit tests . <number> . run ' make test ' . note failure in msg_ut . <section> consistent enforcement of an <allcaps> api </allcaps> error check on the msg module . the documentation for cfe_msg_setmsgid ( ) says : > the user should ensure that this function is only called with a valid msgid parameter value . if called with an invalid value , the results are implementation - defined . the implementation may or may not return the error code <hashtag> cfe msg bad argument </hashtag> in this case . the function is behaving as documented . the unit test suite itself is inconsistent about whether the function should reject cfe_sb_invalid_msg_id as invalid . <section> if applicable , add references to the software . <section> - "" hardware "" : generic x86 - <number> <allcaps> pc vm </allcaps> on virtualbox <date> , host macos <number> . <number> . - os : ubuntu <number> . <number> , <number> - bit . - compiler : gcc <number> . <number> . - versions : cfe <user> w / local fixes to correct compiler errors in test_cfe_msg_msgid_v2 . c ( bug report to follow ) , <allcaps> osal </allcaps> v6 . <number> - rc4 , <allcaps> psp </allcaps> v1 . <number> - rc4 <section> toolchain is configured to build as a <number> - bit program . <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on the <allcaps> isrds </allcaps> - <number> contract , <allcaps> nasa arc </allcaps> code ti <email>"
"fix # <number> , refactor doxygen mainpage into frontpage <section> - fix # <number> - also refactors how mission documentation is created to support the front page concept <section> built doc , usersguide , osalguide and confirmed layout / contents <section> none <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + # <number> + this commit <section> hard to pull apart from # <number> , so submitted on top . 3 0 a4c4e835712955f6776a207678941950ac0a08 is the subject of this merge . will fail until # <number> dependencies are merged . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , missing sb include for v2 msgid <section> - fix # <number> <section> stand alone build and ci <section> clean v2 build ( see details in # <number> ) <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"message struct definitions in default_cfe_msg_hdr_priext . h conflict with cfe_msg_api_typedefs . h <section> when mission_include_ccsdsext_header is set to <allcaps> true </allcaps> in global_build_options . cmake , the file modules / msg / option_inc / default_cfe_msg_hdr_priext . h is included in place of . <repeated> / default_cfe_msg_hdr_pri . h . the definitions in default_cfe_msg_hdr_priext . h conflict with those in modules / core_api_fsw / inc / cfe_msg_api_typedefs . h . <section> steps to reproduce the behavior : <number> . define a mission configuration . modify global_build_options . cmake by adding the following two lines : set ( mission_include_ccsdsext_header <allcaps> true </allcaps> ) set ( mission_msgid_v2 <allcaps> true </allcaps> ) <number> . attempt to build cfs . observe compilation errors while compiling . see attached file cfe_typedef_errors . txt for example error messages . cfe_typedef_errors . txt <url> <section> cfe should compile cleanly . <section> see attached patch file . cfe_msgdefs_patch_2022 - <number> - <number> . txt <url> <section> - hardware : virtualbox emulation of an x86 - <number> system on macos <number> . <number> - os : ubuntu linux <number> - compiler : <allcaps> gcc </allcaps> v9 . <number> with - m32 flag , all other options standard for relwithdebinfo build type - versions : cfe tag v7 . <number> - rc4 ; <allcaps> osal </allcaps> tag v6 . <number> - rc4 ; <allcaps> psp </allcaps> tag v1 . <number> - rc4 <section> <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on the isrds3 contract at <allcaps> nasa arc </allcaps> code ti <email>"
"fix # <number> , resolve doxygen doc warnings and enforce in ci <section> - fix # <number> <section> built doc standalone and confirmed with all the merges it built without warnings <section> none except warnings squashed <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + dependent commits <section> needs nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_es_createchildtask default handler <section> - fix # <number> <section> ci , also tested with cs unit test which depended on the behavior , passed <section> default handler sets parameter <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> related to # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add cfe_es_createchildtask default handler <section> see # <number> for full issue / scrub details . this issue just fixes <code> <section> add handler <section> none <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"implement default handlers for apis that set values , not all exist ( needs full scrub ) <section> there are not default handlers for all apis that set parameters , leading to potential uninitialized variables when unit testing code that expects the parameter to be set if guaranteed by the <allcaps> api </allcaps> . <section> for <allcaps> api </allcaps> ' s that initialize / set id ' s or really any other case where the parameter should always be set there should be a default handler to avoid uninitialized variable issues for the code under test . example preferred handler : <url> example of a missing handler - <code> . at minimum for success the id should be set valid . <section> initialize the passed in parameter , but when initialized to invalid if there is not a handler to set it for the valid case the test will fail . it ' s better than the often silent uninitialized variable issue but for apis that always set the parameter the burden should not be on the flight code to fix the test issue . <section> planning to spawn individual issues based on identified cases , but this issue relates to a full scrub . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"expand ut - stub handlers <section> cfs apps duplicate ut handler extensions suggesting a general need for extra functionality <section> add ut functionality duplicated across <allcaps> gsfc </allcaps> apps . see this : lock : conversation <url> and changes in the following merge requests : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> <section> add a template in a users or developers guide ? <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum + dev3 <section> pr # <number> - fix # <number> , replace cfe_sb_valuetomsgid ( <number> ) with cfe_sb_invalid_msg_id pr # <number> - fix # <number> , improve cfe_sb_isvalidmsgid handler pr # <number> - fix # <number> , revert breaking change to cfe_es_appinfo_t structure pr # <number> - fix # <number> , fix git error in codeql workflow <section> see prs <section> cfe checks < <url> cfs bundle checks < <url> note that codeql workflow will fail until nasa / cfs # <number> is merged . passing test can be seen in nasa / cfe # <number> <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"fix # <number> , replace cfe_sb_valuetomsgid ( <number> ) with cfe_sb_invalid_msg_id <section> - fixes # <number> <section> - no impact to behavior <section> paul oberosler - personal"
"fix # <number> , improve cfe_sb_isvalidmsgid handler <section> - fix # <number> - if no return value override is set test against cfe_sb_invalid_msg_id <section> build / run unit tests , passed . used with ds and confirm units under test worked as expected based on valid / invalid <allcaps> mid </allcaps> use . <section> handler behaves more like expected <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , revert breaking change to cfe_es_appinfo_t structure <section> - fix # <number> <section> ci ( unit test build / execute ) <section> no behavior change but reverts breaking software change ( public structure modification ) <section> ci <section> need to decide if we should reopen # <number> as future work for a major update cycle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow <section> depends on nasa / cfs # <number> fixes # <number> - replace checkout action for bundle with git clone - use symlink to map calling repo workspace to expected cfs bundle directory location - replace bundle checkout action with git clone - adds component - path input parameter - adds "" code snippets "" to codeql analyze action <section> see pr checks tab <section> codeql action executes successfully . <section> - github actions , ubuntu <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"codeql workflow fails after "" upload "" stage <section> codeql workflow fails in the code ql analyze step , specifically right after the "" upload "" stage . see failed run in <url> also silent "" failure "" in <url> <code> <section> run latest codeql workflow <section> passing workflow run <section> if applicable , add references to the software . <section> - github actions , ubuntu <number> <section> can be fixed by updating workflow to use nasa / cfs # <number>"
"fix # <number> , array length calculation for perf structs <section> cleans up the array length calculation for perf structs to not assume a specific base element type ( uint32 ) . this also makes the definitions much more readable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none w / current structure definitions . just a bit of future - proofing and clean up . <section> ubuntu <number> <section> notably the <allcaps> eds </allcaps> build actually does use a different base type for this array , so this is not just cosmetic . but this is a worthwhile cleanup regardless . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , initialize blockdata in <allcaps> es ut </allcaps> <section> - fix # <number> - initializes blockdata in <allcaps> es ut </allcaps> testcds <section> build / run unit tests w / valgrind <section> unit test only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> probably caught in static analysis but we have got way too many nuisance warnings . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_fs_parseinputfilenameex avoid uninit var <section> - fix # <number> - uses input buffer if default is <allcaps> null </allcaps> to set output to avoid uninitialized variables in unit test <section> build / run unit tests with valgrind , eliminates warning <section> unit test only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> i wonder if this would have been caught sooner if we had a different bucket for "" critical "" static analysis checks . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"use input if default not set for parsing file name <section> <code> handler sets output to input as last resort ( avoids uninit vars ) . <code> only sets the output to default if default is not null , so there ' s cases in the es unit test where the output is not initialized since there is no default value . <url> <section> if <code> is <allcaps> null </allcaps> , use <code> <section> none <section> any unit that uses <code> with a <allcaps> null </allcaps> default risks uninit var , example : <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , osal_id_t type conversion in es_ut . c <section> corrects the implicit type conversion from an osal_id_t to an integer , making it explicit by using the os_objectidtointeger ( ) conversion function . fixes # <number> <section> build with strict osal_id_t type definition . run all tests . <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"implicit / incorrect <allcaps> osal id </allcaps> type conversion in es_ut . c <section> the following line in unit tests makes an implicit conversion between <code> ( an osal_id_t ) and an integer : <url> this is allowed with the current permissive type definition , but fails when building with strict types . <section> use a type - safe definition for osal_id_t . this conversion fails and results in a compiler error . <section> should use <code> here - easiest way to make it work without changing logic . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , limit <allcaps> sbr ut </allcaps> loops <section> - fix # <number> - limits <allcaps> sbr ut </allcaps> loops to avoid potentially long tests of questionable value <section> built / ran unit tests , confirmed acceptable timing <section> none , ut only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add configurable symbol scope option for apps <section> in caelum , apps were switched to have local symbol scope when getting loaded ( on systems that support it ) to avoid discouraged design behaviors and possible issues with unloading / reloading if apps share symbols . really libs should contain all global scope symbols used by other apps ( and are still loaded with global scope ) and are never unloaded ( requires restart to modify ) . <url> the down - side of this change is apps like mm , md , cs all become more challenging to use when symbols are not available and a global symbol table dump will not include the app symbols . although sharing symbols from a reloadable app is likely never a good idea due to the potential for executing or utilizing stale memory , there ' s definitely a trade related to maintenance / portability . likely use case would be to compile w / local app symbols to ensure apps are not sharing symbols , but then switch to global for testing and / or release build for systems that require it . <section> add a configuration option to load apps with global or local scope ( also helpful to have background as to why each might be selected ) . this also allows a system that supports local symbols to behave like a system that does not support it for simulation / portability purposes . <section> could add an option at in the startup config , but probably overkill to set at an app by app basis . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum + dev2 <section> pr nasa / cfe # <number> - fix # <number> , add cfe_es_appinfo_t element documentation pr nasa / cfe # <number> , - fix # <number> , fs functional test pr nasa / cfe # <number> , - fix # <number> , mismatched foreach in cmake function pr nasa / cfe # <number> , - fix # <number> , improved code highlighting in cfe application developers guide pr nasa / cfe # <number> , - fix # <number> , cfe_fs_parseinputfilenameex avoid uninit var pr nasa / cfe # <number> , - fix # <number> , array length calculation for perf structs pr nasa / cfe # <number> , - fix # <number> , limit <allcaps> sbr ut </allcaps> loops pr nasa / cfe # <number> , - fix # <number> , initialize blockdata in <allcaps> es ut </allcaps> pr nasa / cfe # <number> , - fix # <number> , osal_id_t type conversion in es_ut . c pr # <number> - fix # <number> , reuse codeql , static analysis , and format check <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> ( bundle level ) <section> part of <url> <section> none <section> <user> <user> <user> <user> <user>"
"functional tests may crash if created tasks use floating points <section> some functional tests create tasks without using the <code> flag . depending on the platform they are running , the spawned tasks might require floating points to be enabled for the task , otherwise we get an exception . <section> these two tests do not use os_fp_enabled to create a task : <url> <url> possible fix is to add os_fp_enabled to the function call . es_task_test . c : <code> tbl_registration_test . c : <code> <section> - hardware : <allcaps> dleon </allcaps> processor - os : <allcaps> rtems </allcaps> - versions : cfs bundle caelum rc4 <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"functional tests fail when cfe_mission_sb_max_sb_msg_size is set to max value <section> several sb tests fail because the tests expect the mission to be using the default value of <code> . if we use a value of <code> ( 0x 1 0 0 0 0 ) , the following tests fail : <code> see test_failure . log <url> <section> steps to reproduce the behavior : <number> . set <code> to <code> <number> . run the cfe functional tests <section> - hardware : <allcaps> leon </allcaps> processor - os : <allcaps> rtems </allcaps> - versions : cfs bundle caelum rc4 <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
specify language for improved code highlighting in app developers guide <section> github ' s markdown render engine can display code syntax highlighting in code blocks <section> add language specification to markdown code blocks <section> none <section> none <section> <user>
"fix # <number> , fs functional test <section> - fixes # <number> <section> personal"
"fix # <number> , mismatched foreach in cmake function <section> - fixes # <number> <section> - > conversation at # <number> <section> personal"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> cfe format check reuse : <url> cfe codeql reuse : <url> cfe static analysis reuse : <url> <section> cfe will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the workflow simply uses <code> and the full path of the workflow . the cfs workflows , or targeted workflows , must include workflow_call and runs - on as seen below . <code> <section> keep it as is . <section> tested in forked cfs : <url> tested in forked <allcaps> osal </allcaps> : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , format check add duplicate job <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . changed name from static - analysis to format - check <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , static analysis add duplicate check and remove main push <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . run on all branches for push and pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis in ci missing duplicate check , restricted to push to main <section> missing duplicate check and restricting to main for pushes here : <url> <section> run on all pushes , add duplicate check <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
format check in ci missing duplicate check <section> should skip format check if it ' s a duplicate action missing here : <url> <section> add duplicate check like the rest of the actions . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , replacing hardcoded message limit in <allcaps> time </allcaps> services <section> replacing the hardcoded message limits in the <allcaps> time </allcaps> services with <code> . fix # <number> <section> none <section> none <section> personal - zachary gonzalez"
"cfe integration candidate , caelum + dev1 <section> pr # <number> - fix # <number> , use cfe time clock state enum t in cmd / tlm and handling pr # <number> - fix # <number> , add cfe_sb_valuetomsgid / msgidtovalue wrappers - fix # <number> , use <number> as the invalid cfe_sb_msgid_t value - fix # <number> , use type safe value for cfe_sb_msgid_t pr # <number> - fix # <number> , <allcaps> evs </allcaps> functional test add for different event types pr # <number> - fix # <number> , patch for recursive event loop pr # <number> - fix # <number> , cfe_es_memaddoff structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t pr # <number> - fix # <number> , avoid aliasing warnings pr # <number> , message id type improvements - fixes # <number> - fixes # <number> pr # <number> - fix # <number> , use cfe_time_clockstate_enum_t in cmd / tlm and handling pr # <number> - fix # <number> , consolidate repeated <allcaps> msg </allcaps> stub setup in sb_ut pr # <number> - fix # <number> , return type conversions in cfe_es_gettaskname pr # <number> - fix # <number> , better message type pointer conversion pr # <number> - fix # <number> , replacing hardcoded message limit in <allcaps> time </allcaps> services pr # <number> - fix # <number> , use macro in cfe_resourceid_isdefined pr # <number> - fix # <number> , checking against isnewoffset only <section> cfe checks < <url> bundle checks < <url> <section> see prs <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , checking against isnewoffset only <section> - fix # <number> removed redundant check of <code> only using <code> now . <section> none <section> none <section> add any other context about the contribution here . <section> personal - zachary gonzalez"
"logically dead code for cfe_mission_time_epoch_second <section> execution cannot reach this statement : numberofminutes + + ; <section> no unreachable code when cfe_mission_time_epoch_second is configured as <number> . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , consolidate repeated <allcaps> msg </allcaps> stub setup in sb_ut <section> utilize the common setup / wrapper functions in ut_support . c whenever possible <allcaps> msg </allcaps> dispatching in the generic handler . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests confirm that branch coverage is <section> changed from baseline <section> none <section> ubuntu <section> refactor for improved source maintenance / flexibility - but no behavior change , works identically <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , functional requirements grammar cleanup pr # <number> - fix # <number> , extended header definitions and test updates <section> cfe checks < <url> cfs bundle checks <section> see linked prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of < <url> <section> none <section> <user> <user>"
"use "" calltaskpipe "" wrapper in sb_ut <section> all other unit test modules ( es , evs , tbl , time ) go through a wrapper provided in the support code called <code> to invoke a command handler via the task ' s message handler function . this helper function would set up the <allcaps> msg </allcaps> stubs properly to dispatch to the given command code , avoiding the need to repeat the same setup calls dozens of times in the ut . for historical reasons , the sb unit test did _not_ do this - because the message accessor functions were also implemented in sb , and therefore it could not rely on stub behavior to set up proper dispatch ( i . e . it had to do the "" real "" thing ) . however , with the advent of the separate <allcaps> msg </allcaps> module , this is no longer the case . the sb_ut . c now uses / sets up <allcaps> msg </allcaps> stubs to do the dispatch , but it was never converted to use the same wrapper that other modules do . instead , the same setup code is repeated all over the tests . <section> convert oft - repeated sequences like : <code> to be : <code> <section> this is initially for clean up and readability , but it greatly improves flexibility too - if / when the core modules switch to a more intelligent verification and dispatch method , only ut_calltaskpipe needs to be updated to support the dispatch method , not dozens ( or even hundreds ) of different test cases . <section> joseph hickey , vantage systems , inc ."
"ic workflow upgrades <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , avoid aliasing warnings <section> use an actual <code> value when invoking functions that output an opaque pointer value . if necessary the value of this pointer can then be assigned to the real pointer type to dereference . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> no warnings when building with strict aliasing <section> ubuntu <number> ( gcc <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , extended header definitions and test updates <section> do not double - typedef the cfe_msg types when using extended headers . this also corrects a call to ut_setforcefail in the extended header test , which was renamed . fixes # <number> <section> build and run all <allcaps> cfe </allcaps> sanity checks , with extended headers enabled . <section> builds and runs correctly when extended headers are selected . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"scrub requirements for the next development cycle <section> there are a handful of requirements that either are not very useful , over - constrain design , or apply to heritage systems . see real time port control - cevs3017 , event data types - cevs3103 . <number> , etc . <section> scrub . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , message id type improvements <section> <number> . makes the value for <code> and <code> to be based on <number> rather than - <number> . this way , objects / values which are memset or otherwise cleared to <number> will get a safe value by default , rather than actively needing to be set to a safe value . <number> . makes the type used for <code> to be a wrapper around the msgid value , rather than a direct equivalent of the msgid value . this increases type safety and enforces that the correct type and correct conversions ( where necessary ) must be employed when working with msgids . fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> using "" <number> "" as a value for cfe_sb_msgid_t no longer passes the validity test . for unit tests where values were "" made up "" and did not actually need to be valid but needed to pass the cfe_sb_isvalidmsgid ( ) test - the value <number> can be used instead of <number> . type checking enforces that the msgid value conversion helpers must be used when intentionally using msgid as an int or vice versa . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe_sb_valuetomsgid / msgidtovalue wrappers <section> correct code that was not correctly using the cfe_sb_valuetomsgid or cfe_sb_msgidtovalue conversion wrappers where required to do so . this should be used whenever the value is intentionally converted to / from an integer . the cfe_sb_msgid_t type should not be assumed to be an integer in nature . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none for framework build / default config <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> evs </allcaps> functional test add for different event types <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , avoid alias warning on some compilers <section> use an intermediate variable of type <code> to store the address , which avoids an alias warning . fixes # <number> <section> build with strict flags ( <code> ) on <allcaps> gcc </allcaps> <number> . <section> builds clean ( no warning ) <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , confirm sb / time reset requirements in coverage test <section> - fix # <number> just added confirmation of sb / time reset requirements that are hard to fully verify operationally . <section> locally build / ran unit tests , ci <section> no impact <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
enhance unit test to check for reset of values on initialization ( requirements related ) <section> it ' s difficult functionally ( or via <allcaps> ctf </allcaps> ) to confirm the reset requirements related to counters / states since they get populated / used and counters increment based on the configuration . requirements that would help to check in coverage tests : csb4500 - sb : initialize routing on power on reset | upon a power - on reset the cfe shall initialize the routing information and clear all error counters . csb4501 - sb : initialize routing on processor reset | upon a processor reset the cfe shall initialize the routing information and clear all error counters ctime2002 - <allcaps> time </allcaps> : zero counters | upon receipt of command the cfe shall set to zero all counters reported in time services telemetry . <section> add a quick assert that the values do get initialized ( typically in cfe_*_earlyinit <censored> ) as required . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , cfe_assert macro names pr # <number> - fix # <number> , update msgid testcase to match implementation pr # <number> - fix # <number> , single time domain in functional time tests pr # <number> - fix # <number> , add missing inclusions in <allcaps> cfe api </allcaps> headers pr # <number> - fix # <number> , use existing / ram for fs header test pr # <number> - fix # <number> , add static local to function test so data section is nonzero pr # <number> - fix # <number> , make invalid buffer length consistent in es task test pr # <number> - fix # <number> , only check base filename in library info functional pr # <number> - fix # <number> , confirm sb / time reset requirements in coverage test pr # <number> - fix broken link in application developers guide pr # <number> - fix # <number> , avoid alias warning on some compilers <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( see cfs bundle pr ) <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , better message type pointer conversion <section> provides more abstract conversions between the local buffer pointers and the <code> pointer required for calling cfe_sb <allcaps> api </allcaps> , without assuming specific member names . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none in framework build . improves source code compatibility when using an alternate <allcaps> msg </allcaps> implementation that does not ( directly ) contain a <code> member . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use existing / ram for fs header test <section> - fix # <number> removes os_mkfs / os_mount in the fs header functional test and replaces with just using existing / ram . this avoids <allcaps> ram </allcaps> being reformatted on the mcp750 mid - functional which was causing the table tests to fail since the tables created at the beginning of the function no longer existed . note any system that runs out of <allcaps> ram </allcaps> would also not handle this well . <repeated> <section> tested on both linux and vxworks <section> no longer formats <allcaps> ram </allcaps> mid - test on mcp750 <section> - hardware : intel i5 / docker , mcp750 - os : ubuntu <number> , vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"table content management test fails on mcp750 due to format of <allcaps> ram </allcaps> triggered by file header test <section> out of the box there ' s <number> failures in the tbl_content_mang_test . c on the mcp750 , many related to cfe_tbl_err_access errors on the generated tables , which come from the following function : <url> since it ' s not added as a regular test , it runs before actually starting the test case : <url> but fs_header_test . c does a os_mkfs / os_mount which seems to trigger a format of <allcaps> ram </allcaps> on mcp750 before the table content management test is run ( but after the table file generation ) : <url> from the console mid - test ( does not get recorded in log , note there ' s a mixing of output strings . <repeated> <sad> <code> this is not ideal for numerous reasons ( some systems may have useful things in <allcaps> ram </allcaps> , or even be running out of <allcaps> ram </allcaps> ) <section> just use the available / ram . <section> i did not really dig that deep so there may be alternatives or underlying behavior that may need to be investigated , but as a quick fix for the functional test this seems sufficient . <section> formatting <allcaps> ram </allcaps> causes a reboot on sp0 since that ' s where it runs out of . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , single time domain in functional time tests <section> - fix # <number> functional test now uses consistent <allcaps> api </allcaps> ' s for bounding time , also fixed likely issue with <allcaps> met </allcaps> rollover causing a false failure . <section> build and ran on linux and mcp750 , passed <section> functional test now passes on systems where os_getlocaltime resolution is less than cfe_psp_gettime . <section> - hardware : intel i5 / docker , mcp750 - os : ubuntu <number> , vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional test can fail if os_getlocaltime and cfe_psp_gettime resolution is different <section> testgettime in time_current_test . c uses os_getlocaltime to bound the cfe_time_gettime and related calls here : <url> os_getlocaltime uses clock_gettime here : <url> but the cfe_time_gettime related calls use cfe_psp_gettime which for vxworks uses vxtimebaseget here : <url> the issue is ( at least on vxworks ) if clock_gettime resolution is less than vxtimebaseget the test may fail since it can show a <code> of zero yet the cfe_time_get * calls may show a difference so the timeinrange test fails . <section> use the same utilities and stay in the cfe_time_systime_t domain by bounding with cfe_time_gettime at the start and the end vs using os_getlocaltime . the test is really intended to show that the conversions work correctly to the resolution provided by cfe_time_systime_t , changing resolutions or references only complicates things unnecessarily leading to possible false results . <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , make invalid buffer length consistent in es task test <section> - fix # <number> changes : - makes the testname into an array ( and just subtracts <number> ) - removes the const invalid test name - tests against <number> buffer length <section> ran on mcp750 <section> tests both too short and <number> buffer length . <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional es task test does math on a pointer size which results in different behavior for <number> vs 6 4 bit <section> dodgy test on line <number> fails on a <number> bit machine since <number> length returns a different error vs a buffer that is too small : <url> sizeof ( taskname ) is either <number> or <number> since it ' s defined as a pointer on line <number> . i think the intent was to pass in a buffer length that is too small . <section> do a <number> buffer length test and a buffer length to small test separately ( and fix ) . also the invalid_name does not really follow case or use patterns , just pass in an invalid constant . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , functional <allcaps> crc </allcaps> converted to <allcaps> mir </allcaps> to handle different implementations <section> - fix # <number> simplified and made confirmation of results <allcaps> mir </allcaps> <section> mcp750 ( and ci ) <section> functional <allcaps> crc </allcaps> tests no longer fail vs hard coded values <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + # <number> + # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional test crc results are implementation ( and possibly endian ) dependent , fail vs hard coded expected value <section> <allcaps> crc </allcaps> calculations can depend on implementation or endianness of data being tested ( test fails on mcp750 which is big endian ) : <url> <section> convert to <allcaps> mir </allcaps> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static local to function test so data section is nonzero <section> - fix # <number> added a static local ( testname ) just to make the data section nonzero so the test will pass when the addresses are valid . <section> tested on mcp750 <section> nonzero data section ( size and address ) <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
mcp750 functional test failure - app dataaddress and datasize zero <section> when running on the mcp750 : <code> from : <url> since there is not anything in the data section ( no initialized non - const globals or local staic vars ) <section> add a local static . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , patch for recursive event loop <section> adds cfe_sb_requesttosendevent / cfe_sb_finishsendevent wrappers around all events generated by cfe_sb_transmitmsgvalidate . this is avoids the potential for a recursive loop if configured improperly . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> tested with the mis - configuration where <allcaps> evs </allcaps> had an invalid <allcaps> mid </allcaps> and confirmed that the system does not get into a recursive loop and segfault anymore . <section> ubuntu <section> this is just a minimal patch that does not change current architecture but avoids a crash . a better fix for future versions would be to put this recursion protection into <allcaps> evs </allcaps> in a more generic manner . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , only check base filename in library info functional <section> - fix # <number> just checks the base of the filename <section> ran on linux and mcp750 , passed <section> passes test <section> - hardware : pc and mcp750 - os : ubuntu <number> and vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
functional library filename check hardcodes configurable elements <section> library filename check here : <url> directory and extension may be different on different systems . <section> recommend just checking the base name matches . could use the configurable elements to construct the name but that is not really proving much and could still be fragile ( defaults are not actually required ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update msgid testcase to match implementation <section> updates the test case for "" cfe_msg_setmsgid ( ) "" to write a value that is outside the set of storable values for msgid . this currently uses the value "" - <number> "" do this , assuming that this translates to a value with all bits set , and at least one of those bits will not correlate with an actual header field . caveat is that in other implementations , it is possible that all bits are storeable in the header . that is , all msgid values can be stored in a message or vice versa , even those msgids which are not route - able in sb . this also updates the documentation of cfe_msg_setmsgid to clarify if / when the cfe_msg_bad_argument status code is returned , and that the set of msgid values which are "" settable "" really depends on the <allcaps> msg </allcaps> implementation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> none with default <allcaps> msg </allcaps> implementation and current config . <section> ubuntu <section> note that the "" cfe_sb_isvalidmsgid "" and the related constants <code> and <code> are really pertinent message routing in sb and <allcaps> sbr </allcaps> , more so than <allcaps> msg </allcaps> . the general concept of what constitutes a "" valid "" msgid is different for <allcaps> msg </allcaps> than sb / <allcaps> sbr </allcaps> . for <allcaps> msg </allcaps> it is just a matter of how many bits the real header has , and how this bits are mapped between the header and cfe_sb_msgid_t type . for example there are values which are "" storable "" in the <allcaps> ccsds </allcaps> primary header , but are not valid for sb / <allcaps> sbr </allcaps> or usable with <allcaps> cfe </allcaps> . in particular , it is possible that an application might be serving as an intermediate node in a <allcaps> dtn </allcaps> network - in which case it might need to decode and / or encode messages which are not actually routed on the <allcaps> cfe </allcaps> software bus at all . it should be sb ( and <allcaps> sbr </allcaps> ) domain to determine if a msgid is route - able . <allcaps> msg </allcaps> only should care if it is store - able in the header . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_assert macro names <section> replace "" cfe_utassert "" macro prefix with "" cfe_assert "" , to match the naming convention . ( the "" utassert "" was a carry over from the coverage test environment ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , just namespace consistency in code . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing inclusions in <allcaps> cfe api </allcaps> headers <section> some <allcaps> cfe api </allcaps> headers were missing dependency inclusions , where the header was referencing a type or symbol but not directly including the header file that provides that type / symbol . adding the dependent include allows the headers to work more consistently . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none for framework config ( these inclusions were already satisfied in existing use cases ) but fixes a broken build for external code that only included these headers directly . <section> ubuntu <section> this type of thing was intended to be caught by the "" headercheck "" concept in the module code , but that is currently not enabled / enforced in the build . there theoretically could be other instances of stuff like this , but these are the only two noted so far . <section> joseph hickey , vantage systems , inc ."
"fix # <number> support unimplemented features in <allcaps> msg </allcaps> ft <section> <allcaps> msg </allcaps> functional tests will not pass on gateway cert repo that uses a custom <allcaps> msg </allcaps> api . this pr makes the necessary changes to support unimplemented features in the custom <allcaps> api </allcaps> . <section> steps taken to test the contribution : <number> . checkout custom gateway cert repo <number> . checkout latest cfe and osal <number> . add sample lib , sample app , and test apps to be compiled and run by default <number> . run project and verify results <section> verify that unimplemented features in <allcaps> msg </allcaps> api do not result in failures <section> - ubuntu <number> vm <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , update directory diagrams in app developer guide pr # <number> - fix # <number> , improve sb coverage pr # <number> - improve es code coverage - fix # <number> - fix # <number> pr # <number> - fix # <number> , enforce minimum code coverage pr # <number> update dev guide for <allcaps> msg </allcaps> and <allcaps> sbr </allcaps> - fix # <number> - fix # <number> pr # <number> - fix # <number> support unimplemented features in <allcaps> msg </allcaps> ft <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , enforce minimum code coverage <section> - fix # <number> added enforcement of minimum coverage to ci , currently set to numbers achieved once all coverage pr ' s are in ( es and sb pending ) <section> see results on branch with es / sb merges at : <url> ( <allcaps> passed </allcaps> ) <section> only impact is to fail the workflow if code is added without associated code coverage . <section> ci ( also ran it locally for testing ) <section> the numbers can be adjusted if code is added that really can not be covered ( although we should avoid this ) and / or as we resolve open coverage issues ( all are documented ) . needs # <number> and # <number> merged to pass . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"missing entries in system log during initialization <section> the first ~ <number> entries during initialization are being dropped from the system log . <section> dump the system log and review the first few entries . see the attached cfs_cfs_stdout . txt file and compare against a what was captured in the system log - syslog . txt . specifically , the message to determine power on / processor reset is being dropped - which is sometimes used for requirement verification / is resulting in test failures . <section> all log entries captured in log . <section> if applicable , add references to the software . <section> oracle vm virtualbox os : ubuntu - <number> cfs versions : cfe v6 . <number> - rc1 + dev593 , osal v5 . <number> - rc1 + dev458 , psp v1 . <number> - rc1 + dev112 . <section> dan knutsen <allcaps> nasa </allcaps> / goddard cfs_cfs_stdout . txt <url> syslog . txt <url>"
"fix # <number> # <number> , improve es code coverage <section> - fix # <number> - fix # <number> improve coverage for es . <section> build with unit tests , run , verify coverage improvement <section> none , coverage only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining coverage issues ( <number> uncovered lines , <number> uncovered branches ) : - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing branch coverage in es_queryallcmd , alternate config <section> would need a configuration where cfe_es_query_all_max_entries does not fit all the apps / libs : <code> here : <url> <section> coverage test with multiple configurations . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing coverage in cfe_es_task . c related to global_configdata defined in psp stubs <section> many cases in cfe_es_task . c where code can not be exercised based on the definition of global_configdata in the psp . example : <code> here : <url> impacts cfe_es_findconfigkeyvalue , cfe_es_generatesingleversionevent , cfe_es_generateversionevents , cfe_es_generatebuildinfoevents <section> provide a mechanism for overriding or defining global_configdata from the test code . some branches require both <allcaps> null </allcaps> and non - <allcaps> null </allcaps> values for coverage , so likely would need multiple builds . <section> coverage could be improved by just exposing a few of the internal routines and / or splitting up code and providing stubs . with <number> versions available from the <allcaps> psp </allcaps> likely could achieve full coverage , but clunky to cross repos just for coverage . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing coverage in cfe_es_poolcreateex , requires alternate config <section> branch / line below uncovered since it would require an alternate configuration : <code> here : <url> <section> test with alternate configurations <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> full name and company / organization if applicable"
"es missing branch coverage in cfe_es_backgroundtask , defensive code <section> missing branch coverage based on the const cfe_es_background_job_table and defensive coding ( not null , timer values ) : <code> here : <url> <section> maybe split the file such that it can be overridden in a test case with an array that hits these conditions . alternatively could just provide an array that has these conditions , but it would not really make sense in operational software . <section> none . note the actual implementation is ok as - is , it ' s just defensive code . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> <number> , use memset to clear structs <section> instead of assigning <code> , use an explicit <code> to clear the local stack structures . <section> build and run all tests <section> fixes compiler error when struct did not start with an integer . <section> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve sb coverage <section> - fix # <number> <section> build , run , report coverage , confirm improvement . now just missing <number> lines , <number> branches ( all documented ) , <percent> / <percent> . <section> none , unit test updates for code coverage only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> issues for uncovered code : - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb missing branch coverage in cfe_sb_sendstatscmd , alternate config <section> branch coverage would require a config with cfe_mission_sb_max_pipes < cfe_platform_sb_max_pipes to hit the stats limit first : <code> here : <url> <section> test with alternate config to get full coverage . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb line coverage for collision reporting in cfe_sb_subscribefull requires alternate config <section> default config does not use the hash implementation , so there ' s no way to get collisions : <code> here : <url> <section> # <number> <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , correct various typos in docs , comments and error messages <section> fixed various minor typos in <allcaps> readme </allcaps> docs , comments and a few debug / error / description message strings . - fix # <number> <section> none ( non - executable code ) . <section> none . code execution is unchanged / unaffected . <section> n / a <section> n / a <section> n / a"
"sb missing branch coverage in cfe_sb_deletepipefull , cfe_sb_subscribefull , cfe_sb_unsubscribefull : pendingeventid ! = <number> when status = = cfe_success <section> pendingeventid is always set , so can not hit false case : <code> here : <url> same pattern in cfe_sb_subscribefull ( although inverted ) : <code> here : <url> again in cfe_sb_unsubscribefull : <code> here : <url> <section> consider just <code> ? anything that is not a <allcaps> success </allcaps> should increment the error counter . <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update time tests to use bitmask check macros <section> the new bitmask check macros provide more concise information the resulting log file . this updates the time test to use those macros when checking the state flags . <section> build and run all tests , confirm log output is correct <section> improved test log file info <section> ubuntu <section> note this also changes the code to call <code> repeatedly , rather than storing in a local variable and checking that value . the intent is to clearly indicate in the log that this function was invoked , not just what its output was . this helps with tracking / confirming that the function is covered by the functional test . this just reads a global so it should not be different in subsequent calls , unless the clock actually changes state during the test . but that was already a risk with the separate call to <code> , this does not really change that - and the flags are not really connected otherwise . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_memaddoff structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t <section> - fixes # <number> <section> <number> . github actions <section> - nothing <section> see # <number> . i am new to the docs system in this project , what is the type i should use for cfe_es . xml line <number> - <number> <url> ? maybe implement a new type in "" base_types "" , how ? after this fix , i will squash the commits with a clear commit message . <section> <user>"
"fix # <number> , cmake modifiable table tool path parameter cmake option to change the path of the ef2cfetbl executable file via the tabletool_exe environment variable . this also enables the user to specify other tools as table tool if needed . <section> - fixes # <number> <section> <number> . github actions <section> - nothing only if <code> environment variable is set . then the cmake would use the content as path to an executable used for transforming lib into tbl . <section> if <code> is not set the build process does not change . but if it is set the program will not add the default ef2cfetbl tool as a dependency in cmake and the with tabletool_exe specified executable will be run with the parameters like for the ef2cfetbl utility . <section> see above . <section> <user>"
"fix # <number> , use macro in cfe_resourceid_isdefined <section> - fixes # <number> <section> <number> . github actions checks <section> <user>"
"fix # <number> , remove extern from function prototypes <section> - fixes # <number> <section> <number> . github actions checks <section> - nothing <section> paul oberosler , individual"
"enforce cfe code coverage minimum statistics <section> code coverage not enforced , so it ' s easy to miss where code modifications should trigger coverage test updates <section> enforce ( like <allcaps> osal </allcaps> ) maximum uncovered lines / branches in ci . would benefit from an additional makefile rule or similar to separate and report out just cfe coverage . <section> none <section> should enforce as soon as the full coverage scrub is complete . as we address missing coverage issues in the future we can adjust the limits . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
sb code coverage improvements <section> there ' s a few achievable code / branch coverage lines in sb . <section> cover them . <section> none <section> ok as - is : - # <number> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> # <number> , improve <allcaps> tbl </allcaps> code coverage <section> - fix # <number> - fix # <number> <section> build / run / report coverage on unit tests , confirm improvement <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches , documented in : - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> uncovered lines in cfe_tbl_loadcmd , no alternative error codes from cfe_tbl_getworkingbuffer <section> cfe_tbl_getworkingbuffer has no alternative error codes to exercise the following code in cfe_tbl_loadcmd : <code> <url> <section> could cover if cfe_tbl_getworkingbuffer was stubbed ( test individual file units in # <number> ) . note there is a possible internal error from getting the mutex , but it does not get returned ( see # <number> ) <section> trade refactor / removal of condition . <repeated> it ' s useful if errors do get added , just not currently reachable . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> : cfe_tbl_register branch coverage requires alternate configuration <section> hitting the condition below would require cfe_platform_tbl_max_sngl_table_size > cfe_platform_tbl_max_dbl_table_size , with a single buffer table and size between the two settings ( should not create the system log message ) <code> <url> <section> add multiple builds in ci with alternate settings to include this config . <section> could manually cover . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> coverage can be improved <section> still some easy coverage missing in <allcaps> tbl </allcaps> . <section> add it <section> none <section> ok as - is : # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve <allcaps> time </allcaps> branch coverage <section> fix # <number> , <allcaps> time </allcaps> now at <percent> / <percent> with just # <number> outstanding <section> build / run / verify coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branch : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> time </allcaps> improve branch coverage <section> a few more branches in <allcaps> time </allcaps> could be fairly easily covered <section> add coverage <section> none <section> ok as - is : # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , improve <allcaps> sbr </allcaps> branch coverage <section> fix # <number> , now at <number> / <number> for <allcaps> sbr </allcaps> <section> build , run , check coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> sbr </allcaps> incomplete branch coverage <section> easy branches currently uncovered . <section> add coverage <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"silently limiting usecount in cfe_sb_incrbufusecnt might cause issues when released early limiting the maximum value silently leads to the queue being released before all users are done . this really should create an error on subscribe or similar to avoid potential issues / strange behavior . maybe this case is protected somewhere else , but until confirmed to not be an issue , marking as bug since in theory this could cause pretty strange results . <repeated> not immediately critical since there are not 0x 7 fff subscribers in any currently realistic system . _originally posted by <user> in <url>"
"fix # <number> , improve resource id branch coverage <section> fix # <number> - pushes resource id coverage to <number> / <number> note it was just an out - of - order test where id was made invalid before the section that needed a valid id to get full coverage , so swapped the tests . <section> build / run / report coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> rid </allcaps> missing branch coverage <section> resource id is missing full branch coverage <section> add it . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , improve <allcaps> msg </allcaps> branch coverage <section> fix # <number> - improves <allcaps> msg </allcaps> branch coverage note only remaining is documented in # <number> <section> build / run / report coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> msg </allcaps> - improve coverage <section> additional missing branch coverage can be added <section> add it . <section> none <section> ok as - is : # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> msg </allcaps> missing branch coverage , would require alternate / stub implementation and splitting up coverage executable <section> the software is implemented to support multiple options but currently just utilizes a single option to build one executable ( see issue # <number> ) which means it ' s impossible to cover all the branches . example - can not hit the non - success case of the following branch since the selected implementation for <code> used internally can not fail ( although conceptually an implementation could test the header version and reject if it does not match for example ) : <url> <section> this could be solved by implementing # <number> ( related to # <number> ) <section> none <section> results in <number> branches not being exercised . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"split msg coverage tests into multiple executables to be able to cover all implementations <section> currently with just one executable it ' s not possible to cover all implementations with one build / run , so source selection is used : <url> <section> split into smaller units , probably makes sense to do the <number> for <number> pattern like <allcaps> osal </allcaps> and then all the implementations can be covered from one build / run . <section> none <section> related to # <number> , and the suggested responses . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add <allcaps> sb api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> es api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> tbl api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> fs api </allcaps> test cases pr # <number> - fix # <number> , add time clock test pr # <number> <allcaps> evs </allcaps> coverage - fixes # <number> , adds test for messagesendcounter not incrementing when sending a filtered event . - fixes # <number> , adds tests for logoverflowcounter incrementing when the log overflows . pr # <number> sb test improvements - fix # <number> - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , cfe_tbl_modified : test <allcaps> crc </allcaps> , updated flag pr # <number> - fix # <number> improve <allcaps> evs </allcaps> code coverage pr # <number> , - fix # <number> , add call to cfe_es_exitchildtask pr # <number> - fix # <number> , improve fs coverage pr # <number> - fix # <number> , improve <allcaps> msg </allcaps> branch coverage pr # <number> , - fix # <number> , improve resource id branch coverage pr # <number> - fix # <number> , improve <allcaps> sbr </allcaps> branch coverage pr # <number> improve <allcaps> tbl </allcaps> code coverage - fix # <number> - fix # <number> , pr # <number> - fix # <number> , support custom <allcaps> psp </allcaps> directory pr # <number> - fix # <number> , update time tests to use bitmask check macros <section> ubuntu ci cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu ci <allcaps> rtems ci </allcaps> ( cfs bundle ) <section> part of <url> <section> none <section> <user> <user> <user> <user> <user> - hbr <user>"
"fix # <number> , improve fs coverage <section> fix # <number> - fs coverage now at <percent> line and <percent> branch ( all but <number> branches ) <section> build unit tests , run , report coverage <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches : - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs cfe_fs_parseinputfilenameex missing branch coverage ( defensive condition check ) <section> non - independent conditions checked in cfe_fs_parseinputfilenameex : <url> since when processing <code> ( the case before <code> ) the inputptr is set to <allcaps> null </allcaps> : <url> <section> trade the usefulness of testing for an unreachable condition . it ' s "" defensive "" but only reachable by changing the implementation , although it can not cause harm . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs missing branch coverage of run - time endian logic ( and sometimes line ) <section> fs suffers from the unfortunate pattern of run time checks for endian ( and associated logic ) , which leads to uncovered branches and possibly uncovered code ( depending on endian of platform ) . example : <url> <section> complete coverage is possible if run on each system , but should be resolved in the future . possibly in concert with # <number> and related abstraction such that this code does not care ( whatever underlying <allcaps> api </allcaps> / implementation that handles raw data should do the appropriate conversion ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve <allcaps> evs </allcaps> code coverage <section> fix # <number> , now getting <percent> line and branch coverage on <allcaps> evs </allcaps> <section> build unit tests , run , report coverage , confirm <percent> on <allcaps> evs </allcaps> <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs code coverage improvements <section> fs still has a few lines of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> code coverage improvements <section> <allcaps> evs </allcaps> still has a few lines of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es code coverage improvements <section> es still has a fair amount of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> already documented coverage issues ( ok as - is ) : - # <number> - # <number> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add call to cfe_es_exitchildtask <section> invoke cfe_es_exitchildtask from the main test task , to confirm that the task does not actually exit . there is no status code but the fact that the test keeps running is evidence that the task did not exit ( which means the test passed ) . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional test <section> adds test case for cfe_es_exitchildtask being called from main task ( no actual effect , request is rejected , task does not exit ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> , # <number> , # <number> , sb test improvements <section> a set of additional test cases to improve requirements coverage of the sb functional test . fixes # <number> - adds unsubscribe of single pipe id , confirms other subscriptions not changed fixes # <number> - confirms that msglimit and pipedepth are both honored and that delivery to other ( open ) pipes is not affected when some pipes have reached delivery limits fixes # <number> - adds use of cfe_sb_pend_forever in some cases fixes # <number> - adds a sequence number validation to the zero copy test . <section> build and sanity check <allcaps> cfe </allcaps> , run all functional tests <section> functional test covers requirements as indicated in linked issues <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , return type conversions in cfe_es_gettaskname <section> provide better status code conversion from os_getresourcename fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> better status returns from cfe_es_gettaskname <allcaps> api </allcaps> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> tbl api </allcaps> test cases <section> adds <allcaps> tbl </allcaps> functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> fs api </allcaps> test cases <section> adds fs functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requiresa failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> sb api </allcaps> test cases <section> adds sb functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> es api </allcaps> test cases adds es functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> cfe_tbl_modified : test <allcaps> crc </allcaps> , updated flag <section> fixes # <number> add verification that <code> successfully calculates and sets the table <allcaps> crc </allcaps> and sets the updated flag if the table has been modified . <section> steps taken to test the contribution : <code> - verify github workflows pass <section> none . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"cmake : fix support for non - standard psp source directory <section> this pr fixes a bug which prevents non - standard psp source directory specification via the environment variable <code> or the cmake variable <code> . the cfe cmake build infrastructure uses the environment / cmake variable <code> as well as the cmake meta - variable pattern <code> to locate apps and other modules ( such as psp ) , and subsequently sets the variable pattern <code> ( see mission_build . cmake lines <number> - <number> <url> . however , the resulting variable <code> is not used in <code> in arch_build . cmake line <number> <url> when including a target platform ' s <code> file . this causes a cmake configuration failure when trying to use a non - standard psp location . <section> build with psp in non - standard location , with the <code> environment variable set : <code> before this pr : <code> after this pr : <code> <section> this should only affect projects which use the environment variable <code> or the cmake variable <code> . currently , they are being ignored for <code> ' s <code> path resolution , which means some users may be building with different target build options than they think they are based on the intended behavior . <section> - hardware : pc - os : ubuntu <number> - versions : cfe <code> <section> aside , this is also suggested as a method to specify a non - standard <code> source directory in mission_defaults . cmake line <number> <url> since pr # <number> with the following : <code> however , this will lead to the same cmake configure error as above without this fix . <section> no thirdy party code included in this contribution . <section> jonathan bohren , honeybee robotics"
"fix # <number> , fix # <number> , evs coverage test <section> fixes # <number> adds test for messagesendcounter not incrementing when sending a filtered event . fixes # <number> adds tests for logoverflowcounter incrementing when the log overflows . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add time clock test <section> fixes # <number> adds test to cover clock apis . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused cfe_tbl_err_file_not_found <section> status code no longer produced by current implementation , it returns cfe_tbl_err_access when unable to open a file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , end child task requirement remove error code <section> fixes # <number> - the end child task <allcaps> api </allcaps> is void , so can not return error code - requirement name fix for report application id ( added by name ) <section> ci - doc only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> check error ctr to transmitmsg test <section> fixes # <number> verify error counter increments when using transmitmsg for a message that is too big . <section> steps taken to test the contribution : <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> none . <section> - os : ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , correct syslog message in pool create <section> corrects a simple search and replace error fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused cfe_tbl_err_bad_app_id <section> status code no longer produced by current implementation , it passes through the es error which will be cfe_es_err_resourceid_not_valid . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> could also go the other way and make implementation match doc instead ( translate code ) . this changes doc to match what the implementation was doing . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused cfe_es_pool_bounds_error <section> remove stale error code no longer produced by implementation fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , disable unit tests in codeql <section> fix # <number> <section> tested on forked repo : <url> <section> disabled unit tests for both codeql workflows . alerts should only be shown for flight code . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , enable strict resource id w / omit_deprecated <section> when the user specifies the omit_deprecated build option , also enable the strictly - typed resource ids to catch common coding errors . fixes # <number> <section> build and run all tests in both omit_deprecated mode and without omit_deprecated <section> strict types will be automatically enabled with omit_deprecated mode <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"disable unit tests in codeql <section> do not analyze unit and functional test code for codeql . <section> disable unit tests in the workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> hotfix ic </allcaps> - <number> , type correction <allcaps> tbl </allcaps> coverage test <section> update the assignment to cdshandle to be of the correct value type ( hotfix for current integration - candidate ) <section> build and run all tests with type - safe mode enabled <section> builds successfully <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , hotfix for strict resource ids . <section> fixes # <number> fixes strict resource id check . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> hotfix for issue from # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
<allcaps> time </allcaps> functional - add test of cfe_time_getclockstate and cfe_time_getclockinfo <section> missing functional test for <code> and <code> <section> add <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add null check for cfe_resourceid_findnext <section> fixes # <number> adds null check to cfe_resourceid_findnext <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> if this gets into master before <url> then a functional test will need to be added there . otherwise it should be added here . <section> alex campbell <allcaps> gsfc </allcaps>"
"<allcaps> time </allcaps> missing coverage in cfe_time_api . c when default cfe_mission_time_epoch_second is <number> <user> and <user> reformat into standard template > in cfe_time_api . c , can not test the following lines when default cfe_mission_time_epoch_second is <number> . > > <code> reached <percent> in all but cfe_time_api . c <code> _originally posted by <user> in <url>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> add software bus tests - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , separate variable for <allcaps> osal </allcaps> status pr # <number> - fix # <number> , increase sb pool max size bucket pr # <number> - fix # <number> , add null check for cfe_resourceid_findnext pr # <number> - fix # <number> , hotfix for strict resource ids . pr # <number> improve tbl coverage tests - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> pr # <number> - fix # <number> , add missing cases for msg id func tests pr # <number> - fix # <number> , consolidate msg get / set doxygen group pr # <number> - fix # <number> , adding coverage tests to cfe <allcaps> time </allcaps> pr # <number> - fix # <number> , enable strict resource id w / omit_deprecated pr # <number> - <allcaps> hotfix ic </allcaps> - <number> , type correction <allcaps> tbl </allcaps> coverage test pr # <number> - fix # <number> , consolidate msg get / set doxygen group pr # <number> - fix # <number> , add test for es backgroundwakeup pr # <number> - fix # <number> , success test for cfe_es_restartapp pr # <number> - fix # <number> , subscribe to message limit greater than cfe_platform_sb_default_msg_limit pr # <number> - fix # <number> , success test for cfe_es_getmempoolstats pr # <number> - fix # <number> , group <allcaps> msg </allcaps> apis documentation by header type pr # <number> - fix # <number> , add retroactive <allcaps> cfe </allcaps> status asserts pr # <number> - fix # <number> , remove unused cfe_tbl_err_bad_app_id pr # <number> - fix # <number> , correct syslog message in pool create pr # <number> - fix # <number> , remove unused cfe_es_pool_bounds_error pr # <number> - fix # <number> , remove unused cfe_tbl_err_file_not_found - fix # <number> , remove comment referencing cfe_tbl_err_file_not_found pr # <number> - fix # <number> check error ctr to transmitmsg test pr # <number> - fix # <number> , end child task requirement remove error code pr # <number> - fix # <number> , add functional tests for resource misc <section> cfe ci < <url> cfs bundle ci < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user> <user> <user> <user> <user> <user>"
"<allcaps> tbl </allcaps> missing coverage in cfe_tbl_api . c function cfe_tbl_update <section> <code> function contains two hard to reach lines ( <number> - <number> ) that remains untested , preventing us from reaching <percent> line coverage . it ' s actually just one uncovered line , but lcov thinks it ' s two . <code> <section> these lines should be safe to leave uncovered because they do not contain any potential to access a <allcaps> null </allcaps> pointer or anything else similarly dangerous . <section> line <number> is currently impossible to reach because <code> does not throw any error status codes ( < <number> ) , so the only way to trigger the if statement on line <number> is from <code> on line <number> which would always mean <code> is <allcaps> null </allcaps> . thus the if statement on line <number> can never be true , leaving line <number> uncovered . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"<allcaps> tbl </allcaps> missing coverage in cfe_tbl_api . c function cfe_tbl_register <section> <code> function contains two hard to reach lines ( <number> - <number> ) that remain untested , preventing us from reaching <percent> line coverage . <code> <section> these lines should be safe to leave uncovered because they do not contain any potential to access a <allcaps> null </allcaps> pointer or anything else similarly dangerous . <section> lines <number> and <number> are currently impossible to cover as noted in the code comment because line <number> calls <code> with true for the third argument which skips over anything that could return a non cfe_success code . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
fix # <number> adding coverage tests to cfe <allcaps> time </allcaps> <section> fix # <number> completing coverage for cfe <allcaps> time </allcaps> . completed coverage on all lines except two . see issue for details : <url> missing cov <section> steps taken to test the contribution : <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> tests should continue to pass . <percent> coverage on all <section> - os : ubuntu <number> vm - github workflow <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"<allcaps> tbl </allcaps> coverage - add check for <allcaps> crc </allcaps> update and confirm notification of other apps for cfe_tbl_modified <section> cfe_tbl_modified coverage check ( in test_cfe_tbl_tblmod ) missing confirmation <allcaps> crc </allcaps> was updated and apps that have shared the table get notified by return code from cfe_tbl_getaddress ( requirements ) <allcaps> tbl </allcaps> : modified , ctbl6315 , "" upon receipt of a request , the cfe shall perform the following actions on a table : - update critical table data in <allcaps> cds </allcaps> ( this is already checked ) - update the time of last modification ( this is already checked ) - update the <allcaps> crc </allcaps> ( <section> ) - update the last loaded filename with modified indicator ( this is already checked ) - flag the update notification for other applications "" ( <section> ) <section> add confirmation . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add missing cases for msg id func tests <section> fixes # <number> adds the missing cases and cleans up some minor style inconsistencies . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"sb functional test - add zero copy verification of sequence count increment and non - increment <section> missing verification of sequence count behavior for zero copy ( requirement ) <section> add a "" pass "" ( no increment ) and confirm both behave as required <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb functional test - exercise cfe_sb_receivebuffer cfe_sb_pend_forever and cfe_sb_poll options <section> sb functional test only calls cfe_sb_receivebuffer with a timeout of <number> , requirements include poll and pend forever . <section> exercise cfe_sb_poll and cfe_sb_pend_forever options . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
improve tbl coverage tests <section> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> <section> <number> . build and run cfe coverage tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern
sb coverage test - need to verify msgsenderrorcounter increments when msg too big <section> missing verification of msgsenderrorcounter increment on message too big ( requirement ) <section> add verification <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
sb functional test - limit exceeded still sends to other pipes <section> missing functional checks that a limit reached on one pipe will still send to the others ( requirement ) . <section> add a check that a message limit reached on one pipe will still transmit to another add a check that a pipe full reached on one pipe will still transmit to another <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"sb functional test - add verification that unsubscribe actually unsubcribes <section> although there are nominal calls in sb_subscription_test . c and messages are sent / received ( after a subscription ) in sb_sendrecv_test . c , there ' s no functional check that after unsubscribing from a message it is no longer received . unsubscribe also is not used by the services ( although it is used by <allcaps> gsfc </allcaps> apps ) . <section> add at minimum a verification of the unsubscribe . would be nice to also add just a simple send / receive for each subscribe type in sb_subscription_test . c since only cfe_sb_subscribeex is utilized in the sendrecv test ( and it ' s helpful have the test self contained ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"clean up message id functional test <section> <url> was merged in but there are a few style changes that need to be fixed and some edge cases that are not being tested . <section> clean up the code , and add the remaining edge cases . <section> <url> <section> alex campbell <allcaps> gsfc </allcaps>"
"fs functional test - add calls to get default mount point and extension for each file type <section> functional test just calls with <allcaps> unknown </allcaps> , should exercise each type ( although response verification is not necessary since it ' s implementation defined and "" helper "" functions are really best effort ) . <url> <section> exercise each defined file type <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage - add verification of log overflow counter increment <section> the following requirement is not verified in coverage ( or functional ) test : cevs3108 . <number> : if the local event log is full , the cfe shall increment the local event log overflow counter . <section> add verification of <code> behavior in <code> unit test function . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage - filter behavior failures do not get logged correctly , missing verification of latch requirement <section> filter verification is done by sending an event message that says "" <allcaps> failed </allcaps> "" , even though the actual assert will <allcaps> pass </allcaps> . this does not get counted in test reporting as an actual failure . <url> <section> assert on the message counters not incrementing ( messagesendcounter and / or eventcount ) and cfe_sb_transmitmsg stub count does not increment , the as well as the filter counter ( should latch at max per requirement ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> functional test - send each event type including invalid <section> <allcaps> evs </allcaps> functional test currently only sends <allcaps> informational </allcaps> events . example : <url> <section> add a send of each message type for each <allcaps> api </allcaps> , including invalid . note they all return success . <section> none , note the message type handling is exercised in coverage tests so this is an improvement . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add retroactive <allcaps> cfe </allcaps> status asserts <section> add a set of macros that decouple the function call from the expected status : - <code> - <code> - <code> the first will make the function call and put the status into a temporary holding area , but will not assert on any particular result . the others will check the value of the holding area . fixes # <number> <section> build and run all tests also add new test cases that need this paradigm and confirm macros working as expected ( will be in other prs ) . <section> none , new test macros only , not used yet . <section> ubuntu <section> these macros should be used whenever a specific status is not predictable before the call , but other checks after the call can determine if the result was ok or not . a typical use case for a function that might return any of <number> status values ( e . g . status1 , status2 , status3 ) would be something like : <code> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , subscribe to message limit greater than cfe_platform_sb_default_msg_limit <section> fixes # <number> <section> github actions workflows <section> subscribe locally to a message with limit greater than cfe_platform_sb_default_msg_limit <section> cfe_platform_sb_default_msg_limit is equal to <number> . used uint16_max . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , success test for cfe_es_restartapp <section> fixes # <number> <section> used github actions workflow . <section> there is a success test for cfe_es_restartapp in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , success test for cfe_es_getmempoolstats <section> fixes # <number> <section> tested through github actions workflows . <section> there is a success test for cfe_es_getmempoolstats in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
add functional tests for cfe message extended header apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message extended header apis cfe_msg_getedsversion - gets the message <allcaps> eds </allcaps> version . cfe_msg_setedsversion - sets the message <allcaps> eds </allcaps> version . cfe_msg_getendian - gets the message endian . cfe_msg_setendian - sets the message endian . cfe_msg_getplaybackflag - gets the message playback flag . cfe_msg_setplaybackflag - sets the message playback flag . cfe_msg_getsubsystem - gets the message subsystem . cfe_msg_setsubsystem - sets the message subsystem . cfe_msg_getsystem - gets the message system . cfe_msg_setsystem - sets the message system . <section> n / a <section> these test are being split off from # <number> <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , increase sb pool max size bucket <section> in the default config , the maximum bucket size for the sb pool was not quite big enough to allocate a message of <code> . this increases the margin so this can be allocated again . fixes # <number> <section> build and run all tests <section> a call to <code> now succeeds and returns non - null . <section> ubuntu <section> on my system the <code> is <number> , hence why <number> was not enough . using <number> just adds an extra margin for padding and platform differences , etc . users can still reduce this in their tuning if they are using every possible byte . note we cannot use <code> directly here because its a private structure . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate <number> - <number> - <number> <section> pr # <number> - fix # <number> , add <allcaps> cfe </allcaps> assert macros to functional test pr # <number> adds invalid id syslog to for cfe_es_deleteapp and cfe_es_reloadapp and verifies required reporting - fix # <number> - fix # <number> pr # <number> stop memory leak & add cds size test . - fix # <number> - fix # <number> pr # <number> - fix # <number> , mark read only inputs as const pr # <number> - fix # <number> , check resource id idx is less than max pr # <number> - fix # <number> , update cfe_es_runloop documentation pr # <number> - fix # <number> , add message api functional test pr # <number> - partial # <number> , update in / out status and nonnull / nonzero tags pr # <number> - fix # <number> , add external time source functional tests pr # <number> - fix # <number> , add perf <allcaps> api </allcaps> functional tests pr # <number> - fix # <number> , add es application behavior functional tests <section> ubuntu ci <section> see pr <section> ubuntu <number> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user> <user> <user>"
"fix # <number> , add test for es backgroundwakeup <section> fixes # <number> - adds missing test for cfe_es_backgroundwakeup <section> build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
add es test for cfe_es_backgroundwakeup <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> - add call for background wakeup _originally posted by <user> in <url> <user> or <user> can you flesh this out ?
"fix # <number> , check resource id idx is less than max <section> fixes # <number> <section> steps taken to test the contribution : <number> . build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> # <number> # <number> , add software bus tests <section> adds functional testing for <allcaps> cfe sb </allcaps> apis : subscription , message passing , zero copy . fixes # <number> fixes # <number> fixes # <number> <section> build and run all tests , confirm log outputs as expected <section> additional apis are functional tested <section> ubuntu <section> currently requires pr # <number> as dependency ( will rebase once finalized ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> add perf <allcaps> api </allcaps> functional tests <section> fixes # <number> add perf <allcaps> api </allcaps> functional tests and add perf trigger and perf start commands to functional test workflow . functional test will now send a command to set a perf trigger , send command to start capturing perf data and finally send command to start running the functional tests . <section> steps taken to test the contribution : <number> . build with tests enabled <number> . run cfs <number> . send commands to set perf trigger , and start perf data <number> . send command to run functional tests <number> . verify tests pass <number> . push code to github and verify workflow works <section> new tests added to functional tests . workflow now sends two more commands to cfs . <section> - os : ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"partial # <number> , update in / out status and nonnull / nonzero tags <section> first pass at <allcaps> api </allcaps> doxygen scrub , this updates the in / out markings on parameters where they were not correct , and adds nonnull and nonzero tags where appropriate . related to # <number> ( but should not close yet ) <section> build and run all tests <section> none ( documentation only ) <section> ubuntu <section> note this is "" partial "" as it does not yet do all the test case verification , those will come later . but the <allcaps> api </allcaps> documentation needs to have these tags correct so the validation scripts know what to look for . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace <allcaps> voidcall </allcaps> assert macro <section> use the generic utassert_voidcall macro now provided from utassert , rather than a local macro in cfe_testcase app . fixes # <number> <section> build and run all tests <section> none ( macros are equivalent ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"test boundaries for numtables in cfe_tbl_getaddresses <section> from # <number> . <section> should test on boundary conditions for numtables . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"subscribe to message limit greater than cfe_platform_sb_default_msg_limit <section> from # <number> . <section> consider subscribing to message with limit greater than cfe_platform_sb_default_msg_limit <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_validate <section> from # <number> . no success test for cfe_tbl_validate . <section> add a success test for cfe_tbl_validate in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_update <section> from # <number> . no success test for cfe_tbl_update . <section> add a success test for cfe_tbl_update in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test and boundaries for cfe_tbl_releaseaddresses <section> from # <number> . no success test for cfe_tbl_releaseaddresses . no test on boundary conditions for numtables . <section> add a success test for cfe_tbl_releaseaddresses in cfe / modules / tbl / ut - coverage / tbl_ut . c . test boundary conditions for numtables . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add <allcaps> cfe </allcaps> assert macros to functional test <section> adds the following macros to <allcaps> cfe </allcaps> assert library in cfe_assert . h : - cfe_utassert_status_ok - cfe_utassert_status_error - cfe_utassert_resourceid_eq - cfe_utassert_resourceid_undefined - cfe_utassert_memoffset_eq - cfe_utassert_msgid_eq fixes # <number> <section> build and run all tests ( including with some new test cases that use the new macros ) and confirm all is working as expected . <section> none right now , these are new macros that test cases are not using yet . <section> ubuntu <section> provides improved feature parity with coverage test environment , gives a common macro to use for common tests / asserts , and more consistent naming convention . <section> joseph hickey , vantage systems , inc"
"no success test for cfe_tbl_getstatus <section> from # <number> . no success test for cfe_tbl_getstatus . <section> add a success test for cfe_tbl_getstatus in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_dumptobuffer <section> from # <number> . no success test for cfe_tbl_dumptobuffer . <section> add a success test for cfe_tbl_dumptobuffer in cfe / modules / tbl / ut - coverage / tbl_ut . c <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_es_getmempoolstats <section> from # <number> . no success test for cfe_es_getmempoolstats . <section> add a success test for cfe_es_getmempoolstats in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_es_restartapp <section> from # <number> . no success test for cfe_es_restartapp . <section> add a success test for cfe_es_restartapp in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fixes # <number> , # <number> , stop memory leak & add cds size test . <section> fixes # <number> delete memory pools to prevent memory leak . fixes # <number> add test for registering <allcaps> cds </allcaps> with same name and different size . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add external time source functional tests <section> fixes # <number> add external time source functional tests <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add functional tests for resource misc <section> - fixes # <number> - adds functional tests for - cfe_resourceid_tointeger - cfe_resourceid_frominteger - cfe_resourceid_equal - cfe_resourceid_isdefined - cfe_resourceid_getbase - cfe_resourceid_getserial - cfe_resourceid_findnext - cfe_resourceid_toindex <section> <number> . build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , <allcaps> rtems </allcaps> cfe_ft_global build failure <section> - fix # <number> <section> cfe ci and bundle ci see succesful bundle tests at <url> <section> no behavior change , fixes build failure on <allcaps> rtems </allcaps> <number> and <number> <section> github actions ci <section> fixed as part of ic : <number> - <number> - <number> <section> none <section> <user> <user>"
"fix # <number> , # <number> - adds invalid id syslog to for cfe_es_deleteapp and cfe_es_reloadapp and verifies required reporting <section> fix # <number> fix # <number> <section> build and run unit tests , passed <section> will now report invalid ids to the syslog for cfe_es_deleteapp and cfe_es_reloadapp <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + these commits <section> related to requirements verification <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add es application behavior functional tests <section> fixes # <number> add es application behavior functional tests <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> cfe_es_exitapp was not directly tested . <url> will be needed to test that . <section> alex campbell <allcaps> gsfc </allcaps>"
"adding test to cfe_testcase app demonstrating non - detection of pipe destruction by cfe_sb_receivebuffer <section> a clear and concise description of what the contribution is . - this adds a test to the <code> app demonstrating a potential bug in <code> - when <code> is called with <code> , and its pipe is destroyed , it does not return with an error code . ( it is unclear at this time whether it blocks indefinitely or returns with <code> ) . - if this test case asserts the correct behavior , it indicates a change may be necessary in <code> <section> steps taken to test the contribution : <number> . create template mission from <code> <number> . add <code> to <code> in <code> : <code> <number> . add <code> to <code> : <code> <number> . run <code> out of standard build directory <section> - the test case does the following : - creates a pipe - transmits one message , which should be received by that pipe - creates a child task with a loop servicing that pipe - waits one second - destroys the pipe - waits one second - checks to see that the child task has exited - checks to see if cfe_sb_receivebuffer ( ) has returned an error code - output from the failing check : <code> this indicates that <number> seconds after deleting an sb pipe , a call to <code> has not exited with a failure condition . <section> - hardware : pc - os : ubuntu <number> - versions : - cfe <code> - <allcaps> osal </allcaps> <code> - <allcaps> psp </allcaps> <code> <section> we have been working with an internal fork of <allcaps> sbn </allcaps> running with cfe ( version <code> ) and encountered a race condition where a blocking call to <code> is not failing if its sb pipe is destroyed while waiting . this is modeled after the implementation in <allcaps> sbn </allcaps> [ ref ] <url> . cc <user> <section> no third - party code is included . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - jonathan bohren , honeybee robotics"
"resource leak in mempool tests <section> the <code> function creates <number> memory pools in total - whenever cfe_success is returned , this means a pool was instantiated . see here : <url> <url> <url> however , only the last pool id is deleted here : <url> the other two pools are left hanging , and are automatically cleaned up by <allcaps> cfe es </allcaps> at the time the app exits itself , as designed . however , in the case of the pool with an embedded mutex ( the one created at line <number> ) the mutex will be deleted by both <allcaps> cfe es </allcaps> resource cleanup and task cleanup , due to the fact that the mutex was created by the task . note that the id validation works , and the mutex is only deleted once - task cleanup gets to it first , and when pool cleanup tries to delete it again , the id is reported as stale and nothing is deleted , but it does issue a warning about it right here : <url> <section> execute <allcaps> cfe </allcaps> functional tests , observe an unexpected warning in the syslog when the test completes : <code> <section> test should delete all the pools it creates , and this clean up warning should not happen <section> ubuntu <section> in a way , this could be considered a happy accident , as it verifies that stale id rejection is occurring , and everything is working as designed . as a result , there is no real harm done by this double delete , aside from the extra warning . <section> joseph hickey , vantage systems , inc ."
replace cfe_ftassert_voidcall with new utassert_voidcall <section> the cfe functional test use a macro called <code> . that macro should be deleted and all existing references to it replaced with <code> . <section> replace old macro . <section> leave as is . <section> see <url>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , move global count into test global struct . pr # <number> - fix # <number> , add es application control <allcaps> api </allcaps> functional tests - fix # <number> , add null pointer check to cfe_es_reloadapp functional test pr # <number> - fix # <number> , add generic counter <allcaps> api </allcaps> test pr # <number> - fix # <number> , update coverage test to use utassert macros pr # <number> - fix # <number> - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , add resource <allcaps> id api </allcaps> functional tests pr # <number> - fix # <number> , last char truncated in coverage log output pr # <number> - fix # <number> , mistakes in some copyright headers pr # <number> - fix # <number> , add misc time api functional test pr # <number> - fix # <number> , add functional test for <allcaps> evs </allcaps> reset filters <allcaps> api </allcaps> . pr # <number> - fix # <number> , replace <allcaps> voidcall </allcaps> assert macro pr # <number> - fix # <number> , <allcaps> rtems </allcaps> cfe_ft_global build failure <section> cfe checks < <url> cfs checks < <url> <section> see included prs <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
need to functionally test create data store with size change requirement <section> requirement related to creating critical data store with new size which should be functionally exercised : <url> <section> functionally exercise the changed size case > <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add misc time api functional test <section> fixes # <number> <section> steps taken to test the contribution : <number> . build and run cfe functional tests <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , finish es misc <allcaps> api </allcaps> functional test <section> fixes # <number> <section> <number> . build and run cfe functional tests <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , mark read only inputs as const <section> the following functions have read - only inputs which are passed by pointer , so it should be "" const "" qualified : cfe_es_copytocds cfe_sb_transmitmsg cfe_sb_transmitmsgvalidate fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , input was already read only , this just corrects the prototype to reflect that . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , last char truncated in coverage log output <section> the "" messagecheck_impl "" routine used for printf / syslog checks was incorrectly truncating the last character of the log message . fixes # <number> <section> run all coverage tests , confirm print logs now contain the full string . <section> last char is no longer truncated in log <section> ubuntu <section> joseph hickey , vantage systems , inc ."
write resource id functional test to check maximum <section> need open source functional tests for certifiability <section> add additional checks to functional tests for es resource id to index that ensure the returned index is less than the maximum allowed for that resource type <section> none <section> _originally posted by <user> in <url>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> fix # <number> , add null pointer check to table getaddresses and releaseaddresses pr # <number> fix # <number> , explain fs header offset & add offset functional tests . pr # <number> fix # <number> , handle fail status in gettypefrommsgid pr # <number> fix # <number> , add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> pr # <number> fix # <number> , remove sb get last message sender info requirement pr # <number> fix # <number> update uts to use utassert_mir pr # <number> fix # <number> , add functional tests cfe message id pr # <number> fix # <number> , add time conversion functional test pr # <number> fix # <number> , add cast to <allcaps> mir </allcaps> prints [ fasttracked ] <section> cfe checks < <url> - cfe failures due to osal dependency , jobs pass in bundle tests and fork - passing coverage tests <url> - passing functional tests <url> cfs checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user> <user> <user> <user> <user>"
"fix # <number> , handle fail status from internal functions of cfe_msg_gett … <section> fixes # <number> handle fail status from internal functions of cfe_msg_gettypefrommsgid <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , separate variable for <allcaps> osal </allcaps> status <section> ensure a separate stack variable , always named "" osstatus "" , is used to hold the result of an <allcaps> osal api </allcaps> call . do not use the same variable that is used to store a <allcaps> cfe </allcaps> status code . this also fixes a few return code translations , where some functions were returning the <allcaps> osal </allcaps> status code ( perhaps unintentionally ) because it was stored in the same variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> nothing significant , however some apis which returned an <allcaps> osal </allcaps> status will now translate to <allcaps> cfe </allcaps> status . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"throw error for c + + comments in format check <section> the format check workflow does not throw an error for c + + comments which are not allowed . image <img> <section> throw an error for c + + comments to enforce /* <allcaps> x <elongated> </allcaps> */ or multi - line c comments in the format check workflow . <section> n / a <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add generic counter <allcaps> api </allcaps> test <section> add tests for the following apis : - cfe_es_registergencounter - cfe_es_counterid_toindex - cfe_es_getgencounteridbyname - cfe_es_getgencountername - cfe_es_getgencount - cfe_es_setgencount - cfe_es_incrementgencounter - cfe_es_deletegencounter fixes # <number> <section> build and run all functional tests , confirm passing <section> additional apis are tested <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add null pointer check to table getaddresses and releaseaddresses <section> - fixes # <number> - adds null check on tblhandles pointer in cfe_tbl_getaddresses and cfe_tbl_releaseaddresses <section> <number> . build and run <allcaps> cfe </allcaps> functional tests from # <number> <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add functional test for <allcaps> evs </allcaps> reset filters <allcaps> api </allcaps> . <section> fixes # <number> add functional test for <allcaps> evs </allcaps> reset filters apis . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> <section> fixes # <number> add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , validate <allcaps> evs </allcaps> register inputs first . <section> fixes # <number> move the validation of inputs to be the first thing for cfe_evs_register <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add message <allcaps> api </allcaps> functional test <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , update coverage test to use utassert macros <section> a number of <allcaps> cfe </allcaps> coverage - specific macros and generic assert functions were moved into <allcaps> osal </allcaps> utassert library so it can be used in a wider variety of tests . this removes the <allcaps> cfe </allcaps> coverage - specific version , and changes allreferences to use the equivalent utassert macro . fixes # <number> <section> build and run all tests <section> none - utassert - provided macros should be equivalent in function <section> ubuntu <section> requires nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove sb get last message sender info requirement <section> fix # <number> , just removes requirement we no longer support ( sb get last message sender ) <section> none , requirements / docs update only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add message <allcaps> api </allcaps> functional test <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , add cast to <allcaps> mir </allcaps> prints <section> fixes # <number> added cast to <allcaps> mir </allcaps> prints in time_ut . c so that the <allcaps> rtems </allcaps> build does not break . <section> steps taken to test the contribution : <number> . build and run time ut tests : <code> <code> <number> . build and run cfs tests : <code> <code> <section> <allcaps> rtems </allcaps> workflow should build and run successfully . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , move global count into test global struct . <section> fixes # <number> move global count into the test global struct <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> add functional tests for cfe message id apis <section> fixes # <number> add functional tests for cfe message id apis cfe_msg_getmsgid - gets the message id from a message . cfe_msg_setmsgid - sets the message id bits in a message . cfe_msg_gettypefrommsgid - gets message type using message id . <section> tested in functional tests and format check workflows on fork . <section> tests functionality for cfe message id apis <section> ariel adams , <allcaps> asrc </allcaps> federal"
"add additional checks to cfe get table information <allcaps> api </allcaps> functional tests <section> need open source functional tests for certifiability <section> add additional checks to functional tests for cfe get table information apis . # <number> adds basic functionality checks and error condition checking , but does not check everything . the following list contains things that are not currently tested , but probably should be <code> : * test that pending update , validation statuses are returned at the correct time <code> : * test numusers increments after the table is shared * test crc is valid * test lastfileloaded is correct after loading a file * test tableloadedonce updates after loading data * test filecreatedtime makes sense * test timeoflastupdate is correct <code> : * test messages are actually sent with correct message id , cc , parameter <section> n / a <section> add any other context about the feature request here . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
add table api functional tests <section> a clear and concise description of what the contribution is . - fixes - fix # <number> - fix # <number> - fix # <number> - fix # <number> - adds functional unit tests for - cfe_tbl_register - cfe_tbl_share - cfe_tbl_unregister - cfe_tbl_getstatus - cfe_tbl_getinfo - cfe_tbl_notifybymessage - cfe_tbl_load - cfe_tbl_update - cfe_tbl_validate - cfe_tbl_manage - cfe_tbl_dumptobuffer - cfe_tbl_modified - cfe_tbl_getaddress - cfe_tbl_getaddresses - cfe_tbl_releaseaddress - cfe_tbl_releaseaddresses <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern
fix # <number> update time_ut . c to use utassert_mir <section> fixes # <number> updated time_ut . c to start using the new utassert_mir to avoid incorrect use of utassertex . this update requires <url> to be merged first . cfs will fail to compile otherwise . <section> steps taken to test the contribution : <number> . pulled <allcaps> osal </allcaps> repo with the utassert_mir changes <number> . rebuild cfs <number> . run unit tests . <repeated> all passed . <number> . set a custom epoch time <number> . rebuild and run unit tests . <repeated> all passed . <number> . manually run . / coverage - time - <allcaps> all </allcaps> - testrunner and verify expected output : <code> <number> . manually run functional tests and verify expected output : <code> <section> no expected changes in behavior . <section> ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , explain fs header offset & add offset functional tests . <section> fixes # <number> add explanation of offset to the header file . add functions test for the offset . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add table registration functional tests <section> a clear and concise description of what the contribution is . - fixes # <number> - adds functional unit tests for - cfe_tbl_register - cfe_tbl_share - cfe_tbl_unregister <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"update time_ut . c : test_print to use the utassert_mir macro <section> utassertex use is not great ( leads to nonstandard output ) : <url> <section> once nasa / osal # <number> is implemented , update the <allcaps> mir </allcaps> tests in test_print . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add application control functional tests <section> a clear and concise description of what the contribution is . - fixes # <number> - fixes # <number> - adds functional tests for - cfe_es_restartapp - cfe_es_reloadapp - cfe_es_deleteapp <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern <allcaps> edit </allcaps> - <user> added # <number> link ."
"fix # <number> , add null check to cfe_es_taskid_toindex . <section> fixes # <number> add null check to cfe_es_taskid_toindex . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> # <number> # <number> # <number> , requirements update for caelum <section> fix # <number> - re - add cfe_sb_deletepipe fix # <number> - remove application / child es registration fix # <number> - remove message initialization clear / no - clear option fix # <number> - add new <allcaps> api </allcaps> requirements to match development changes fix # <number> - remove get message checksum <section> none , docs / requirements updates only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , scrub command documentation <section> update documentation for all command codes in <allcaps> cfe </allcaps> core apps , in particular the error conditions , to confirm it matches the actual implementation . for common operations that apply to all commands <elongated> ( length verification ) this is now put into the users guide as a general statement rather than repeating the info in every command . fixes # <number> fixes # <number> <section> build documentation and confirm output <section> none ( docs only ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add resource <allcaps> id api </allcaps> functional tests <section> - fixes # <number> - adds functional tests for each of the following functions - cfe_es_appid_toindex - cfe_es_libid_toindex - cfe_es_taskid_toindex - cfe_es_counterid_toindex <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add time arithmetic functional tests <section> a clear and concise description of what the contribution is . * fixes # <number> * adds functional tests for * cfe_time_add * cfe_time_subtract * cfe_time_compare <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add custom epoch support to <allcaps> time ut </allcaps> <section> fixes # <number> - <code> is only function that uses the epoch defines . avoid use of <code> to test other time functions and specifically check for the expected seconds and subseconds . - print that manual inspection required ( <allcaps> mir </allcaps> ) is required when testing <code> with a custom epoch . <section> - manually ran unit tests for <allcaps> time </allcaps> : $ make - c build / native / default_cpu1 / time test - verified coverage on files with $ gcov cfe_time_api . c . gcno and $ gcov cfe_time_api . c . gcno - verified correct output when using default epoch time : <code> - verified correct output when using custom epoch time : <code> <section> time unit tests will now pass , even when project is using a custom epoch time . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , tests for time conversion api <section> - fixes # <number> ( new unit - tests for the time conversion <allcaps> api </allcaps> like described in this issue ) <section> - no impact on behavior <section> hi , i am new to this repository and tried my hand at a "" good first issue "" . i would be very grateful if someone who knows about this repo can have a quick look and tell me if my first commit for this issue works like this . that ' s why the unit test is commented so much . thanks already <happy> <section> paul oberosler , individual"
"fix # <number> , correct return code mismatches <section> make sure functions documented as <allcaps> cfe </allcaps> status check for cfe_success , and functions documented as <allcaps> osal </allcaps> status check for os_success . fixes # <number> <section> build <allcaps> cfe </allcaps> , and run all tests <section> none <section> ubuntu <section> in practice all these symbols had value of <number> , so this is no change , but its just using the correct success symbol per documented function return . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update docs for cfe_fs_backgroundfiledumprequest <section> update notes to better clarify that the meta object must persist for the duration of the dump operation , which occurs in another task , so it must not be on the stack . fixes # <number> <section> build and run all tests <section> none - documentation only <section> ubuntu <section> noted in pr # <number> which allocated meta object on stack during test ( producing weird / unpredictable errors ) <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # # testing cfe checks < <url> cfs checks < <url> # # # authors <user> <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , correct return code check # # # pr # <number> fix # <number> , documentation for fs apis that return <allcaps> osal </allcaps> codes # # # pr # <number> fix # <number> , adding coverage tests for cfe_es_apps . c # # # pr # <number> fix # <number> , add file utility functional tests . # # # pr # <number> fix # <number> , add custom epoch support to <allcaps> time ut </allcaps> # # # pr # <number> fix # <number> - re - add cfe_sb_deletepipe fix # <number> - remove application / child es registration fix # <number> - remove message initialization clear / no - clear option fix # <number> - add new <allcaps> api </allcaps> requirements to match development changes fix # <number> - remove get message checksum # # # pr # <number> fix # <number> , add null check to cfe_es_taskid_toindex . # # # pr # <number> fix # <number> , scrub command documentation # # # pr # <number> fix # <number> , add time arithmetic functional tests # # # pr # <number> fix # <number> , update docs for cfe_fs_backgroundfiledumprequest # # # pr # <number> fix # <number> , correct return code mismatches"
"fix # <number> , documentation for fs apis that return <allcaps> osal </allcaps> codes <section> some <allcaps> fs api </allcaps> calls will pass through failure / status codes directly from <allcaps> osal </allcaps> without remapping to <allcaps> cfe </allcaps> status code values . note this behavior in the documentation and that it will likely change in a future version of <allcaps> cfe </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build docs <section> none ( docs only ) <section> ubuntu <section> this just documents the pass through - behavior should be fixed in # <number> to return a proper <allcaps> cfe </allcaps> status . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct return code check <section> the return code of cfe_es_startapptask is a <allcaps> cfe </allcaps> status code , so it should be compared to cfe_success , not os_success . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> no change to actual behavior here , this is just for type / symbol correctness <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adding coverage tests for cfe_es_apps . c <section> fixes # <number> added tests to complete coverage on the following functions : * cfe_es_runapptablescan * cfe_es_parsefileentry * cfe_es_loadmodule * cfe_es_cleanupapp * cfe_es_cleanupobjectcallback <section> manually ran unit tests for es : $ make - c build / native / default_cpu1 / es test verified coverage on files with <code> and <code> <section> increased coverage percentage to greater than <percent> in cfe_es_apps . c . <section> ubuntu <number> vm <section> there is still <number> untested line in file . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , correct function name in ut_bsp_unlock <section> corrects the log message in ut_bsp_unlock ( in cfe_assert module ) to match the <allcaps> osal </allcaps> function called ( os_mutsemgive ) . fixes # <number> <section> build and run tests <section> none <section> ubuntu <section> just for correctness , this log never happens in normal operation . <section> joseph hickey , vantage systems , inc ."
add functional tests for cfe miscellaneous time apis <section> need open source functional tests for certifiability <section> add functional tests for cfe miscellaneous time apis cfe_time_print - print a time value as a string . cfe_time_local1hzisr - this function is called via a timer callback set up at initialization of the <allcaps> time </allcaps> service . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe external time source apis <section> need open source functional tests for certifiability <section> add functional tests for cfe external time source apis cfe_time_externaltone - provides the <number> hz signal from an external source . cfe_time_externalmet - provides the mission elapsed time from an external source . cfe_time_externalgps - provide the time from an external source that has data common to <allcaps> gps </allcaps> receivers . cfe_time_externaltime - provide the time from an external source that measures time relative to a known epoch . cfe_time_registersynchcallback - registers a callback function that is called whenever time synchronization occurs . cfe_time_unregistersynchcallback - unregisters a callback function that is called whenever time synchronization occurs . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe time conversion apis <section> need open source functional tests for certifiability <section> add functional tests for cfe time conversion apis cfe_time_met2sctime - convert specified <allcaps> met </allcaps> into spacecraft time . cfe_time_sub2microsecs - converts a sub - seconds count to an equivalent number of microseconds . cfe_time_micro2subsecs - converts a number of microseconds to an equivalent sub - seconds count . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe time arithmetic apis <section> need open source functional tests for certifiability <section> add functional tests for cfe time arithmetic apis cfe_time_add - adds two time values . cfe_time_subtract - subtracts two time values . cfe_time_compare - compares two time values . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe get table information apis <section> need open source functional tests for certifiability <section> add functional tests for cfe get table information apis cfe_tbl_getstatus - obtain current status of pending actions for a table . cfe_tbl_getinfo - obtain characteristics / information of / about a specified table . cfe_tbl_notifybymessage - instruct cfe table services to notify application via message when table requires management . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe access table content apis <section> need open source functional tests for certifiability <section> add functional tests for cfe access table content apis cfe_tbl_getaddress - obtain the current address of the contents of the specified table . cfe_tbl_getaddresses - obtain the current addresses of an array of specified tables . cfe_tbl_releaseaddress - release previously obtained pointer to the contents of the specified table . cfe_tbl_releaseaddresses - release the addresses of an array of specified tables . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe manage table content apis <section> need open source functional tests for certifiability <section> add functional tests for cfe manage table content apis cfe_tbl_load - load a specified table with data from specified source . cfe_tbl_update - update contents of a specified table , if an update is pending . cfe_tbl_validate - perform steps to validate the contents of a table image . cfe_tbl_manage - perform standard operations to maintain a table . cfe_tbl_dumptobuffer - copies the contents of a dump only table to a shared buffer . cfe_tbl_modified - notify cfe table services that table contents have been modified by the application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe table registration apis <section> need open source functional tests for certifiability <section> add functional tests for cfe table registration apis cfe_tbl_register - register a table with cfe to obtain table management services . cfe_tbl_share - obtain handle of table registered by another application . cfe_tbl_unregister - unregister a table . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message id apis <section> need open source functional tests for certifiability <section> add functional tests forcfe message id apis cfe_sb_isvalidmsgid - identifies whether a given cfe_sb_msgid_t is valid . cfe_sb_msgid_equal - identifies whether two cfe_sb_msgid_t values are equal . cfe_sb_msgidtovalue - converts a cfe_sb_msgid_t to a normal integer . cfe_sb_valuetomsgid - converts a normal integer into a cfe_sb_msgid_t . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe setting / getting message characteristics apis <section> need open source functional tests for certifiability <section> add functional tests for cfe setting / getting message characteristics apis cfe_sb_setuserdatalength - sets the length of user data in a software bus message . cfe_sb_timestampmsg - sets the time field in a software bus message with the current spacecraft time . cfe_sb_messagestringset - copies a string into a software bus message . cfe_sb_getuserdata - get a pointer to the user data portion of a software bus message . cfe_sb_getuserdatalength - gets the length of user data in a software bus message . cfe_sb_messagestringget - copies a string out of a software bus message . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe zero copy apis <section> need open source functional tests for certifiability <section> add functional tests for cfe zero copy apis cfe_sb_allocatemessagebuffer - get a buffer pointer to use for "" zero copy "" sb sends . cfe_sb_releasemessagebuffer - release an unused "" zero copy "" buffer pointer . cfe_sb_transmitbuffer - transmit a buffer . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe send / receive message apis <section> need open source functional tests for certifiability <section> add functional tests for cfe send / receive message apis cfe_sb_transmitmsg - transmit a message . cfe_sb_receivebuffer - receive a message from a software bus pipe . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message subscription control apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message subscription control apis cfe_sb_subscribe - subscribe to a message on the software bus with default parameters . cfe_sb_subscribeex - subscribe to a message on the software bus . cfe_sb_subscribelocal - subscribe to a message while keeping the request local to a cpu . cfe_sb_unsubscribe - remove a subscription to a message on the software bus . cfe_sb_unsubscribelocal - remove a subscription to a message on the software bus on the current <allcaps> cpu </allcaps> . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe resource misc apis <section> need open source functional tests for certifiability <section> add functional tests for cfe resource misc apis cfe_resourceid_tointeger - convert a resource id to an integer . cfe_resourceid_frominteger - convert an integer to a resource id . cfe_resourceid_equal - compare two resource id values for equality . cfe_resourceid_isdefined - check if a resource id value is defined . cfe_resourceid_getbase - get the base value ( type / category ) from a resource id value . cfe_resourceid_getserial - get the serial number ( sequential id ) from a resource id value . cfe_resourceid_findnext - locate the next resource id which does not map to an in - use table entry . cfe_resourceid_toindex - internal routine to aid in converting an es resource id to an array index . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message id apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message id apis cfe_msg_getmsgid - gets the message id from a message . cfe_msg_setmsgid - sets the message id bits in a message . cfe_msg_gettypefrommsgid - gets message type using message id . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message header apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message header apis cfe_msg_init - initialize a message . cfe_msg_getsize - gets the total size of a message . cfe_msg_setsize - sets the total size of a message . cfe_msg_gettype - gets the message type . cfe_msg_settype - sets the message type . cfe_msg_getheaderversion - gets the message header version . cfe_msg_setheaderversion - sets the message header version . cfe_msg_gethassecondaryheader - gets the message secondary header boolean . cfe_msg_sethassecondaryheader - sets the message secondary header boolean . cfe_msg_getapid - gets the message application id . cfe_msg_setapid - sets the message application id . cfe_msg_getsegmentationflag - gets the message segmentation flag . cfe_msg_setsegmentationflag - sets the message segmentation flag . cfe_msg_getsequencecount - gets the message sequence count . cfe_msg_setsequencecount - sets the message sequence count . cfe_msg_getnextsequencecount - gets the next sequence count value ( rolls over if appropriate ) cfe_msg_getedsversion - gets the message <allcaps> eds </allcaps> version . cfe_msg_setedsversion - sets the message <allcaps> eds </allcaps> version . cfe_msg_getendian - gets the message endian . cfe_msg_setendian - sets the message endian . cfe_msg_getplaybackflag - gets the message playback flag . cfe_msg_setplaybackflag - sets the message playback flag . cfe_msg_getsubsystem - gets the message subsystem . cfe_msg_setsubsystem - sets the message subsystem . cfe_msg_getsystem - gets the message system . cfe_msg_setsystem - sets the message system . cfe_msg_generatechecksum - calculates and sets the checksum of a message . cfe_msg_validatechecksum - validates the checksum of a message . cfe_msg_setfcncode - sets the function code field in a message . cfe_msg_getfcncode - gets the function code field from a message . cfe_msg_getmsgtime - gets the time field from a message . cfe_msg_setmsgtime - sets the time field in a message . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , cfe_sb_msghdrsize returns size_t <section> fixes issue # <number> by changing the return type in cfe_sb_msghdrsize and cfe_sb_getuserdatalength <section> build and ran unit tests <section> cfe_sb_msghdrsize and cfe_sb_getuserdatalength now return <number> when * msgptr is <allcaps> null </allcaps> <section> ubuntu <number> <section> add any other context about the contribution here . <section> oliver hamburger <allcaps> gsfc </allcaps>"
"fix # <number> , add file utility functional tests . <section> fixes # <number> add functional tests for file utility functional tests . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , update documentation for cfe_es_getpoolbufinfo <section> corrects the return type documentation , on success this function returns the size of the buffer , it does not return <code> . additionally , this updates the general description of the pool implementation to reflect the variances in platform architectures ( i . e . the buffer descriptor / overhead may be <number> bytes on a <allcaps> cpu </allcaps> with <number> bit size_t , but will be greater on a <allcaps> cpu </allcaps> with a <number> bit size_t ) . fixes # <number> <section> build documentation , check no new warnings ( no code change ) <section> none <section> n / a <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update <allcaps> api </allcaps> doxygen list <section> fix # <number> - added missing apis to doxygen list <section> make usersguide , confirmed list <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve sb coverage test <section> add test cases to exercise all functions , lines , and branches to the extent reasonably possible . improves the coverage stats significantly : functions <percent> - > <percent> lines <percent> - > <percent> branches <percent> - > <percent> fixes # <number> <section> build and run coverage test , check <allcaps> lcov </allcaps> reports <section> more complete branch / line coverage <section> ubuntu <section> remaining uncovered lines / branches are not possible to be reached due to the way the code is structured , or because it would require an alternate implementation of <allcaps> sbr </allcaps> ( note that sb + <allcaps> sbr </allcaps> are currently tested as a single unit , even though they are technically separate modules now ) . for example , the "" direct "" <allcaps> sbr </allcaps> implementation cannot have collisions , hence the collision handling in sb cannot be reached . making stubs for <allcaps> sbr </allcaps> may allow this to be tested . for example this conditional is not reachable with direct mode : <url> other lines in cfe_sb_appinit are also not reachable ( will report in separate issue ticket ) . additionally , many internal <code> statements can only be reached with values for which there is a corresponding <code> - that is , there is no default case nor is it possible to reach the switch statement with any value other than the listed values . however gcov still reports this as an un - executed branch even though all possible cases are indeed covered . <section> joseph hickey , vantage systems , inc ."
"uncovered default switch "" branch "" ( vs unreachable default switch code ) in gcov coverage report <section> gcov reports missing branch coverage for the default case of a switch statement . numerous examples in cfe where there is no default case and / or it ' s impossible to reach ( all cases are handled explicitly ) . <section> at minimum document this behavior in the coverage report . would be nice if there was an option or alternative to get gcov to not report impossible cases as uncovered , or post - process the report to remove . <section> none <section> cfe_sb_api . c - <number> uncovered branches cfe_sb_task . c - <number> uncovered branches <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # # tests cfe < <url> bundle < <url> # # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , change ci to use test log . # # # pr # <number> fix # <number> , remove default . dat extension # # # pr # <number> fix # <number> , update <allcaps> api </allcaps> doxygen list # # # pr # <number> fix # <number> , update documentation for cfe_es_getpoolbufinfo # # # pr # <number> fix # <number> , cfe_sb_msghdrsize returns size_t # # # pr # <number> fix # <number> , improve sb coverage test # # # pr # <number> fix # <number> , correct function name in ut_bsp_unlock"
"fix # <number> , remove default . dat extension <section> do not enforce / add a default extension to binary data files fixes # <number> <section> build and run all tests send sb "" dump route table "" command using filename without extension and confirm output file has no extension . <section> no longer adds a "" . dat "" extension if omitted from command <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe time clock state enum t in cmd / tlm and handling <section> fixes issue # <number> by replacing uint16 with cfe_time_clockstate_enum_t <section> steps taken to test the contribution : built and ran unit tests <section> no impact to behavior <section> ubuntu <number> <section> oliver hamburger <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , size unit test table load buffer based on config # # # pr # <number> fix # <number> , add sb pipe management functional tests . fix # <number> , remove inconsistent test ."
"fix # <number> , change ci to use test log . <section> fixes # <number> change ci to use the test log file instead of tee . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"hard coded time print format checks fail when non - default epoch is used <section> epoch is configurable : <url> time unit tests hard - code checks that are impacted by epoch configuration , and fail when it ' s changed ( example ) : <url> <section> update tests to work with configured epoch . either adjust for configured epoch or test the actual values ( not print time ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <user>"
"fix # <number> , add sb pipe management functional tests . <section> fixes # <number> add new functional tests for sb pipe management . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , size unit test table load buffer based on config <section> fix # <number> - supports larger table configurations ( in passing unit tests ) by sizing the unit test buffer used for table loads based on the configuration values . <section> increased cfe_platform_tbl_max_sngl_table_size to where when multiplied by cfe_platform_tbl_max_simultaneous_loads it would break the <number> * <number> limit hard coded in ut_support . c . built and ran unit tests , confirmed they now pass . <section> unit tests will pass for a configuration supporting larger tables <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit ( plus a modified config ) <section> still not unlimited since table register uses the default buffer size , but an improvement . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"support larger tables in the table unit test <section> the first limitation hit is <allcaps> tbl </allcaps> services needs <code> from the memory pool for setting up the load buffers . easy to exhaust the buffer set up in ut_support . c : <url> <section> size the buffer used in unit test based on the configured sizes . <section> could remove the buffer set up in ut_support . c for <code> and size it everywhere , or could override the handler with something simpler that supports the specific test . <section> causing stakeholder unit test failures . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests cfe checks < <url> bundle checks < <url> # # authors <user> <user> <user> <user> - creator # # description # # # pr # <number> fix # <number> , change index type to resolve infinite loop warning # # # pr # <number> fix # <number> , adding coverage for cfe_es_task . c # # # pr # <number> fix # <number> , expand fs header functional tests . # # # pr # <number> fix # <number> , complete coverage for cfe_es_start . c and cfe_es_syslog . c"
"fix # <number> , adding coverage for cfe_es_task . c <section> fix # <number> test the following cases : - cfe_es_taskmain ( ) with a cfe_es_taskinit ( ) error - query tasks command with valid lib id - error when sending build info event - cfe_es_generateversionevents ( ) error when sending mission event <section> manually ran unit tests for es : $ make - c build / native / default_cpu1 / es test verified coverage on files with gcov cfe_es_task . c . gcno and gcov cfe_es_task . c . gcno <section> increased coverage percentage . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"es uncovered lines in cfe_es_task . c , cfe_es_housekeepingcmd , perf filter and trigger size the same <section> <code> clauses in the following code are not reachable : <url> explanation : <code> same as <code> and <code> same as <code> they all ultimately use the same macro <code> . _originally posted by <user> in <url> <section> we have to determine if we want to remove the dead code , or implement the feature that allows the use of smaller cfe_platform_es_perf_max_ids , as explained by jake in <url> <section> can not complete <percent> code coverage if file contains dead code . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
add functional tests for cfe sb pipe management apis <section> need open source functional tests for certifiability <section> add functional tests for cfe sb pipe management apis – cfe_sb_createpipe - creates a new software bus pipe . – cfe_sb_deletepipe - delete a software bus pipe . – cfe_sb_setpipeopts - set options on a pipe . – cfe_sb_getpipeopts - get options on a pipe . – cfe_sb_getpipename - get the pipe name for a given id . – cfe_sb_getpipeidbyname - get pipe id by pipe name . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe fs file utility apis <section> need open source functional tests for certifiability <section> add functional tests for cfe fs file utility apis – cfe_fs_getdefaultmountpoint – cfe_fs_getdefaultextension – cfe_fs_parseinputfilenameex – cfe_fs_parseinputfilename – cfe_fs_extractfilenamefrompath – cfe_fs_backgroundfiledumprequest – cfe_fs_backgroundfiledumpispending <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> reset event filter apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> reset event filter apis – cfe_evs_resetfilter - resets the calling application ' s event filter for a single event id . – cfe_evs_resetallfilters - resets all of the calling application ' s event filters . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> send event apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> send event apis – cfe_evs_sendevent - generate a software event . – cfe_evs_sendeventwithappid - generate a software event given the specified application id . – cfe_evs_sendtimedevent - generate a software event with a specific time tag . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> registration apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> registration apis – cfe_evs_register - register an application for receiving event services . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es resource id apis <section> need open source functional tests for certifiability <section> add functional tests for cfe resource id apis – cfe_es_appid_toindex – cfe_es_libid_toindex – cfe_es_taskid_toindex – cfe_es_counterid_toindex <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
finish functional tests for cfe es miscellaneous apis <section> need open source functional tests for certifiability <section> this function got missed by the existing miscellaneous api test – cfe_es_processasyncevent - notification that an asynchronous event was detected by the underlying os / <allcaps> psp </allcaps> . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es generic counter apis <section> need open source functional tests for certifiability <section> add functional tests for cfe generic counter apis – cfe_es_registergencounter - register a generic counter . – cfe_es_deletegencounter - delete a generic counter . – cfe_es_incrementgencounter - increments the specified generic counter . – cfe_es_setgencount - set the specified generic counter . – cfe_es_getgencount - get the specified generic counter count . – cfe_es_getgencounteridbyname - get the id associated with a generic counter name . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es performance monitor apis <section> need open source functional tests for certifiability <section> add functional tests for cfe performance monitor apis – cfe_es_perflogentry - entry marker for use with software performance analysis tool . – cfe_es_perflogexit - exit marker for use with software performance analysis tool . – cfe_es_perflogadd - function called by cfe_es_perflogentry and cfe_es_perflogexit macros . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe es application behavior apis <section> need open source functional tests for certifiability <section> add functional tests for cfe application behavior apis – cfe_es_runloop - check for exit , restart , or reload commands . – cfe_es_waitforstartupsync - allow an application to wait for the "" <allcaps> operational </allcaps> "" global system state . – cfe_es_waitforsystemstate - allow an application to wait for a minimum global system state . – cfe_es_incrementtaskcounter - increments the execution counter for the calling task . – cfe_es_exitapp - exit a cfe application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe es application control apis <section> need open source functional tests for certifiability <section> add functional tests for cfe application control apis – cfe_es_restartapp - restart a single cfe application . – cfe_es_reloadapp - reload a single cfe application . – cfe_es_deleteapp - delete a cfe application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es entry / exit apis <section> need open source functional tests for certifiability <section> add functional tests for cfe entry / exit apis – cfe_es_main – cfe_es_resetcfe <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , expand fs header functional tests . <section> fixes # <number> expands fs header functional tests to include error checking . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> complete coverage for cfe_es_start . c and cfe_es_syslog . c <section> completed code coverage for <code> and <code> with the following changes : fixes # <number> the following tests were added : - <code> with a es perf data mutex creation failure - <code> with unknown object type - <code> when calculated blocksize is <number> fixes # <number> removed function <code> <section> manually ran unit tests for es : <code> verified <percent> coverage on files with <code> and <code> <section> increased overall code coverage <section> - ubuntu <number> vm <section> <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , expand <allcaps> cds </allcaps> functional tests . <section> fixes # <number> expends on the <allcaps> cds </allcaps> functional tests . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add test log file <section> add cfe_assert capability to "" tee "" all test log output to a file in addition to the regular output ( console / event ) . this aids in scripting and automation , by creating a file containing only test results , not intermixed with other info , and not subject to the length limitations of events . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> test results now stored in <code> in addition to normal output <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # context part of <url> # # testing cfe checks < <url> bundle checks < <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , rename / clean <allcaps> cfe </allcaps> coverage assert macros # # # pr # <number> fix # <number> , correct path to users guide warning log # # # pr # <number> fix # <number> , add additional test cases for child tasks # # # pr # <number> fix # <number> , add cfe functional tests to ci # # # pr # <number> fix # <number> , added ut tests for cfe es api # # # pr # <number> fix # <number> , expand <allcaps> cds </allcaps> functional tests . # # # pr # <number> fix # <number> # <number> # <number> , event id updates # # # pr # <number> fix # <number> , add test log file # # # pr # <number> fix # <number> , scrub all ut_report calls"
"run continuous - integration workflows with the bundle integration - candidate branch where needed <section> some ci workflows checkout the cfs bundle , it would be good to see how some things fail against main but pass with ic <section> add a matrix build so workflows that depend on the bundle can test both . add a badge to the readme . <section> <section> add any other context about the feature request here . <section> full name and company / organization if applicable"
"fix # <number> , correct path to users guide warning log <section> corrects the path to the warning log file for <allcaps> cfe </allcaps> users guide build fixes # <number> <section> check <allcaps> cfe </allcaps> workflow <section> workflow should succeed <section> github <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename / clean <allcaps> cfe </allcaps> coverage assert macros <section> rename <allcaps> cfe </allcaps> coverage test assert macros in ut_support . h to have consistent name prefix . also adds a "" <allcaps> voidcall </allcaps> "" and "" resourceid_eq "" macro for logging void functions and id checks , respectively . fixes # <number> <section> build and run all unit tests <section> none - just renames macros for consistency , and simplifies the implementation of some ( reusing existing macro where feasible ) . <section> ubuntu <section> discussed initially in <allcaps> ccb </allcaps> on <number> - <number> - <number> , as part of discussion on # <number> , then split off into a separate issue / pr . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub all ut_report calls <section> scrub through all ut reporting calls and replace with preferred macro where possible . - all calls to check status / return code are replaced with macro that logs all arguments and return value - all calls that involved multiple conditions <allcaps> and </allcaps> ' ed together are replaced with individual asserts on each condition . fixes # <number> fixes # <number> <section> build and run unit tests , confirm logging is as intended , and coverage level is not reduced <section> better , more complete context information is logged into the file all individual assert conditions are logged separately ( no more checking of multiple <allcaps> and </allcaps> ' ed values / conditions in a single report ) <section> ubuntu <section> this also removes all the "" free - form "" info that was in the logs , since it wasn ' t really providing value ( a developer will go to the source file / line number and see full context , nor was it complete or consistent enough to provide any value for cross referencing or documentation ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , added ut tests for cfe es api <section> fixes # <number> completed code coverage on the following functions : - test cfe_es_reloadapp bad appid , core app , file does not exist - test cfe_es_getappid : <allcaps> null </allcaps> appid pointer - test cfe_es_getappidbyname : <allcaps> null </allcaps> appid pointer - test cfe_es_getappidbyname : <allcaps> null </allcaps> name pointer - test cfe_es_deletechildtask : task inactive / invalid case - test cfe_es_registercds : <allcaps> null </allcaps> handle and <allcaps> null </allcaps> name <section> steps taken to test the contribution : <number> . compiled code and tests for es <number> . manually run coverage - es - <allcaps> all </allcaps> - testrunner and verify output of new tests <number> . generated cfe_es_api . c . gcov and verified expected lines are now covered . <section> percentage of lines covered should increment . <section> - ubuntu <number> . <number> vm server <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , complete coverage for fs subsystem <section> add required coverage test cases to achieve <percent> line coverage in fs fixes # <number> <section> build and run unit tests , generate coverage report ( lcov ) <section> fs line coverage is now <percent> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add additional test cases for child tasks <section> fixes # <number> add tests to do more than just the nominal cases of child task apis <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # testing cfe checks < <url> - documentation workflow failures due to osal docs rename . these are fixed in bundle . - local tests failure due to osal docs rename , also fixed in bundle . cfs bundle checks < <url> # # context part of <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , add ci workflow to run cfe coverage tests # # # pr # <number> fix # <number> , updated fs read / writeheader <allcaps> api </allcaps> return documentation # # # pr # <number> fix # <number> , document cfe_es_runloop increment task counter behavior # # # pr # <number> fix # <number> , standardize on "" docs "" subdirectory # # # pr # <number> fix # <number> , update version description per current design # # # pr # <number> fix # <number> , document cfe_tbl_unregister use - case # # # pr # <number> fix # <number> , provide <allcaps> cfe </allcaps> assert lock / unlock # # # pr # <number> fix # <number> , simplify cfe_fs_settimestamp and fix syslog typo # # # pr # <number> fix # <number> , removed redundant check / set of cfe_cpu_id_value # # # pr # <number> fix # <number> , add time get reference error bit # # # pr # <number> fix # <number> , add workflow to build cfe documentation # # # pr # <number> fix # <number> # <number> # <number> # <number> # <number> - requirements updates # # # pr # <number> fix # <number> , es / resourceid documentation cleanup # # # pr # <number> fix # <number> , allow multiple sources in add_cfe_coverage_test # # # pr # <number> fix # <number> , add es misc functional test # # # pr # <number> fix # <number> , add mempool functional tests # # # pr # <number> fix # <number> , clean / simplify version header and reporting # # # pr # <number> fix # <number> , <number> , doxygen cleanup # # # pr # <number> fix # <number> , prepend system log messages with function name"
"ut_defaulthandler_cfe_sb_receivebuffer does not adequately model behavior of cfe_sb_receivebuffer for unit test purposes <section> ut_defaulthandler_cfe_sb_receivebuffer only sets the value at bufptr when status is => <number> ( cfe_success = = <number> ); however cfe_sb_receivebuffer changes the value at bufptr to <allcaps> null </allcaps> whenever the status value is _not_ cfe_success . it is possible to get a <allcaps> null </allcaps> with a non - zero positive result when set by the user . it is not possible to get the <allcaps> null </allcaps> value from the handler with a negative status , a behavior that the production code has . there is no guarantee that the cfe_sb_buffer_t * * bufptr passed into the function does not already contain a non - <allcaps> null </allcaps> value from the code under test ( <allcaps> cut </allcaps> ) . <section> steps to reproduce the behavior : <number> . write a unit test for some <allcaps> cut </allcaps> that uses the function and do not set a new handler <number> . make it so a negative value is received back from the function ( i . e . cfe_sb_time_out ) <number> . if the <allcaps> cut </allcaps> does not do it automatically , temporarily change the passed in address to have a value at that address <number> . test results show that the reference value is never set by the stub <section> the follow - on logic from the default handler should match the logic in the production code , or redesign the stubs to have no follow - on logic so unit test developer is in complete control of outside effects . <section> <url> <url> <section> - <allcaps> rhel </allcaps> - <number> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , standardize on "" docs "" subdirectory <section> use "" docs "" instead of "" doc "" in both source and binary / build directory names for documentation and related files . fixes # <number> <section> build cfe and <allcaps> osal </allcaps> documentation targets , confirm working as expected <section> no change , just consistent naming <section> ubuntu <section> <section> should be merged at the same time as nasa / osal # <number> and nasa / psp # <number> this also changes the names of the build tree / binary directories too ( <allcaps> imo </allcaps> it seemed odd to keep the binary dirs named differently from source dirs , so i made everything "" docs "" ) . however , it does <section> update the names of the makefile targets ( <code> in the cmake build , and <code> in the sample top - level target makefile ) . i figured there were probably many build / workflow scripts that depended on these target specific target names . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , allow multiple sources in add_cfe_coverage_test <section> add ${ <allcaps> argn </allcaps> } such that the user can specify multiple source files add a check for targets in the add_cfe_coverage_dependency , so this can be used to add arbitrary other non - stub libraries too . fixes # <number> <section> build and run all unit tests , confirm no change in behavior <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , doxygen cleanup <section> clean up and simplify the generated <code> s for the documentation builds . instead of having special rules or providing direct refs to non - cfe subdirectories in the <allcaps> input </allcaps> , just add the base dir for all modules . then use "" exclude "" logic to filter out parts based on file / directory names ( unit - test , ut - stubs , etc ) . gives each cfe doc build ( detaildesign , usersguide ) its own dedicated working directory . fixes # <number> fixes # <number> <section> build detail design and users guide docs and verify contents . built all <number> doc targets ( detaildesign , usersguide , osalguide ) numerous times with <code> make option , did not see any issues related to parallelism . <section> the full set of code is included in the "" detaildesign "" , even for os / <allcaps> bsp </allcaps> / <allcaps> psp </allcaps> layers that may not be used - e . g . <allcaps> rtems </allcaps> and vxworks <allcaps> psp </allcaps> and <allcaps> osal </allcaps> layers are included in this build . after parallel builds and / or building all doc targets at once - the warning files for each doc target are left are intact , and can be reviewed individually after the build - they do not overwrite each other as they used to . note that instead of <code> the artifact is now <code> and <code> , respectively . <section> ubuntu <section> there had been some attempts at not including unused components in the past , but they were not working ( pre - existing issue ) so it was all getting included anyway , this simply takes out the broken logic but the end result is largely the same . this may also require some sort of update to the list of artifacts due to the <code> file name change . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , prepend system log messages with function name <section> fix # <number> - standardizes system log messages with a prefixed function name <section> built and passed unit tests . <section> only modified output string of syslog . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : cfs bundle + this commit <section> note this will have a conflict with # <number> , easy to resolve . i fix once it ' s in . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , es / resourceid documentation cleanup <section> fix # <number> , cleanup of documentation related to <allcaps> cfe </allcaps> - <number> code review for es resourceid . typo fixes , clarification , removal of obsolete comments , etc . <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> # <number> # <number> # <number> # <number> - requirements updates <section> fix # <number> : added task and <allcaps> cds </allcaps> file write default filenames fix # <number> : removed optional from <allcaps> evs </allcaps> log fix # <number> : non - parameter reload / restart does not increment cmd error fix # <number> : removed system log elements from reset preservation list fix # <number> : simplifed table partial load file requirement <section> ci - requirements documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add cfe functional tests to ci <section> fixes # <number> add the functional tests to the ci workflow . <section> changed the tests to be wrong and force a failure . changed the tests to have a delay to simulate a timeout . <section> will now fun the cfe functional tests on every pull request . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add mempool functional tests describe the contribution fixes # <number> adds new functional tests for es mempool system ( s ) tested on ubuntu <number> additional context this is a just testing the nominal cases . more in depth tests will have to be added later . contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , clean / simplify version header and reporting <section> fix # <number> - cleans up the version header and how it ' s reported ( standardized event text ) . note just es uses / reports the short version . <section> built and ran unit tests , executed cfe to confirm output . <section> minor event message output format changes <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add workflow to build cfe documentation <section> fix # <number> build documentation at cfe component level , so we can catch documentation errors at cfe repo before they get merged into the cfs bundle . <section> steps taken to test the contribution : <number> . workflow runs and completes successfully after a push . <section> a new action workflow runs to build documentation after a push or merge request . <section> - tested on the github servers where ci actions get to run . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , provide <allcaps> cfe </allcaps> assert lock / unlock <section> provide the ut_bsp_lock / unlock function to be compatible with nasa / osal # <number> . the library no longer needs to be locked the entire time a test runs . this also allows test programs to be multi threaded . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests in cfe_testcase app that use cfe_assert library <section> more fine - grained locking , and tests may use child tasks safely . <section> ubuntu <section> required for compatibility with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> # <number> # <number> , event id updates <section> fix # <number> - removed cfe_es_max_eid and all the others ( very fragile , especially when eids are out of order ) fix # <number> - ordered <allcaps> eid </allcaps> ' s and fixed duplicate assignments fix # <number> - cleaned up eventid documentation - removed format string and replaced with brief description - reduce verbiage in full descriptions , made consistent and less "" bi - directional "" when there are multiple sources . <allcaps> api </allcaps> / commands will reference eids . <section> build an run unit tests , passed - <allcaps> tbd </allcaps> ( not actually done yet ) <section> deconflicted eids . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> did not address # <number> , could be a big impact . wrote # <number> to track use of <allcaps> eid </allcaps> in multiple locations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add time get reference error bit <section> use one of the unused time state bits to indicate if an error has occurred where cfe_time_getreference was not able to get a consistent copy of the reference state data . in a functional system this should never occur - there should be at most one retry , which only happens in the event there was a burst of updates ( more than <number> ) concurrently with reading the structure . the previous implementation did not report or handle the condition at all , this at least sets a <allcaps> tlm </allcaps> status bit and returns a reference struct filled with all zeros . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests check coverage report to ensure the new tests are being executed and confirm that the read error flag gets set , and the output state is all <number> in that case . force the error to occur during a syslog call and confirm the timestamp gets set , e . g . <number> - <number> - <time> . <number> es startup : opened es app startup file : / cf / cfe_es_startup . scr <section> if cfe_time_getreference was ever not able to get a valid reference structure , it outputs all zeros and the "" <allcaps> referr </allcaps> "" bit ( 0x0 0 1 0 ) will be set in the output <allcaps> tlm </allcaps> structure until the system is rebooted . <section> ubuntu <section> this solution was chosen over an event / syslog because both of those will also get the time , thereby introducing a recursive loop if the error happens again . by zero - filling the structure the output is also identifiable ; i . e . if the date "" <number> - <number> - <time> . <number> "" ever appears in a log file , failure of cfe_time_getreference is really the only way a timestamp like that is possible . without this change the time data would be variable / unpredicatable . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , removed redundant check / set of cfe_cpu_id_value <section> fix # <number> - removed redundant set of cfe_cpu_id_value if not set . and checked as well as assigned to cfe_cpu_id_value here : <url> <url> and used here : <url> <section> removed assignment of cpu1_processorid and confirmed error was generated by target / cmakelists . txt : <code> <section> none as long as required elements are defined . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , fix calculate <allcaps> crc </allcaps> header return description . <section> fixes # <number> change header file to match functionality . <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add ci workflow to run cfe coverage tests <section> fix # <number> run cfe coverage tests for every push and pull request . use a checks - for - duplicates job to avoid duplicate runs of the ci action . <section> steps taken to test the contribution : <number> . pushed to fork , ci action ran successfully : <url> <number> . created a temporary branch and introduced an es bug to force a workflow failure . workflow failed successfully : <url> <number> . reverted commit that introduced bug to verify that workflow run completed successfully . <section> a new workflow is added when looking at the different nasa / cfe actions . the workflow will run for every push and pull request . <section> - tested on the github servers where ci actions get to run . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add es misc functional test <section> fixes # <number> test for the api calls in misc section . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> note codeql failure in cfe checks because workflow points at "" main "" . this is resolved by the cfs - bundle ic . # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , update es verify errors to match ensures error messages in <code> match test logic . # # # pr # <number> fix # <number> , resolve mismatched endforeach of cmakelist . txt # # # pr # <number> fix # <number> , improve event filter documentation adds documentation for the behavior of <code> and explains how event filter mask values work . # # # pr # <number> fix # <number> , <allcaps> evs </allcaps> / fs documentation cleanup # # # pr # <number> fix # <number> , remove shell file subtype and clarify scope removes <code> and clarifies the scope of <code> so that it only includes the cfe - defined file types # # # pr # <number> fix # <number> , simplify cfe_es_queryallcmd file open logic removes the obsolete <code> and file - remove - on - success logic from <code> . # # # pr # <number> fix # <number> , remove deprecated elements # # # pr # <number> fix # <number> , replace header content type magic number . # # # pr # <number> fix # <number> , remove unused <allcaps> evs </allcaps> logmode defines # # # pr # <number> fix # <number> , # <number> , sb / <allcaps> msg </allcaps> / <allcaps> sbr </allcaps> documentation cleanup and remove unused <code> # # # pr # <number> fix # <number> , add cfe_sb_destinationd tag and use for pointersastrogeco # # # pr # <number> fix # <number> , use cfe_msg_sequencecount_t for seqcnt type # # # pr # <number> fix # <number> , document cfe_es_poolcreateex numblocksizes error handling # # # pr # <number> fix # <number> , documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> # # # pr # <number> fix # <number> , document tblname as app specific # # # pr # <number> fix # <number> , use <allcaps> osal </allcaps> script to generate <allcaps> api </allcaps> guide # # # pr # <number> fix # <number> , include verify headers to validate config # # # pr # <number> fix # <number> , add doxygen aliases for <allcaps> osal </allcaps> parameter / retvals"
"fix # <number> , simplify cfe_es_queryallcmd file open logic <section> fix # <number> - removes the first os_opencreate ( and file remove on success ) since the following os_opencreate with truncate makes it obsolete <section> build / run unit tests , passed ( once updated ) <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update es verify errors to match test <section> fix # <number> - updated es verify error reporting to match test <section> ci - preprocessor error text update only <section> none ( except updated error message if triggered ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve event filter documentation <section> fix # <number> - clarifies how event filters work <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve mismatched endforeach of cmakelist . txt <section> fix # <number> - resolved mismatch <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_evs_unregister <allcaps> api </allcaps> <section> fix # <number> , remove cfe_evs_unregister <allcaps> api </allcaps> - removed requirement cevs3101 - removed documentation references - removed from <allcaps> api </allcaps> header - removed stub - removed implementation - removed coverage test <section> built and ran unit tests , passed <section> removed <allcaps> api </allcaps> . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> evs </allcaps> / fs documentation cleanup <section> fix # <number> - cleans up <allcaps> evs </allcaps> / fs documentation comments from code review <section> ci <section> none , documentation only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove shell file subtype and clarify scope <section> fix # <number> - removes <code> and clarifies the scope of <code> to just include the cfe defined file types <section> build and run unit tests , passed <section> none , wasn ' t used since shell command was removed from <allcaps> cfe </allcaps> / es . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage tests mix filter index with eventid in testing , other misleading comments <section> test claims it ' s using an invalid eventid , but really it ' s just not registered . mixes the concept of filter table index with eventid : <url> the application is registered , it ' s the eventid that has not been registered for filtering : <url> <section> clear up documentation / test , should be obviously testing registered eventids , unregistered eventids , invalid eventid , etc . use min / max values ( <number> and 0 xfffe ) <section> none <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consistent use of uint16 for eventid <section> fix # <number> - use <code> everywhere for <code> <section> built / ran unit tests , passed <section> none , just makes types consistent <section> - hardware : intel i5 , docker - os : ubuntu <number> - versions : bundle main + this commit <section> does not fix the fact cfe_evs_free_slot is not documented or handled well . see # <number> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , sb / <allcaps> msg </allcaps> / <allcaps> sbr </allcaps> documentation cleanup and remove unused <code> <section> fix # <number> - various documentation cleanup fix # <number> - remove <code> ( combined due to doc dependence ) <section> build and ran unit tests , passed <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + these commits <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of nasa / cfs # <number> # # testing cfe checks : < <url> cfs bundle checks : < <url> # # description # # # pr # <number> fix # <number> , add printf format casts uses ( int ) with % d conversions in <code> and <code> for platform portability . # # # pr # <number> fix # <number> , accept "" <allcaps> null </allcaps> "" as entry point specifying the special string <allcaps> null </allcaps> as the entry point in a startup script results in no entry point being called for the library . equivalent to leaving the field empty . # # # pr # <number> fix # <number> , add capability to generate multiple tables [ build system ] adds an <code> hook that can added to a <allcaps> cpu </allcaps> - specific subdirectory under the "" defs "" directory . this hook can perform extra installation steps as required for the custom implementation . tweaks the <code> function so it can be called from the <code> script to generate additional / alternative table binary files for that <allcaps> cpu </allcaps> . <code> now uses the "" app_name "" parameter to associate the table files with the app library , so the same set of include files can be used . still allows any unique string to be used as "" app_name "" for backward compatibility . the script will now generate a "" note "" message to the user if it does not match an application name . if the multiple table feature is used , it actually needs to match the application name , or else the include paths may be incomplete . # # # pr # <number> fix # <number> , # <number> , resolve <allcaps> api </allcaps> prototype / implementation discrepancies removes discrepancies ( return type , parameter names , etc ) between function prototypes and implementation . also fixes some but not all use of <code> in the implementations . updates ut - stubs accordingly . # # authors <user> <user> <user>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removed deprecated elements <section> built and ran unit tests , passed <section> none ( for those that already compiled with <code> ) <section> - hardware : intel i5 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify cfe_fs_settimestamp and fix syslog typo <section> fix # <number> - writes the timestamp with one call and updates / fixes the syslog message - now setting success as <code> - <code> now returns <code> if the write does not return the correct bytes written - update coverage test checks - updated the functional test to check for <code> vs <code> - updated check of status in <code> to <code> <section> built and ran unit tests , passed . <section> updated syslog , returns an actual error code if there is an error . <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_sb_destinationd tag and use for pointers <section> fix # <number> - added cfe_sb_destinationd tag and used for the linked list pointers <section> built unit tests , ran sb and passed <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_sequencecount_t for seqcnt type <section> fix # <number> - fixed type for seqcnt <section> built all unit tests , ran sbr tests and passed <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> osal </allcaps> script to generate <allcaps> api </allcaps> guide <section> instead of including the <allcaps> osal api </allcaps> guide templates and pages in the <allcaps> cfe </allcaps> repo , invoke the build script now provided in the <allcaps> osal </allcaps> repo itself . fixes # <number> <section> build full documentation , including <allcaps> osal api </allcaps> guide , confirm same as it was <section> none , documentation build only <section> ubuntu <section> depends on nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document cfe_es_poolcreateex numblocksizes error handling <section> fix # <number> - updated documentation to match implementation <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> <section> fix # <number> - minor documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> from code review <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , document tblname as app specific <section> fix # <number> - replaces "" processor specific "" comments with app specific in relation to table name and also refers to the "" raw table name "" instead of overloading "" table name "" <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , include verify headers to validate config <section> fix # <number> - includes the verify . h headers in service * _task . c file to verify config settings <section> build and ran unit tests w / default config ( passed ) made an es config invalid and confirmed it errored on build <section> actually runs the config verification macros <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> eventually the compile time checks could move closer to use , but for now at least this performs the checks as part of service compilation . debated running as a separate check in cmake , but preference is to move closer to where it matters vs further away . we dropped them once , hopefully we will be less likely to drop them in the future when it ' s actually in the code . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , replace header content type magic number . <section> fixes # <number> changes the magic number to the defined value . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused <allcaps> evs </allcaps> logmode defines <section> removed unused <allcaps> evs </allcaps> logmode defines and references to these defines . fixes # <number> <section> steps taken to test the contribution : <number> . build and run unit tests <section> there are no behavior changes . everything continues to run the same . <section> - os : ubuntu <number> <section> jose f . martinez pedraza , <allcaps> nasa gsfc </allcaps> code <number>"
"update ut - stubs related to prototype / implementation scrub , # <number> /# <number> <section> prototype / implementation discrepancies were resolved in # <number> , but ut - stubs were not updated . <section> update ut - stubs <section> none <section> # <number> and # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , resolve <allcaps> api </allcaps> prototype / implementation discrepancies <section> fix # <number> - this checks prototypes against implementation and fixes any differences ( return type , parameter names , etc ) . for the most part implementation was considered truth ( fixed prototype ) except for cfe_status_t return type change . also fixes some but not all use of cfe_status_t in the implementations . fix # <number> - note completed ut - stub updates after <allcaps> ccb </allcaps> , added in since they are trival . follow on work needed - internal use of cfe_status_t (# <number> ) <section> built and ran unit tests , all passed . built usersguide and confirmed no errors . <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + these commits <section> builds on commit from <user> submitted in # <number> , now closed as duplicate to this pr <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> zachary gonzalez - individual"
"fix # <number> , add capability to generate multiple tables adds a "" install_custom . cmake "" hook that can be put into a <allcaps> cpu </allcaps> - specific subdirectory under the "" defs "" directory , that can perform extra installation steps as required for the project / mission . tweaks the "" add_cfe_tables "" function such that it can also be called from the install_custom . cmake script to generate additional / alternative table binary files for that <allcaps> cpu </allcaps> . the main update is that it uses the "" app_name "" parameter to associate the table files with the app library , so the same set of include files can be used . this relies on the target - scope properties being used . historically that string wasn ' t verified , it could have been any unique string , but now it should match the app if this is to work as expected . <section> fixes # <number> <section> add multiple / alternative table definitions for sample_app in a local <number> - cpu configuration . confirm that all table files are built and installed to the staging area correctly , and that sample_app can be tweaked to load one of the alternatives , just by changing the filename it loads . <section> because the "" app_name "" ( 1 st parameter ) of <code> was never validated historically , it just had to be unique , this still allows any string for backward compatibility . it will generate a new "" note "" message to the user if it does _not_ match an application name , but it is still accepted . if the multiple table feature is used , it actually needs to match the application name , or else the include paths may be incomplete . <section> ubuntu <section> see also nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , changing return type from int32 to cfe_status_t <section> - fix # <number> changing the implementation return types to cfe_status_t to match the function prototypes . <section> none <section> none <section> n / a * * contributor info individual zachary gonzalez"
"fix # <number> , add printf format casts <section> use ( int ) with % d conversions for portability fixes # <number> <section> build and run unit tests on <allcaps> rtems </allcaps> <section> build now succeeds <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add printf format casts <section> use ( int ) with % d conversions for portability fixes # <number> <section> build and run unit tests on <allcaps> rtems </allcaps> <section> build now succeeds <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , accept "" <allcaps> null </allcaps> "" as entry point <section> recognize the special string "" <allcaps> null </allcaps> "" to indicate no entry point should be called for the library . equivalent to leaving the field empty . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , and use a startup script that loads a cfe_lib with a <allcaps> null </allcaps> entry point run all unit tests . <section> specifying the special string <code> as the entry point in a startup script should work as it did in previous versions - skips the entry point . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add coding standard rules in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . <section> testing done on forked repository , arielsadamsnasa / cfe . <url> jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , resolve sequence count auto - increment rollover bug adds <code> so the auto - increment of the local sequence counter works when sending tlm ( and increment is enabled ) . updates unit tests and adds the old - style stub . the unit tests check for the correct rollover behavior . sequence count will roll over based on the mask . before the fix the sequence counter would "" stick "" in telemetry until the passed in value rolled over . # # # pr # <number> , * community contribution ! * fix # <number> , correctly format code block section terminator markdown renders correctly after fixing fixing code block termination . # # # pr # <number> , * community contribution ! * fix # <number> , typos in developer guide # # authors <user> <user> - hbr <user>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , remove broken travis - ci script # # # pr # <number> fix # <number> , generated coverage stubs for <allcaps> cfe </allcaps> core updates <allcaps> cfe </allcaps> core stub libraries to use stubs generated from new ut assert script . converts existing stub logic to a default handler routine . moves all of the internal <allcaps> api </allcaps> prototypes from "" core_api "" to the "" core_private "" interface lib . fix # <number> , move cfe_fs_runbackgroundfiledump to internal <allcaps> api </allcaps> update # <number> , rename hook files to handler # # # pr # <number> fix # <number> , <allcaps> osal </allcaps> config file simplification adds documentation and comments about how the configuration facility works and where to find information on the complete set of options available updates the configuration files in "" sample_defs "" to reflect only those parameters that are set to a non - default value along with information about why the configurable item is changed . # # # pr # <number> fix # <number> , removes - - quiet option so files checked go to stdout # # # pr # <number> fix # <number> , table object file name # # authors <user> <user>"
"fix # <number> , report files checked in cppcheck action <section> fix # <number> , removes <code> option so files checked go to stdout <section> ci <section> reports files checked in ci <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove broken travis - ci script <section> fix # <number> - removes broken travis - ci script . the github action for <code> already exist that cover the required testing . note all the travis - ci was doing is the strict cpp check . <section> ci , confirm travis results no longer show up <section> none , ci only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"rename * hooks . c as * handler . c for stubs <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> with changes - extends "" handler function "" concept from osal to cfe - do we have a better naming scheme ? we have hooks and handler . - rename the files to <code> instead of <code> . open issue in osal to rename as well _originally posted by <user> in <url>"
"fix # <number> , resolve sequence count auto - increment rollover bug <section> fix # <number> - adds <code> so the auto - increment of the local sequence counter works when sending tlm ( and increment is enabled ) . updates unit tests and adds the old style stub . the unit tests check for the correct rollover behavior . note - will need to rebase when autogenerated stubs are merged , will update at that point . <section> build and execute unit tests , passed <section> sequence count will roll over based on the mask . before the fix the sequence counter would "" stick "" in telemetry until the passed in value rolled over . <section> - hardware : local docker - os : ubuntu <number> - versions : cfs bundle main + this commit <section> will need to deconflict once autogenerated stubs are merged , # <number> . note this just fixes the reported bug , and does not add any of the other extra functionality discussed as part of # <number> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , add <allcaps> es cds </allcaps> functional test adds tests for nominal use cases of the es critical data store <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , function comment blocks [ docs ] makes comment blocks in source and header files more consistent for all internal , <allcaps> cfe </allcaps> core apis . moves information about the function behavior to its prototype in the header in doxygen format . comment blocks on the function implementation refer back to the prototype , it does not duplicate the info . local helper functions that are not separately prototyped , are exceptions to this pattern . adds intended scope to all functions : global , application - internal , or file / local . # # # pr # <number> fix # <number> , add file header management <allcaps> api </allcaps> functional tests . adds new functional tests for nominal uses of fs header <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , add current time functional test adds new functional tests for time current <allcaps> api </allcaps> . # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
<allcaps> cfe </allcaps> current time functional test <section> the functional test currently only test the base cases of the <allcaps> api </allcaps> functions . more in depth tests still need to be written . <section> write tests for all the possible cases <section> follow up to # <number> <section> alex campbell
"fix # <number> , # <number> , # <number> , generated coverage stubs for <allcaps> cfe </allcaps> core <section> update <allcaps> cfe </allcaps> core stub libraries to use generated stubs , using the generator script now part of ut assert . all existing stub logic is converted to a default handler routine . this also entailed moving all of the internal <allcaps> api </allcaps> prototypes to be in the "" core_private "" interface lib rather than in "" core_api "" . the only reason this was not done earlier was due to issues with the stubs , but that is alleviated when using generated stubs . fixes # <number> fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to <allcaps> fsw </allcaps> . for unit testing , this allows the stub handler to be completely replaced by a test case , bypassing any default handler logic , if the default handler function is not desired . <section> ubuntu <number> <section> originally when the directory reorganization was done (# <number> ) the "" core internal "" function prototypes were kept in <code> because that ' s where the stubs were , and splitting them would require splitting the stub library . when using generated stubs , this is no longer an issue , and actually flips the problem around - such that to maintain the patterns these header files should be moved so that the stubs are generated properly with the right scope . as a result - this moves the "" internal "" header files from core_api to core_private , but does not change them . this is where they really should have been all along . <section> joseph hickey , vantage systems , inc ."
"decouple sb and <allcaps> sbr </allcaps> in coverage tests <section> currently the sb coverage test is not like the others in that it links with the real <allcaps> sbr </allcaps> sub - module , rather than a stub version . this becomes evident when generating the stubs as in # <number> <section> - make <allcaps> sbr </allcaps> unit tests follow the pattern of all other modules - generate a set of stubs for <allcaps> sbr </allcaps> using the generator script and it should use the new cmake functions to add the coverage test . - update the sb unit tests where it was depending on having a real <allcaps> sbr </allcaps> implementation ( should be just a matter of setting the intended stub output where it was missing ) <section> per the system architecture / design , each sub - module should be individually coverage tested , using stubs for all other modules . this is an exception to that general design because <allcaps> sbr </allcaps> does not have proper stub functions for testing dependencies in isolation ( e . g . sb in this case ) like all other modules do . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> osal </allcaps> config file simplification <section> the <allcaps> cfe </allcaps> framework build uses mostly default values for <allcaps> osal </allcaps> compile time configuration . there are just a few exceptions where the <allcaps> cfe </allcaps> build is tuned for a more debug - friendly result . this updates the configuration files in "" sample_defs "" to reflect only those values which are set to a non - default value , along with information about why the configurable item is changed . currently , these are only items related to debugging . this change also includes more documentation / comments about how this configuration facility works and where to find information on the complete set of options available ( which is <allcaps> osal </allcaps> version dependent ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , this is just documentation / sample config cleanup , but does not change the effective <allcaps> osal </allcaps> configuration , since most of the values in this sample file were the same as the default value . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , change index type to resolve infinite loop warning <section> a clear and concise description of what the contribution is . - fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> - [x ] individual <allcaps> cla </allcaps> himanshu <allcaps> cla </allcaps> . pdf <url>"
"fix # <number> , table object file name <section> use a shell glob instead of assuming a specific file name , this should pick up the object file no matter how it was named , as long as it ends in ${ cmake_c_output_extension } . it does rely on / assume there is only one such file , so this might break if one changes the name of a table without a clean rebuild . a proper fix would still be to use target_objects generator expression , but that can not happen until ubuntu <number> ( w / ver <number> ) is <allcaps> eol </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm tables are built successfully <section> tables should build even if the file name pattern is not as expected . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , memory pool pointer type no behavior changes . changes the type of pointer for <code> in <code> <allcaps> api </allcaps> from uint8 * to void * to be more consistent and easier to use . should be backward compatible . updates the doxygen documentation for this parameter , as it was incorrectly specifying a <number> - bit alignment requirement . # # # pr # <number> fix # <number> , es child task functional test fixes # <number> , typo in macro name adds new functional tests for es child task <allcaps> api </allcaps> . does not check edge cases . fixed spelling mistake in <code> name # # # pr # <number> fix # <number> , remove broken <allcaps> builddir </allcaps> reference removes <allcaps> builddir </allcaps> reference and an old comment . no behavior changes # # # pr # <number> fix # <number> , remove option for "" osal_compatible "" moves and renames <code> to <code> . since it is is assumed / required that resource ids follow the "" osal compatible "" pattern . perhaps in a future version this could change , but # # # pr # <number> fix # <number> , cfe_success constant type ensures that the <code> constant is of the <code> type . since an explicit cast is required on all error codes that are expected to be negative values . * no behavior change . * # # # pr # <number> fix # <number> , remove unused error codes removes unused error codes : <code> and <code> . no impact to behavior . # # # pr # <number> fix # <number> , better warning about malformed startup line when a startup file has a line with too many tokens the build script will generate a concise warning including an indicator of which line is causing the problem . # # # pr # <number> fix # <number> , check status of call to <code> confirm that the call to <code> returns <code> before continuing . no behavior changes . now shows up as untested lines in the coverage report since error condition cannot be exercised through coverage . # # # pr # <number> fix # <number> , update documentation for <code> [ docs ] clarify that <code> does not wipe or erase the block , it only returns resources to the pool for re - use . # # # pr # <number> fix # <number> , exception logic when app / task is not found [ docs ] adds comments in <code> describing the logic when an exception cannot be traced back to a specific app , in that it should fall back to the <allcaps> psp </allcaps> reset . # # # pr # <number> fix # <number> , error if alignment size not a power of two <code> now returns <code> error if the <code> passed - in value is not actually a power of two instead of "" fixing "" the alignment mask , # # # pr # <number> fix # <number> , remove unneeded cfe_es_syslog_append macro replace internal <code> macro with the <code> <allcaps> api </allcaps> since coding standards discourage use of multi - line macros . * no behavior change * # # # pr # <number> fix # <number> , improve documentation for resourceid patterns [ docs ] improve resource ids documentation . specifically on use of the various helper functions and common patterns documents that the "" ismatch ( ) "" functions accept <allcaps> null </allcaps> pointers so they can be used with initial validation ( gatekeeper ) . all other helper functions assume a non - <allcaps> null </allcaps> pointer . # # # pr # <number> fix # <number> , assert <code> is a bitmask compiler will catch if the <code> value changes in such a way that makes it not usable as a bit mask as intended . add a compile time assert to ensure that <code> value is one less than a power of two ( i . e . an <allcaps> lsb </allcaps> - justified bit mask ) . notes in the comments that it serves as both a numeric limit and a mask . # # context part of < <url> # # testing cfe tests < <url> cfs bundle tests < <url> # # authors <user> <user> <user>"
"fix # <number> , function block comments <section> fixes # <number> scrub all internal apis within <allcaps> cfe </allcaps> core to make comment blocks in sources and headers more consistent . whenever a function is prototyped in a header , this moves the information about the function behavior to that prototype and puts it into doxygen format . the comment block on the function implementation refers the reader to the prototype - it does not duplicate the info . exception for local helper functions which are not separately prototyped , these may have pre / post condition info in the block itself . all functions definitions are noted whether they intend to conform to the public <allcaps> api </allcaps> ( i . e . from a header in core_api ) and therefore have global scope , or if they have application - internal scope , or if they have file / local scope . <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none - documentation updates only <section> ubuntu <number> <section> changes to each subsystem are put in a separate commit . <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> - also fixes # <number> ( deletes instead of moves , they are not implemented )"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : table services & time services # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <code> # # objectives <number> . this review starts on <section> . <number> . dispositions of findings is on <section> <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general comment there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , add <allcaps> es cds </allcaps> functional test <section> fixes # <number> adds new functional tests for es cds <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
fix810 es cds functional tests <section> fixes # <number> adds new functional tests for es cds . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , add current time functional test <section> fixes # <number> adds new functional tests for time current <allcaps> api </allcaps> . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , fs header functional tests <section> fixes # <number> adds new functional tests for fs header . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe_es_restorefromcds crashes when target block too small <section> if the pointer to the block of memory is smaller than <allcaps> cds </allcaps> size then the app crashes <section> call cfe_es_restorefromcds ( void * restoretomemory , cfe_es_cdshandle_t handle ) with restoretomemory smaller than the size of handle <section> should return an error code saying the target is too small . <section> got this error from the console <section> : terminated aborted ( core dumped ) <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , split interface and implementation modules separates the list of <allcaps> cfe </allcaps> core interface modules ( e . g . core_api ) from the list of <allcaps> cfe </allcaps> core implementation modules ( e . g . msg ) . this allows the content of core_api to be expanded to locally include any additional modules the user has added to cfe core via the <code> list . # # # pr # <number> fix # <number> , add docs to <code> regarding clearing note in the documentation for this function that it is the responsibility of the calling app to clear / fill the <allcaps> cds </allcaps> block any time a new block is allocated . # # # pr # <number> fix # <number> , remove testrunner and convert testcase to app removes the separate <allcaps> cfe </allcaps> "" testrunner "" module and moves the logic associated with running a test into cfe_assert library . converts the "" testcase "" module from a library into an app , by calling into the runner logic that is now inside cfe_assert . each functional test is a separate app , not a library , so it can be started and stopped via es command like any other app . # # # <allcaps> hotfix ic </allcaps> <number> - <number> - <number> : always build cfe_assert . building "" cfe_assert "" does not need to be conditional on <code> , it should be built all the time . # # additional context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # authors <user>"
"restrict <code> to core use only <section> similar to # <number> which would be a bigger change , but at minimum should remove this from the public <allcaps> api </allcaps> so libs do not start using it . <section> move to internal / private . also need to confirm requirements match up . <section> # <number> - probably should be removed all together , but that ' s a bigger issue <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"use of <code> in apis does not follow preferred model <section> <code> is used in many of the cfe core apis . this leads to possible <allcaps> eid </allcaps> collisions ( core to app ) , cross dependencies for filter management , and does not really follow preferred pattern . <section> apps should manage their events , apis should return status for apps to handle . <section> manage eids to prevent collisions , still not great since they are compiled in so fairly fragile <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , exception logic when app / task is not found <section> adds comments to describe the logic when an exception cannot be traced back to a specific app , in that it should fall back to the <allcaps> psp </allcaps> reset . restarting only an app is a special opt - in case that is only done if specifically selected when starting the app , and the exception is also positively traced back to that app . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none - documentation only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update documentation for cfe_es_deletecds <section> noted that this does not actually wipe or erase the block , it only returns resources to the pool for re - use . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none , documentation change only . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve documentation for resourceid patterns <section> improve the doxygen documentation on the various helper functions and common patterns dealing with resource ids . specifically , document that the "" ismatch ( ) "" functions accept <allcaps> null </allcaps> pointers to allow use with initial validation ( gatekeeper ) , but all other helper functions assume a non - <allcaps> null </allcaps> pointer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build design docs <section> none - documentation only , no code change here <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"cfe_es_stop_app_cc results in processor reset ( sp0 only ) <section> the cfe_es_stop_app_cc is resulting in a processor reset when sent to our sp0 . note that this behavior is isolated to the sp0 and is not observed on a linux system . <section> start a test app send the cfe_es_stop_app_cc command observe reset <section> application exits cleanly <section> sp0 os : vxworks <number> cfs versions : cfe v6 . <number> - rc1 + dev218 , osal v5 . <number> - rc1 + dev109 , psp v1 . <number> - rc124 <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , memory pool pointer type <section> changes the type of pointer in the <allcaps> api </allcaps> from <code> to <code> to be more consistent and easier to use . should be backward compatible . this also updates the doxygen documentation for this parameter , as it was specifying a <number> - bit alignment requirement whereas the alignment requirement is processor dependent - <number> bit processors typically will need <number> bit alignment . link to the macro which is intended to aid in aligning the static pool buffer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , rebuild documentation . <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add docs to cfe_es_registercds ( ) regarding clearing <section> note in the documentation for this function that it is the responsibility of the calling app to clear / fill the <allcaps> cds </allcaps> block any time a new block is allocated . fixes # <number> <section> build and sanity check . <section> none - documentation only . <section> ubuntu <number> <section> do not recommend changing this behavior , it could easily break something or have unintended consequences , but should be clear in docs that a new <allcaps> cds </allcaps> block must be written to before using , and it is the app / caller responsibility to do so . <section> joseph hickey , vantage systems , inc ."
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : sb , <allcaps> msg </allcaps> , and globals # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <code> # # objectives this review starts on <section> <number> . dispositions of findings is on <date> . <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general comment there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , cfe_success constant type <section> ensures that the cfe_success constant is the cfe_status_t type . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , confirm nothing went wrong . <section> none <section> ubuntu <number> <section> the explicit cast is required on all error codes that are expected to be _negative_ values . the problem that occurs if these are not forced to <code> type is that the compiler up - converts them to <code> , which on a <number> - bit platform can can represent the value as a positive integer . therefore a test for equality starts to fail . on codes that are positive values , it does not matter as much , the compiler will not need to convert these literals to anything other than int , but it should not hurt to add it for consistency , just in case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check status of call to cfe_es_cds_cachepreload <section> confirm that the call returned cfe_success before continuing . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> note that the error / failure condition here is effectively dead code from the beginning . not even coverage test can exercise it , because its a void function , and the args are largely fixed / constant values . so this now shows up as untested lines in the coverage report . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , error if alignment size not a power of two <section> instead of "" fixing "" the alignment mask , return an error if the passed - in value is not actually a power of two . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests <section> function will return <code> if the passed in parameter is not a power of two . <section> ubuntu <number> <section> this is an internal functions , and in es this only gets passed from two possible sources : one is <allcaps> cds </allcaps> , hardcoded as <number> , and the other is sourced from the align_of macro for generic memory pools . the latter is platform - dependent but i have never seen a platform that aligns data on something other than a power of two boundary . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , assert cfe_resourceid_max is a bitmask <section> add a compile time assert to ensure that this value is actually a power of two - <number> ( i . e . an <allcaps> lsb </allcaps> - justified bit mask ) . notes in the comments that it serves as both a numeric limit and a mask . fixes # <number> <section> build <allcaps> cfe </allcaps> normally , sanity check . also intentionally set <code> to an invalid value and confirm that the compile time assert caught it . <section> will catch the case if the <code> value changes in such a way that makes it not usable as a bit mask as intended . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , better warning about malformed startup line <section> this improves the log message when a line in the startup script is not formed correctly , such as being too long or having too many tokens . fixes # <number> <section> hack <allcaps> cfe </allcaps> startup file to have a bad line with too many tokens . confirm that all _other_ apps started ok . <section> none if startup script is correctly formed . but startup file line with too many tokens now generates a more concise warning as opposed to being silent . this also adds an indicator of which is the actual bad line . example . <number> - <number> - <time> . <number> es startup : es startup file line <number> is malformed : <number> bytes , <number> tokens . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename "" zero "" union member field <section> this field is just some generic bits . it is used when the <allcaps> cds </allcaps> is cleared by zero - filling this data block and writing it to <allcaps> cds </allcaps> repeatedly in a loop . renaming it to "" genericdatablock "" should be clearer as to its intent . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> confirm all unit tests pass <section> none <section> ubuntu <number> <section> just renames internal field to avoid confusion about the name <code> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unneeded cfe_es_syslog_append macro <section> replace uses of this internal macro with the <code> <allcaps> api </allcaps> . fixes # <number> <section> build and sanity check , run all unit tests <section> none <section> ubuntu <number> <section> coding standards discourage use of multi - line macros , and for the <number> remaining uses there is no compelling reason not to just use the standard public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
add functional test to ci <section> now that there are functional tests for cfe they should be added to the continuous integration and checked on pull requests like the osal tests . <section> the tests should be run on pull requests like the osal tests . <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
clarify use of <code> in <code> <section> use of <code> not clear : <url> <section> improve documentation / justify use . <section> none <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"move <code> to the end of <code> to maintain consistent locations <section> cfe_mission_es_cds_max_full_name_len change could move <code> location : <url> <section> confirm cfe_es_cds_regrec_t is not "" exposed "" anywhere it matters , move <code> to the end <section> if it is exposed , trade impacts and determine appropriate milestone <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add null pointer check to cfe_es_reloadapp functional test <section> appfilename <allcaps> null </allcaps> not checked ( or tested ) <url> <section> add a <allcaps> null </allcaps> test , add the check ( if needed ) <section> none <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused error codes <section> fixes # <number> removes unused error codes . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
<allcaps> wip </allcaps> cfe functional test structure preview <section> this is an overview of a few different task all merged together to get a look at the structure of the test files . to make sure everyone agrees on how they should be done and to discuss any changes they want that affect multiple tests . <section> this should never be merged in . it is just to have an easy way to look at the big picture . <section> alex campbell
"fix # <number> , remove option for "" osal_compatible "" <section> currently it is assumed / required that resource ids follow the "" osal compatible "" pattern . perhaps in a future version this could change , but for now it is simpler to just require this configuration , rather than having an option with only one choice . this renames / moves the header file but the content is not fundamentally changed . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm normal operation run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"create structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t <section> see <url> cfe_es_memaddres_t and cfe_es_memoffset_t are often used in pairs . <section> the two could be combined into ( for example ) cfe_es_memaddoff_t <section> none <section> from code review # <number> <section> jacob hageman <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , submitted by <user>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , use events for <allcaps> cfe </allcaps> test asserts reports test failures as <allcaps> cfe </allcaps> events . test status messages are now sent as events rather than syslog . this allows for more processing capability , and allows failures to be received externally ( e . g . ground system ) . # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> # # author <user>"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : <allcaps> evs </allcaps> and fs # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <url> <code> # # objectives <number> . this review starts on <date> and ends on <date> . <number> . dispositions of findings is on <date> . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes if there ' s anything else that is observed as a repeated pattern , feel free to document as a general commen there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow rule <number> in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> - <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , remove testrunner and convert testcase to app <section> - removes the separate <allcaps> cfe </allcaps> "" testrunner "" module and moves the logic associated with running a test into cfe_assert library . - converts the "" testcase "" module from a library into an app , by calling into the runner logic that is now inside cfe_assert . this permits tests to be invoked at any time by issuing the es "" start app "" command and specifying the testcase app . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . run all currently - implemented functional tests <section> each functional test is a separate app , not a library , so it can be started and stopped via es command like any other app . <section> ubuntu <number> <section> requires # <number> as prerequisite <section> joseph hickey , vantage systems , inc ."
"fix typo in test macro name : utassert_resourceid_undifeined <section> typo in recently added macro name : <url> <section> "" undifeined "" - > "" undefined "" <section> from # <number> , which somehow got merged to main without fixing this <section> joseph hickey , vantage systems , inc ."
"fix # <number> , split interface and implementation modules <section> separate the list of <allcaps> cfe </allcaps> core interface modules ( e . g . core_api ) from the list of <allcaps> cfe </allcaps> core implementation modules ( e . g . msg ) . this allows the content of core_api to be expanded to include any additional modules the user has added to cfe core locally . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no <allcaps> fsw </allcaps> change , only build system . the "" core_api "" interface module will now be expanded to include anything that is in the <code> list , so if the mission has locally expanded this list , the additional / expanded content will become part of <code> automatically . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , es child task functional test <section> fixes # <number> adds new functional tests for child cases . fixes # <number> fixed spelling mistake <section> none <section> ubuntu <number> <section> this is just the most simple cases , edge cases are not checked . <section> alex campbell <allcaps> gsfc </allcaps>"
"format code <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , remove broken <allcaps> builddir </allcaps> reference <section> fix # <number> - removes <allcaps> builddir </allcaps> reference and an old comment <section> <code> no longer fails . <section> none <section> - hardware : docker container - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hagmean - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , es info <allcaps> api </allcaps> functional test adds new tests for the es info apis # # context part of < <url> # # tests cfe checks < <url> bundle checks : < <url>"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : es , resource id , core api and private , and build system # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <url> <code> # # objectives <number> . this review starts on <number> - <number> - <number> and ends on <number> - <number> - <number> <number> . dispositions of findings is on <number> - <number> - <number> <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general commen there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"[ <allcaps> deleted </allcaps> ] # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum cfe code inspection ( full - scale code review ) ."
"[ <allcaps> deleted </allcaps> ] # # description this is a "" dummy "" pull request meant for the cfs - caelum cfe code inspection ( full - scale code review ) ."
"cfe integration candidate : <number> - <number> - <number> # # change description and impacts # # # pr # <number> fix # <number> , remove pspconfig global object removes <code> member from the <code> object . updates the only remaining reference to this object inside the <code> and uses the new version <allcaps> api </allcaps> instead . updates the <allcaps> osal </allcaps> version print to use the version <allcaps> api </allcaps> call and <allcaps> cfe </allcaps> uses the macro directly . # # # pr # <number> fix # <number> , zerocopy typo in readme . md replaces duplicate mention of the removed <code> with the correct removal target of <code> # # tests cfe < <url> bundle < <url> # # additional context part of < <url> # # authors <user> <user>"
"fix # <number> , zerocopy typo in readme <section> fix # <number> , zerocopy typo in readme <section> docs only <section> none <section> none <section> nonoe <section> <user>"
"fix # <number> , use events for <allcaps> cfe </allcaps> test asserts <section> reports test failures as <allcaps> cfe </allcaps> events , which allows for more processing capability , and allows failures to be recieved externally ( e . g . ground system ) . fixes # <number> <section> update startup script to load the <allcaps> cfe </allcaps> functional test libs + apps and execute <allcaps> cfe </allcaps> to run the tests . <section> test status messages sent as events rather than syslog . <section> ubuntu <number> <section> also tested in conjunction with # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increment sequence if indicated <section> do not restrict sequence increment to <allcaps> tlm </allcaps> only , since <allcaps> cmd </allcaps> packets can be locally generated too ( e . g . <allcaps> sch </allcaps> , <allcaps> time </allcaps> ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests . <section> all transmitted messages will get their sequence count incremented if transmitted with parameter <code> set to true . previously , for some reason , this flag was only honored on <allcaps> tlm </allcaps> packets . <section> ubuntu <number> <section> thus far i have not found a real reason / explanation as to why this flag would be ignored for <allcaps> cmd </allcaps> packets . if there is a good reason , it should be documented . otherwise for the sake of consistency it should be done for all messages . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove pspconfig global object <section> the <code> member is removed from the <code> object . updates the only remaining ref to this object inside the cfe_psp_version macro to use the <allcaps> api </allcaps> function instead . this also updates the <allcaps> osal </allcaps> and <allcaps> cfe </allcaps> version print to _not_ depend on the global object too - <allcaps> osal </allcaps> becomes an <allcaps> api </allcaps> call and <allcaps> cfe </allcaps> can just use the macro directly because its the same library ( itself ) so no linking concern / issue . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> co - dependent with nasa / psp # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , limit check in pool validation <section> it is ok / valid if numbuckets is the maximum value . fixes # <number> <section> build and run all unit tests <section> pool structure using max value will correctly validate <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> add null pointer check <section> fixes # <number> adds null pointer checks fixes # <number> finishes refactor for buffer error to bad argument . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"update cfe_assert / cfe_testrunner / cfe_testcase namespaces to match cfs suggested standard <section> from # <number> , the cfe_testrunner entry point was too long , so namespace was adjusted to cfe_tr . cfs suggested namespace is typically just a couple characters ( <number> - <number> ) . <section> adjust all three to shorter / consistent namespaces ( module name , function names , globals , etc ) <section> cfe_asrt , cfe_tr , cfe_tc ? <section> # <number> , <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove redundant checks in cfe_evs_earlyinit <section> fix # <number> - removed redundant checks for cfe_success <section> build / run unit tests , passed <section> none , squashes static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , scrub include header guards <section> all c header files should have a header guard matching the file name of the header , in all_caps , with no extra leading / trailing underscores . this also takes a first pass at converting the file - scope block comments to a doxygen format to include a summary of the file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build and run all unit tests build documentation and confirm the content of "" detailed description "" on the files contains the info from <code> doxygen blocks . <section> no impact to behavior . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add branch coverage option to genhtml <section> fix # <number> , adds - - branch - coverage option to genhtml line in lcov makefile rule <section> <code> - observe branch coverage summary reported , also checked and html includes branch coverage <section> no code behavior changes <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , removes impossible conditions fix # <number> , remove deprecated elements fix # <number> , squash potentially uninitialized variable warnings fix # <number> , squash possible uninitialized variable false alarms fix # <number> , typo in cfe_tbl_validate appname fix # <number> , initialize totalmsgsize in cfe_sb_getuserdatalength fix # <number> , increment createpipeerrorcounter for all create pipe errors fix # <number> , remove useless assignments / checks fix # <number> , scrub include header guards fix # <number> , check for <allcaps> null </allcaps> in slotused helpers fix # <number> , removed redundant checks for cfe_success fix # <number> , remove task registration calls fix # <number> , shorten testrunner function name fix # <number> , convert functional test startup script example to use "" simple "" filenames fix # <number> , use fs file name parser for commands fix # <number> , clean up zero copy <allcaps> api </allcaps> fix # <number> , global variable cleanup fix # <number> , report <allcaps> psp </allcaps> version in <allcaps> es hk tlm </allcaps> fix # <number> , limit check in pool validation fix # <number> , add null pointer check fix # <number> , replace <code> return for invalid null pointer arguments fix # <number> , adds - - branch - coverage option to genhtml line in lcov makefile rule # # testing cfe tests <url> bundle tests < <url> # # behavior changes # # # pr # <number> removes cases in <code> and <code> that could never hit the alternate condition since the condition was already checked # # # pr # <number> removes all apis deprecated in # <number> and # <number> # # # pr # <number> resolves codeql warnings on uninitialized variables . # # # pr # <number> refactors a small portion of <code> and initializes variables to resolve "" uninitialized variable "" false alarms . # # # pr # <number> fixes a typo in initialization in <code> # # # pr # <number> initializes <code> as <number> to avoid static analysis warning of "" use before initialized "" # # # pr # <number> increments the <code> for all create pipe errors to eliminate a trivial static analysis warning # # # pr # <number> removes redundant or unreachable assignments and checks # # # pr # <number> updates header guards to standard format . converts some file - scope block comments to a doxygen format to include a summary of the file . # # # pr # <number> enables the internal helper functions that determine table slot availability to handle <allcaps> null </allcaps> pointers . # # # pr # <number> resolves static analysis warnings by removing redundant check for <code> in <code> # # # pr # <number> <section> moves the invocation of <code> from the registration function to the pre - entry function and removes all references to task registration in code , docs , and tests . # # # pr # <number> renames <code> as <code> so it is less than <number> characters long . updates app file names in documentation for <code> . # # # pr # <number> replace the call to <code> with the new filename - aware function <code> for commands that contain file names like <code> . the default pathname / extension logic is now applied here too and only a "" basename "" is strictly necessary , although if a full / absolute path is given , it will be used as is . # # # pr # <number> removes the now - unnecessary <code> type and all apis that refer or require it . replaces <code> and <code> with two new simplified functions <code> and <code> , respectively . these new functions do not use a separate handle . updates the <code> <allcaps> api </allcaps> to also remove the handle . does affect public apis . # # # pr # <number> internal cleanup localized to es implementation . consolidate all es global variables under the <code> struct . removes the separate <code> and some random pointers that were stored at global scope . adjusts all references to the deprecated items accordingly ( search and replace ) . # # # pr # <number> adds <allcaps> psp </allcaps> version info to es housekeeping <allcaps> tlm </allcaps> messages . changes both <allcaps> psp </allcaps> and <allcaps> osal </allcaps> version info assignments on <allcaps> hk tlm </allcaps> to use the new version info <allcaps> api </allcaps> . # # # pr # <number> fixes check for "" numbuckets "" member to use <code> instead of <code> . <code> now returns <code> if using the max number of buckets ( <number> by default ) and the pool structure using max value will correctly validate # # # pr # <number> replaces remaining <code> with <code> for when functions receive an invalid null - pointer argument . adds null pointer checks in <code> . # # # pr # <number> adds branch coverage to html report when running <code> # # additional context part of < <url> # # authors <user> <user> <user> <user>"
"fix # <number> , clean up zero copy <allcaps> api </allcaps> <section> this removes the now - unnecessary <code> type and all apis that refer / require this extra handle . adds two new simplified functions <code> and <code> to replace <code> and <code> , respectively . these new functions do not use a separate handle . updates the <code> <allcaps> api </allcaps> to also remove the handle . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check , run all tests . also updated ci_lab to use this zero copy <allcaps> api </allcaps> pattern , and confirm that all is working correctly . <section> removes redundant handle type and simplifies <allcaps> api </allcaps> . note - this does affect public apis . <section> ubuntu <number> <section> see also nasa / ci_lab # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check for <allcaps> null </allcaps> in slotused helpers <section> these are internal helper functions that determine if a table slot corresponding to a given id is in use or free / available . this updates the function to handle <allcaps> null </allcaps> pointers even though in context they are used the lookup should always work . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> should resolve a static analysis warning <section> joseph hickey , vantage systems , inc ."
"fix # <number> , report <allcaps> psp </allcaps> version in <allcaps> es hk tlm </allcaps> <section> add <allcaps> psp </allcaps> version info to es housekeeping <allcaps> tlm </allcaps> messages . this is done equivalently to <allcaps> osal </allcaps> version info . changes both to use the proper version <allcaps> api </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm <allcaps> hk tlm </allcaps> packets transmitted correctly . <section> changes format of <allcaps> hk tlm </allcaps> to include <allcaps> psp </allcaps> version info . <section> ubuntu <number> <section> this may need a corresponding update in the python ground system for <allcaps> es hk </allcaps> to display correctly , since it adds new fields . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , global variable cleanup <section> consolidate all es global variables under a single cfe_es_global . removes the separate cfe_es_taskdata as well as some random pointers that were stored at global scope . all references adjusted accordingly ( search and replace ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none , internal cleanup localized to es implementation <section> ubuntu <number> <section> the following es variables were instantiated separately at global scope without real reason : - cfe_es_taskmain - cfe_es_resetdataptr - perf ( was not even qualified w / cfe_es_ ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , squash potentially uninitialized variable warnings <section> fix # <number> - initialized all the potentially uninitialized variables ( all false alarms ) <section> build / run unit tests , passed <section> none , just squashes codeql warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> static analysis warning squash <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> es api </allcaps> functional tests <section> fixes # <number> new tests for the es info <allcaps> api </allcaps> ' s <section> this is the test <section> none <section> dependant on # <number> addresses are only valid on vxworks system so the tests for when that is true have not be run and verified . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove task registration calls <section> explicit task registration is no longer necessary , since all required actions can be done before invoking the entry point . this moves the invocation of <code> from the registration function to the pre - entry function , this was the only remaining action in task registration . all references to task registration in code , docs , and tests are removed . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to behavior , but this is an <allcaps> api </allcaps> change that affects apps . <section> ubuntu <number> <section> cfe_es_registerapp and cfe_es_registerchildtask functions no longer exist . requires updates to apps to remove these calls if they are referenced . <section> joseph hickey , vantage systems , inc ."
trigger for static analysis <number> <section> codeql results not showing up on branch pushed to fork . test pr for static analysis <section> n / a <section> n / a <section> ci <section> for static analysis <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , typo in cfe_tbl_validate appname <section> fix # <number> - appname initialization from "" <allcaps> unknwon </allcaps> "" to "" <allcaps> unknown </allcaps> "" <section> ci <section> none , just fixes the typo in initialization ( typically replaced by the real appname ) . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , increment createpipeerrorcounter for all create pipe errors <section> fix # <number> - increments the createpipeerrorcounter for all create pipe errors which eliminates a static analysis warning for trivial case <section> build / run unit tests , passed <section> increments the error counter for all pipe creation errors <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , bit order macros fix # <number> , removes false child tasks statement . fix # <number> , adds cast to avoid implicit conversion on a vsnprintf error fix # <number> , clarify the documentation on sb msgid regarding requirements for command and telemetry messages fix # <number> , cast isspace input to unsigned char to avoid undefined behavior fix # <number> , updated message module , msgid v1 to use mask instead of cast to alter value ( and added comment ) fix # <number> , coercion alters value caused by incorrect type - static analysis warning fix # <number> , use quotes for local includes fix # <number> , and # <number> add a contributing guide fix # <number> , reinstate recipes for coverage test # # testing performed see < <url> # # expected behavior changes # # # pr # <number> adds a local definition of <code> directly inside <code> to provide a compatible symbol for apps that still require this . this allows <allcaps> cfe </allcaps> to build and run successfully when <allcaps> osal </allcaps> stops providing this in <code> . # # # pr # <number> removes incorrect statements from application developers guide # # # pr # <number> fixes truncation handling on vsnprintf error by adding a cast to avoid implicit conversion # # # pr # <number> clarify the documentation on sb msgid regarding requirements for command and telemetry messages # # # pr # <number> avoids undefined behavior and resolves static analysis warnings by casting <code> input to <code> . # # # pr # <number> updates message module and msgid v1 , <code> , to use mask instead of cast to alter value . resolves static analysis warning . # # # pr # <number> updates <code> to report status , not a <code> actual since <code> returns <code> . use <code> for local type from <code> since it ' s an index , not a status . # # # pr # <number> replaces <code> with <code> in local <code> s # # # pr # <number> adds <code> that links to the main cfs contributing guide . ` # # additional context part of < <url> # # third party code none # # contributor info - all information <allcaps> required </allcaps> for consideration of pull request"
"fix # <number> , # <number> shorten testrunner function name and update cfe_es_startup . scr docs <section> fixes # <number> change the name of the testrunner main function to be less than <number> characters . fixes # <number> use simple filenames . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , squash possible uninitialized variable false alarms <section> fix # <number> - swash uninitialized variable false alarms with a minor refactor and initializations where required . <number> elements listed in # <number> were <allcaps> obe </allcaps> , will rerun analysis and write a new issue if additional fixes required . <section> build / run unit tests <section> none , squashes static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + cfe main ( for unit test fix ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removes all deprecated elements <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + cfe main ( unit test fix ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove impossible conditions <section> fix # <number> - removes impossible conditions ( typically a test that could never hit the alternate condition since the condition was already checked ) <section> build / run unit tests <section> none , squash static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove useless assignments / checks <section> fix # <number> - removes useless / redundant / unreachable assignments / checks <section> build / run unit tests <section> none , resolves static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , avoid implicit conversion from vsnprintf errors <section> fix # <number> - adds cast to avoid implicit conversion on a vsnprintf error , and comments to explain <section> build / run unit tests ( note # <number> ) <section> no real change , vsnprintf should never error but does avoid static analysis warnings . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize totalmsgsize in cfe_sb_getuserdatalength <section> fix # <number> - initialize totalmsgsize to <number> to avoid false use before initialized static analysis warning <section> build / run unit tests <section> none , just squashes warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve type issues with cfe_es_filewritebytecnterr and cfe_tbl_findtableinregistry <section> fix # <number> - use int16 for local type from cfe_tbl_findtableinregistry ( it ' s an index , not a status ) - update cfe_es_filewritebytecnterr to report status , not a size_t actual ( os_write returns int32 ) <section> build / run unit tests , passed <section> squash static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use mask instead of cast to alter value <section> fix # <number> - updated message module , msgid v1 to use mask instead of cast to alter value ( and added comment ) <section> build / run unit tests ( note see # <number> ) <section> squash static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cast isspace input to unsigned char <section> fix # <number> - cast isspace input to unsigned char to avoid undefined behavior <section> build / run unit tests ( note issue # <number> ) <section> squash static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use fs file name parser for commands <section> for commands containing file names , replace the call to cfe_sb_messagestringget ( ) - which is just a basic copy - to the new filename - aware function cfe_fs_parseinputfilename ( ) . this means that the default pathname / extension logic is applied here too and only a "" basename "" is strictly necessary , although if a full / absolute path is given , it will be used as is . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> issue commands which accept file names ( e . g . <allcaps> restart </allcaps> app ) and confirm they accept the same file names as the startup script accepts . <section> commands accept "" bare "" file names using same logic as startup script , assuming a default path and extension if omitted . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use quotes for local includes <section> fix # <number> - use quotes for local includes <section> build / run unit tests ( note open issue on unit tests , # <number> ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , reinstate recipes for coverage test <section> builds the <allcaps> cfe </allcaps> coverage tests using new cmake functions . also requires fixing up some include directives in ut headers to make this all work correctly . fixes # <number> <section> build and run unit tests , confirm that cfe core module coverage tests are now part of the group as they should be . <section> cfe core coverage tests are built . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> - <allcaps> hotfix </allcaps> <number> , updates to work with older cmake - fix # <number> , reorganize directory structure - <allcaps> hotfix ic </allcaps> <number> - <number> - <number> : correct static app build issue <section> ci <section> see prs <section> ci <section> none <section> none <section> <user>"
"fix # <number> , clarify the documentation on sb msgid <section> fixes # <number> clarify the documentation on sb msgid regarding requirements for command and telemetry messages <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> apply and check standard code format <section> fix # <number> fix # <number> <section> see checks tab < <url> bundle ( fork ) test : < <url> <section> adds new github actions workflow that checks format . this workflow runs on both "" push "" and "" pull_request "" for all branches so at the moment it will trigger twice for any branch that is part of a pull request <section> ubuntu <number> <section> will create a tag after merge <section> none"
"fix # <number> , bit order macros <section> provide a local definition of software_big / little_bit_order directly inside <code> to provide a compatible symbol for apps that still require this . this allows <allcaps> cfe </allcaps> to build and run successfully when <allcaps> osal </allcaps> stops providing this in common_types . h . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> maintains backward compatibility after nasa / osal # <number> <section> ubuntu <number> <section> prerequisite of nasa / osal # <number> . this pr is needed in same merge cycle or before . <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> <section> ci <section> see related prs <section> ci <section> none <section> none <section> <user> <user> <user>
"fix # <number> , add wrapper targets to simplify app builds <section> adds the following functions to simplify tracking of dependencies and use of interface libraries provided by <allcaps> cfe </allcaps> : add_cfe_app_dependency - dependency that applies to both <allcaps> fsw </allcaps> and coverage test add_cfe_coverage_dependency - dependency that applies only to coverage test ( i . e . for overrides ) add_cfe_coverage_test - creates object + executable targets for coverage test add_cfe_coverage_unit_include - add extra include path to unit build ( i . e . for overrides ) add_cfe_coverage_stubs - add a stub library for coverage testing other modules the goal is to reduce / eliminate the need to directly specify any include paths or compile definitions for dependencies , relying on target properties to do this instead . fixes # <number> <section> build and run all <allcaps> cfe </allcaps> unit tests ( this only affects ut , not <allcaps> fsw </allcaps> ) <section> none , just adding the routines for now , sample app / lib will be transitioned to use them in subsequent pr <section> ubuntu <number> <section> this is needed as part of preparation for directory reorganization in # <number> . these wrapper functions will make it much easier to fixup apps that depended on the old include paths . with this they should not need to ever refer directly to an include path ( or any path ) from another target , so it should avoid any future issues if files get moved around again . see also nasa / sample_lib # <number> and nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reorganize directory structure <section> reorganize / refactor the <allcaps> cfe </allcaps> source code directory structure per the discussion in # <number> . important notes : - this uses cmake "" interface libraries "" to define the <allcaps> cfe </allcaps> apis - the public interface is now defined in the <code> and the internal interface ( private types , stuff that goes only between core apps ) is in <code> . - the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definition headers ( e . g . <code> ) are within the <code> directory of the respective module - because these are "" owned "" by the module itself . - any data types that are shared between <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message and <allcaps> api </allcaps> functions should be defined in the "" extern_typedefs . h "" file ( some things did have to move to meet this ) . - split all public headers into two groups : - the "" api_typedefs . h "" ( e . g . <code> ) which is intended to define the data types and constants used in the <allcaps> api </allcaps> , which in turn may be included by other headers that need to reference / build upon the data types in the respective <allcaps> api </allcaps> . - the actual <allcaps> api </allcaps> header ( e . g . <code> ) which contains the all function prototypes . it is intended to be included only from c files . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> none outside build system . <section> ubuntu <number> ( native ) testing is not yet sufficient - still needs more verification on other platforms and configurations ( static apps , etc ) . <section> although this is a substantial change to the build system and directory structure , very little ( if any ? ) of the <allcaps> fsw c </allcaps> code was actually changed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct compiler warnings <section> corrects some ( false ) warnings about use before init . also corrects an alignment warning and removes unneeded union type ( union type is not the best way to deal with this situation ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> for raspberry pi ( older <allcaps> gcc </allcaps> w / strict alignment ) and native ( <number> - bit ) run all unit tests <section> none , just compiler warning fixes <section> ubuntu <number> ( native ) raspbian ( cross compiled ; gcc <number> . <number> ) <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor sb buffer descriptor object fix # <number> , update <code> to use the <code> type fix # <number> , remove cfeesugshellsrv from user guide fix # <number> , apis missing argument validation fix # <number> , apis missing check for <allcaps> null </allcaps> pointer ( s ) fix # <number> , calculate crc can not return error code fix # <number> , remove logic based on logenabled status fix # <number> , correct compiler warnings <section> see < <url> <section> pr # <number> - refactors the sb buffer descriptor object <code> and simplify the zero - copy buffer paradigm . combines the zero - copy and the normal <allcaps> cfe </allcaps> buffer descriptor into a single unified <code> object . results in a simpler zero - copy design that is similarto the the standard , non - zero - copy message path . all message descriptor objects are now tracked in a list by sb . all changes are internal to sb . this does not affect <allcaps> api </allcaps> or behavior of any existing apis ( but see note ) . corrects a minor issue where the <code> would get incremented if there were no subscribers , but only in the zero copy <allcaps> api </allcaps> . pr # <number> - replaces <code> with <code> for all error message codes pr # <number> - removes references to <code> from user guide pr # <number> - adds null pointer checks and size checks to validate method parameters . returning the input instead of an error code pr # <number> - removes use of <code> element in hk telemetry for <allcaps> evs </allcaps> logic since log is always enabled now . on failures , reset area or semaphore will panic . pr # <number> - fixes various build warnings when <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , remove false child tasks statement . <section> fixes # <number> removes false child tasks statement . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> references to cfe deployment guide were fixed by # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , update pipe name documentation . <section> fixes # <number> clarify pipe name scope in documentation . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe_msg_getsize does not initialize size on failure - static analysis <section> should initialize all output parameters : <url> <section> initialize to <number> scrub <allcaps> msg api </allcaps> ' s to ensure documentation and implementation comply ( set all outputs , and define in documentation ) <section> none <section> static analysis warning <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
infinite loop false alarm in unit test ( easy fix ) - static analysis warning <section> static analysis warning on <code> being int8 . can be avoided if defined as size_t . <url> based on logic strlen ( ut_subsys ) will never be bigger than int8 ( unless someone redefines ut_subsys as something unreasonable ) so this is a false alarm but easy to fix and better pattern to follow . <section> change to size_t <section> none <section> please wait until # <number> is resolved . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update <allcaps> crc </allcaps> documentation <section> fixes # <number> includes additional info that describes the <allcaps> crc </allcaps> <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfeesugshellsrv from user guide <section> fixes # <number> remove cfeesugshellsrv from user guide <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove logic based on logenabled status <section> fix # <number> - no longer utilizing the logenabled element in hk telemetry for <allcaps> evs </allcaps> logic , log is always enabled in this implementation <section> built and executed unit tests , passed <section> no real change , but on failures ( reset area or semaphore ) will panic . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> confirmed still getting <percent> line coverage <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , shorten task info default filename <section> fix # <number> - shortened <code> name so it is within the <code> size limit <section> built and ran unit tests , passed . ran cfs and sent <code> command , confirmed file was generated . <section> will now output task info to default filename if no filename is provided in command . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor target config objects <section> rework the dynamic content so it is generated entirely via a cmake "" configure_file ( ) "" command into a c source file ( . c ) that can be built as normal . this removes the need for inline <code> statements to pull in data fragments to fill in the data . fixes # <number> fixes # <number> <section> build and run all unit tests , sanity test <allcaps> cfe </allcaps> , confirm versions reported as expected . <section> this reports multiple event "" <number> "" ( version info ) - one event for each statically linked code module . this now also includes supplemental modules such as "" msg "" and "" sbr "" ( these were not reported at all before ) . this also moves reporting of the "" mission config "" name from event <number> to event <number> ( build info ) as it is not really version info . ideally event <number> should be strictly for source control revision info . any other environment / config info should be in the other events . <section> ubuntu <number> <section> this also attempts to better differentiate / clarify the two different versions that are reported . the first version is administratively - assigned , traditional "" semantic "" version ( major / minor / rev plus dev build number ) . this is updated manually and it is what is reported in <allcaps> cfe </allcaps> event <number> during start up as follows : <code> the second version is the automatically - obtained "" source "" version which is gained by introspection of the source code at compile time . this is reported in <allcaps> cfe </allcaps> event <number> , as follows : <code> important to note that instead of squeezing this all into a _single_ event <number> as had been done before , this sends a separate event for each component . this means that _all_ components can be done ( note this includes msg / sbr / resourceid now , these were not reported before ) as well as making it possible to split "" cfe - core "" into its components as well . it will scale more easily to any number of modular components . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update to use ut_stub_checkdefaultreturnvalue <allcaps> api </allcaps> <section> fix # <number> - updates <allcaps> api </allcaps> name for nasa / osal # <number> fix <section> build and execute unit tests <section> none , name change ( as long as corresponding nasa / osal # <number> in ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + nasa / osal # <number> + this commit <section> depends on osal pr <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , do file writes in background fix # <number> , put task parameters into task record fix # <number> , allow directories and symlinks in <allcaps> filelist </allcaps> . fix # <number> , add comment if null terminated or not . fix # <number> , shorten task info default filename fix # <number> , update to use ut_stub_checkdefaultreturnvalue <allcaps> api </allcaps> <section> see < <url> <section> pr # <number> - implements a generic fs facility to perform file writes as a background job . applications wanting to use this need to instantiate a state object ( metadata ) in global memory and two callback apis , one to get a data record , another to send events . the following file requests are changed to use this facility : - <allcaps> es er </allcaps> log dump - sb pipe info - sb message map - sb route info - <allcaps> tbl </allcaps> registry dump changes the internal sb member names for consistency and thus fixes propagation of <code> and <code> into files : - <code> for maximum depth at queue creation time ( previously was queuedepth or depth depending on context ) - <code> for the running count ( previously was inuse or currentdepth depending on context ) - <code> for the highest "" watermark "" ( previously was peakinuse or peakdepth depending on context ) pr # <number> - no public <allcaps> api </allcaps> change . encapsulates all parameters for apps and tasks into a structure object . cleans up internal apis to pass this new object rather than individual parameters . adds details to the relevant record ( i . e . a task record has all relevant task details ) which eliminates the need to traverse the app record to find some data . pr # <number> - enables items in <code> to be in a target name directory as well as symlinks . <code> now checks a name - based subdirectory under <code> for files listed in the <code> for that target . if file is a symlink , the link should be followed so the correct content is installed , not a symlink . pr # <number> - mo impacts to behavior . adds documentation on inclusion presence of null terminators for length parameters . pr # <number> - shortened <code> name so it is within the <code> size limit . will now output task info to default filename if no filename is provided in command . pr # <number> - replaces <code> with <code> . no behavior change . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , remove configs about shells <section> fixes # <number> removes unused configs relating to shell commands <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add comment if null terminated or not . <section> fixes # <number> added comments for if lengths included null terminals or not . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds core - cfe and tests , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add fields to task info struct <section> adds stack size and priority to the task info structure written by <code> command . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , issue query_all_tasks command , confirm data is in the resulting file . run all unit tests . <section> adds two new fields to the file produced by the command . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , allow directories and symlinks in <allcaps> filelist </allcaps> . <section> checks a name - based subdirectory under ${ mission_defs } for files listed in the <allcaps> filelist </allcaps> for that target . if file is a symlink , the link should be followed so the correct content is installed , not a symlink . fixes # <number> <section> created a symlink in a target name subdirectory ( see additional context ) and confirm that the correct file content is installed . <section> items in <allcaps> filelist </allcaps> can be in a target name directory , and may be symlinks . <section> ubuntu <number> <section> this also adds another "" <allcaps> note </allcaps> "" message to indicate exactly what file is being used , after all lookup / de - mapping logic is done , e . g . i made a symlink to test this out : $ cd sample_defs $ mv cpu1_cfe_es_startup . scr test_startup . scr $ mkdir cpu1 $ cd cpu1 $ ln - s . <repeated> / test_startup . scr cfe_es_startup . scr $ cd . <repeated> / . <repeated> $ make prep < <snipped> > <allcaps> note </allcaps> : selected / home / joe / code / cfecfs / github / sample_defs / test_startup . scr as source for cfe_es_startup . scr on cpu1 this is similar to all the other informational messages for table sources and app sources indicating where they were found . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement better filename parser <section> implemements a new function in fs to parse an input file name from a user - <code> the new function produces fully - qualified output where the input may omit either a pathname or an extension . these items will be added from the specified defaults , if missing , and a complete fully - qualified filename will be output . if the input is already a fully qualified filename , then the output is the same as the input ( basically a copy ) . this initially is used to provide better cross - platform startup script processing , where module suffix may differ across platforms . only the "" basename "" of the filename needs to be specified in the startup script - everything else can come from defaults . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> . check startup with all combinations of filename in script - fully qualified , basename only . check startup with new default startup script that has basename only - works on both linux ( . so ) and <allcaps> rtems </allcaps> ( . obj ) with no change . <section> easier switching between platforms - startup script does not need to change to account for the different suffix that different platforms use . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( i686 , <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor sb buffer descriptor object <section> refactor the sb buffer descriptor object ( <code> ) and simplify the zero - copy buffer paradigm . combine the zero - copy and the normal <allcaps> cfe </allcaps> buffer descriptor into a single unified cfe_sb_bufferd_t object . this cleans up a bunch of extra logic related to zero - copy buffers , including the extra descriptor object . the result is a simpler zero - copy design that is much less different from the standard ( non - zero - copy ) message path . all message descriptor objects are now tracked in a list by sb , not just the zero - copy descriptors ( for consistency - if any buffers need to be tracked , they should all be tracked ) . this notably puts the buffer content as a _member_ within the descriptor , rather than a calculated pointer , so it will be aligned properly . fixes # <number> <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> all changes are internal to sb . this does not affect <allcaps> api </allcaps> or behavior of any existing apis ( but see note ) it also ensures that zero - copy buffers ( and the associated cfe_sb_transmitbuffer <allcaps> api </allcaps> ) behave as similarly as possible to the normal cfe_sb_transmitmsg <allcaps> api </allcaps> . notably this corrects a minor issue where the msgsenderrorcounter would get incremented if there were no subscribers , but only in the zero copy <allcaps> api </allcaps> . <section> ubuntu <number> <section> this does not change public <allcaps> api </allcaps> in any way . however now there is no extra descriptor for the "" zero copy "" buffers - they are all just buffer descriptors , regardless of whether they were allocated on the fly or pre - allocated by the application . this means that the <code> value that is output from <code> and others is now largely redundant . it is equal to the buffer descriptor address , but it can be easily determined from the buffer content pointer too , so it is really not necessary to pass around two values for zero copy buffers . this can be simplified in a future change - but that will change the public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
generalize msg module unit tests to handle different cfe_platform_sb_highest_valid_msgid settings <section> module unit test code tests against hardcoded highest valid msgid : <url> <section> test against cfe_platform_sb_highest_valid_msgid <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , put task parameters into task record <section> encapsulate all parameters for apps and tasks into a structure object and clean up internal apis to pass this object rather than individual parameters . these parameters can then easily be stored with the relevant record in the internal table ( tasks , apps , libs ) and makes management easier - as code copies one object rather than many individual fields with ( potentially ) different names . all parameters are stored in the record , which facilitates future telemetry generation / stats and / or for when an app might get restarted or reloaded in the future . notably this changes all task startup to go through the same basic routine ( there is no longer a need for different accounting between main tasks and child tasks ) and share the same common entry point . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . in particular ensure that all tasks + child tasks are starting and running normally . also checked that the app restart command is working as expected . run all unit tests and confirm coverage . <section> no public <allcaps> api </allcaps> change . internal apis are simplified , internal data structures are more consistent , and more detail is stored with the relevant record ( i . e . task record has all relevant task details , so when looking up task info one does not have to traverse to the app record which previously held some of this data ) . <section> ubuntu <number> <section> using the common entry point for child tasks avoids a theoretical race condition where the child task might not have been fully accounted for in the global table at the time the user function started execution . previously this would directly invoke the user - supplied function immediately . now using the common entry point this delays until the task record is completely accounted for ( linked back to app , etc ) before calling the user function . so functions such as <code> and others will work right from the beginning . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , patch <allcaps> psp </allcaps> include directory reference fix # <number> , split resource id functions into module fix # <number> , cfe_evs_register const correct and report truncation fix # <number> , remove table service exclusion logic fix # <number> , remove cfe_platform_evs_log_on undefined option to diasble log fix # <number> , check for file existence in cfe_es_restartapp fix # <number> , es and <allcaps> evs </allcaps> use default message limits fix # <number> , convert global cfe_sb_default_qos to macro fix # <number> , hex output for return checking asserts fix # <number> , remove unnecessary cfe_msg_init in <allcaps> tbl </allcaps> fix # <number> , resolve mismatched types in <allcaps> sbr </allcaps> throttle fix # <number> , initialize status in cfe_es_waitforsystemstate fix # <number> , remove unimplemented es prototypes fix # <number> , remove test_sb_cmds_subrptunexpcmdcode fix # <number> , simplify ut_initdata sb setup fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_ … fix # <number> , update highest msgid documentation / verification fix # <number> , clarify restart / reload app behavior fix # <number> , clear task data in earlyinit and standardize name fix # <number> , send - > write name update for sb write cmds fix # <number> , pipename unset with debug event fix # <number> , update workflow action badge fix # <number> , add workflow action timeout fix # <number> , clean up ifdef blocks fix # <number> , add codeql analysis to workflow <allcaps> hotfix </allcaps> for # <number> , update doxygen refs <allcaps> hotfix </allcaps> for # <number> , remove ref to cfeesresourceidbase <section> see < <url> <section> pr # <number> and # <number> - corrects reference to <allcaps> psp </allcaps> header file location . build now succesfully completes the build succeeds again when using <code> in custom cmakelists file . pr # <number> - replace "" send "" with "" write "" in names for commands that write files . for example , <code> . updates function names , command code names and comments . pr # <number> - removes incorrectly implemented deferred return code of <code> for <code> from software bus setup in <code> . pr # <number> - implements more informative <section> by making <code> print <code> while <code> now prints both % lf <code> 0x % lx <code> readme . md <code> test_sb_cmds_subrptunexpcmdcode <code> test_sb_cmds_cmdunexpcmdcode <code> cfe_es_waitforsystemstate <code> status <code> hkpacket <code> tblregpacket <code> cfe_tbl_earlyinit <code> cfe_tbl_initdata <code> notifymsg <code> cfe_tbl_initdata <code> cfe_tbl_sendnotificationmsg <code> cfe_es_appgetlist <code> cfe_es_appdumpallinfo <code> cfe_platform_sb_highest_valid_msgid <code> cfe_es_restart_app_cc <code> cfe_es_restartapp <code> cfe_sb_routeid_atom_t <code> cfe_platform_sb_max_pipe_depth <code> os_queue_max_depth <code> const <code> cfe_evs_register <code> cfe_platform_evs_log_on <code> cfe_platform_evs_log_max = <number> <code> exclude_cfe_tbl <code> cfe_sb_subscribeex <code> cfe_sb_default_qos <code> cfe_sb_default_qos <code> memset <code> <allcaps> cfe msg </allcaps> <code> <allcaps> sbr </allcaps> <code> uint32 ` results in a compiler error . <section> the user can elect at the mission level whether this is a simple typedef ( all uint32 , all interchangeable ) or a wrapper type ( separate / strict type , cannot be interchanged ) . the former is backward compatible but the latter is not - must use proper types . pr # <number> - adds code ql analysis to continuous integration workflow . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , do file writes in background <section> implement a generic fs facility to perform file writes as a background job . applications wanting to use this facility need to instantiate a state object ( metadata ) in global memory , and two callback apis - one to get a data record , another to send events . the following file requests are changed to use this facility : - <allcaps> es er </allcaps> log dump - sb pipe info - sb message map - sb route info - <allcaps> tbl </allcaps> registry dump fixes # <number> <section> first built and ran "" main "" branch ( unchanged ) and issued all file write commands before change to get a baseline / reference copy . then re - built with this change applied and re - issued all file write commands . compared old files to new files - confirmed that the new files are correct ( but see note below ! ) . <section> files are written in the context of the es background task . <section> ubuntu <number> <section> while examining the diffs between the old files and new files , i noticed that the queue depth in the pipe info was actually wrong in the original / reference data . this was due to some mismatches between pipe info fields where names were getting crossed . in order to fix this and avoid it from happening in the future - this changes the internal sb member names to be consistently named : - <code> for maximum depth at queue creation time ( previously was <code> or <code> depending on context ) - <code> for the running count ( previously was <code> or <code> depending on context ) - <code> for the highest watermark ( previously was <code> or <code> depending on context ) in particular the <code> and <code> were not ( previously ) being propagated to the file correctly - as the names got crossed in the implementation . this pr fixes it by making the names consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add workflow action timeout <section> fix # <number> - added a timeout to prevent excess resource utilization ( default is <number> minutes ) <section> set timeout to <number> and added a sleep , confirmed workflow timed out <section> none , just avoids log job runs <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unit test should clear event count history after setup <section> test cases that check for events should focus on the events actually sent by the unit under test . but many test cases also require some "" setup "" calls , which also may generate events . as a result the "" assert "" is checking for all events from the combination of ( setup + test ) . this makes tests more fragile , because many tests call the same routine e . g . <code> as part of the test setup . in the current implementation this appears to generate <number> events in its default / nominal mode . but when ( not if ) <code> changes in any way that affects its nominal events ( very easy to do ) it breaks nearly every test in sb . <section> for any call considered "" setup "" it should discard any events generated by the call , thereby not including them in the set that will be validated later as part of the test case . <section> note that all functions ( by definition ) have their own test case where events _will_ be verified . it does not need to be verified again when it is used as the setup for something else . doing so just causes more maintenance work . this also makes test cases clearer - as they should only be checking for events that are actually generated by the function under test . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , pipe name unset <section> fix # <number> only print the pipe id in the debug event <section> enable debug events and run <allcaps> cfe </allcaps> , observe events <section> debug subscription events have pipe id , no name . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> # <number> , api argument validation <section> fixes # <number> fixes # <number> add validation for method parameters . mostly null pointer checks for # <number> and a few size checks for # <number> fixes # <number> returning the input instead of an error code <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> here is the function list from # <number> and the changes done cfe_es_api . c : cfe_es_deleteapp - can get a segmentation fault if user tries to delete an <allcaps> app </allcaps> greater than cfe_platform_es_max_applications cfe_es_locateapprecordbyid gets a pointer that is either valid or null cfe_es_api . c : cfe_es_reloadapp - can result in segmentation fault if <allcaps> apid </allcaps> is invalid cfe_es_locateapprecordbyid gets a pointer that is either valid or null cfe_es_api . c : cfe_es_createchildtask - input argument ' flags ' is not validated … also it does not appear to be used anywhere , consider removing not changing functions in this task cfe_es_api . c : cfe_es_getappname - consider comparing bufferlength with os_max_api_name prior to use . no invalid buffer length cfe_es_api . c : cfe_es_registercds - consider checking if block size is less than cfe_platform_es_max_block_size cfe_es_registercdsex checks blocksize cfe_es_perf . c : cfe_es_perflogadd - should check if entryexit is either a <number> or <number> it ' s internal and the macro that calls it will only pass in valid values cfe_fs_api . c : cfe_fs_initheader - subtype not checked the <allcaps> api </allcaps> does not have a limitation for subtype cfe_sb_api . c : cfe_sb_subscribefull - quality is not checked … consider checking that it is <number> or <number> quality is not nessacarly <number> or <number> cfe_sb_api . c : cfe_sb_zerocopygetptr - is there a maximum message size ? consider verifying msgsize prior to use . checks msgsize cfe_sb_api . c : cfe_sb_subscribelocal - msglim is not checked … if a max limit does exist , should add argument validation a max limit does not exists cfe_sb_util . c : cfe_sb_setuserdatalength - consider verifying length of user data ( if there exists a limit ) and / or totalmsgsize checks totalmsgsize cfe_tbl_api . c : cfe_tbl_getaddresses - can result in segmentation fault if numtables grows larger than max number of tables . needs to be enforced by user cfe_tbl_api . c : cfe_tbl_releaseaddresses - should check to make sure numtables is less than cfe_platform_tbl_max_num_tables needs to be enforced by user here is a list of the functions from # <number> and their new current state cfe_es_api . c : cfe_es_calculatecrc checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_copytocds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_createchildtask checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getappid checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getappname checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getgencounteridbyname checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_gettaskinfo checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_processcoreexception method no longer exists cfe_es_api . c : cfe_es_registercds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_restorefromcds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_runloop can be called with <allcaps> null </allcaps> cfe_es_api . c : cfe_es_writetosyslog checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getmempoolstats checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getpoolbuf checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getpoolbufinfo checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreate calls cfe_es_poolcreateex which checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreateex checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreatenosem calls cfe_es_poolcreateex which checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_putpoolbuf checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendevent checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendeventwithappid checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendtimedevent checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_initheader checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_readheader checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_settimestamp no pointer to check cfe_fs_api . c : cfe_fs_writeheader checks for <allcaps> null </allcaps> cfe_sb_api . c : cfe_sb_createpipe checks for <allcaps> null </allcaps> cfe_sb_api . c : cfe_sb_zerocopygetptr checks for <allcaps> null </allcaps> cfe_sb_msg_id_util . c : cfe_sb_getmsgid deprecated cfe_sb_msg_id_util . c : cfe_sb_setmsgid deprecated cfe_sb_util . c : cfe_sb_generatechecksum deprecated cfe_sb_util . c : cfe_sb_getchecksum deprecated cfe_sb_util . c : cfe_sb_getcmdcode deprecated cfe_sb_util . c : cfe_sb_getmsgtime deprecated cfe_sb_util . c : cfe_sb_gettotalmsglength deprecated cfe_sb_util . c : cfe_sb_getuserdata checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_getuserdatalength checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_initmsg deprecated cfe_sb_util . c : cfe_sb_messagestringget checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_messagestringset checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_msghdrsize checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_setcmdcode deprecated cfe_sb_util . c : cfe_sb_setmsgtime deprecated cfe_sb_util . c : cfe_sb_settotalmsglength deprecated cfe_sb_util . c : cfe_sb_setuserdatalength checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_timestampmsg calls cfe_msg_setmsgtime which checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_validatechecksum deprecated cfe_tbl_api . c : cfe_tbl_getaddress checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_getaddresses checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_getinfo checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_load checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_register checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_share checks for <allcaps> null </allcaps> cfe_time_api : cfe_time_print checks for <allcaps> null </allcaps> cfe_time_api : cfe_time_registersynchcallback checks for <allcaps> null </allcaps> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> for main branch ( merge of <number> . x after bookkeeping ) <section> this just applies fix # <number> to main <section> leveraging testing from # <number> <section> <allcaps> psp </allcaps> module include path correct ( should build ) <section> no new testing , just a merge <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> copy of # <number> but main target ( caelum development ) <section> nothing new , # <number> tested the fix <section> <allcaps> psp </allcaps> modules should be able to build again <section> na , leveraging previous tests <section> maybe add a <allcaps> psp </allcaps> module test into the matrix to catch issues like this ? <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> copy of # <number> but main target ( caelum development ) <section> nothing new , # <number> tested the fix <section> <allcaps> psp </allcaps> modules should be able to build again <section> na , leveraging previous tests <section> maybe add a <allcaps> psp </allcaps> module test into the matrix to catch issues like this ? <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , split resource id functions into module <section> move all functions , macros , types , and other definitions related to resource ids and generic resource management into a separate module , like <allcaps> cfe msg </allcaps> and <allcaps> sbr </allcaps> , etc . notably this allows a mission to elect "" strict "" implementations of these objects , where every id type is unique , and assigning between them ( or uint32 ) results in a compiler error . fixes # <number> fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests <section> <allcaps> api </allcaps> now has separate types for each resource type ( apps , tasks , libs , counters , etc ) . <section> ubuntu <number> <section> the user can elect at the mission level whether this is a simple typedef ( all <code> , all interchangeable ) or a wrapper type ( separate / strict type , cannot be interchanged ) . the former is backward compatible but the latter is not - must use proper types . default if nothing is indicated is to use the backward compatible types , of course - so this does not break anyone ' s build . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> build and run unit tests with - d flag to get debug output , passed and now reports cfe_es_writetosyslog messages <section> ut more informative , no <allcaps> fsw </allcaps> changes . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_evs_register const correct and report truncation <section> fix # <number> - filters pointer now const in <allcaps> api </allcaps> and truncation is reported in the system log <section> built and ran unit tests ( already cover the truncation case ) , verified new system log message <section> reports truncation when registering filters with cfe_evs_register <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove table service exclusion logic <section> fix # <number> - this removes the final remnants of the table service exclusion logic and documentation . <section> build and run unit tests , passed . <section> no affect to default behavior . <code> no longer used , if define table services will still be started . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> will transition table service to a module that can be customized or implemented differently if desired . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_platform_evs_log_on undefined option to diasble log <section> fix # <number> - removes the ability to disable the log by not defining <code> <section> build and run unit tests , passed <section> no longer able to disable log completely , for minimum memory use define <code> as <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> could remove control based on logenabled , panic on reset area fail and limp along if sem create fails . needs requirements updates - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , check for file existence in cfe_es_restartapp <section> fix # <number> - <code> now checkes for file existence as part of command processing . avoids removing the app if the file does not exist ( just avoids one error case ) . <section> build and ran unit tests , passed . also ran cfe and tested with valid and invalid file ( moved good file ) , confirmed error counter increment ( and command rejected so app remained running ) . <section> now rejects command and increments command error counter if file is missing <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , es and <allcaps> evs </allcaps> use default message limits <section> fix # <number> - es and <allcaps> evs </allcaps> used <code> with no requirement or justification ( all but one of the limits were default , and the non - default for <allcaps> es hk </allcaps> was <number> vs <number> ) . default limits should be fine unless required to be different . <section> built and ran unit tests , passed <section> none except it could queue a few more hk messages , but <allcaps> sch </allcaps> loads after es anyways . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , convert global cfe_sb_default_qos to macro <section> fix # <number> - deprecates cfe_sb_default_qos and replaces with cfe_sb_default_qos macro that avoids global variable exposure , and removed sb internal defines ( they are not implemented anywhere and are not used ) . these can be added at the appropriate scope once requirements are defined . <section> build and ran unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle integration candidate + this commit <section> <user> - deprecation of cfe_sb_default_qos ( coding standard all - caps for macros requires change ) depends on # <number> to compile with omit_deprecated <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clear task data in earlyinit and standardize name <section> fix # <number> - explicity memset the task data to zero at the start of earlyinit . also standardizes the global typdef / variable names . might need a rebase based on the name changes . <section> build and run unit tests , passed . <section> none . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> <allcaps> tbl </allcaps> global depends on <code> being set , which does not happen until the app starts ( in <code> ) , so replaced where cfe_tbl_earlyinit was being called to initialize the data with the test initialization function <code> . in the future these tests could be cleaned up by calling the initialization before each test , and ensuring there are no test configuration dependencies across tests . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , hex output for return checking asserts <section> fix # <number> - <allcaps> setup </allcaps> / <allcaps> teardown </allcaps> / <allcaps> assert </allcaps> now print 0x % lx and assert_eq prints both % lf and 0x % lx format for the inputs <section> built and ran cfe - core_sb_ut and confirmed output as expected . <section> more informative assert messages ( often comparing error codes ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unnecessary cfe_msg_init in <allcaps> tbl </allcaps> <section> fix # <number> - removed the <code> and <code> message initializations from <code> , they are initialized in <code> . moved the <code> message initialization to <code> , and just setting the message id each time it ' s sent from <code> . <section> build and run unit tests , passed . <section> none ( or just slightly better performance since the msg is not initialized every call ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , send - > write name update for sb write cmds <section> fix # <number> - updated "" send "" to "" write "" in command names that write files . includes function names , command code names and comments . <section> standard build and run unit tests , passed . made user ' s guide w / no errors / warnings . <section> none , name change to fix misnomer <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> additional update pending # <number> merge <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve mismatched types in <allcaps> sbr </allcaps> throttle <section> fix # <number> - switched throttle indexes to use <code> and combined helper function since separation no longer necessary ( only <number> foreach function implemented ) . <section> build and run unit tests , passed . <section> none , just resolves static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize status in cfe_es_waitforsystemstate <section> fix # <number> - initializes status in cfe_es_waitforsystemstate and added missing success test case ( would have failed ! ) <section> build and run unit tests , passed . <section> no longer returning uninitialized status <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unimplemented es prototypes <section> fix # <number> , removed unimplemented <code> and <code> prototypes <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove test_sb_cmds_subrptunexpcmdcode <section> fix # <number> , remove test_sb_cmds_subrptunexpcmdcode test was just a copy / paste of test_sb_cmds_cmdunexpcmdcode and did not actually implement a new test . subscription reporting is a no parameter command . <section> build and run unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify ut_initdata sb setup <section> fix # <number> - removes confusing and incorrectly implemented deferred return code of - <number> for <code> from software bus setup in ut_initdata . <section> build and run unit tests , passed <section> none in the core since nothing depended on this behavior , anything that did ( other apps ) should do it correctly . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_max_depth <section> fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_max_depth <section> built and ran unit tests , passed <section> depth parameter in command now checked prior to attempting <allcaps> osal </allcaps> call <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor cfe_time_registersynchcallback fix # <number> , add os_printf to cfe_es_syslog_append fix # <number> , pad msg headers to <number> bit fix # <number> , add cfe_sb_getuserdata padding check fix # <number> , remove duplicate cfe_mission_rev define fix # <number> , remove ut_checkforopensockets references fix # <number> , update cpuname targets . cmake documentation fix # <number> , ut event check bounds fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , create security policy fix # <number> , remove senderreporting from sb global fix # <number> , globalize "" resource id "" definitions fix # <number> , refactor <allcaps> sb api </allcaps> for proper global locks fix # <number> , finish cfe_platform_es_perf_max_ids removal fix # <number> , handle debug events in unit test fix # <number> , remove os_printf stub count checks in ut fix # <number> , cleanup strncpy use - unit tests fix # <number> , cleanup strncpy use - main code fix # <number> , update ut for cfe_mission * string sizing fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> see <url> <section> pr # <number> - documentation : add security . md with instructions to report vulnerability pr # <number> - documentation : update cpuname / mission_cpunames documentation pr # <number> - fixes <code> helper routine to read the correct number of ids so it checks the correct number of events . also correct bad event checks in <allcaps> tbl ut </allcaps> . pr # <number> - adds <code> to <code> so it matches <code> pr # <number> - removes unused <code> and <code> pr # <number> - tests pass when debug events are enabled via <code> in platform config . pr # <number> - removes references to <code> which is no longer applicable since the ut framework resets the state for each unit test . pr # <number> - rename <code> as <code> given change in <url> pr # <number> - adds checks that ensure <code> works with all payload data types . pr # <number> - adds header padding to <number> - bit so that <code> will work for message structures with elements up to <number> bit - for primary - only header config : telemetry header required to <number> bit boundary ( affects all receivers ) - for primary and extended header config : command header required padding to <number> bit boundary ( affects all senders ) pr # <number> - refactor <code> to only have one return point and eliminates "" possible uninitialized variable "" static analysis warning pr # <number> - none of these changes are expected to cause problematic . - addresses message delivery issues due to inconsistent locking by reworking cfe - <allcaps> sb api </allcaps> implementation . ensures all events are generated and counters are incremented consistently by avoiding early returns in functions and using the <code> register to record what event id should be sent per the current operation . - employs the <code> type and related patterns for managing the sb pipe ids . in particular this ( intentionally ) makes it not possible - will break code which directly accessed these items without going through the lookup function . - <section> , increased in size from <number> to <number> bits , and is now consistent with all other id types in both behavior and size . - <section> . this structure contained a <code> value , hence why it had to be updated because the type is now bigger . the spare bytes are also moved to the end of the struct . pr # <number> - removes <code> checks of stub calls in unit tests and checks for specific format string in history instead to confirm the right path was taken . pr # <number> - removes <code> from platform config . pr # <number> - removes the rest of the references and uses of <code> in favor of <code> pr # <number> - remove uses of strncpy and other minor hardcoded references - cleanup unit tests to reflect size changes in <code> and <code> . - moved es pipe name and lengths to defines - removed pipename and pipedepth variables from app global - removed unnecessary ( char <wink> casts - simplified <code> to <code> where observed - enables projects that have oss with different limits to maintain a standard cmd / tlm and have unit tests pass . pr # <number> - make <code> stub unit test more informative by adding <code> output <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , remove os_printf stub count checks in ut <section> fix # <number> - removes checking of os_printf # of stub calls in unit tests ( mostly es , <number> in <allcaps> evs </allcaps> ) . checks for specific format string in history instead ( added <number> checks where they were missing ) to confirm the right path was taken . <section> built and ran unit tests , passed <section> none , reduces technical debt ( no need to fix sub counts all over when implementation changes ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , handle debug events in unit test <section> fix # <number> - updates asserts to handle debug events if enabled via cfe_platform_evs_default_type_flag in platform config . <section> built and ran unit tests with default ( 0 xe ) and debug enabled ( 0 xf ) , passed <section> none except tests pass w / debug events enabled <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , finish cfe_platform_es_perf_max_ids removal <section> fix # <number> - removes the rest of the references / uses of <code> ( in favor of <code> ) <section> build and run unit tests , passed <section> none , just avoids issues that could happen if the platform / mission defines diverged <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> is open for consideration , but future work <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , separate pipeinfo file data structure <section> provide a separate / dedicated structure for use in the "" pipe info "" file as written by the <code> command , instead of using the <code> which is supposed to be internal / private . data is extracted from the internal <code> while shared data locked and staged into this new format , then the shared data is unlocked while the other information is gathered and finally written to the file . fixes # <number> fixes # <number> <section> build <allcaps> cfe </allcaps> and sanity check , run all unit tests run the <code> and confirm that the file is generated . <section> this changes the binary format of the generated pipe info file . however after this is merged the format of the fine should be more stable going forward , as internal changes to the <code> will no longer affect it . <section> ubuntu <number> <section> this still needs a rebase as it depends on # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update highest msgid documentation / verification <section> fix # <number> - updates the documentation and verification for cfe_platform_sb_highest_valid_msgid <section> built and ran unit tests , passed . <section> none other than allows the full range of values . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> relates to hash message map implementation ( and search if ever added ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove senderreporting from sb global <section> fix # <number> - removes unused senderreporting and cfe_platform_sb_default_report_sender <section> build and run unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> replaces # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> and # <number> , strncpy cleanup and ut updates for mission sizing of api_len and path_len <section> fix # <number> - this cleans up the use of strncpy ( and other minor hardcoded references ) which solves most of # <number> fix # <number> - remainder of cleanup in unit tests now that <code> and <code> can be bigger than <code> and <code> other minor mods - moved es pipe name , lengths to defines ( someday these could be cfg items , but just matched pattern of other services for now ) - removed pipename and pipedepth variables from app global where they did not add anything ( just sent and passed ) - removed many unnecessary ( char <wink> casts - simplified & stingname [ <number> ] to stringname where observed <section> built and ran unit tests with sample config ( where values are equal ) , and with cfe_mission * + = <number> , passed <section> none , just easier maintenance and allows for use case of mission with multiple os ' s w / different limits to have standard cmd / tlm and the unit tests will still pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , software bus locking <section> the root cause of the mysterious message delivery issues was tracked down to inconsistent locking . when running on multi core systems a variety of buffer corruption issues were observed . this fix is really a rework of all <allcaps> cfe sb api </allcaps> implementations toward the goal of more consistent locking patterns to solve this issue . because sb apis make heavy use of event ids , this presents a challenge because events can only be sent while unlocked . in order to ensure that all events are generated and all counters are incremented consistently , the functions should run through to the end and not return early , and use a "" pendingeventid "" register to record what event id should be sent per the current operation , rather than simply sending the event at the time the condition is identified . the general pattern becomes : <number> . initial checks without lock <number> . lock sb <number> . perform query / modification of sb pipe / routing tables as needed while locked <number> . unlock sb <number> . call into other subsystems as needed ( e . g . <allcaps> osal </allcaps> ) <number> . ( optional ) re - lock sb global to update based on the result of ( <number> ) , and unlock again <number> . send pending event id . this also employs the <code> type and related patterns for managing the sb pipe ids . in particular this ( intentionally ) makes it not possible to use this directly an array index , and will break code which directly accessed these items without going through the lookup function . fixes # <number> fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests also let <allcaps> cfe </allcaps> run for approx <number> hours , and observed no more "" invalid msgid "" or memory pool errors . <section> - __the <code> type is no longer usable as a direct array index__ . it is also increased in size from <number> bits to <number> bits . but as a result is now consistent with all other id types in both behavior and size . as long as the typedef is used and pipeids are used only as intended , , this should not be noticeable to apps . - __the "" pipe stats "" structure in the pipe <allcaps> tlm </allcaps> is also changed__ . this structure contained a <code> value , hence why it had to be updated because the type is now bigger . the spare bytes are also moved to the end of the struct . neither of these are expected to be particularly problematic - just stuff to be aware of . <section> ubuntu <number> <section> not sure if the change to <code> size ( and the <allcaps> tlm </allcaps> message that contains this type ) might require an update to cfs - groundsystem . <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> - fix # <number> - eliminates identified double locks ."
"fix # <number> , ut event check bounds <section> fixes <code> helper routine to read the correct number of ids . divide the "" position "" ( in bytes ) by the size of the event ids to get the number of events . also correct bad event checks in <allcaps> tbl ut </allcaps> . fixes # <number> <section> build and run all unit tests <section> ut_checkeventhistoryfromfunc ( ) works properly now . <section> ubuntu <number> <section> only unit test is affected , no <allcaps> fsw </allcaps> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , replace os_fsblocksfree fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods fix # <number> , remove cfe_sb_timeout_t typedef fix # <number> , remove unused network_includes . h fix # <number> , correct deprecation directive typo <section> see < <url> <section> pr # <number> - replace <code> with <code> which will be deprecated . this call reports the number of total blocks , not just the free blocks , making the check more accurate and removing the need for a workaround for desktop machines . pr # <number> - instead of accessing <code> values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence and abstraction from the specific <code> definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . pr # <number> - removes the spurious <code> typedef from <code> . may affect any apps that inappropriately rely on the private typedef . pr # <number> - removes unused <code> . not used by the framework anywhere , apps should use <allcaps> osal </allcaps> socket apis instead . pr # <number> - fixes deprecation directive typos <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , update cpuname targets . cmake documentation <section> fix # <number> - update cpuname / mission_cpunames documentation <section> none , comment update only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove ut_checkforopensockets references <section> fix # <number> - removes all references to ut_checkforopensockets . no longer applicable since the ut framework resets the state for each unit test . <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> see also nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove duplicate cfe_mission_rev define <section> fix # <number> - removed cfe_mission_rev from platform config . intent of this rev is to track mission cfe <allcaps> fsw </allcaps> mods / customization / code changes not as a more generic "" <allcaps> mission </allcaps> "" revision number . <section> nominal build and run of unit tests <section> none , although if cfe_mission_rev was being utilized somewhere and included from cpu1_platform_cfg . h this will break . arguably this was broken before removal also since it was a duplicate define . <repeated> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , correct deprecation directive typo <section> fix # <number> - fixed <number> deprecation directive typos <section> standard build and unit test <section> deprecation of cfe_sb_rcvmsg works correctly ( will not show up if cfe_omit_deprecated_6_8 is defined ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
version string not reported correctly <section> <code> note missing <code> for psp <section> add <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , pad msg headers to <number> bit <section> fix # <number> - pads headers to <number> - bit so that cfe_sb_getuserdata will work for message structures with elements up to <number> bit <section> added # <number> ( to catch errors from cfe_sb_getuserdata ) , built unit tests for both primary only and primary + extended headers , passed . <section> for primary only config - telemetry header required to <number> bit boundary ( affects all receivers ) for primary + extended config - command header required padding to <number> bit boundary ( affects all senders ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + # <number> ( only required for testing ) + this commit <section> will require updates in cfs - groundsystem , both cmdutil , and cmd / tlm from the <allcaps> gui </allcaps> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_printf to cfe_es_syslog_append <section> fix # <number> - added os_printf to cfe_es_syslog_append so it behaves the same as cfe_es_writetosyslog <section> built unit tests and confirmed cfe_es_syslog_append calls os_printf ( observed outputs ) <section> cfe_es_syslog_append will os_print the message <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / osal # <number> was submitted to see the os_print in debug of unit tests <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor cfe_time_registersynchcallback <section> fix # <number> - one return point - eliminates "" possible uninitialized variable "" static analysis warning <section> standard build , unit test <section> none except eliminates static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> partially just a conversation starter - do we want to avoid ( invalid ) warnings w / similar refactors ? alternatively we could just ignore / repress the warnings . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> the <allcaps> psp </allcaps> header files are located in fsw / shared / inc , not fsw / shared . this corrects the reference . fixes # <number> <section> modify local config to use "" eeprom_stub "" <allcaps> psp </allcaps> module to implement eeprom functions , which reproduces the build failure - i confirmed the error with respect to <code> with this patch applied , the build succeeds again . <section> none <section> ubuntu <number> <section> this pr is based on bootes rc2 as the bug exists there , recommend to patch it in prior to final release . should also merge this forward to <code> as the bug exists there too and this is the easiest short term fix . longer term fix should be # <number> to prevent this type of issue from recurring . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused network_includes . h <section> fix # <number> - removes network_includes . h ( not used anywhere , and apps should use <allcaps> osal </allcaps> apis ) <section> built with file removed ( no dependencies ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , resolve osal guide generation warnings fix # <number> , corrects documentation for cfe_sb_getpipename ( ) stub fix # <number> , add cppcheck github actions workflow <section> github actions run < <url> <section> pr # <number> - resolved doxygen warnings osalguide and updated header file references pr # <number> - corrects the documentation for the <code> unit test stub function . pr # <number> - adds a new github actions workflow file to run cppcheck <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , re - add cppcheck automated testing <section> fix # <number> adds a new github actions workflow file to run cppcheck <section> see action runs in fork : < <url> <section> static analysis workflow runs on pull requests and push . workflow saves log file as an artifact for analysis . <section> n / a <section> n / a <section> none"
"fix # <number> - remove cfe_sb_timeout_t typedef closes # <number> <section> removes the spurious cfe_sb_timeout_t typedef from cfe_sb . h <section> sb unit test <section> none , may affect any apps that rely on the typedef ( which they probably have not done , given that no public <allcaps> api </allcaps> ' s use it . ) <section> <email>"
fix # <number> - cfe_sb_receivebuffer stub returns timeout or empty if buffer closes # <number> this changes the return value returned by the <code> stub when there has not been a buffer defined . <section> tested with sb and <allcaps> sbn </allcaps> unit tests . <section> <email>
"fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods <section> instead of accessing <code> values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence / abstraction from the specific ` os_time_t definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . fixes # <number> <section> build and run unit tests , sanity check <allcaps> cfe </allcaps> <section> none ( but see notes ) <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> + pc686 ( qemu ) <section> by using the <allcaps> osal </allcaps> implementation of subsecond / microsecond conversion , this will correct some minor inaccuracies in the <allcaps> cfe time </allcaps> conversions that were never noticed before . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve osal guide generation warnings <section> fix # <number> - resolved warnings and updated header file references <section> built guide ( including pdf ) and spot - checked resulting document , no warnings generated . <section> github user guide generation action ( in nasa / cfs ) should now pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> dependant on nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , replace os_fsblocksfree <section> use <code> instead of <code> which will be deprecated in the future . this also enables the check to be more appropriate as this call reports the number of total blocks , not just the free blocks , so no workaround for desktop machines is needed . fixes # <number> <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> no longer needs a workaround for running on desktop system , since the new <allcaps> api </allcaps> also returns the total blocks , not just free blocks . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> combines ic <number> - <number> - <number> and <number> - <number> - <number> fix # <number> , remove use of osapi - os - loader . h fix # <number> , atomic type for systemstate fix # <number> , <allcaps> osal </allcaps> module flags to permit app reload fix # <number> , change test_msg to ut_displaypkt <section> see < <url> <section> pr # <number> - remove use of <code> from <allcaps> es ut </allcaps> . pr # <number> - use volatile <code> for system state to avoid race issue if uint32 is not atomic on a system pr # <number> - set the flags parameter on the os_moduleload ( ) properly to allow an app to be properly unloaded , which in turn allows the reload command to work as expected . fixes problem where unload comand resulted in continuous restarting of the same app code . pr # <number> - replaced <code> with <code> . also removed unused <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
fix # <number> change test_msg to ut_displaypkt <section> fixes # <number> removed test_msg_printmsg and and replaced it with ut_displaypkt . also removed test_msg_sum since it was not being used . <section> build and run unit test . <section> none <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , add toolchain file for <allcaps> rtems </allcaps> <number> / pc - rtems fix # <number> , refactor message header alignment and "" raw "" types to fit a clear pattern fix # <number> , use void * for pool buffer pointers <section> see < <url> <section> pr # <number> - adds <code> , <code> , <code> - main change is to utilize <code> and <code> in a consistent manner to facilitate alignment - deprecates multiple <code> items - redefines <code> as <code> to minimize duplicated work and facilitate transition to <code> pr # <number> - use a generic void * as the interface type for the pool buffer pointers . this reduces the need for local type casting in the apps and makes it generally easier to use . pr # <number> - remove reference to <allcaps> cexp </allcaps> in <allcaps> rtems </allcaps> <number> i686 toolchain . add an <allcaps> rtems </allcaps> <number> i686 toolchain file . <section> ubuntu <number> <section> see < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , remove use of osapi - os - loader . h <section> remove use of <code> from <allcaps> es ut </allcaps> . this is the only reference to <allcaps> osal </allcaps> header other than the standard <code> and <code> ( which are staying ) . fixes # <number> <section> build and run unit tests . <section> none . this header was redundant since it was already including <code> which has everything . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"remove references to os_taskregister ( non - op ) <section> see nasa / osal # <number> , currently just a non - op for backwards compatibility . <section> remove <section> none <section> nasa / osal # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"create housekeeping command structure typedefs ( consistency , futureproof ) <section> cfe_xx_housekeepingcmd_t does not typically exist , just uses cfe_msg_commandheader_t . more consistent to have a typedef ( less future changes if unique elements needed ) . <section> add housekeeping command typedefs for the services . <section> none . <section> <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> from discussion on # <number>"
"fix # <number> , <allcaps> osal </allcaps> module flags to permit app reload <section> set the flags parameter on the <code> properly to allow an app to be properly unloaded , which in turn allows the reload command to work as expected . fixes # <number> <section> build and run all unit tests test <allcaps> cfe </allcaps> app reload procedure : - run <allcaps> cfe </allcaps> as normal , confirm unmodified sample_app is loaded and running - build a modified sample_app that has an additional <code> call during startup , and install as <code> - issue "" reload "" command ( <number> ) via cmdutil , to reload sample_app from <code> - confirm that the expected printf message is visible ( confirms that the new file was actually loaded ) <section> module unload / reload works as expected on linux . previously the unload would not actually unload , so it would end up restarting the same app code over again . <section> ubuntu <number> <section> needs sync delete fix in <allcaps> osal </allcaps> ( see nasa / osal # <number> ) to avoid task delete race condition . without this <allcaps> osal </allcaps> change , the task may still be running at the time <allcaps> cfe es </allcaps> unloads it , which will likely cause a segfault / crash if that happens . <section> joseph hickey , vantage systems , inc ."
"fix <number> , atomic type for systemstate <section> fix # <number> - use volatile sig_atomic_t for system state avoids race issue if uint32 is not atomic on a system ( microcontroller ? ) <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add toolchain file for <allcaps> rtems </allcaps> <number> / pc - rtems <section> fix # <number> this change makes a minor comment change to the rtems <number> i686 toolchain file to remove a reference to <allcaps> cexp </allcaps> . the change also adds an <allcaps> rtems </allcaps> <number> i686 toolchain file . <section> after building the <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> tools and bsps for the i686 , i was able to build the cfs bundle using : make <allcaps> simulation </allcaps> = i686 - rtems - <number> prep make install and make <allcaps> simulation </allcaps> = i686 - rtems - <number> prep make install and i was able to run the bundle on x86 <allcaps> qemu </allcaps> according to the instructions in the <allcaps> psp readme </allcaps> . txt file : <url> note , that <allcaps> psp </allcaps> ticket <number> and pr <number> have updates to the <allcaps> readme </allcaps> . txt files . also , this depends on a pr for <allcaps> osal </allcaps> ( <allcaps> tbd </allcaps> ) for issue <number> ) <section> - or no impact to behavior <section> - hardware : <allcaps> qemu </allcaps> x86 - os : <allcaps> rtems </allcaps> - versions : <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> requires a fix for <allcaps> osal </allcaps> , which is described in <allcaps> osal </allcaps> ticket <number> . pr will be submitted . but the comment change does not affect current <allcaps> rtems </allcaps> <number> build . <section> n / a <section> alan cudmore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
fix merge conflicts in pr # <number> <section> took # <number> and rebased on top of integration - candidate and attempted to solve merge conflicts <section> built on docker container . unit tests pass . see <url> for more tests
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis fix # <number> , bogus warning in strncpy fix # <number> , default stack size fix # <number> , remove <allcaps> osal id </allcaps> from app / libinfo struct fix # <number> , correct stub appid parameter fix # <number> , more consistent use of datatypes <section> see events for "" github actions test "" at < <url> <section> pr # <number> - backward compatible <allcaps> api </allcaps> change . replace many uses of generic uint16 and uint32 with a more purpose - specific type . replace all sizes with size_t across the <allcaps> api </allcaps> . pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing pr # <number> and # <number> - deprecates many sb elements and replaces them with the new <allcaps> msg </allcaps> module . see <url> for list . pr # <number> - app and lib info telemetry structures no longer contain the <code> value from <allcaps> osal </allcaps> . pr # <number> - add an extra write of a null char after <code> which squelches a warning and appease compiler warning logic . pr # <number> - uses <code> as a default instead of a minimum . affects the start app command ; if stack size is specified as zero , then the default stack size value from platform config is used . otherwise the value in the command will be passed through and used as - is . pr # <number> - changes the type of the appid parameter on "" cleanup "" routines from <code> to <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , pool buffer type <section> use a generic <code> as the interface type for the pool buffer pointers . this reduces the need for local type casting in the apps and makes it generally easier to use . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior . <section> ubuntu <number> <section> note that getting a buffer in one step still requires a type cast , as the interface here is really <code> . however when putting or querying a buffer no cast is needed . one can also avoid the need to cast if they get a buffer in two steps ( i . e . get as <code> first , then convert to real type with a simple assignment . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct stub appid parameter <section> the type of the appid parameter on cleanup routines should be <code> , not <code> fixes # <number> <section> build and run <allcaps> cfe </allcaps> run all unit tests <section> none . <section> ubuntu <number> <section> these two are typedef equivalent in the main branch , so no change , but needed for consistency . this was missed originally due to pr # <number> not being there yet . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , default stack size <section> do not enforce <code> as a minimum , it should be a default . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> . run all unit tests . <section> this affects the start app command . if stack size is specified as zero , then the default stack size value from platform config is used . otherwise the value in the command will be passed through and used as - is . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> no specific value is enforced at the es level . many <allcaps> rtos </allcaps> ' s will implement any stack size requested - so no need for es to get in the way and put arbitrary restrictions . furthermore the value is documented as a default , not a minimum . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , bogus warning in strncpy <section> add an extra write of a null char which squelches a warning . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> with <allcaps> buildtype </allcaps> = release on focal <section> none - just avoid extraneous warning <section> ubuntu <number> <section> buffer was already zero ' ed out via previous memset , so this extra zero really has no effect except ( possibly ) using an extra <allcaps> cpu </allcaps> cycle . this just appeases some over - zealous compiler warning logic . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove <allcaps> osal id </allcaps> from app / libinfo struct <section> removes the module id from the app / lib info telemetry structures . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> app and lib info telemetry structures no longer contain the "" moduleid "" value from <allcaps> osal </allcaps> . <section> ubuntu <number> <section> <allcaps> cfe </allcaps> code should be distinct about the types used in messages vs . the types used at runtime . they may need to be different depending on mission architecture ( i . e . mixing <number> and <number> bits , different local platform - specific sizes of things , etc ) . all message definitions should be in the proper app - specific message typedef files and must have mission scope , not platform scope . the "" osal_id_t "" type is not defined in any of the <allcaps> cfe </allcaps> message / interface header files for use within telemetry , but this was included in the appinfo and libinfo telemetry structures . this id is an ephemeral runtime value and is not relevant to a ground system or anything outside <allcaps> cfe </allcaps> , so it makes most sense to simply remove this id from the telemetry structure . note that all commands are name - based , not id - based , hence why this id is not really useful . the alternative would be to use cfe_es_resourceid_t type instead . this is the same underlying value but defined in es rather than <allcaps> osal </allcaps> , in the typedefs file with all other message types . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_registercdsex stub update <section> fix # <number> - update cfe_es_registercdsex stub to match current signature <section> built and ran unit tests , all pass <section> none , except stub match . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , simplified cfe_evs_sendevent macros fix # <number> , update cfe_mission_time_def_leaps to <number> seconds fix # <number> , cfe_msg_init clear option removed fix # <number> , add flags parameter to module load fix # <number> , cfe_es_registercdsex stub update fix # <number> , include cfe_private . h in stubs <section> bundle ci on astrogeco : <url> <section> pr # <number> - adds macros for more compact calls to cfe_evs_sendevent , making the type be part of the function name . pr # <number> - the sample configs leap seconds default value is now up to date . ( as of <date> ) pr # <number> - removed the clear = false logic ( and clear parameter ) <code> now always zeroes entire message and sets defaults . pr # <number> - adds flags parameter to calls to <code> . initially just pass <number> ( <allcaps> global </allcaps> ) to maintain old behavior . pr # <number> - updates <code> stub to match current signature pr # <number> - includes <code> for stubs that implement related elements . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on <url> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe_es commands that do not increment the error counter when an error occurs while testing bootes on vxworks , i issued the following commands that generated an error event but did not increment the <allcaps> es cmdec </allcaps> counter : scx_cpu1_es_writeerlog2file and scx_cpu1_es_stopperf . <section> steps to reproduce the behavior : <number> . issue the command scx_cpu1_es_writeerlog2file <allcaps> erlogfilename </allcaps> = "" nopathname . log "" <number> . error event id = <number> is generated but the es . <allcaps> cmdpc </allcaps> is not incremented <number> . issue the scx_cpu1_es_stopperf <allcaps> datafilename </allcaps> = "" nopathname "" <number> . debug <allcaps> eid </allcaps> = <number> is generated which makes me think the command was accepted as valid . <number> . also , error event id = <number> is generated but again the <allcaps> cmdec </allcaps> did not increment , <section> cfe <number> . <number> testing incremented the <allcaps> cmdec </allcaps> for these <number> cases . <section> - mcp750 running vxworks <number> . cfe version <number> . <number> <allcaps> osal </allcaps> <number> . <number> walt moleski / <allcaps> gsfc </allcaps> <number> scx_cpu1_es_logging - <number> - <number> - 1 2 h27m15s . log <url>"
"fix # <number> , more consistent use of data types <section> define and use data types more consistently across <allcaps> cfe </allcaps> . replace many uses of generic uint16 / uint32 with a more purpose - specific typedef . replace all sizes with <code> across the <allcaps> api </allcaps> . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> <section> none , but does affect <allcaps> api </allcaps> . the <allcaps> api </allcaps> changes should be largely backward compatible , however . <section> ubuntu <number> , <number> - bit <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> : also fixed # <number>"
"fix # <number> , add flags parameter to module load <section> add flags parameter to calls to os_moduleload ( ) . initially just pass <number> ( <allcaps> global </allcaps> ) to maintain old behavior . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests . <section> none - the <allcaps> global </allcaps> ( <number> ) flag should maintain exact same behavior . <section> ubuntu <number> <section> dependency on nasa / osal # <number> - needs to be merged simultaneously <section> joseph hickey , vantage systems , inc ."
"fix # <number> deprecate sb <section> fix # <number> - see issue for deprecated elements <section> built and ran , enabled telemetry , checked noops . unit tests built and passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe_time_add_1hz_adjustment_cc and cfe_time_sub_1hz_adjustment_cc commands are not performing as expected <section> add delta to spacecraft time correlation factor each 1 hz and subtract delta from spacecraft time correlation factor commands are modifying <allcaps> stfc </allcaps> seconds as not as required . <url> <url> <allcaps> time </allcaps> : delta adjust <allcaps> stcf </allcaps> upon receipt of a command to make a ' continuous ' adjustment to the <allcaps> stcf </allcaps> , the cfe shall adjust the <allcaps> stcf </allcaps> each second by the command - specified value . the commanded value is signed so a positive or negative adjustment may be made . as example i have attached the print screen with the test <hashtag> 1308 09 </hashtag> results . example <img> //* <allcaps> stcf </allcaps> seconds = = <number> given values for the cfe_time_add_1hz_adjustment_cc and cfe_time_sub_1hz_adjustment_cc commands are : seconds = = <number> sub - seconds = = <phone> <section> anhelina yurkova arctic slope technical services , inc . <allcaps> nasa </allcaps> goddard space flight center"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , reorganize es public <allcaps> api </allcaps> + msg definitions fix # <number> , update padding in <allcaps> cds </allcaps> registry record fix # <number> , rename <allcaps> max cds </allcaps> name macro to full_name_len fix # <number> , short background task name fix # <number> , strncpy warning fix # <number> , add casts on printf calls <section> see framework - bundle pr : <url> <section> pr # <number> - keeps task names under <number> chars to make more debugger friendly , regardless of the <allcaps> osal </allcaps> limit . task name shows up as <code> pr # <number> - move es typedefs shared across <allcaps> api </allcaps> and telemetry messages into the <code> . - move all es typedefs that define the telemetry interface and structures that define the output of commands that write data files into this group ( query all apps , query all tasks , query all <allcaps> cds </allcaps> ) . - remove some localized definitions and replace with <allcaps> mission </allcaps> scope definitions where appropriate / necessary . pr # <number> - adjust <code> call to avoid compiler warning pr # <number> - cast fixed width types to the type used in the <code> call . removes <code> type warnings on the <number> - bit <allcaps> rtems </allcaps> build . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , add casts on printf calls <section> cast fixed width types to the type used in the printf call . fixes # <number> <section> build and sanity test on <allcaps> rtems </allcaps> target <section> no warnings related to printf <section> ubuntu <number> host for i686 - rtems4 . <number> target <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build tables for static apps <section> fixup the table build targets so it will be invoked for both static and dynamic apps . improve the prep log messages to indicate the targets that tables will be built for for both static and dynamic apps . fixes # <number> <section> locally changed "" sample_app "" to be a static app instead of dynamic app . confirmed table file is now correctly built and app runs normally and is able to load the table file . <section> table works correctly as static app . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
fix # <number> updated the cfe_mission_time_def_leaps to <number> seconds <section> fixes # <number> by updating the sample config to <number> <section> built the sample config then with the ground tools sent cfe_time_send_diagnostic_tlm_cc and verified attoneleapseconds was <number> <section> the sample configs leap seconds will be up to date . ( as of <date> ) <section> ubuntu <number> . <number> <section> alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , cfe_msg_init clear option removed <section> fix # <number> - removed the clear = false logic ( and clear parameter ) <section> built and ran test cases with no extended header , extended header with msgid v1 , and extended header with msgid v2 . all passed <section> always zeroes entire message and sets defaults . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , short background task name <section> keep names under <number> chars to make more debugger friendly , regardless of the <allcaps> osal </allcaps> limit . fixes # <number> <section> run <allcaps> cfe </allcaps> in debugger <section> confirm task name shows up as "" es_bg_task "" no other impact to behavior <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> see bundle ci : <url> <section> - pr # <number> - provide library <allcaps> api </allcaps> similar to app <allcaps> api </allcaps> - allows the existing cfe_es_appinfo_t structure to be extended to libraries as well as applications by introducing a new value ( <number> ) for the type field . - allows libraries to be queried via <allcaps> api </allcaps> calls similar to app <allcaps> api </allcaps> . - extends the query all / query one commands to operate on libraries or applications . - breaks up the monolithic appcreate and loadlibrary functions and have these call subroutines that operate on the common components . - fix race conditions in app request processing state machine . - pr # <number> - adds <allcaps> sbr </allcaps> module which includes message map and routing table . the access apis are on the sb side which still owns the destination logic - removes passing of route index or pointers being . everything is now based on route and message id - oversized the hash message map ( 4 x) to minimize collisions - added debug event for collisions during add - dropped routing push / pop , dropped "" key "" in direct implementation - hash designed for <number> bit , a change in cfe_sb_msgid_atom_t size may require implementation updates - deletes unused code cfe_sb_findglobalmsgidcnt - fixes variable declaration violations of coding standard - individual events for deleting destinations when deleting a pipe removed to avoid a race condition - around a <number> - <percent> performance hit to hash via rough comparison on a linux box , no memory impact <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , strncpy warning <section> adjust <code> call to avoid warning fixes # <number> <section> build with <code> , confirm warning is fixed . re - run unit tests ( no changes ) . <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update padding in <allcaps> cds </allcaps> registry struct <section> makes the <number> bytes of padding here explicit rather than implicit . <section> build and sanity check <allcaps> cfe </allcaps> issued cfe_es_dump_cds_registry_cc command and ensure it is working as expected <section> none <section> ubuntu <number> <section> depends on the previous change for # <number> ( pr # <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update startup script names <section> startup script reflects names fixed in sample_app and sample_lib . fixes # <number> . <section> boot <allcaps> cfe </allcaps> and verify startup works correctly with new names . <section> n / a . <section> ubuntu <number> <section> need this at the same time as nasa / sample_app # <number> and nasa / sample_lib # <number> . must be merged in same cycle as the those two . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reorganize es public <allcaps> api </allcaps> + msg definitions <section> put all es typedefs which are shared across <allcaps> api </allcaps> and telemetry messages into the <code> file . put all es typedefs which define the telemetry interface into the <code> file . also include structures which define the output of commands that write data files into this group ( query all apps , query all tasks , query all <allcaps> cds </allcaps> ) . removes some localized definitions and replace with <allcaps> mission </allcaps> scope definitions where appropriate / necessary . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior ( should not change any binary formats ) <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"add stubs for software bus routing module apis and update sb unit tests <section> stubs not implemented yet , directly linking module to sb for first stage of testing . <section> add stubs , update sb to use them <section> none . <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , provide library <allcaps> api </allcaps> <section> fixes # <number> provide library <allcaps> api </allcaps> similar to app <allcaps> api </allcaps> allows the existing <code> structure to be extended to libraries as well as applications by introducing a new value ( <number> ) for the type field . allows libraries to be queried via <allcaps> api </allcaps> calls similar to app <allcaps> api </allcaps> . also extends the query all / query one commands to operate on libraries or applications . fixes # <number> break up the monolithic appcreate and loadlibrary functions and have these call subroutines that operate on the common components . fixes # <number> fix race conditions in app request processing state machine . <section> build and sanity check operation of <allcaps> cfe </allcaps> confirm able to restart / reload sample_app via command as expected run all unit tests <section> adds library <allcaps> api </allcaps> . query commands that previously worked only on apps can now be used on apps or libs <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci : <url> <section> pr # <number> <section> ubuntu <section> part of < <url> <section> none <section> <user>
add in incremental read routine and unit test . ref <hashtag> nasa </hashtag> / cfe / issues / <number> see issue <url> this is an implementation with unit - test code added .
"fix # <number> and # <number> - modularize software bus routing , add msg map hash <section> fix # <number> - refactor sb and move routing to a module fix # <number> - adds message map hash implementation partial # <number> - fixed double lock potential key concepts : - added <allcaps> sbr </allcaps> module - message map and routing table are in <allcaps> sbr </allcaps> , access apis on sb side - sb still owns destination logic - no more route index or pointers being passed around , all route id and message id based - hash message map "" oversized "" ( 4 x) to minimize collisions ( only ~ <percent> single collisions on the real system with a full routing table ) - added debug event for collisions during add - dropped routing push / pop , dropped "" key "" in direct implementation - around a <number> - <percent> performance hit to hash via rough comparison on a linux box , no memory impact from message id "" space "" , just based on needed routes ( with overhead ) - hash designed for <number> bit , a change in cfe_sb_msgid_atom_t size may require implementation updates remaining work : - unit test stubs ( could split into new pr ) , <number> related todos in code also - deletes unused code cfe_sb_findglobalmsgidcnt - note writes to file not protected by lock ( before or after refactor ) - cfe_sb_sendprevsubs is not really protected by the lock . <repeated> might be worth removing the locks completely ( they do not really solve anything , double lock potential eliminated - could just use the private cfe_sbr_foreachrouteid without a lock instead of messages and reduce all the extra logic - whitespace / alignment is very difficult to work with - excessive comments ( in my opinion ) - violates declare variables at the start of function coding standard , all observed violations fixed <section> - all unit tests pass , rough performance testing , spot checked routing table size impacts on core with nominal ( <number> ) , <number> , and <number> . <number> causes dropped subscriptions / full table and was useful for observing collisions ( ~ <percent> one level seen ) on a realistic set of message ids . everything performed as expected . - passed bundle ci at <url> <section> - individual events for deleting destinations when deleting a pipe removed to avoid a race condition - it ' s resource intensive to try to report message id map in message id order ( either search or brute force ) for any significantly sized map on an unsorted routing table , allowing out of order makes this reasonable again and gets rid of the need for foreachmsgid <allcaps> api </allcaps> . need to trade out of order vs implementing a search . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> and # <number> , improve resource id management <section> fixes # <number> fixes # <number> fixes # <number> provides a consistent name - id translation <allcaps> api </allcaps> for all resource types . enforces consistent argument / name validation on all resource types , and also enforces name uniqueness where relevant . also includes an enhancement to use the full <number> bits of resource id space , which avoids repeating id values that have already been used . this significantly decreases the likelihood that a previously deleted id will alias a newly allocated / valid id . <section> build and sanity test <allcaps> cfe </allcaps> ensure all unit tests pass <allcaps> also </allcaps> - run a continuous loop of "" restart "" commands , to continually restart the sample_app . confirmed that after each restart , the app is assigned a new id , different than the old id , and never aliases any other valid ids . <section> - complete / consistent <allcaps> api </allcaps> to translate between names and ids , for all resource types which have a name - ids are not re - issued after deletion , helping ensure safety as previously deleted ids will not validate . <section> ubuntu <number> <section> these two fixes are combined into a single pr as they have dependencies ( would be a merge conflict if pulled separately ) <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - rather than having a second pool implementation only for <allcaps> cds </allcaps> , use the generic pool implementation . this also uses the abstract resource identifiers to identify <allcaps> cds </allcaps> blocks , rather than a direct reference . pr # <number> - add the system - specific module suffix ( . o , . so , . obj , etc ) and the default <allcaps> cfe </allcaps> core executable name to the configdata structure . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , add module suffix and core name to configdata <section> add the system - specific module suffix ( . o , . so , . obj , etc ) and the default <allcaps> cfe </allcaps> core executable name to the configdata structure . this information has several useful purposes . fixes # <number> , but related to previous issues # <number> and nasa / psp # <number> <section> build and sanity check <allcaps> cfe </allcaps> on native / pc - linux , <allcaps> rtems </allcaps> <number> , and vxworks <number> confirm using inspection of command line that the correct data is used for the new fields . on linux : - dcfe_default_core_filename <annoyed> "" core - cpu1 \ "" - dcfe_default_module_extension <annoyed> "" . so \ "" on <allcaps> rtems </allcaps> : - dcfe_default_core_filename <annoyed> "" core - cpu1 . exe \ "" - dcfe_default_module_extension <annoyed> "" . obj \ "" on vxworks : - dcfe_default_core_filename <annoyed> "" core - cpu1 . exe \ "" - dcfe_default_module_extension <annoyed> "" . o \ "" nothing uses this data at runtime ( yet ) but i also confirmed with <allcaps> gdb </allcaps> that the "" global_configdata "" indeed has the correct info . <section> none . just making new information available . <section> ubuntu <number> ( native ) , <allcaps> rtems </allcaps> <number> , vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor <allcaps> cds </allcaps> to use generic pool implementation <section> rather than having a second pool implementation only for <allcaps> cds </allcaps> , use the generic pool implementation . this also uses the abstract resource identifiers to identify <allcaps> cds </allcaps> blocks , rather than a direct reference . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> confirm all unit tests working also tested / confirmed that the <allcaps> cfe tbl </allcaps> critical table registry is correctly restored when booting in a processor reset mode . in this case the data is successfully restored from <allcaps> cds </allcaps> . <section> no impact to behavior . <section> ubuntu <number> <section> this consolidates and simplifies a bunch of code in the <allcaps> cds </allcaps> access area . note that previously there was a separate mutex for the <allcaps> cds </allcaps> pool and <allcaps> cds </allcaps> registry . however almost all accesses needed both , because pool access and registry access go together . so this is simplified to one mutex now . <section> joseph hickey , vantage systems , inc ."
stub for cfe_sb_sendmsg does not always save msgptr argument value <section> if a negative value is set for the return from cfe_sb_sendmsg stub the msgptr argument is not saved to the context . the passed in message cannot be verified for forced negative results . <section> steps to reproduce the behavior : <number> . write a test giving cfe_sb_sendmsg a context and that forces cfe_sb_sendmsg to return a negative value <number> . check that the context contains the expected pointer - <allcaps> fail </allcaps> <number> . change the return value to >= <number> <number> . check that the context contains the expected pointer - <allcaps> pass </allcaps> <section> no matter the forced return value the msgptr should be copied to the context . the check for status >= <number> appears to be leftover from the previous use of : <code> <section> <url> <section> <allcaps> rhel </allcaps> <number> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> see bundle : <url> <section> pr # <number> - adds the field <code> to track whether an "" unregistered "" event was generated , un - overloading the <code> field to serve its primary purpose of counting actual events generated from a valid / registered appid . pr # <number> - move the appid lookup execution to be early in the cfe_sb_sendmsgfull implementation . this avoids double locking between sb + es and avoids a block - scope local variable . pr # <number> - instead of identifying a memory pool by its memory address , use a resource id . ids are a constant size , regardless of whether the host machine is <number> or <number> bits . - ids can be put into commands / telemetry and maintain a more consistent format with consistent alignment requirements . - ids can be independently verified without dereferencing memory . previously the only way to validate a memory pool was to read the address pointed to , which results in a segfault if the address was bad . pr # <number> - change from <code> defines to appropriately - scoped <allcaps> cfe </allcaps> defines for array sizing pr # <number> - this creates the new <code> typedef for function ' s return status codes . also adds a note to <code> since its behavior will likely change in the future in the hopes of not having a non - zero "" info "" status . <section> bundle ci - <url> <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , update cfe_error . h to use the cfe_status_t type <section> - fix # <number> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
""" senderreporting "" from sb private "" global "" - removed the global variable removed because is only set once and never used ."
"reorder cfe_sb_destinationd_t and cfe_sb_routeentry_t to minimize size <section> both structures get unnecessary implicit padding on a <number> bit system , and route entry has implicit padding on <number> bit now that the message id is always <number> bit . could impact efficiency ( increase cache swapping if a search is performed on the routing table ) , and impacts memory size ( impact scaled by the size of the routing table and number of descriptions ) . likely not a significant impact , but trivial to fix . <section> improve structure layout to minimize padding <section> none . <section> if routing table search is implemented (# <number> ) , this may help a little . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , perform appid lookup early <section> move the appid lookup to be early in the cfe_sb_sendmsgfull implementation . avoids double locking between sb + es and avoids a block - scope local variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run unit tests <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add send message with status <allcaps> api </allcaps> <section> fix # <number> - add send message with status <allcaps> api </allcaps> <section> built with tests , ran tests , passes <section> added <allcaps> api </allcaps> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> supports cf message flow control <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add typedef for function return status codes closes # <number> <section> this adds a typedef for return status codes for functions . i have also added a brief comment to cfe_tbl_getstatus as it ' s behavior will likely change in the future in the hopes of not having a non - zero "" info "" status . <section> make install <section> no impact to behavior <section> ubuntu <number> <section> <email>"
"add a cfe_sb_sendmsg version that provides send status <section> send status is not available to the sender , which would help senders manage critical messages or flow control ( if not sent , try again next cycle ) . <section> cfe_sb_sendmsggetstatus ( msg , & sendstatus ) where sendstatus could be an enumeration - no subscribers , sent to none , sent to some , sent to all then update sendmsgfull to include the status ( no change needed to the other apis ) <section> overload the return status <section> could be used to support cf flow control <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( one approach that could be taken to resolve a stakeholder request ) <user> <user> <user>"
"fix # <number> , use resource id for memory pools <section> instead of identifying a memory pool by its memory address , use a resource id . ids are a constant size , regardless of whether the host machine is <number> or <number> bits . - ids can be put into commands / telemetry and maintain a more consistent format with consistent alignment requirements . - ids can be independently verified without dereferencing memory . previously the only way to validate a memory pool was to read the address pointed to , which results in a segfault if the address was bad . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests confirm code coverage up to par . <section> the <code> type is no longer a direct <allcaps> cpu </allcaps> address . instead it is an abstract resource identifier . this should fix issues with unexpected padding of <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages that contain memory pool handles . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> fairly extensive changes in the memory pool implementation to support abstract handles , but the <allcaps> api </allcaps> exposed to applications should be backward compatible , so long as apps did not rely on the specific pool layout . the downside is that there is a limit to the total number of abstract identifiers that can exist , which is a new platform config limit . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add a new <code> that can replace <code> for all id storage and manipulation . initially this is just an alias to <code> for backward compatibility . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes dependency on <allcaps> ccsds </allcaps> version define . pr # <number> - removes old name and id defines . pr # <number> - <code> default stub behavior . pr # <number> - replaces calls to <code> and <code> pr # <number> - replaces <code> with <code> pr # <number> - updates variable checks in <code> <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"use cfe_sb_messagestringset for setting strings with two different sizes <section> anywhere that the name , entrypoint , or filename members are filled in telemetry should use cfe_sb_messagestringset - which is similar to strncpy but takes both a source and dest length . it is intended for this use case where the local / platform and global / mission sizes might be different and this handles padding / termination issues . <section> use cfe_sb_messagestringset whenever sring sizes could be different . <section> use standard patterns to avoid unterminated strings ( force a <allcaps> null </allcaps> ) . <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update variable checks in read_targetconfig <section> cmake script was using a "" <allcaps> defined </allcaps> "" test to check if these variables were set . problem discovered is that this is always true because "" <allcaps> simulation </allcaps> "" is a cache var set from an environment variable , so it <allcaps> always </allcaps> defined , it is just empty if not being used . fix is to use <code> rather than <code> which should only be true if the string is not empty , as intended . also applying this to <code> so if someone does e . g . <code> then it will not try to use that empty string either . fixes # <number> <section> build for vxworks <number> using <allcaps> gsfc </allcaps> build machine build for native using both <allcaps> simulation </allcaps> = native and without <allcaps> simulation </allcaps> ( using toolchain - cpu1 . cmake ) <section> builds without <allcaps> simulation </allcaps> directive work as expected <section> - vxworks <number> using <allcaps> gsfc </allcaps> build machine - native on ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe_sb_getuserdata padding check <section> fix # <number> - this adds checks to see that cfe_sb_getuserdata works with all payload data types . illustrates the issue in # <number> - as expected it fails for <number> bit payload in a telemetry packet because of implicit padding added between the header ( <number> bytes ) and the 6 4 bit payload ( requires 6 4 bit alignment . <repeated> so pads to <number> bytes ) . cmds are only ok because the default header is <number> bytes . also note - i expect these tests would also throw cast - align errors for an alignment sensitive build , since there ' s a cast from a structure with 6 4 bit alignment to 3 2 bit alignment . <section> build and run unit tests . <repeated> currently failing due to implicit padding . <section> none , except shows the current issue with our header definitions . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : main bundle + this commit <section> depends on nasa / osal # <number> ( address equal assert ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe defines to size arrays <section> fixes # <number> , also a similar issue in <allcaps> tbl </allcaps> change from os_max * defines to <allcaps> cfe </allcaps> defines for array sizing <section> built and ran unit tests , passed . visually confirmed sizes matched . <section> no impact as long as the sizes are the same . now scoped appropriately such that os ' s can be configured differently and will not break cfe ( as long as the cfe defines are max of the set ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> evs </allcaps> unregistered appid <section> do not overload the <code> field to track whether an "" unregistered "" event was generated , which by definition comes from a different app than the one that might be actively using this same table entry . this just makes a separate field to track that state , leaving the <code> to serve its primary purpose of counting actual events generated from a valid / registered appid . fixes # <number> <section> temporarily modified / hacked "" sample_app "" to send several events _before_ calling <code> . confirmed that one ( and only one ) "" unregistered "" event is reported e . g . : <allcaps> evs </allcaps> port1 <number> / <number> / cfe_evs <number> : app sample_app not registered with event services . unable to send event . also confirmed that this "" unregistered "" event did not change the valid <code> in the <allcaps> evs </allcaps> telemetry data . <section> no more incrementing a counter for another app . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add resource id type <section> add a new typedef <code> that can replace <code> for all id storage and manipulation . initially this is just an alias to <code> for backward compatibility . convert all apis that accept an id to use the new typedef . this also reserves the value "" <number> "" as an undefined id , and gives a separate base value for each resource type . therefore even though the type is still fundamentally a uint32 , the different resource ids can still be distinguished . fixes # <number> <section> build and run , sanity test <allcaps> cfe </allcaps> , ensure apps and libs are loaded ok spot - check various commands that operate on apps / appids by sending using <code> . confirmed commands that write to data files ( e . g . query_all ) has the correct appids in the file ( e . g . 0x0 2 1 1 0 0 0 0 instead of 0x0 0 0 0 0 0 0 0 for cfe_evs ) . confirmed that commands that operate on app name ( start / stop / restart etc ) still work fine . <section> <section> this should not matter so long as the id is treated as opaque , and only manipulated via the es apis . this matters if an app is using the id as a table / array index . all instances of this usage in <allcaps> cfe </allcaps> itself has already been fixed , and initial review of <allcaps> cfs </allcaps> apps did not show any concerns . otherwise , no change to behavior as long as ids are treated as opaque and only stored / used per <allcaps> api </allcaps> . <section> ubuntu <number> <section> an optional add - on can make the id type into a struct so it triggers a compiler error if / when used as an integer . this can aid in updating apps that might still use <code> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace calls to os_open and os_creat <section> use <code> , which has an <allcaps> api </allcaps> consistent with the rest of <allcaps> osal </allcaps> . <code> and <code> will be deprecated in nasa / osal # <number> . fixes # <number> <section> build <allcaps> cfe </allcaps> and run unit tests sanity test <allcaps> cfe </allcaps> by sending commands that use files ( e . g . <code> ) using cmdutil and verify functionality is not changed . <section> no impact to behavior . <section> ubuntu <number> <section> note that os_open and os_creat were already just backward compatibility wrappers around <code> that mimicked the historical <allcaps> api </allcaps> . this just bypasses the wrapper . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_calculatecrc default stub behavior <section> fix # <number> - cfe_es_calculatecrc updated to default return behavior . <section> built and ran unit tests , passed . <section> now setting the return code ( and deferred return code ) works for cfe_es_calculatecrc . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit . <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - sets revision to <number> for development build . pr # <number> - installs unit test to target directory . pr # <number> - returns processor id to default to unbreak toolchain pr # <number> - applies the appid / taskid / counterid pattern to library resources . <section> ubuntu - ci <section> <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"strawman for # <number> - return code for cfe closes # <number> - - not like this strawman will close it , but just creating the linkage <section> this is a strawman for return code typedef for cfe . <section> code builds <section> returns for cfe functions now typedef ' d in headers ( . h ) , not in the source ( . c ) . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - deconflict <code> and <code> eids pr # <number> - scrub all <allcaps> cfe </allcaps> references / uses of <allcaps> osal </allcaps> ids to use the proper <code> type . any place that an <allcaps> osal id </allcaps> is stored in memory or passed in an <allcaps> api </allcaps> call are changed to the <code> type , rather than <code> . conversions between this and other types ( e . g . bare integer ) is done using the <allcaps> osal </allcaps> - supplied conversion helpers . pr # <number> - after the changes implemented in # <number> , there may be routing table entries with no subscribers ( routeptr - > listheadptr would be <allcaps> null </allcaps> . ) this could cause a seg - fault . also , even if there are entries in the routing table , there will be no event generated if the unsubscribe does not find a matching route entry . pr # <number> - adds debug message . pr # <number> - applies the appid / taskid pattern to generic counter resources . pr # <number> - adds test for sb subscribe / unusubscribe / unsubscribe . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . chris knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , add test for sb subscribe / unusubscribe / unsubscribe <section> this adds a test to cover the issue in # <number> , and verify # <number> fixed it fix # <number> <section> build and ran unit test on main branch , confirmed it produced a seg fault ( as expected per # <number> this should pass once # <number> is checked in . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , adds name to struct / union / enum typedefs closes # <number> <section> this adds names to <code> , <code> , and <code> types , some tools find this helpful . <section> make install & & make test <section> no behavior change <section> debian <number> <section> <email>"
"fix # <number> , use osal id typedef <section> scrub all <allcaps> cfe </allcaps> references / uses of <allcaps> osal </allcaps> ids to use the proper <code> type . any place that an <allcaps> osal id </allcaps> is stored in memory or passed in an <allcaps> api </allcaps> call are changed to the <code> type , rather than <code> . conversions between this and other types ( e . g . bare integer ) is done using the <allcaps> osal </allcaps> - supplied conversion helpers . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests also specifically spot check various <allcaps> cfe </allcaps> commands that save data to file ( e . g . perf log , query all tasks , etc ) to confirm these files are being properly created - as these previously used the <code> type to store the file handle and necessitated a bigger change . <section> no impact to behavior . since the <code> is initially a typedef to <code> , this should be effectively no change except to future proof . <section> ubuntu <number> <section> depends on nasa / osal # <number> which provides the typedef and conversion helpers ( currently in ic ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , simplified cfe_evs_sendevent macros closes # <number> <section> macros for more compact calls to cfe_evs_sendevent , making the type be part of the fn name . <section> <email>"
"<allcaps> hotfix </allcaps> - <number> , fix sb unit test setup issue <section> fix integration - candidate - there was some convoluted test setup logic which actually caused some of the tests to be skipped and the cleanapp <allcaps> api </allcaps> test wasn ' t proceeded by a test reset so the event count did not match expected . caused a <allcaps> ttf </allcaps> . basically just straightened out the setup ( no actual test changes . ) <section> make , make test - passed <section> tests pass , no <allcaps> ttf </allcaps> . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle ic + this change <section> nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> - unsub of a message id that is already unsubbed closes # <number> <section> after the changes implemented in # <number> , there may be routing table entries with no subscribers ( routeptr - > listheadptr would be <allcaps> null </allcaps> . ) this could cause a seg - fault . also , even if there are entries in the routing table , there will be no event generated if the unsubscribe does not find a matching route entry . <section> ran unit test ( with updated event count . ) <section> repeated unsubscriptions should function fine , generating an informational event if there is not a current subscription . <section> debian <number> <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - in the next major <allcaps> cfe </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . pr # <number> - the <code> function had an unusual loop control structure with mixed types of signed and unsigned . this has the possibility of being infinite if the <code> is zero due to the way the end condition is structured . simplify to be like other loops and use unsigned int control variable . pr # <number> - fixes the cast - align error ( use the aligned msg since it ' s available already ) . <allcaps> hotfix </allcaps> - <number> - fix sb unit test setup issue . <allcaps> hotfix </allcaps> <number> - update documentation links for deprecated symbols . <allcaps> hotfix </allcaps> <number> - fix sb test_cleanupapp_api appid . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"fix # <number> , spacecraft id sample set to historical value ( 0x 4 2 ) <section> this is a copy of # <number> but targeting <number> ( main development branch via the integration - candidate ) fix # <number> - set spacecraft id in sample targets . cmake to 0x 4 2 <section> nominal build and test <section> spacecraft id back to historical value ( some toolchains depend on it ) . verified at <allcaps> psp </allcaps> startup , reported as <number> ( 0x 4 2 ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( w / cfe / osal main ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor internal table / id management <section> introduce wrapper / accessor functions to look up table entries by id for es & <allcaps> evs </allcaps> subsystems . __do not use appid as a table index__ . note - this does not change existing external apis and appids are still zero - based uint32 . this only changes the internal structures to remove use of id as an array index , and to use a lookup function to locate the table entry from an id . all entry access is then performed via the table entry pointer , rather than as an array index . this provides the groundwork for abstract ids without actually changing anything fundamental about resource ids . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> - start up apps and send commands , confirm normal operation run all unit tests . <section> no impact to behavior - internal refactoring only . <allcaps> api </allcaps> additions to support more abstract resource ids . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , avoid infinite loop in <allcaps> cds </allcaps> registry find <section> the cfe_es_findcdsinregistry function had an unusual loop control structure with mixed types of signed and unsigned . this has the possibility of being infinite if the maxnumregentries is zero due to the way the end condition is structured . simplify to be like other loops and use unsigned int control variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior so long as <allcaps> cfe </allcaps> was configured where the number of <allcaps> cds </allcaps> entries is not zero . if configured to be zero , this avoids an infinite loop . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"apply # <number> to bootes , set revision to <number> for development build # # describe the contribution fix # <number> for bootes # # testing performed built and ran locally based on bundle tag for bootes - rc1 built in ci , see <url> # # expected behavior changes revision version number now reports <number> during development versions . es housekeeping data reports <date> in the version string . # # system ( s ) tested on built and ran on docker container . # # additional context approved for main branch in < <url> see also < <url> # # third party code none # # contributor info _all information <allcaps> required </allcaps> for consideration of pull request_ gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , set revision to <number> for development build <section> fix # <number> <section> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> also see nasa . osal # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"hotfix ic - <number> : remove deprecated doxygen references <section> hotfix ic - <number> , removes deprecated doxygen references from osalmain . dox to fix cfs bundle build errors <section> generated doxygen files and ensured there were not errors or warnings <section> cfs dev server os : ubuntu <number> <section> add any other context about the contribution here . <section> yasir majeed khan , emergent space tech"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes reference from documentation . pr # <number> - cfe_sb_sendmsg stub now behaves the same as cfe_sb_timestampmsg ( copies message pointer from local ) . no longer need to emulate cfe_sb_initmsg from test code , set the <allcaps> api </allcaps> / stub data buffers directly . pr # <number> - removed iterator modification from within the loop . <repeated> replaced with break . pr # <number> - resolves loop iterator size too small for comparison . pr # <number> - replaced <code> use with <code> and updated unit test <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , spacecraft id hex , add to bootes <section> fix # <number> - set spacecraft id in sample targets . cmake to 0x 4 2 <section> nominal build and test <section> spacecraft id back to historical value ( some toolchains depend on it ) . verified at <allcaps> psp </allcaps> startup , reported as <number> ( 0x 4 2 ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( w / cfe / osal main ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
unsafe macro in cfe_version . h <section> unsafe macro ( violates coding standard ) <url> <section> add parentheses <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> hotfix </allcaps> - no longer add unit tests from within unit tests in msg ut <section> <allcaps> hotfix </allcaps> - unit tests added from within unit tests will not execute , replaced this pattern with direct calls to the main subtest setup routine . <section> build unit tests and ran , all tests ( including subtests ) ran . <section> all tests run <section> - hardware : cfs dev server - os : ubuntu <number> - versions : integration candidate bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> : deprecated time format verify logic fix <section> <allcaps> hotfix </allcaps> - changes the time format compile time verification logic . old logic would report error if none of the defines exist , new logic only reports error if the time format is not the default ( also works if neither are defined ) . <section> built with time format set to default , time format defines not defined , and time format set to non - default . responded as expected . <section> no longer reports error if defines are removed ( as is the case in the sample config ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : integration candidate bundle + this change <section> fix to pr # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> : updated the initial test to include the es info <allcaps> api </allcaps> calls and renamed … … the source file to es_info_test . c . <section> added additional <allcaps> es api </allcaps> tests using ut_assert and printing info structures returned from app and task info calls . <section> testing was done based upon the expected returns from these <allcaps> api </allcaps> functions . <section> no impact <section> - cfe bootes release candidate <section> walt moleski <allcaps> gsfc </allcaps> code <number>
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add msg stubs , update <code> to use them , and remove msg module include from unit tests pr # <number> - collapses time options down to just <number> bit second , <number> bit subsecond , always big endian . removes old defines , and triggers an error if the configuration is set to a format that was removed . pr # <number> - enables source selection and out - of - tree mission - defined overrides in the msg directory <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , resolve int size mismatch in loop comparison <section> fix # <number> - resolves loop iterator size too small for comparison <section> build and unit test passed . <section> resolves <allcaps> lgtm </allcaps> warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"review function , snprintf , to avoid buffer overflow <section> snprintf , is used which may cause overflow issues . not urgent . <section> review functions for security reasons . if needed , use a safer function such as sprintf_s . <url> <section> <url> <url> <url> <url> <url> <section> references : - <url> - <url> - <url> - <url> - <url> - <url> - <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove all deprecated code <section> in the next major <allcaps> cfe </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . fixes # <number> <section> build and run , sanity check <allcaps> cfe </allcaps> . run all unit tests . <section> removes code previously deprecated . identical to previous build if the <code> flag was set during configuration . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> also depends on nasa / to_lab # <number> - should be merged in same cycle . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle test - <url> <section> pr # <number> - deprecates <code> <allcaps> api </allcaps> by introducing new <code> tag pr # <number> - documentation update remove deleted requiremements pr # <number> - add a new *cfe_assert* module for functional testing by making it possible to load the ut assert object code as a <allcaps> cfe </allcaps> library . these are compiled as separate , independent modules and only loaded on demand . also includes a draft example for cfe testing , which calls some basic es appid functions . <section> bundle ci - <url> <section> part of nasa / cfs # <number> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"revert "" fix # <number> , add cfe assert and example lib "" reverts nasa / cfe # <number> testing a revert to see if it will update the status on the original pr ."
"fix # <number> , add cfe_assert library and test module <section> provides ability to load ut assert as a <allcaps> cfe </allcaps> app , and an example of using this to test some basic <allcaps> cfe es </allcaps> functions . this introduces a separate library for the basic ut assert functions ( cfe_assert ) and an app that executes the test ( cfe_testrunner ) rather than combining these into a single module . fixes # <number> also adds a small "" howto "" document to provide an example of the lines that need to be added to <code> to make this run , and document the dependencies between these modules . <section> build and run <allcaps> cfe </allcaps> , confirm tests execute and pass . <section> implements functional test framework ( same as pr # <number> ) <section> ubuntu <number> <section> this replaces my original pr # <number> - which had the same but as a single <code> app . the problem with this was that it did not guarantee the init routine completed before the subsequent test cases were loaded , because app init is run in a separate thread , where as lib init is run synchronously within the main startup thread . this approach requires two entries in the startup script rather than one , but does ensure that the init is race - free . <section> joseph hickey , vantage systems , inc ."
"rename <allcaps> omit </allcaps> deprecated flags with cfs codename instead of cfe version <section> nomenclature for deprecation can be confusing <section> create new deprecated flag for bootes and maybe replace the deprecate 6 _7 with deprecate aquila <section> keeping the current nomenclature <section> originally suggested in nasa / cfe # <number> > does deprecate_6_8 means that <number> was the last version which supports this function ? > > yes , that is the paradigm we have been using up to this point - - the number reflects the last release were it was _not_ deprecated . the idea of putting a version number in the tag was so we ' d know which ones had "" aged out "" in a future release and should be taken out completely . > > however as i mentioned before now that we have a codename for <allcaps> api </allcaps> compatibility then maybe we should consider using that instead . _originally posted by <user> in <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add missing include path to the target / h and wrn / coreip directory . set and clarify difference between wind_home and wind_base variables . remove unrelated comment about <allcaps> cexp </allcaps> ( remnant from <allcaps> rtems </allcaps> ) . <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
fix # <number> - deprecates getlastsenderid ( ) <section> fixes # <number> - deprecates cfe_sb_getlastsenderid ( ) <allcaps> api </allcaps> . fixes # <number> <section> make with and without omit_deprecated defined . <section> debian <number> <section> <email>
"fix # <number> , add cfe assert and example lib <section> add a module for functional testing called "" cfe_assert "" . this is using the ut assert object code and linking it with some <allcaps> cfe </allcaps> glue so it is loadable as a <allcaps> cfe </allcaps> library . also included is the start of an example for <allcaps> cfe </allcaps> testing , which just calls some basic es appid functions . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . load these new test apps / libs and confirm all tests pass . <section> this is all <allcaps> new </allcaps> test code which is compiled as separate modules and only loaded on demand . it is independent of existing <allcaps> fsw </allcaps> or other software modules . <section> ubuntu <number> <section> a similar example for testing <allcaps> psp </allcaps> will be included in <allcaps> psp </allcaps> repo , and apps / libs can provide the same with the app / lib . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement cmake name based targets <section> allow targets to be configured in <code> by name , rather than a numeric index . this is more user friendly , allows more configuration flexibility , and cleans up a bunch of extra logic too . fixes # <number> <section> build system , sanity check <allcaps> cfe </allcaps> , and run all unit tests testing not fully completed - initially submitting pr for design review / feedback . <section> no change to <allcaps> fsw </allcaps> , but changes the way targets are defined in <code> . this includes backward compatibility for existing files / configs , however . <section> ubuntu <number> <section> also related to # <number> , this cleans up hardcoded <allcaps> cpu </allcaps> ids that were in the platform config header file . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not generate empty include file <section> detect the condition where no files were present to fulfill an config include file requirement , and report as an error rather than generating an empty file . fixes # <number> <section> create a test config that refers to a nonexistent platform config called "" foobar "" by setting this in <code> : <code> _without_ this change , <code> still ( seemingly ) completes successfully but the <code> is actually empty , which results in a later compiler error . <section> after applying this change , the issue is reported as a <code> error instead , along with a list of files it checked for . example : <code> no <allcaps> fsw </allcaps> changes - just reporting this configuration error . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , specify processorid in targets . cmake <section> - fix # <number> allow explicitly setting of the processor id in <code> <section> build and sanity - check <allcaps> cfe </allcaps> build and run all unit tests . confirm that <code> now returns the expected value . <section> the <code> setting in <code> will be passed to the final build / link of <allcaps> cfe </allcaps> core as the <allcaps> cpu id </allcaps> . if unspecified then the cmake index value is used instead ( backward compatible ) . <section> ubuntu <number> <section> minimal / simple fix that at least should address part of the problem . note this value is not passed to <code> for table builds at the moment , this only affects the <allcaps> cfe </allcaps> runtime value of processor id . at least on pc - linux one can still provide the value on the command line which takes precedence over anything in the build . <section> joseph hickey , vantage systems , inc ."
cfe_sb_getlastsenderid ( ) future deprecation note a short note that the cfe_sb_getlastsenderid ( ) is to be deprecated in a future release . <section> <email>
"resolve # <number> , add baseline and buildnumber to version . h <section> resolve # <number> <section> steps taken to test the contribution : built on top of current integration candidate built with other integration candidates as well as with nasa / osal # <number> and nasa / psp # <number> <section> new macros defined . startup reporting now looks like < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> <section> docker ubuntu - based gcc image on <allcaps> osx </allcaps> <section> also tested with nasa / osal # <number> and nasa / psp # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use os_read_only , not o_rdonly <section> calls to os_open ( ) must use the <allcaps> osal </allcaps> - defined symbol , not the <allcaps> posix </allcaps> symbol . this was a long - standing bug but happened to work because they are both zero . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> build and run unit tests <section> none . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - update <code> to save the message pointer argument <code> so that unit tests can check it pr # <number> - only affects build system . fully backward compatible . the defaults are applied if a user has nothing specifically configured in their <code> . the defaults will select osal , cfe - core , and psp as before . the user now has the option to explicitly configure and control the inclusion of these modules and also provide mission - specific search paths to override them as desired . pr # <number> - note this only affects ut stubs . change the internal names of some stub arguments to match prototype . ensure that : - all functions in the <allcaps> cfe </allcaps> public <allcaps> api </allcaps> have a stub function implemented - all parameters to the stub function are registered in the context object , so the values will be available to hook functions . - the names of all parameters match the prototype / documentation , so hook functions that use name - based argument value retrieval will work . pr # <number> - adds to table search path in <code> pr # <number> - calls to os_open ( ) now use the <allcaps> osal </allcaps> - defined symbol , not the <allcaps> posix </allcaps> symbol . pr # <number> - defines new macros to report the build number and build baseline and new strings containing the version number of cfe and a combined string with the version number for <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , and <allcaps> cfe </allcaps> . pr # <number> - allow explicitly setting of the processor id in <code> . the <code> setting will be passed to the final build / link of <allcaps> cfe </allcaps> core as the <allcaps> cpu id </allcaps> . if unspecified , then the cmake index value is used instead ( backward compatible ) . pr # <number> - cmake now detects conditions where no files were present to fulfill an config include file requirement and reports an error during <code> lists the files it checked for rather than generating an empty file . <section> ubuntu - ci <section> part of <url> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . gerardo cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> - removes getlastsenderid ( ) fixes # <number> fixes # <number> removes <code> , which is supremely broken . <section> sb_ut passes <section> removes the cfe_sb_getlastsenderid ( ) <allcaps> api </allcaps> . <section> debian <number> <section> <email>"
"fix # <number> , scrub of all <allcaps> cfe ut </allcaps> stub functions <section> scrubs all <allcaps> cfe </allcaps> unit test functions to ensure that : <number> . all functions in the <allcaps> cfe </allcaps> public <allcaps> api </allcaps> have a stub function implemented <number> . all parameters to the stub function are registered in the context object , so the values will be available to hook functions . <number> . the names of all parameters match the prototype / documentation , so hook functions that use name - based argument value retrieval will work . fix # <number> fix # <number> <section> build and run all <allcaps> cfe </allcaps> unit tests sanity check on <allcaps> cfe </allcaps> execution ( but this does not change any <allcaps> fsw </allcaps> code ) . <section> no impact to current behavior - except it does change the internal names of some stub arguments to match prototype . note this only changes ut stubs . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> - removes cfe_sb_getlastsenderid ( ) and adds cfe_sb_rcvmsgsenderid ( ) fix # <number> <section> this removes the significantly - broken <code> function and adds a new variant <code> that returns ( via an out parameter ) the appid of the application that sent the message being read off the pipe . note that , to reduce the redundant code , <code> calls <code> with a null pointer . it may be better to use a <hashtag> define </hashtag> macro for improved performance , or deprecate the rcvmsg ( ) <allcaps> api </allcaps> eventually . <section> built and ran updated unit tests . <section> debian <number> <section> getlastsenderid ( ) is basically broken , i suggest this be merged into <number> , removing the function entirely ( no deprecation ) . it will break any users of getlastsenderid ( ) , obv . ( <allcaps> sbn </allcaps> being the only one i am aware of . ) <section> <email>"
"fix95 , ci build multiple targets <section> added a cpu2 as a second target to the build configuration to ensure build system is functioning properly with travis ci for multiple targets . also added the following files : - cpu2_cfe_es_startup . scr - cpu2_platform_cfg . h - cpu2_msgids . h resolves : cfs bundle ' s issue <number> < <url> <section> steps taken to test the contribution : went through the build steps from "" build and run "" section of < <url> <section> expected to see cpu2 in the exe directory , but it did not appear ; still only cpu1 was made for me . however , this worked for chris knight after he cloned cfs and pulled from my fork ( cpu1 and cpu2 were made ) . <section> - hardware : mac os - os : ubuntu <number> via virtualbox <section> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
create build . yml add build . yml as test
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds "" \ <number> "" in the cfe_tbl_filedef ( ) macro so that if a string is exactly the size of the field , it will produce a compiler error . pr # <number> - added cfe user ' s guide reference to <allcaps> readme </allcaps> . md pr # <number> - removes old license <section> ubuntu : bionic <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , remove obsolete license <section> removes old license . fix # <number> <section> ci , comment change only <section> none <section> n / a ( ci only ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake mission dependency cleanup <section> put more dependencies into the "" mission_defaults . cmake "" file for more visibility and ease of configuration . this now includes all "" implicit "" modules such as cfe - core , osal , and psp . also push the calls to "" generate_config_includefile "" to a sub - script which can be distributed with each app and evaluated as part of the build . this reduces dependencies on special naming conventions like <code> and <code> , and app developers can explicitly manage the files that users are expected to override . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> and sanity test build and execute all unit tests <section> no impact to behavior , affects build system only . should be fully backward compatible - in that the defaults are applied if a user has nothing specifically configured in their <code> file . the defaults will select osal , cfe - core , and psp as they always have . however , the user now has the option to explicitly configure / control the inclusion of these modules and also provide mission - specific search paths to override them as desired . <section> ubuntu <number> <section> related to previous pr # <number> , # <number> , and # <number> . not easy to separate this out from those so this is currently based on a merge of those previous changes . hopefully the combined solution can be acceptable . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - getlastsenderid now returns appid fix for # <number> - this removes the cfe_sb_senderid_t struct and , instead , the cfe_sb_getlastsenderid ( ) function now takes a pointer to an appid ( uint32 ) that it uses as an out parameter for the call . <section> built with enable_unit_tests <section> significantly changes the getlastsenderid ( ) function , will break any users of this <allcaps> api </allcaps> ( particularly <allcaps> sbn </allcaps> . ) <section> debian <number> <section> this obviates # <number> and i recommend closing that ticket with this fix . <section> <email>"
"fix # <number> - update lastsender in pipe description and add appid to buf … <section> fix # <number> this adds appid to the buff description ( used by <code> ) and updates the lastsender field in the cfe_sb_piped_t struct for each pipe that receives the message . <section> built and ran in debugger to inspect values . <section> adds a field to the cfe_sb_senderid_t struct , properly populates the cfe_sb_piped_t private struct ( which is used for hk tlm . ) <section> debian <number> <section> <email>"
"fix # <number> , update cfe_sb_timestampmsg to save the message pointer argument … ut_stub_copyfromlocal so that unit tests can check it <section> a clear and concise description of what the contribution is . fixes # <number> <section> wrote test that failed when using original version of sb stub cfe_sb_timestampmsg . <code> changed to have stub ut_stub_copyfromlocal passed in argument . <code> <section> passed in argument value is now available to a test that uses ut_setdatabuffer for cfe_sb_timestampmsg . <section> - hardware : pc - os : rhel7 <number> . <number> - <number> . <number> . el7 . x86_64 - versions : cfe <number> <section> none . <section> none . <section> alan gibson , <allcaps> gsfc </allcaps> - <number>"
"cfe_sb_getlastsenderid ( ) returns a pointer to a shared data location <section> cfe_sb_getlastsenderid ( ) in cfe_sb_api . c returns a pointer to shared data location which is risky . the function description also warns of some unpredictable or at least inconsistent behavior . <section> i think the use cases for this function should be identified and a safer & behaviorally consistent implementation should be implemented . are the use cases ? <number> . determine if app x send the last message <number> . determine whether the last message sent is from a lsit of apps a couple of options are <number> . caller passes in the name of an app or a list of apps to sb determines whether the last message sent is a match . <number> . the current type implementation copies the last message information rather than returning a pointer . <section> n / a <section> david mccomas , <allcaps> nasa </allcaps> emeritus"
"sb pipe info ' lastsender ' field is unused <section> the lastsender field in in the file produced by a sb ' send pipe info to file ' command is always zero . after doing some seraches it appears that this field defined in cfe_sb_piped_t in cfe_sb_priv . h is never set . <section> <number> . send a sb cfe_sb_send_pipe_info_cc command <number> . transfer the file to the ground <number> . decode the binary file <section> the structure definition does not have any comments as to what to expect in this field . i would expect the appid of the of the sender of last message send to the particular pipe . <section> n / a <section> wndows vm running ubuntu <number> cfe <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> none <section> david mccomas , <allcaps> nasa </allcaps> emeritus"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , continue cleanup of sb unit test <section> bundle ci : <url> <section> pr # <number> - sb unit use of the ut assert framework is closer to original design intent <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , added cfe user ' s guide reference to <allcaps> readme </allcaps> . md <section> added a reference to the cfe user ' s guide ( <url> in the cfe <allcaps> readme </allcaps> . md . the reference was placed toward the top of the document , above the "" version history "" section . resolves : # <number> <section> n / a <section> n / a <section> n / a <section> this is a simple document enhancement . <section> n / a <section> contribution by : jandlyn bentley , <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add global module list and mission default file <section> add more hooks for additional flexibility when adding modular code blobs into the build . three new directives are added : - <code> : for modular components which are direct dependencies of <allcaps> cfe </allcaps> core and / or extend its functionality . - <code> : for applications / libraries which should be built for every target , as if they were listed in every <code> setting . - <code> : same as above but for the <code> setting . this also simplifies / reworks the search path to remove some logic that was never really utilized . fixes # <number> also fixes # <number> ( supercedes / includes previous pr # <number> ) <section> build , sanity check <allcaps> cfe </allcaps> and unit test . tested adding modules to the new lists and confirm the modules are found and built as expected . <section> users have additional flexibility when configuring / customizing their <allcaps> cfe </allcaps> build . <section> ubuntu <number> <section> the initial intent with <code> is to provide a simple place for something like # <number> . the initial intent with <code> is that we can easily tack on extra libraries when unit testing is enabled , e . g . <code> this will automatically build the assert library for every target when unit testing is turned on , but it is still up the user to actually load it , but that can be done at runtime - it does not change the core <allcaps> cfe </allcaps> environment . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - adds null to filedefs <section> fix # <number> - adds "" \ <number> "" in the cfe_tbl_filedef ( ) macro so that if a string is exactly the size of the field , it will produce a compiler error . <section> <email>"
"fix # <number> , continue cleanup of sb unit test <section> makes the sb unit test closer to recommended ut assert patterns - do not keep a separate <code> state variable outside ut assert . - do not report separate status messages from the asserts . use ut assert . - do not "" reset "" in the middle of a test routine , split into separate test routines where this is done . - no need for <code> and <code> or <code> macros . ut assert has messages for these test actions . each block should be a separate test routine and then these are unnecessary . fixes # <number> <section> run all unit tests and confirm passing . no <allcaps> fsw </allcaps> code changes here , only ut . <section> sb unit tests now use the ut assert framework more as intended . <section> ubuntu <number> <section> this changes some items that were only reported on failure to a normal assert statement , which means its always reported . the side effect is that there are now about <number> "" test cases "" in the sb test . most of that is from remaining validation of the length field , in particular the user length test , which validates every possible uint16 value ( <number> ) , for each of the <number> header structures (x 4 ) , for both the return value and packet content (x 2 ) totalling <number> test cases for this one function . there are similar examples for cmd code but as this is only an <number> - bit field it only results in a few thousand cases . if it is not desirable to have so many test cases , recommendation is to change the unit test to _not_ loop through every possible value . no other functions are tested this way i . e . we do not call other apis accepting a uint16 with every representable value . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - adds padding to cfe_tbl_filedef_t <section> adds a uint32 padding ( initialized with <number> ) to cfe_tbl_filedef_t to ensure that the filename is null - terminated . <section> builds fine with "" sample_app_table . tbl "" as the filename ( which is exactly the length of the filename field . ) <section> debian <number> <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> <url> <section> pr # <number> - <allcaps> api </allcaps> change : cfe ut_sb_stubs now has cfe_sb_deletepipe available . behavior change : app unit tests requiring this will not fail to build due to undefined reference to <code> pr # <number> - hook functions may now use the <code> form and obtain the full set of variable arguments passed to <code> and variants . pr # <number> - replace all direct references to data types defined in <code> with the abstract type defined in <code> . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . alan gibson , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , implement config - based target builds <section> the existing build system built target executables grouped by toolchain as a proxy for <allcaps> cpu </allcaps> architecture + machine options / flags . the app binaries would be built once and copied to any / all targets sharing that toolchain . the side effect of doing this is that the application needs to be written in an <allcaps> cpu </allcaps> - agnostic manner , performing its subscriptions and configurations from runtime table data rather than hardcoded / fixed values . unfortunately most apps are not coded that way , so workarounds were needed . this changes the top level process to include the "" platform "" within this target build logic , effectively treating different platform configs as entirely different builds , even if they share the same toolchain file . as a result , binaries will only be shared between targets that explicitly set the <code> setting in <code> to the same value . fixes # <number> <section> build <allcaps> cfe </allcaps> and unit test + sanity check ( default config ) add cpu2 configuration using default platform settings ( different ) and unit test + sanity check . cpu2 is built separately from cpu1 , all <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , <allcaps> cfe </allcaps> , and app binaries are re - built . add cpu2 configuration sharing the same platform config settings and unit test + sanity check . cpu2 is built like the previous implementation where binaries are built once and copied to both installations . <section> no impact to behavior , only affects build . this does affect the build tree adding an extra subdirectory at the architecture level . for instance rather than <code> it becomes <code> . sample makefile is updated so <code> works with the default . <section> ubuntu <number> <section> as a side effect this makes all platform configs available to all apps , no real scope separation . so inclusion of <code> from an app will no longer trigger an error , even though i ' d still recommend against actually doing that . a future improvement might be to build <allcaps> osal </allcaps> + <allcaps> psp </allcaps> separately and only do the <allcaps> cfe </allcaps> + <allcaps> apps </allcaps> per config , using an imported target . <section> joseph hickey , vantage systems , inc ."
"multiple targets - not able to see cfe_msgids . h when building tables <section> when building for multiple targets , app tables fail to build , reporting "" cfe_msgids . h : no such file or directory "" . <section> <code> <section> builds . <section> debian <number> vm <section> <email>"
"fix # <number> , separate secondary header access functions <section> fix # <number> - separates header manipulation and definitions for easier mission customization fix # <number> - fixes validate checksum description to match implementation fix # <number> - fixes get msgid logic to not override bits fix # <number> - removes local endian <allcaps> sid </allcaps> macros fix # <number> - by adding an <allcaps> api </allcaps> that does support maximum msg size reporting , note also fixes limit in cfe_sb_initmsg by the same means . fix # <number> - fixes set / get message id logic to not override bits - enables source selection and out - of - tree mission defined overrides in the msg directory . <allcaps> note </allcaps> - there are follow - on tickets to finalize and clean up after this change . <section> ran unit tests for version <number> and version <number> header formats , all pass except sample_app due to a different bug ( nasa / sample_app # <number> ) <section> this just enables override . no actual changes in behavior other than the bug fixes . some name changes in structure fields , but apps should not be directly accessing those fields to begin with . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle + this commit ( and the other branch configured to override ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"( <allcaps> wip </allcaps> ) trivial header redefine <section> partially address # <number> just does the trivial redefine of a header since no source selection , requires all the elements that are referenced to still exist but allows moving , adding , etc . once source selection is available , can redefine handling or remove fields ( update <allcaps> api </allcaps> implementations ) . note , depends on apps actually using the real sb header definitions for this to work ( size will fail if using cfe_sb_cmd_hdr_size ) . <section> - this actually shows an example of redefining header , do not merge ! <section> built with redefined header , used updated cmdutil to test that the field was added as expected . <section> just an example , but adds a field to the header <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit , updated cmdutil <section> see # <number> for context <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add user - specified extra modules to build <section> add a new setting that can be set in targets . cmake , to enable users to add extra custom functions / modules to <allcaps> cfe </allcaps> core executable . this can be used , among other things , for future support of a modular / customizable message header structure . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> , confirm normal operation / sanity check . build and execute all unit tests , confirm passing . <section> any user - supplied library can be added to the build . <section> ubuntu <number> <section> this general concept can also be used to provide replacement implementations of core modules ( e . g . <allcaps> tbl </allcaps> , fs ) with some additional tweaking to exclude those modules from the subsequent build of <allcaps> cfe </allcaps> core . <section> joseph hickey , vantage systems , inc ."
"<allcaps> wip </allcaps> : modular message format <section> work in progress for review / discussion regarding modular message formats related to # <number> <section> very little . it builds and runs . <section> users can choose framing formats via an external library <section> ubuntu <number> <section> <allcaps> not </allcaps> ready for actual merge , this is mainly for discussion . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , added stub for cfe_sb_deletepipe in ut_sb_stubs . c <section> fixes # <number> . added stub for cfe_sb_deletepipe . stub takes pipeid argument and using ut_stub_copyfromlocal , saves it into the data buffer . <section> steps taken to test the contribution : <number> . build steps : ' make enable_unit_tests = <allcaps> true simulation </allcaps> = native ' execution steps : <number> . created simple unit test in cfs_cf calling cfe_sb_deletepipe directly . <number> . pipeid was set as the data buffer pointer and given an initial value . <number> . expectedpipeid given a different value than pipeid <number> . utassert_true used to show they are not equal ( fails ) <number> . call to cfe_sb_deletepipe with expectedpipeid as argument <number> . utassert_true used to show they are equal ( pass ) <number> . ran unit test from build / native / apps / cfs_cf / unit - test please note : this test was not saved to any repo . output : [ <allcaps> begin </allcaps> ] <number> test_check_sb_stubs [ <allcaps> fail </allcaps> ] <number> cf_app_tests . c : <number> - pipeid = 0x0 0 0 0 0 0 0 5 , exp = 0x0 0 0 0 0 0 0 6 [ <allcaps> pass </allcaps> ] <number> cf_app_tests . c : <number> - pipeid = 0x0 0 0 0 0 0 0 6 , exp = 0x0 0 0 0 0 0 0 6 [ <allcaps> end </allcaps> ] <number> test_check_sb_stubs <allcaps> total </allcaps> : : <number> <allcaps> pass </allcaps> : : <number> <allcaps> fail </allcaps> : : <number> <allcaps> mir </allcaps> : : <number> <allcaps> tsf </allcaps> : : <number> n / a : : <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : cfe ut_sb_stubs now has cfe_sb_deletepipe available . - behavior change : app unit tests requiring this will not fail to build due to undefined reference to ` cfe_sb_deletepipe ' <section> - hardware : pc - os : <allcaps> rhel </allcaps> - <number> ( maipo ) linux <number> . <number> - <number> . <number> . el7 . x86_64 - versions : cfe <number> <section> none . <section> none . <section> alan gibson , <allcaps> nasa </allcaps> , <allcaps> gsfc </allcaps> - <number>"
"fix # <number> , full context info for <allcaps> evs </allcaps> event stubs <section> create a va_list object to capture the full set of variable arguments passed to cfe_evs_sendevent and variants ( timedevent , withappid ) . use the variable argument form of the stub implementation to pass all info through to a ( possible ) hook function . fixes # <number> <section> build all unit tests and confirm normal operation , all passing . <section> hook functions may now use the va_list form and obtain the full context info . <section> ubuntu <number> <section> see also nasa / osal # <number> , nasa / sample_app # <number> for other related enhancements . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - using ut stubs cfe_evs_sendevent and cfe_es_writetosyslog , the register buffer will have the correct size . access to register buffer element will exist pr # <number> - both the main task and the child task ( s ) are successfully deleted and restarted after the exception occurs . pr # <number> - fixes doxygen warnings for the tbl subsystem . pr # <number> - no compiler warnings or errors on cross build . pr # <number> - fixes a typo pr # <number> - changes message key from uint16 to uint32 to avoid rollover and system hang <section> bundle ci - ubuntu : bionic <section> part of nasa / cfs # <number> see prs for detailed changes and more testing information <section> jose tovias , <allcaps> caci </allcaps> - <allcaps> lzt </allcaps> technology joseph hickey , vantage systems , inc . christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jacob hageman - <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add location to push <allcaps> ctf </allcaps> scripts and plugins <section> fix # <number> adds locations to push <allcaps> ctf </allcaps> scripts and plugins <section> steps taken to test the contribution : <number> . ensured that the editor launches nominally <number> . built and executed <number> test scripts <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"update tbl_ut . c to macros <section> now that the ut macros (# <number> ) have been merged into master , and as there ' s a big number of changes expected (# <number> ) , now ' s a good time to re - do tbl_ut . c to use the new macros . <section> <email>"
fix <number> sb ut <section> fixes for sb_ut . c <section> <email>
"( <allcaps> wip </allcaps> ) fix # <number> , refactor of sb_ut updates to use macros <section> this is a refactor for # <number> , which isolates the sb_ut updates . note # <number> brought in the macros now independently . fix # <number> <section> <allcaps> tbd </allcaps> - <allcaps> wip </allcaps> <section> no behavior change , just simplified sb_ut <section> <allcaps> tbd </allcaps> - <allcaps> wip </allcaps> <section> # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code implemented by <user>"
"fix # <number> , add ut macros <section> this is a refactor of # <number> to just include the macros fix # <number> <section> ci - <allcaps> tbd </allcaps> <section> none , but allows for shorter uts <section> - ci <section> see # <number> for original commits and reviews suggesting fasttrack ( code has been reviewed multiple times ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> note - code implemented by <user>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fix # <number> , deprecate decompress fix # <number> , rework exception handling in <allcaps> cfe </allcaps> fix # <number> , deprecate output to shell commandfix # <number> , add ut macros fix # <number> , deprecate <allcaps> cfs </allcaps> / fs time conversion apis fix # <number> , sb subscription report control on separate <allcaps> mid </allcaps> fix # <number> , remove duplicate cfe_time_local1hzisr prototype fix # <number> , resolve doxygen warnings fix # <number> , stubs must not depend on real msgid implementation fix # <number> , remove old cfe_arinc653 - related tests fix # <number> , remove es_app_debug functionality fix # <number> , string operations on gcc9 fix # <number> , <allcaps> tbl </allcaps> events update fix # <number> , change message definitions to ensure alignment fix # <number> , reference to deprecated cfe_spacecraft_id <section> see prs bundle ci - <url> <section> pr # <number> - no longer automatically decompresses apps / libraries as part of load pr # <number> - deletes now unused cfe_es_countobjectcallback and cfe_es_listresourcesdebug . flags were unused pr # <number> - removes all conditional preprocessing blocks related to cfe_arinc653 . pr # <number> - ensure clean build , no warnings on string operations using <allcaps> gcc </allcaps> <number> . <number> . pr # <number> - when <code> attempt to send output to shell command will result in command error counter increment ( unrecognized function code ) pr # <number> - <allcaps> sbn </allcaps> will need to init command with new <allcaps> mid </allcaps> pr # <number> - documentation links and references will now work properly pr # <number> - <allcaps> api </allcaps> cfe_es_processcoreexception is removed , replaced with async event . pr # <number> - removed duplicate prototype in cfe_time_utils . h pr # <number> - removes unused defines and adds documentation to <allcaps> tbl </allcaps> event defines . pr # <number> - deprecates cfe_time_cfe2fsseconds and cfe_time_fs2cfeseconds . pr # <number> - unit tests now build and run when message_format_is_ccsds_ver_2 is configured . pr # <number> - build now works with both extended headers and omit_deprecated options set . pr # <number> - no more alignment warnings pr # <number> - adds new unit test macros <section> see prs <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . guillaume lethuillier , self"
"fix # <number> , alignment warnings in unit test <section> resolve remaining alignment warnings in the unit test and stub code . <section> build with enable_unit_tests = true for native arch and a cross target with strict alignment requirements . confirm no warnings on either build , all unit tests pass . <section> no compiler warnings or errors on cross build . <section> ubuntu <number> ( host , little endian , <number> - bit , lax alignment ) <allcaps> mips </allcaps> via <allcaps> qemu </allcaps> ( cross target , big endian , <number> - bit , strict alignment ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , align all software bus message definitions <section> replace uint8 [ ] arrays which reserve space for the header with an instance of the header struct as defined by sb . note this structure was the basis for the array size , so it is the same size , but by actually using the structure the resulting message will have the correct alignment . fixes # <number> <section> execute all unit tests and confirm passing sanity check on <allcaps> cfe </allcaps> , builds and runs and processes commands also build and run on <number> - bit platform with strict alignment and confirm no warnings / issues <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> ( native , little endian <number> bit ) <allcaps> mips </allcaps> <number> - bit via <allcaps> qemu </allcaps> ( big endian , strict alignment requirements ) <section> just applies the same fix from # <number> to all messages . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , validate table handle prior to use <section> fixes a bug where a table handle is used prior to validation ( used in the variable initialization at the top of cfe_tbl_load ( ) . ) fix # <number> <section> <email>"
"fix # <number> , order of cleanuptaskresources <section> when cleaning up a task the child task resources should be cleaned first , followed by the main task resources . this is because child tasks are also associated with the original creator within <allcaps> osal </allcaps> and will be found through <allcaps> osal </allcaps> foreachobject , and also via links within the es task table . by cleaning child tasks first , this avoids attempting to delete the child task twice . fixes # <number> <section> hack "" sample_app "" to create a child thread <allcaps> and </allcaps> trigger an exception after period of time . confirmed the original bug report where the attempt to clean up the sample_app resources results in <code> in the unmodified master branch . then apply this patch and re - test , and confirm that "" sample_app "" is successfully restarted . also confirm unit tests passing . <section> both the main task and the child task ( s ) are successfully deleted and restarted after the exception occurs . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , whole - archive unrecognized when compiling with vxworks spar … … c compiler in start_whole_archive and stop_whole_archive , it is missing "" - wl , "" when compiling for vxworks . <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , alignment of <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions <section> define the sb message headers such that they are aligned appropriately for casting to / from a <code> type . note this should not affect the size of these structures on a <number> - bit machine with the default configuration , as they are already multiples of <code> . <repeated> then change only the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> definitions which were generating warnings on the <number> - bit build to use this correct definition , rather than a <code> array to reserve space for the header . again in these cases this should not change the size or padding because it already was multiples of <code> . this just makes it so the compiler will appropriately align the overall buffer . fix # <number> <section> build for <number> + <number> bit platforms with strict alignment settings and confirm that the warnings are gone . confirm all tests pass . <section> no impact to behavior . <section> ubuntu <number> <allcaps> mips </allcaps> yocto / poky embedded linux ( <number> - bit big endian processor with strict alignment requirements ) <allcaps> rtems </allcaps> on <allcaps> qemu </allcaps> ( i686 - rtems4 . <number> ) <section> joseph hickey , vantage systems , inc ."
"whole - archive - unrecognized i can work this issue . <section> in start_whole_archive and stop_whole_archive , it is missing "" - wl , "" when compiling for vxworks . i am using a sparc compiler and i get the following error : linking c executable core - plss_cws cd . <repeated> - g cmakefiles / core - plss_cws . dir / src / target_config . c . obj - o core - plss_cws - - whole - archive . <repeated> / cfe_core_default_plss_cws / libcfe_core_default_plss_cws . a . <repeated> / psp / ut700 - vxworks6 . <number> / libpsp - ut700 - vxworks6 . <number> . a . <repeated> / osal / libosal . a - - no - whole - archive sparc - wrs - vxworks - gcc : error : unrecognized command line option ' - - whole - archive ' sparc - wrs - vxworks - gcc : error : unrecognized command line option ' - - no - whole - archive ' to fix the error see below in code snips : <section> steps to reproduce the behavior for <allcaps> xemu plss </allcaps> project : <number> . go to plss_cws_mission <number> . source setvars . sh <number> . mcrv <number> . see error <section> no error . a clean build . <section> i updated cafe / cmake / target / cmakelists . txt if (""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" <allcaps> gnu </allcaps> "" ) # the option pair for <allcaps> gnu </allcaps> gcc / ld tools if ( "" ${ <allcaps> cpu </allcaps> } "" <allcaps> strequal </allcaps> "" <allcaps> sparc </allcaps> "" ) set ( start_whole_archive "" - wl , - - whole - archive "" ) set ( stop_whole_archive "" - wl , - - no - whole - archive "" ) else ( ) set ( start_whole_archive "" - - whole - archive "" ) set ( stop_whole_archive "" - - no - whole - archive "" ) endif ( ) : # the linker option prefix may or may not be needed , see below set ( compiler_linker_option_prefix "" - wl , "" ) else ( ) # other toolchain options may be added here endif ( ) <section> - hardware - os : centos <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , chksm <number> - vxworks6 . <number> <section> add any other context about the problem here . <section> jose tovias <allcaps> caci </allcaps> / <allcaps> lzt </allcaps> technology"
"fix # <number> , stubs must not depend on real msgid implementation <section> this makes the sb stubs which access message structures into actual stubs , not a replica of the normal implementation . stubs manipulate a local ( stored in the ut framework ) out - of - band buffer to hold the metadata about the message . this removes the dependency on the actual definition of msgid used by the mission and makes them agnostic to the setting of extended headers . this revealed a few other minor issues in test cases where they were depending on values sitting in globals ( also fixed ) . fixes # <number> <section> build unit tests with <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> with and without configuration for extended headers . confirm passing . <section> unit tests now build and run when <code> is configured . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog add missing ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog . this will create the correct register buffer size . <section> add missing ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog . this will create the correct register buffer size . - fixes # <number> <section> steps taken to test the contribution : travis ci passed : <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - behavior change : - using ut stubs cfe_evs_sendevent and cfe_es_writetosyslog , the register buffer will have the correct size - access to register buffer element will exist <section> - hardware : pc and ut700 - os : centos <number> and vxworks6 . <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , chksm <number> <section> none . <section> none . <section> jose tovias / <allcaps> caci </allcaps> - <allcaps> lzt </allcaps> technology / <allcaps> jsc </allcaps> - <allcaps> jsc </allcaps> b32 : r205 / <email> / <phone> / <allcaps> nasa </allcaps> contract # nnj14ha04b / task order <number> : exploration extravehicular mobility unit ( xemu ) software development and engineering support - <allcaps> hand signed </allcaps> company <allcaps> cla </allcaps> has been emailed to <email> . copy sent : gsc_18128_corp_cla_form_1219_josetovias_for_cfe6 . <number> . pdf <url>"
"integration candidate : fast track <section> fixes # <number> <section> see <url> bundle ci - <url> <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the osconfig . h file . <section> see pr bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> tbl </allcaps> events update <section> removes unused defines ( recently added ) , adds documentation to <allcaps> tbl </allcaps> event defines . fix # <number> <section> make doc , examined output <section> <email>"
"fix # <number> , remove duplicate cfe_time_local1hzisr prototype <section> removed duplicate prototype in cfe_time_utils . h fix # <number> <section> standard make w / unit tests <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : master bundle w / this commit <section> bigger time service cleanup referenced in # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake - based <allcaps> osal </allcaps> config <section> rather than <allcaps> cfe </allcaps> generating an osconfig . h file directly , it just needs to select file ( s ) from the defs directory and pass them to <allcaps> osal </allcaps> for the config . this makes it compatible with the upcoming nasa / osal # <number> change ( in pr nasa / osal # <number> ) fixes # <number> <section> build code with default provided and confirm that <allcaps> osal </allcaps> generates the correct config ( osconfig . h ) and the build succeeds <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the <code> file . <section> ubuntu <number> <allcaps> lts </allcaps> <section> correlates with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove compiler added padding in tlm packets <section> fix # <number> removes compiler added padding by padding ccsds_tlmsechdr_t such that the payload will always start on a <number> - bit boundary . also adjusts packet alignment such that packets with <number> bit variables are aligned correctly . related to nasa / cfs - groundsystem # <number> intended to be delivered with nasa / cfs - groundsystem # <number> <section> steps taken to test the contribution : <number> . modified groundsystem . py to display raw packets as they are being decommed <number> . bit busted packets to ensure no compiler added padding is being applied . <number> . ran unit tests . <section> compiler added padding will no longer be applied to packets . <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"cfe_sb_setmsgtime sets ccsds_tlmsechdr_t time field in native endianness <section> cfe_sb_setmsgtime populates the ccsds_tlmsechdr_t time field with native endianness format instead of using macros . ccsds . h definition of the time headers are network byte order . <section> define actual standard , confirm across stakeholders and fix . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake - based <allcaps> osal </allcaps> config <section> rather than <allcaps> cfe </allcaps> generating an osconfig . h file directly , it just needs to select file ( s ) from the defs directory and pass them to <allcaps> osal </allcaps> for the config . this makes it compatible with the upcoming nasa / osal # <number> change ( in pr nasa / osal # <number> ) fixes # <number> <section> build code with default provided and confirm that <allcaps> osal </allcaps> generates the correct config ( osconfig . h ) and the build succeeds <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the <code> file . <section> ubuntu <number> <allcaps> lts </allcaps> <section> correlates with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework exception handling in <allcaps> cfe </allcaps> <section> move exception handling to a <allcaps> psp </allcaps> function . in this approach the <allcaps> cfe </allcaps> only logs data after the event as a background job . replaces the cfe_es_processcoreexception with a simple notification that causes the es background job to run , which in turn polls the <allcaps> psp </allcaps> for logged exceptions and writes entries to the <allcaps> es er </allcaps> log . both the <allcaps> psp </allcaps> execption scan and the er log file dump are converted to background jobs . fixes # <number> fixes # <number> <section> validate <allcaps> cfe </allcaps> exception handling behavior on <allcaps> posix </allcaps> and vxworks ( not implemented on <allcaps> rtems </allcaps> ) . add divide by zero "" bug "" to sample_app for testing . confirm exception is logged correctly confirm er dump to file works <section> no change from <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> perspective <allcaps> api </allcaps> <code> is removed , replaced with async event . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit vxworks <number> on mcp750 <section> needs corresponding changes in <allcaps> psp </allcaps> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> , # <number> , # <number> , # <number> , # <number> <section> see prs bundle ci - <url> <section> pr # <number> - upon power on reset , default system log mode set to overwrite . upon processor reset , default system log mode set to discard . pr # <number> - no longer locks while locked ( no issue observed on linux / posix , but user reported issue on freertos <number> ) pr # <number> - internal <code> <allcaps> api </allcaps> changed slightly to add appname as a parameter . return value from <code> no longer relevant for event generation . pr # <number> - updates <code> such that it now checks the ' used flag ' prior to calling <code> for a given tblhandle . also sets the appid to <code> after removing the access descriptor link from linked list . pr # <number> - removed <code> from <code> <section> see prs bundle ci - ubuntu : bionic <section> <url> <section> jacob hafgeman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , resolve doxygen warnings <section> fixes # <number> , resolving all doxygen warnings <section> steps taken to test the contribution : <number> . fixed warnings as listed in <code> <number> . built documentation using <code> <number> . observed relevant documentation working correctly <section> a clear and concise description of how this contribution will change behavior and level of impact . - documentation links and references will now work properly <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - leor bleier <allcaps> nasa gsfc </allcaps> \ code <number>"
"fix # <number> , deprecate shell output command <section> deprecates the shell output command fix # <number> fix # <number> see # <number> for approaches to replacing "" list "" functionality ( list apps , list tasks , list resources ) that was implemented as "" special "" shell commands . <section> build and ran tests locally with <allcaps> simulation </allcaps> = native , enable_unit_tests = true with and without omit_deprecated , passed <section> when deprecated attempt to send output to shell command will result in command error counter increment ( unrecognized function code ) . <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : based on integration branch since it had critical fixes + this branch . can rebase once integration branch is merged . <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci - <url> <section> <number> . pr # <number> - changes to cmake syntax might improve behavior in ides <number> . pr # <number> - documentation only <number> . pr # <number> - none , reduces user confusion due to duplicate defines <number> . pr # <number> - none , deprecates additional items <number> . pr # <number> - none , except if someone defines this value as unsigned it will not break . <repeated> <number> . pr # <number> - no impact to <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interface or <allcaps> api </allcaps> . internal changes only . <number> . pr # <number> - exposes the <code> for application usage . <number> . pr # <number> - <code> will now detect if it is being called prior to a message being sent on a given pipe . <number> . pr # <number> - mismatches between <allcaps> psp </allcaps> / <allcaps> bsp </allcaps> / os are now detected and warned about during make prep . only the <code> is actually required to be specified for a <allcaps> cfe </allcaps> build now . others can be omitted . <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems inc . jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , define <allcaps> bsp </allcaps> type in sample config <section> update of osal_system_bspname to osal_system_bsptype in sample toolchains . fix # <number> <section> steps taken to test the contribution : <number> . readme build steps <section> builds out of the box with sample config <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : master bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , separate <allcaps> syslog </allcaps> configurable defaults for power on and proc … describe the contribution fix # <number> . separates configurable defaults for power on and processor reset . default power on set to overwrite and default processor reset to discard . added an additional unit test to cover the path added to cfe_es_taskinit . testing performed : ran unit tests expected behavior changes upon power on reset , default system log mode set to overwrite . upon processor reset , default system log mode set to discard . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , replace os_fs_ * return codes with common definitions describe the contribution removed the following os_fs * defines from osapi - os - filesys . h : os_fs_success , os_fs_error , os_fs_err_invalid_pointer , os_fs_err_no_free_fds , os_fs_err_invalid_fd , and os_fs_unimplemented fixes # <number> used sed to perform a bulk find / replace on each one to swap with common definitions . testing performed steps taken to test the contribution : ran unit tests . expected behavior changes none system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , add check for usedflag and sets <allcaps> apid </allcaps> to cfe_tbl_not_owned describe the contribution updates cfe_tbl_cleanupapp such that it now checks the ' used flag ' prior to calling cfe_tbl_removeaccesslink for a given tblhandle . also sets the appid to cfe_tbl_not_owned after removing the access descriptor link from linked list . fix # <number> testing performed : <number> . modified cfe_es_runloop such that if appsate = = cfe_es_appstate_waiting , then it will not return false . this was done to allow the restart command to work . <number> . created a test app that uses tables . <number> . modified table noop command such that it prints out table access descriptor data when received . <number> . ran the following test - note that i sent a noop after each step to review data ( test results attached ) a . started <allcaps> cfe </allcaps> b . deleted test app c . restarted sample app d . restarted sample app ran test twice - once to ensure i could recreate the error . once to ensure changes corrected error . <number> . ran unit tests expected behavior changes will no longer receive ' cfe_tbl : removeaccesslink - putpoolbuf [ <number> ] fail ' error . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard issue_121_w_fix . txt <url> issue_121_wo_fix . txt <url>"
"fix # <number> , avoid deadlock in cfe_es_creatobjects <section> now uses cfe_es_syslogwrite_unsync inside shared data lock fixes # <number> <section> <number> . ci - <url> <section> no longer locks while locked ( no issue observed on linux / posix , but user reported issue on freertos <number> ) <section> - hardware : ci - os : ubuntu <number> - versions : bundle w / this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"duplicate <allcaps> cfe </allcaps> error codes <section> while coding fixes for another ticket , happen to stumble upon two <allcaps> cfe es </allcaps> error codes with the same value . <url> <section> should have unique / distinguishable values <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , and # <number> see bundle ic at <url> <section> see prs bundle ci - <url> <section> pr # <number> - builds without error . pr # <number> - no changes , exposes cfe_sb_getpkttype and adds the stub . pr # <number> - use the <code> and <code> properties from the osal target and apply them to the entire <allcaps> cfe </allcaps> build as a directory - scope property . no impact until these are set in <allcaps> osal </allcaps> . pr # <number> - coverage data ( make lcov ) again includes the <allcaps> cfe </allcaps> core code <section> see prs , bundle ci - ubuntu : bionic <section> joseph hickey , vantage systems , inc . jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> osal </allcaps> coverage report includes unit tests <section> coverage numbers include the actual unit test code <section> exclude unit test code from coverage results <section> none <section> nasa / osal # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update coverage compile / link flag options <section> <allcaps> osal </allcaps> now sets these as ut_coverage_compile_flags , ut_coverage_link_flags . building and linking the ut executable needs a corresponding update . fixes # <number> <section> build with <code> and confirm that all unit tests are building <section> coverage data ( <code> ) now includes the <allcaps> cfe </allcaps> core code again <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> similar change will be needed in apps ( forthcoming ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , updates cfe_sb_getlastsenderid to check if message has been sent on pipe <section> updates cfe_sb_getlastsenderid to check if a message has been sent on the associated pipe prior to setting the receivers pointer to the associated address of ' sender ' in the buffer descriptor . includes associated unit test addition to cover the additional path added to cfe_sb_getlastsenderid . includes an addition of a sb status code and event id . fix # <number> <section> <number> . ran unit tests . <number> . reviewed coverage test results to ensure that additional path added is covered with the updated unit test . <section> cfe_sb_getlastsenderid will now detect if it is being called prior to a message being sent on a given pipe . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , expose isvalidmsgid and partially address # <number> consistent use of msgid types <section> fixes # <number> this exposes the <code> in the <allcaps> cfe sb </allcaps> public <allcaps> api </allcaps> , rather than confining it to the private / internal <allcaps> api </allcaps> . partially addresses # <number> this also includes a number of internal changes to make <allcaps> cfe </allcaps> core apps consistent in their use of the cfe_sb_msgid type and with the <allcaps> cfe sb api </allcaps> . this employs the appropriate <allcaps> cfe sb </allcaps> abstraction <allcaps> api </allcaps> whenever any of the following needs to happen : - use of a cfe_sb_msgid_t value within a printf ( event , syslog , etc ) . - initialization of a cfe_sb_msgid_t from an integer value - comparison of two cfe_sb_msgid_t values - checking if a cfe_sb_msgid_t value is within the valid set notable exception to integer conversion rules is for the <allcaps> mid </allcaps> <code> values , which are not changed for backward compatibility reasons . these are still defined as integers , and used directly in the code . also worth noting - this replaces the switch / case constructs used in message dispatch with a nested if / else based on cfe_sb_msgid_equal ( ) , as the switch statement can only be used with an integer . a few new macros are introduced , mainly because the inline functions that already existed for this purpose cannot be used where evaluation must be done at compile time ( e . g . constants , struct initialization ) . these are initially just typecasts , but could become more interesting in future revisions . <section> build with <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> - run all unit tests and confirm passing - run sanity check on <allcaps> cfe </allcaps> , boot up and issue commands to each core app using <code> . ensure no changes to message routing / processing for every core app . <section> this exposes the <code> for application usage . no other <allcaps> api </allcaps> or behavior changes . all other changes are transparent . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> this is a step in the direction of related issue # <number> but does not do anything that would affect backward compatibility with the way the <allcaps> mid </allcaps> integers are currently defined and used . it does introduce a few of the macros that will become more relevant / necessary ( i . e . so they can evolve beyond a simple typecast / passthrough ) . <section> joseph hickey , vantage systems , inc . * <allcaps> edit </allcaps> * added reference for msgid handling"
"fix # <number> - cfe_tbl_load ( ) errors - strawman for <allcaps> ccb </allcaps> consideration <section> moved cfe_tbl_loadfromfile ( ) code into cfe_tbl_load ( ) , lots new <allcaps> eid </allcaps> ' s , some new status codes , removed syslog calls from load ( ) <section> builds and runs , just no ut code changes yet . <section> cfe_tbl_load ( ) now produces events instead of writing to syslog ( and generating a generic event ) . also removed cfe_tbl_loadfromfile ( ) as it was only called by cfe_tbl_load ( ) ( and the ut code , which will have to be adapted to call load ( ) . ) <section> debian <number> <section> <email>"
"fix # <number> and # <number> , resolve app table scanning race conditions <section> fixes # <number> fixes # <number> partially addresses # <number> - runloop now increments task counter instead of main app execution counter create a new background job to handle the maintenance tasks that had been performed in the es main task as part of the <code> routine . all app state changes , including those invoked by messages , are now handled by this job . this also slightly changes the semantics of cfe_es_runloop and cfe_es_exitapp . now , the cfe_es_runloop routine no longer requires a runstatus buffer . instead , the only thing that matters is the runstatus value that is eventually passed to cfe_es_exitapp after the shutdown is complete . this should be mostly backward compatible , as the recommended app pattern would pass the same value to both functions . this commit also fixes # <number> , as the value passed to cfe_es_exitapp will not override a request that was already pending . <section> build with enable_unit_tests = <allcaps> true </allcaps> for native (x 8 6 - <number> linux ) and <allcaps> rtems </allcaps> ( i686 - rtems4 . <number> ) - run unit tests and confirm all passing - check coverage report ( lcov ) and confirm no reduction in coverage for modified functions , and newly added functions are fully covered . - run <allcaps> cfe </allcaps> and send various restart / reload / delete requests for sample_app - confirm that sample_app exits itself and is restarted / reloaded / deleted correctly by es . - confirm that if sample_app does not exit itself , it is still forcibly deleted by es - confirm same behavior on <allcaps> rtems </allcaps> <section> no impact to <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interface or <allcaps> api </allcaps> . internal changes only . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit ( native ) - <allcaps> qemu </allcaps> ( i686 - rtems4 . <number> ) <section> this reuses the background task concept introduced in pull # <number> . will rebase this changeset as soon as that pull request makes it into a stable baseline . <section> joseph hickey , vantage systems inc ."
"fix # <number> , perf log threading and concurrency issues <section> replaces the <code> with a standard <allcaps> osal </allcaps> mutex for protecting the shared / global perflog data structure . this may introduce unexpected task switches when contention occurs , but it ensures proper exclusion with respect to the data structures . removes the temporary child worker task that was spawned for writing the log data to a file , and replace with a more generic <allcaps> cfe es </allcaps> background task . the background task is started at boot and pends on a semaphore until there is work to do . the background performance log dump is implemented as a state machine which is called repeatedly over time from the background job task . this performs a limited amount of work on each invocation , and resumes where it left from the previous invocation . fixes # <number> fixes # <number> <section> build <allcaps> cfe </allcaps> with enable_unit_tests = <allcaps> true </allcaps> confirm all unit tests pass confirm near <percent> coverage on all newly added / modified code run <allcaps> cfe </allcaps> and send commands to start performance logging send other <allcaps> cfe </allcaps> commands to generate performance log activity send command to stop performance log and generate a dump file confirm validity of dump file by opening with java tool . no errors reported when opening file . <section> no impact to behavior . previously the perf log dump file frequently contained errors due to out of order or otherwise corrupted entries , which is now fixed . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native ) - <allcaps> mips </allcaps> <number> target running in <allcaps> qemu </allcaps> ( big endian ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , expose cfe_sb_getpkttype <section> fix # <number> note this only exposes and adds the stub . requirement (# <number> ) / functional test / coverage test still in work . <section> steps taken to test the contribution : <number> . built with <allcaps> simulation </allcaps> = native and enable_unit_tests = true <number> . tests passed <number> . ran with cfs - groundstation and observed reported sequence counter that wasn ' t reporting actual sequence count <number> . note it does pass the sequence count test , which is what sb uses getpkttype for <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle w / this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , opaque cfe_sb_msgid_t values <section> ensures that all <allcaps> cfe </allcaps> core apps outside of sb itself treat the <code> type as an opaque / abstract value and do not assume it is an integer . this pull request is primarily a concept / preview of this idea in action for <allcaps> ccb </allcaps> discussion . it does work though and could be merged as - is although i expect some change requests . currently the type safe enforcement is enabled based on a compile definition <code> . this could be moved into the "" omit deprecated "" switch instead rather than a new switch . the type - safe enforcement switches cfe_sb_msgid_t from being a simple integer value to a structure wrapper , so it cannot be implicitly exchanged with other integers , nor can it be involved in any arithmetic calculation . however , this is a breaking <allcaps> api </allcaps> change due to the way most apps specify their msgid values as integers via <code> macros . fixes # <number> <section> build <allcaps> cfe </allcaps> for <allcaps> simulation </allcaps> = native ( <number> bit linux ) execute all unit tests sanity check <allcaps> cfe </allcaps> by booting and sending commands with cmdutil in particular check all <allcaps> cfe sb </allcaps> routing info , map info commands and compare file output before and after change to make sure data is the same . <section> no externally - visible changes ( i . e . <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> , files , tables , etc ) . <allcaps> api </allcaps> changes when building with enforcing mode : - all <allcaps> cfe sb api </allcaps> operations that accept or return a cfe_sb_msgid_t ( subscribe , etc ) must be supplied with an instance of <code> only , not an integer . passing or assigning to a bare integer triggers a compiler error . - macros / conversions are provided to bridge the gap , and allow printing as integer for syslog / events as well as converting from an integer - no longer can <code> on a msgid - - must use <code> and a nested if . - this also exposes cfe_sb_ismsgidvalid ( ) in the public <allcaps> api </allcaps> . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"integration candidate - <number> - <number> - <number> <section> integration candidate fixes # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci see <url> test log : <url> <section> pr # <number> - cmd code ( and checksum ) are always in the same place ( matches <allcaps> gsfc </allcaps> spec for command secondary header ) pr # <number> - no travis - ci configuration warnings pr # <number> - document change only , updates the interrupt handler section to note <allcaps> osal </allcaps> deprecation pr # <number> - no impact to behavior . previously the perf log dump file frequently contained errors due to out of order or otherwise corrupted entries , which is now fixed . <section> see prs bundle ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , propagate the <allcaps> osal </allcaps> compile definitions to <allcaps> cfe </allcaps> build <section> use the <code> and <code> properties from the osal target and apply them to the entire <allcaps> cfe </allcaps> build as a directory - scope property . at this time , the <allcaps> osal </allcaps> library build does not use / export these properties so this is effectively a no - op for the <allcaps> cfe </allcaps> build and can be merged with no effect . however , in a future version ( specifically after nasa / osal # <number> gets fixed ) , the <allcaps> osal </allcaps> library will export these interface properties and this will become important . fixes # <number> <section> built for all three test platforms ( ppc - vxworks6 . <number> , i686 - rtems4 . <number> , native / x86 - <number> linux ) . sanity check <allcaps> cfe </allcaps> build boots and runs , unit tests run . <section> no impact to behavior - build is identical because these properties are currently empty / not set in the current <allcaps> osal </allcaps> build . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit . <section> also locally tested against a version of <allcaps> osal </allcaps> + <allcaps> psp </allcaps> that includes all the latest proposed changes and confirm that this still works . <section> joseph hickey , vantage systems , inc ."
"fix # <number> : shell unsigned pkt length bug <section> fix # <number> really just avoids problems if users mistakenly define cfe_mission_es_max_shell_pkt as an unsigned value ( 2 0 0 0 u , for example ) <section> steps taken to test the contribution : <number> . ci suggest requester ( <user> ) confirm it works as requested <section> none , except if someone defines this value as unsigned it will not break . <repeated> <section> - hardware : <allcaps> amd </allcaps> - os : ubuntu <number> - versions : bundle + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate all cfe_os error codes <section> see discussion on # <number> , cfe_os error codes are an unnecessary abstraction . no plan to translate between the two , so no need to abstract . <section> deprecate and just use the <allcaps> osal </allcaps> error codes directly . <section> see discussion in # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fixes # <number> <section> bundle ci see pr # <number> <section> no behavior changes . this change only enables future transition to using the <allcaps> osal bsp </allcaps> <section> bundle ci - ubuntu : bionic <section> joseph hickey - vantage systems , inc . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removes message_format_is_ccsds ifdefs from code <section> fixes # <number> , removes message_format_is_ccsds ifdefs from <allcaps> cfs </allcaps> code testing performed ran unit tests system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"integration candidate <number> - <number> - <number> <section> integration candidate <number> - fix # <number> fixes : # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> documentation scrubs and a makefile change to report branch coverage <section> tested in bundle ci - see <url> <section> see related prs : # <number> # <number> # <number> <section> ci ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> also adds pr # <number> <section> see prs # <number> , # <number> , # <number> , # <number> ci on cfs - bundle integration candidate , see <url> <section> pr # <number> - prevents the call to file ( to_native_path . <repeated> ) from building its own path with content identical to src_local_path . pr # <number> - <allcaps> pdf </allcaps> users guide can be generated by make process pr # <number> - removes dependencies on cfe_platform_cfg . h from the unit test stub code . fixes a name collision where different configs exist within the same architecture . pr # <number> - documentation only <section> see prs above ci : ubuntu : bionic <section> see prs above <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> elizabeth timmons - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> joseph hickey - vantage systems , inc . ( <allcaps> cla </allcaps> on file ) andrei - costin zisu - planetary transportation systems gmbh ( <allcaps> cla </allcaps> on file )"
"apis missing unit tests <section> the following apis need to have additional unit tests added : cfe_es_api . c : cfe_es_deleteapp - should test on boundary conditions for appid cfe_es_api . c : cfe_es_getappidbyname - don ’ t see where this is ever called in unit test cfe_es_api . c : cfe_es_reloadapp - should test on boundary conditions for appid cfe_es_api . c : cfe_es_restartapp - no success path test cfe_esmempool . c : cfe_es_getmempoolstats - no success path test cfe_sb . h : cfe_sb_msgid_equal - don ’ t see where this is ever called in unit test cfe_sb . h : cfe_sb_msgidtovalue - don ’ t see where this is ever called in unit test cfe_sb . h : cfe_sb_valuetomsgid - don ’ t see where this is ever called in unit test cfe_sb_api . c : cfe_sb_subscribefull - there are <number> cases where cfe_sb_bad_argument can get returned … ut should test each one individually . also this is outside the scope of the argument validation audit , but there are <number> additional return codes not tested in the unit test . cfe_sb_api . c : cfe_sb_subscribelocal - consider subscribing to message with limit greater than cfe_platform_sb_default_msg_limit cfe_tbl_api . c : cfe_tbl_dumptobuffer - no success path test cfe_tbl_api . c : cfe_tbl_getaddresses - should test on boundary conditions for numtables cfe_tbl_api . c : cfe_tbl_getstatus - don ’ t see a success path test cfe_tbl_api . c : cfe_tbl_releaseaddresses - no success path test . also , should test on boundary conditions for numtables cfe_tbl_api . c : cfe_tbl_update - don ’ t see a success path test cfe_tbl_api . c : cfe_tbl_validate - no success path test cfe_time_tone . c : cfe_time_local1hzisr - don ’ t see where this is ever called in unit test <section> unit tests test all success / error paths <section> na code review / audit <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , and # <number> see prs # <number> , # <number> , and # <number> for more info <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> # <number> - no longer requires sed "" hack "" to change the setting in default_config . h # <number> - clean build # <number> - none <section> ci <section> see prs # <number> , # <number> , and # <number> for more info <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> daniel knutsen - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , build failure in ut stubs with multiple cpus <section> fix # <number> removes dependencies on <code> from the unit test stub code . the behavior of the stubs should not be dependent on the <allcaps> fsw </allcaps> runtime config . this also fixes a duplicate name collision where different configs exist within the same architecture , causing a conflict on the ut target names . <section> build with enable_unit_tests = <allcaps> true </allcaps> for both native and cross environments , with both a default config ( single <allcaps> cpu </allcaps> / config ) and a more complex two <allcaps> cpu </allcaps> config . execute unit tests and confirm all passing in all configs . <section> the two <allcaps> cpu </allcaps> config originally fails and now builds and runs ut with this change . no changes to <allcaps> fsw </allcaps> , only ut . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit cross build for <number> - bit architecture <section> joseph hickey , vantage systems , inc . ( <allcaps> cla </allcaps> on file )"
"fix # <number> , link <allcaps> cfe </allcaps> core with <allcaps> osal bsp </allcaps> <section> link the <allcaps> cfe </allcaps> core target with the <allcaps> osal bsp </allcaps> library by including this in the final link library list . fixes # <number> <section> build and run unit tests on native (x 8 6 - <number> ) and pc - <allcaps> rtems </allcaps> . confirm <allcaps> cfe </allcaps> runs normally , no change . <section> no behavior changes . this change only enables future transition to using the <allcaps> osal bsp </allcaps> rather than duplicating startup logic in the <allcaps> cfe psp </allcaps> . initially the linker should drop / ignore the content of this library . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit ( native ) - pc - <allcaps> rtems </allcaps> using i686 - rtems4 . <number> cross build <section> this depends on the related change in nasa / osal # <number> which defines the separate <code> target . it should be merged at the same time ( or after ) the <allcaps> osal </allcaps> change is merged . <section> joseph hickey , vantage systems , inc ."
"<allcaps> cfe </allcaps> core build should link with the <allcaps> osal bsp </allcaps> library <section> the <allcaps> cfe psp </allcaps> has historically duplicated some logic that was also in the <allcaps> osal bsp </allcaps> . in an effort to consolidate this and have only one basic <allcaps> bsp </allcaps> implementation , the <allcaps> cfe psp </allcaps> should be an extension of the <allcaps> osal bsp </allcaps> rather than duplicating the logic . <section> the first step to accomplish this is to have the <allcaps> cfe </allcaps> final link also include the <code> library in the final link . <section> including <code> should not affect existing builds as long as it is included _after_ the <allcaps> psp </allcaps> , so the linker will not pull in duplicate symbols . it should be effectively a no - op / ignored in the current build but enables a future transition to using the osal - provided <allcaps> bsp </allcaps> for startup . <section> joseph hickey , vantage systems , inc ."
"ic - <number> describe the contribution fix # <number> , # <number> , # <number> , # <number> , and # <number> requirement and documentation scrubs # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes pr # <number> , pr # <number> , pr # <number> pr # <number> , pr # <number> pr # <number> , pr # <number> , pr # <number> - requirement scrubs . pr # <number> - updated <allcaps> api </allcaps> documentation pr # <number> - removed references to device drivers in both code and documentation . pr # <number> - fixes incorrect debug messages in <code> pr # <number> - numofchildtasks will now be decremented when a child task is deleted . system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate / delete cfe2fsseconds and fs2cfeseconds <section> cfe2fsseconds and fs2cfeseconds never clearly required / defined . <section> remove unrequired functionality . <section> define explicit use case , requirement , and testing within cfe context . <section> see # <number> and # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> describe the contribution fix # <number> , # <number> , and # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> passes after adding # <number> expected behavior changes # <number> - adds a new function , cfe_sb_getpipeidbyname , which retrieves the pipe id given a name of a pipe . # <number> - improvement in error reporting when using a pipe name that is already in use , or when the queue limit has been reached . system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_time_print format fix describe the contribution fix # <number> , cfe_time_print format fix testing performed build process : - make distclean - make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep - make - make install verified nominal / clean build . ran unit tests . expected behavior changes clean build system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , remove obsolete * . mak files <section> fix # <number> <section> steps taken to test the contribution : <number> . make prep <number> . make <number> . make install no issues observed <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : current bundle with this change <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"warnings issued when building on ubuntu - <number> <section> the warnings contained in the attached file are issued when building on ubuntu - <number> . <section> nominal build process <section> clean build <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix , # <number> , fix # <number> , fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - resolve doxygen warnings - add omit_deprecated flag - add strict warnings and enforce - always increment sequence counter - fix comments - add code coverage test to evs <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix , # <number> , fix # <number> , fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - resolve doxygen warnings - add omit_deprecated flag - add strict warnings and enforce - always increment sequence counter - fix comments - add code coverage test to evs <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , numofchildtasks not decremented <section> fixes # <number> , numofchildtasks not decremented <section> steps taken to test the contribution : <number> . nominal build process . <number> . ran unit tests . <section> numofchildtasks will now be decremented when a child task is deleted . <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> merge # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> os timer test should now always pass <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove device driver references in code <section> reference pull request <url> update remove reference to driver <section> anh van , <allcaps> nasa </allcaps> goddard"
"the difference in linking behavior on linux vs macos results in build errors on macos <section> i am getting the following build error when building on macos ( more complete log below ) : <code> let us take a <code> symbol for a typical example : it is a symbol from <code> which does not exist yet at the moment when the <code> above is linked . this works on linux because it seems to allow this kind of a forward declaration but it does not on macos which fails immediately . what macos expects here is an explicit <code> to be added to the compilation line above : <code> i recognize that <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> uses a two - stage cmake generation process when one cmake tree calls to the second which builds the cpu1 - related code and at this point , it looks like on linux the <code> is compiled from the first tree and then with its dependencies forward - declared it gets linked to a final executable when built in the second tree and that ' s where its undefined symbols are resolved . i have created a minimal example that demonstrates this difference in the linking behavior on linux and macos on github ] ( <url> and asked [ a question on stackoverflow <url> to see if i can make macos / clang to match the behavior of <allcaps> gcc </allcaps> / linux but so far i am not aware of what could be done to resolve this . <section> this issue makes me think that the order of how things are built by <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> could be changed . macos linking errors indicate that we are building something in the first cmake tree that depends on a cpu1 - specific code that is built from the second cmake tree . i could see it practical to move the compilation and linkage of all cpu1 - specific code to the second stage so that the order of dependencies is strictly direct and there are nowhere any forward - declared undefined symbols of this kind in the binaries . <section> - i will try to see if i can find any linker flags in <code> that could activate the linux - like linking behavior but i am not sure if such flags exist . - i can create my custom set of cmakelists . txt files to streamline the build process and eliminate the need in "" forward declarations "" but this will result in my own custom build system for <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> which i would rather like to avoid . <section> please check the stackoverflow question above . <section> stanislav pankevich - - - full build error log : <code>"
"fix # <number> , remove reference to device driver <section> remove reference to device driver . <section> steps taken to test the contribution : <number> . make prep <number> . make install <number> . run cfs <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - ubuntu <number> - cfe <number> , osal <number> . 2 a <section> anh van , <allcaps> nasa </allcaps> goddard"
"cmake : minor changes to improve the clion <allcaps> ide </allcaps> cmake experience <section> this is needed when <allcaps> cfe </allcaps> ' s root cmakelists . txt is not the highest level cmakelists . txt in the project . my <allcaps> ide </allcaps> is clion and it works best when there is the highest level cmakelists . txt in the root of a project ' s source code . this changeset enables a necessary indirection : from <code> to <code> and this allows building the project with the cmakelists . txt file in the top - level mission source directory . <section> i have cloned the root cfs repository and have cloned all submodules . <section> i have created a cmakelists . txt file in the cfs folder with the following contents : <code> <section> i have made the changes from this changeset . after this sequence of steps , the clion <allcaps> ide </allcaps> picks up the root - level cmakelists automatically and i can already start building targets , such as <code> , <code> etc . and the only parameter i need to configure cmake is : <code> . <section> please see the steps above . <section> with this change , getting <allcaps> ide </allcaps> to recognize the cfs build targets is way easier if your <allcaps> ide </allcaps> is clion . <section> - os : macos <number> . <number> - versions cfe and cfs , latest master ( <url> and <url> <section> stanislav pankevich ( <allcaps> pts </allcaps> gmbh , private german space company ) . <section> > you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted the corporate <allcaps> cla </allcaps> has been signed on <date> and sent to the email address as specified in the <allcaps> cla </allcaps> document ."
"fix # <number> , unit test for cfe_evs_task . c <section> add additional coverage test for cfe_evs_task . c <section> steps taken to test the contribution : <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make install <number> . make test <number> . make lcov <number> . verify <number> percent coverage for cfe_evs_task . c <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , es performance debug messages <section> fixes issue # <number> , es performance debug messages have incorrect parameter <section> <number> . built with updated cfe_es_perf . c . <number> . sent setperffiltermaskcmd & setperftriggermaskcmd commands . <number> . verified messages are now correct . <number> . ran unit tests . <section> <allcaps> debug </allcaps> messages are now correct . <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , resolve doxygen obsolete warning <section> resolve doxygen obsolete warning <section> steps taken to test the contribution : <number> . make prep <number> . make osalguide / usersguide / doc <number> . verify warning is gone <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> # <number> , add compile flag abstractions <section> fixes # <number> , fixes # <number> adds strict_no_warnings and omit_deprecated prep options for ci and as example build <section> built with strict_no_warnings = true , false , and undefined built with omit_deprecated = true , false , and undefined ( note sample_app fails ) confirmed flags get globally applied ( not great scoping , but ensures flag coverage ) <section> simplifies / enables ci based on abstracted flags , see <url> <section> - cfs dev server <number> - os : ubuntu <number> - versions : master bundle with this change <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update tone leap variable <section> fixes # <number> update attoneleaps to attoneleapseconds when cfe_platform_time_cfg_bigendian is defined to match the updates for ! cfe_platform_time_cfg_bigendian . <section> <allcaps> tbd </allcaps> <section> now will build / execute with cfe_platform_time_cfg_bigendian defined <section> - cfs dev server <number> - os : ubuntu <number> - versions : current master bundle <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean up table services comments / references <section> fixes # <number> note that there were a couple cases where function prototypes were defined in the wrong header files . this was also cleaned up as part of this issue . <section> testing consisted of building / running the software and re - running the unit tests . <number> . build steps : make prep make make install <number> . ran software : . / core - cpu1 <section> none <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> none <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , improve sb create pipe error reporting <section> improves error reporting for cfe_sb_createpipe ( ) <section> standard build process , ran sb unit tests . <section> improvement in error reporting when using a pipe name that is already in use , or when the queue limit has been reached . <section> debian <number> <section> add any other context about the contribution here . <section> <email> <section> n / a"
"fix issue # <number> - cfe_time_tone . c implements fix for : cfe time var name changed in . h but not in code # <number> <section> fixes issue <number> . <section> steps taken to test the contribution : <number> . modified cpu1_platform_cfg . h such that i could reproduce the error : <hashtag> un def </hashtag> cfe_platform_time_cfg_bigendian - - > <hashtag> define </hashtag> cfe_platform_time_cfg_bigendian <number> . after reproducing error , corrected cfe_time_tone . c via replacing all instances of attoneleaps variable with attoneleapseconds . <number> . recompiled software - make prep - make - make install <number> . ran software to ensure that the issue was fixed . - . / core - cpu1 <section> the software will compile and run successfully if cfe_platform_time_cfg_bigendian is defined . <section> - oracle vm virtualbox - os : ubuntu - <number> - version : cfe <number> . 0 a ; <allcaps> osal </allcaps> <number> . 2 a <section> none <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps> <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"recommended lgtm issues : classes with too many fields <section> lgtm issue classes with too many fields : cfe_tbl_task . h <code> inc / cfe_sb_msg . h <code> inc / cfe_tbl_msg . h <code> fs / cfe_fs_decompress . h <code> inc / cfe_es_msg . h <code> inc / cfe_es . h <code> inc / cfe_time_msg . h <code> sb / cfe_sb_priv . h <code> time / cfe_time_utils . h <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"recommended lgtm issues <section> recommended issues from lgtm : es / cfe_es_shell . c <code> cfe_es_apps . c <code> cfe_es_start . c <code> cfe_es_task . c <code> cfe_sb_task . c <code> cfe_time_task . c <code> root / cfe / cmake / target / src / target_config . c <code> es / cfe_es_api . c <code> evs / cfe_evs_task . <code> tbl / cfe_tbl_task_cmds . c <code> sb / cfe_sb_api . c <code> cfe_fs_decompress . c <code> cfe_sb_msg_id_util . c <code> inc / cfe_tbl_filedef . h <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"lgtm issue <section> cfe_es_perf . c <code> cfe_fs_decompress . c <code> cfe_es_perf . c /* enable interrupts */ <code> cfe_sb_task . c <code> cfe_tbl_internal . c <code> cfe_time_api . c <code> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cpp check <section> fix cppcheck warning <section> steps taken to test the contribution : <number> . make prep <number> . make <number> . make install <number> . verify still run <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"restart app delete ' s app prior to missing file check ( requirement failure ) <section> requirement ces1007 . <number> - if the original cfe application file is not found then the cfe shall reject the command , increment the invalid command counter , and generate an event message . rationale : can not restart the application if the original file has been removed . in this case , the application will continue without a restart . if you send a restart now with the file remove , the app exits prior to the restart failing . <section> steps to reproduce the behavior : <number> . normal startup ( with sample_app ) <number> . remove sample_app . so <number> . send es restart app for "" sample_app "" <number> . observe error : <code> <section> behavior matches description , likely due an update to move behavior in rationale to requirement . should just check for file existing prior to delete of app . <section> <url> <url> <section> - cfs dev server - os : ubuntu <number> - versions : current dev cfe <number> . <number> <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , istar implementation <section> istar implementation . <section> steps taken to test the contribution : <number> . modify sample app to call istar <number> . make <number> . make install <number> . run and verify result . <section> - hardware - os : ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"istar implementation <section> implement istar <allcaps> api </allcaps> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix for # <number> <section> a clear and concise description of what the contribution is [ e . g . fixes issue <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] <section> add any other context about the contribution here . <section> full name and company / organization of all contributors ( required for acceptance ) <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"cfe_sb_deletepipefull event uses appid instead of taskid <section> near the end of cfe_sb_deletepipefull , it generates an event on successful deletion of the pipe . as part of the message , it ' s supposed to report the "" owner "" but it calls cfe_sb_getapptskname ( owner , fullname ) where owner is the appid , not a ( valid ) taskid . this causes cfe_sb_gettaskinfo ( ) to generate a syslog error and return an error code . <section> delete a pipe . <section> should produce a proper event . unsure if it should report the task name or the app name . also should see if unit test should have caught this bug . <section> cfe_sb_api . c # <number> - cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_eventtype_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , ( int ) pipeid , cfe_sb_getapptskname ( owner , fullname ) ); <section> debian vm <section> add any other context about the problem here . <section> <email>"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes . - doxygen / cppcheck warning / error cleanup - lcov update - removal of old test results <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
table decompression <section> compressed tables could save space in nv - rams . <section> the decompression feature ( implemented already for apps ) can be extended to tables . <section> none . <section> n / a <section> onur <allcaps> turhan </allcaps>
"first draft of <allcaps> contributing </allcaps> . md <section> the contribution is a draft of "" <allcaps> contributing </allcaps> . md "" <section> opened md in browser to confirm proper formatting . <section> folks will start following the guidance . <section> windows <number> laptop . <section> chris knight , <allcaps> nasa </allcaps> ames research center ."
missing cfe deployment guide <section> the <code> named in the <code> is not included in the repository and is not easy to find . <section> marco a . feliu - * national institute of aerospace *
"fix - <number> - remove_pipename changes <section> removes the pipename field from the cfe_sb_piped_t struct . <section> make install make test <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : internal change to cfe_sb_getpipename - behavior change : reduced memory impact of the cfe_sb_piped_t table <section> - hardware : vm - os : linux - versions : "" master "" <section> chris knight , <allcaps> nasa </allcaps> ames research center"
"fix # <number> - resolve explicit link <section> fix # <number> , resolving explicit link and any remaining misc . warning . <section> steps taken to test the contribution : <number> . make usersguide <number> . verify warning is gone <section> - hardware - ubuntu <number> - rc - <number> - <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> : add script to apply style <section> fixes # <number> , adds script to apply style <section> <number> . ran against ci_lab repo , confirmed acceptable style <section> no functional changes <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : exclude unit tests from lcov report <section> fixes # <number> , exclude unit - test files from lcov report <section> steps taken to test the contribution : <number> . build / test / run lcov <code> <number> . processed files no longer include unit test code , confirmed processed file list against repo <number> . coverage from <number> . <number> was <code> with unit test files included , now <code> <section> valid coverage of flight code now reported <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cpp check warning <section> fix # <number> , resolve cpp check warning <section> steps taken to test the contribution : <number> . cppcheck - - force . <number> . verify warning is gone <section> hardware <number> ) ubuntu18 . <number> <number> ) cppcheck <number> , cfe <number> . <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix misc . doxygen <section> fix # <number> , fix misc . doxygen issue . did not fix cfe_es . h : <number> , and cfe_sb_msg . h : <number> . classify as different issue . <section> steps taken to test the contribution : <number> . make usersguide <number> . verify warning is gone . <section> - hardware - ubuntu <number> - doxygen <date> , rc - <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> : remove test results from <allcaps> fsw </allcaps> path <section> fixes # <number> <section> steps taken to test the contribution : <number> . checked out master bundle with this change , nominal setup ( from <allcaps> readme </allcaps> ) <number> . make enable_unit_tests = true <allcaps> simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test ( timer test failed as expected , rest passed ) <number> . make lcov no issues ( and none expected since this wasn ' t a code change ) <section> - no impact to behavior <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings <section> resolved potential lockup bug resolved anomalous messages produced during app delete <section> - cfs dev server - os : ubuntu <number> - versions : bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add capability to build <allcaps> osal </allcaps> code coverage tests as part of build <section> currently code coverage testing for <allcaps> osal </allcaps> is not integrated with the cfe build system . it ' s possible to build separately , but then care has to be taken to match configurations and extra steps are required . <section> build <allcaps> osal </allcaps> code coverage ( of the shared and target <allcaps> osal </allcaps> ) executables for the host when "" enable_unit_tests "" is true , using the osconfig . h defined for the build ( vs default in the <allcaps> bsp </allcaps> ) . <section> it ' s possible to build stand alone , but not trivial . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add vxworks example toolchain <section> fixes # <number> , add vxworks sample toolchain <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> bundle and standard setup per <allcaps> readme </allcaps> <number> . added <code> to targets . cmake <number> . set up vxworks build environment <code> <number> . <code> <number> . <code> <number> . <code> <number> . loaded test executable to target <number> . executed all test executables ( all passed except sem - speed - test with exception at interrupt level , and <number> of the timer tests returned slightly out of tolerance values ) <section> able to build for cfs lab vxworks setup <section> - hardware host : cfs dev server , target : mcp750 - os host : ubuntu <number> . <number> <allcaps> lts </allcaps> , target : vxworks <number> - versions rc - <number> . <number> bundle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> n / a"
"integration candidate <number> - <number> - <number> <section> integration candidate for pull requests approved at <number> - <number> - <number> <allcaps> ccb </allcaps> covers the following pull requests : # <number> - ensure table naming consistent across cpus # <number> - fix infinite loop when gz file is truncated # <number> - update obj creation failure requirement <section> build code for native host ( <allcaps> simulation </allcaps> = native ) with unit test enabled execute <allcaps> cfe </allcaps> core , issued various test commands from cmdutil execute all unit tests and confirm passage . <section> none <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> na <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct mutex around log file write the mutex for the log file write during the writelogfilecmd excution was held longer than it should have been . this lock must * <allcaps> not </allcaps> * be held during evs_sendevent , as this will cause deadlock . this moves the mutex to protect only the area that actually accesses the log data , and it moves all send event calls to be <allcaps> after </allcaps> the mutex is released . <section> built all code using default config and start <allcaps> cfe </allcaps> externally issue the writelogdatafile command with a valid output file - confirmed that the log data file is generated successfully externally issued the writelogdatafile command with a invalid output file ( where os_creat fails ) - confirmed that the expected error event is generated with no deadlock or issues <section> no longer deadlocks in the case of an error during the file operations <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"fix # <number> : cfe_es_gettaskinfo must be passed a task id fix <number> areas where the cfe_es_gettaskinfo ( ) function could have been passed an app id rather than a task id , which would create an incorrect result and generate an error in the syslog <section> steps taken to test the contribution : - set <allcaps> evs </allcaps> default configuration to enable all events ( including <allcaps> debug </allcaps> ) by default - built all for pc - linux from a clean slate - run <allcaps> cfe </allcaps> core and confirm all startup ok - externally issue stopapp command for "" sample_app "" - confirmed that all debug events are correct - confirmed that the original error is not generated - externally issue shell command for "" es_listtasks "" - confirmed that no bad task id errors are shown - confirmed that the file output is correct <section> the invalid task errors shown in the logs prior to this change are <allcaps> not </allcaps> generated after this change . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update obj creation failure requirement <section> fixes # <number> , updates obj creation failure requirement to platform defined response <section> none - document update <section> none <section> none <section> platform defined response now matches cfs <allcaps> psp </allcaps> model . note - requirements transitioned to new tracking system with minor typo fixes throughout and new output format which changes every line . "" version tracking "" is really accomplished in the requirements management tool , not the * . md file . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"test condition needs verification - cfe_fs_decompress - insize temporary become <number> <section> test cases where insize might temporarily hit <number> during a normal decompression . reference issue <number> . <section> anh van , <allcaps> nasa </allcaps> goddard ."
"fix # <number> , fix infinite loop when gz file is truncated <section> fix issue # <number> , when cfe_fs_decompress goes into infinite loop when gz file is truncated . fix # <number> <section> <number> . build <number> . pass in truncated file as parameter to cfe_fs_decompress . corgi2 . jpg . gz <url> <number> . verify the return status : <code> <number> . gzip good file <number> - f6736880 - e6ad - 1 1 e9 - 9 8 ac - ce321d6d495a <img> <number> . pass as parameter and verify output . <section> - hardware - ubuntu <date> - cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
update <code> to include application_list <section> solves issue # <number> . <section> enables missions to slowly roll out new applications without updating include lists in each table provided application each time a new one is included . <section> john p . lucas - <allcaps> nasa gsfc </allcaps>
problem with createpipeerr the app cnt ( controller ) is not starting because of a pipe problem . image <img>
"application list in ' sample_defs ' <section> the <code> file in each application that utilizes tables ( hk , <allcaps> sch </allcaps> , to , etc . ) requires mission specific applications to be added to the <code> statement . <section> i suggest we use a single <code> variable declared in <code> that can be used for multiple target app lists and in the applications as well so that the mission specific code and tables remain separate . <section> none <section> none <section> jplucas from babelfish"
"update platform and mission config to use c99 true and false currently using <allcaps> true </allcaps> and <allcaps> false </allcaps> , fails build with deprecated elements removed . blocking for <number> . <number> release ."
remove fsw / mission_inc and fsw / platform_inc ( classic build support ) directories are only used by classic build and duplicate defines in sample_defs . should be removed . targeted for <number> since it will break classic build ( deprecated in <number> ) .
"remove <allcaps> osal </allcaps> last - gen compatibility complexity next gen <allcaps> osal </allcaps> is the only option with this release , remove conditionally compiled code related to supporting last gen ."
"move stdint . h test to higher level make recipe , or default to having it ( warn if not ! ) currently the test for stdint . h and setting of _have_stdint_ is done in <allcaps> osal </allcaps> , but other repos include common_types . h . noticed the failure on a centos <number> platform for which sizeof ( long ) = = <number> , and elf2cfetbl recipe did not include _have_stdint_ . as a general fix moving this test and the higher in the chain would catch issues for all repos . also could flip the logic , set no_stdint if it does not exist and warn that attempting fixed length defines locally which makes assumptions outside the standard ."
table name sizing logic and associated definitions inconsistent default_osconfig . h - defines os_max_api_name as <number> sample_mission_config . h - defines cfe_mission_max_api_len as <number> - defines cfe_mission_tbl_max_name_length as <number> - defines cfe_mission_tbl_max_full_name_len as ( cfe_mission_tbl_max_name_length + cfe_mission_max_api_len + <number> ) cfe_tbl_msg . h - uses cfe_mission_tbl_max_full_name_len in command definitions cfe_tbl_task_cmds . c - uses cfe_tbl_max_full_name_len in command processing cfe_tbl . h - defines cfe_tbl_max_full_name_len as cfe_mission_tbl_max_full_name_len cfe_tbl_task . h - uses cfe_tbl_max_full_name_len for storing name in registry and critreg cfe_tbl_api . c in cfe_tbl_register : - uses os_max_api_name for appname character string - uses cfe_tbl_max_full_name_len for tblname character string <allcaps> note </allcaps> - tblname is appname . tablename ( where tablename is input name below ) - checks input table name against cfe_mission_tbl_max_name_length ( this is just the table part of the name ) - uses cfe_tbl_max_full_name_len for saving tblname in registry - uses cfe_tbl_max_full_name_len for saving tblname in critical registry
resolve klocwork issues found in <number> . <number> see attachment
enforce network byte order on extended <allcaps> ccsds </allcaps> header the extended header ( <allcaps> apid </allcaps> qualifiers ) needs to be read / written in network byte order .
potential alignment errors when allocating cfs tables . the buffers allocated for tables force a <number> bit alignment when the over all memory buffer is <number> bit aligned . if a <number> bit variable is the first data type an alignment error will be reported . if the first two variables in the data structure bd _t in the file cfe_esmempool . h are allocated as <number> instead of <number> the alignment of the table will match the buffer . the workaround is to rearrange the table items to fall on what ever alignment is necessary .
default to next - gen <allcaps> osal </allcaps> update the sample toolchain * . make files to use next gen posix .
"sample app should be consistent with app developer ' s guide the sample_app provided with the cfe is not consistent with the example app documented in the application developer ' s guide . the app developer ' s guide should documented recommended styles and practices . similarly the sample_app should implement them . i do not think sample app needs to cover all of the potential app features like critical data stores , child tasks , etc . just the basics to get someone started ."
"<allcaps> evs </allcaps> document event ids as being unique <allcaps> ccb </allcaps> <date> - discussed relative to # <number> documentation should clearly state event ids are intended to be unique to each "" event "" also helpful to note base id ' s are often passed in to libraries to keep them unique there is likely a higher level requirement somewhere that events need to be uniquely identifiable ."
deprecate classic build deprecate classic build in favor of cmake .
"cfe_es_reloadapp ( ) and cfe_es_deleteapp ( ) missing range check on appid these two functions are defined in <code> and therefore available for external applications and libraries to call . these accept a passed in <code> parameter which is used as a table index , but they do not check the range of the value prior to using it as an array index . if the value is out of range , this will cause undefined behavior and possibly a crash ."
"ut_assert example app is broken in <number> release as of commit 0 4 c0cc342415575f855dc00960afc8daedd8a46e ( <allcaps> head </allcaps> of master on <date> ) , the ut assert code and associated example does not compile . first , the example app unit test makefile does not seem to be correct ( include paths are wrong , some object files are not necessary , etc . ) . second , the <allcaps> es api </allcaps> stubs in the ut_assert source do not match the actual <allcaps> es api </allcaps> . i checked out a copy of the above commit , and made updates to fix these issues . i have included the following diffs with the changes that i made to fix the problems . 0 0 _fix - stub - function - def - mismatch - in - es - <allcaps> api </allcaps> . diff - updates the ut_assert es stub source files ( pretty self - explanatory ) 0 1 _update - example - ut - makefile - inc - and - src - paths . diff - removed unnecessary includes , - removed unnecessary ut_objs , - reorganized path variables , - updated compiler opts for <number> - bit system - i am not sure if you will want to include this . 0 2 _fix - print - format - warnings - on - uint32s . diff - this fix wasn ' t required , but it cleaned up a lot of warnings that were getting in my way of seeing errors . this was likely only necessary because the last diff changed the compiler opts to a <number> - bit build make . out - this is the new output from the makefile . there are still two warnings that i wasn ' t familiar enough with to resolve ."
cfs performance monitor ( <allcaps> cpm </allcaps> ) update jfreechart which is used by <allcaps> cpm </allcaps> made some <allcaps> api </allcaps> changes that are not compatible with java <number> & <number> . kevin made some updates and the new <allcaps> cpm </allcaps> works with all current versions of java . the new <allcaps> jar </allcaps> is attached and will be posted on an open source website .
"update cfe_sb_sendmsgfull ( ) to match latest <allcaps> sbn </allcaps> function prototype reported by astrobotic <date> via email . the <allcaps> sbn </allcaps> product has a prototype of int32 cfe_sb_sendmsgfull ( cfe_sb_msg_t * msgptr , uint32 tlmcntincrements , uint32 copymode , cfe_sb_senderid_t * senderptr ) ( <number> variables ) the sb prototype has <number> int32 cfe_sb_sendmsgfull ( cfe_sb_msg_t * msgptr , uint32 tlmcntincrements , uint32 copymode ) ; there is a conflict between the header files ."
"<allcaps> evs </allcaps> : treat "" eventtype "" as a severity indicator currently , while eventtype is an enumerated type with numeric value that increases in "" severity "" ( <allcaps> information </allcaps> - > <allcaps> debug </allcaps> - > <allcaps> error </allcaps> - > <allcaps> critical </allcaps> ) , the type filtering functions take a bit mask . there ' s little reason to filter higher - severity events and not lower - severity types , and this <allcaps> api </allcaps> confuses the model and makes the code for changing and evaluating the filter overly - complex . eventtype filters should be a numerical comparison operator . ( filter all events of severity lower than x . )"
sb : remove pipename from cfe_sb_piped_t pipename in cfe_sb_piped_t is redundant with the <allcaps> osal </allcaps> queue name and should be removed .
"<allcaps> evs </allcaps> : generalize filter design the current "" binary "" filter is very limited , only capable of filtering based on the number of events sent by an app with a particular event id . in order to support a variety of filter paradigms , <allcaps> evs </allcaps> should be redesigned to accept filter function pointers so that applications can define their own filters that <allcaps> evs </allcaps> calls to determine whether ( or how ) to filter the message . additionally , <allcaps> evs </allcaps> should be capable of being configured at start time ( via a table or config file , a - la es ) or run time ( via commands ) to load system - wide filters such as the binary filter ."
"remove "" type "" from event id ' s cfs code should avoid conflating event types and id ' s . for example ( in the ci application ) there are a number of id ' s such as "" ci_init_err_eid "" that includes "" <allcaps> err </allcaps> "" in the name which could be interpreted as a type ( as in "" all events with this <allcaps> eid </allcaps> are error events . "" . ) however , <allcaps> evs </allcaps> events have both an id and a type ( separate from the id ) . for example , this should be renamed as "" ci_init_eid "" so that informational messages about the command length could be produced ."
"es apprecord_t - - collapse recordused into staterecord . appstate currently , there are actually two variables that indicate the state of an application , recordused ( a boolean ) and staterecord . appstate ( an int32 enum ) . this could be simplified by having es look for the first table entry with the state of "" <allcaps> undefined </allcaps> "" ( <number> ) and using that table entry and any other state would be considered "" used "" ."
fix cfe <number> ut_assert
"es functions that take application id need consistent bounds checking many functions in cfe_es_api . c use an appid parameter . some of these functions do not bounds check this . ( e . g . cfe_es_setappstate ) others do , but do not generate an error on failure ( cfe_es_restartapp returns cfe_success if appid is out of bounds ) all functions in es should probably be inspected for issues like these and corrected ."
"have mission ( or platform ? ) defined bounds for stack size es should validate the stack size against a valid range . the range should be defined by the mission ( and / or the platform ) . vxworks will likely barf on a stack size of <number> , unless you really do not use the stack ; and adding too many zeros would likely overflow flight hardware memory ."
"es option to shut down cfs if it fails to load an app currently if es fails to load an app , it generates error events but continues on . <repeated> these errors may get lost in the shuffle . a compile - time option should be added to change es ' s behavior to shut down the cfe system if an app fails to load so that the user knows immediately something ' s wrong ."
cfe <number> fortify analysis results <allcaps> nasa iv </allcaps> & v ran cfe <number> through the fortify static code analysis tool . the findings are contained in the attachment .
"incorrect call to cfe_sb_getapptskname issue found in <allcaps> cfe </allcaps> <number> . <number> in cfe_sb_api . c line <number> , cfe_evs_sendeventwithappid calls cfe_sb_getapptskname with owner as first argument . owner is the appid , not the taskid . cfe_sb_getapptskname expects the taskid as the first argument . current : { { { cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , pipeid , cfe_sb_getapptskname ( owner , fullname ) ); } } } suggested : { { { uint32 onwertskid = <number> ; os_taskgetidbyname ( & ownertskid , cfe_sb . pipetbl [ pipetblidx ] . appname ) ; cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , pipeid , cfe_sb_getapptskname ( ownertskid , fullname ) ); } } }"
"enforce strict <allcaps> ascii </allcaps> in sample makefile update "" makefile . sample "" in the sample cmake configuration area to include rules that allow running the "" badchar "" tool , to find nonportable text glyphs in files that we intended to be plain text ."
"update cfe version number for <number> . <number> release this ticket will be used to update the version header file to update the version number to <number> . <number> for test and release . once cfe version <number> . <number> has been populated to the master branch , this ticket will be used to set the version number to <number> . <number> to indicate the code is development code retrieved from the "" development "" branch ."
"typedef for status code types most of the <allcaps> cfe </allcaps> code returns a status ( e . g . cfe_success , cfe_error ) and the function prototypes have return values of type "" int32 "" . it would greatly improve readability if the functions were defined to return a <allcaps> cfe </allcaps> typedef ( cfe_status_t ? ) this would also allow for changing the type ( int8 for low - resource environments ? ) but this is primarily aimed at code readability ."
"expose sb usecount for my voter app , i am currently poking into the sb bufferd_t header on the buffers to increment / decrement the usecount so that i can be assured that the buffer will not be reused . ( this is only done during the vote , note between calls into the voter . ) needless to say , there may be other uses for marking a buffer as being in use by code outside of sb ."
"clean up unit tests to fully use new ut assert the unit tests in <allcaps> cfe </allcaps> were ported to use ut assert by "" bridging "" the existing code structure to the ut assert framework using some adaption layers , keeping the same basic <allcaps> api </allcaps> calls in the tests themselves . this worked for the time but created a fairly ugly and confusing situation , with a number of wrappers . also , many global variables still remain that are no longer necessary , they are only remnants of the bridge logic . the <allcaps> ghaps </allcaps> project has done quite a bit of work to clean up the unit test code and remove the unnecessary glue logic , making the test code much cleaner . it also provides a usable base for <allcaps> cfs </allcaps> application unit tests ."
"compile - time option to have cfe_sb_sendmsgfull ( ) set timestamp i ' d like to know ( as accurately as possible ) when a message was actually sent to the sb . currently senders are responsible for setting the message timestamp prior to sending the message , so the timestamp may not have been set immediately prior to calling sendmsg ( ) . a compile - time option to configure sendmsgfull ( ) to set the timestamp would be useful in some environments ( such as when testing in a realtime os . )"
"sb : compile - time option for routing table as a hash we have discussed how to handle a large number of subscriptions , one option would be to have the routingtbl be a hash instead . this does have a performance impact on code that is heavily used , but in some environments memory is less of a concern so a large hash table could support a very large subscription base . while i do not feel it would be wise to switch whole - hog , i propose that a compile - time option be available to configure the software bus to use a hash for the routing table , which gives users with larger subscription needs the option ."
"dummy ticket for trac admin change check filing this dummy ticket to assure that adding someone to the default cc list for the a component actually causes them to get copies of the bug . this is necessary because , for some reason , the components edit panel in trac is presenting many duplicate entries and not adding the name to both duplicates ."
add software bus structures reference diagram to doxygen users guide the attached sb structures reference diagram should be made available in the user ' s guide .
update cfe unit tests for cfe version <number> . <number> update the tests using those from cfe <number> . <number> to run with cfe <number> . <number> . ensure that all lines of code and all branch paths are covered ( or are documented if not ) .
"cfe_es_deletechildtask syslog message / comments are misleading the cfe_es_deletechildtask function validates the input parameter ostaskid to ensure that it is an active task id and a task id that is in range . this validation is performed in a single if statement . if the validation fails , the sys log message ( reported on line <number> ) is not clear as to whether or not the failure was due to the id being out of range or inactive . the sys log message should state "" invalid task id "" vs . "" task id is not active "" . also , the comment starting on line <number> should remove the "" ( too large ) "" , as the out of range handling is now performed on lines <number> - <number> ."
es unit test code coverage incomplete in apps . c cfe_es_apps . c - <percent> coverage ( <number> lines of code <allcaps> not </allcaps> executed ) in cfe_es_appcreate : - : <number> : else /* not a dynamic load - app must be statically linked into current exe */ - : <number> : { # <number> <number> : staticentryptr = ( cfe_es_appstaticmoduleapi_t <wink> entrypointdata ; # <number> <number> : startaddr = staticentryptr - > ptrs . entryfuncaddr ; # <number> <number> : moduleid = <number> ; - : <number> : } <number> : <number> : if ( staticentryptr ! = <allcaps> null </allcaps> ) - : <number> : { - : <number> : /* leave entry point / filename blank if static load entry */ # <number> <number> : cfe_es_global . apptable [ i ] . startparams . entrypoint [ <number> ] = <number> ; # <number> <number> : cfe_es_global . apptable [ i ] . startparams . filename [ <number> ] = <number> ; - : <number> : } in cfe_es_loadlibrary : - : <number> : else /* not a dynamic load - library must be statically linked into current exe */ - : <number> : { # <number> <number> : staticentryptr = ( cfe_es_appstaticmoduleapi_t <wink> entrypointdata ; # <number> <number> : functionpointer = staticentryptr - > ptrs . libinitfunc ; # <number> <number> : moduleid = <number> ; - : <number> : } these lines of code can be covered in unit testing .
"redundant assignments and unread variables one common anti - pattern in cfs is to call functions that return potential error codes , store the return values in variables , then never bother to check the value of the variable . cppcheck reports this as a redundant assignment . current cases in <allcaps> cfe </allcaps> : ( redundantassignment ) { { { cfe / fsw / cfe - core / src / evs / cfe_evs_task . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . cfe / fsw / cfe - core / src / evs / cfe_evs_task . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . } } } ( unreadvariable ) { { { cfe / fsw / cfe - core / src / es / cfe_es_start . c : <number> : style : variable ' status ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_api . c : <number> : style : variable ' returncode ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_api . c : <number> : style : variable ' status ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_apps . c : <number> : style : variable ' returncode ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_apps . c : <number> : style : variable ' returncode ' is assigned a value that is never used . } } } not sure how we missed this in the <number> - <number> - <number> sweep ."
cfe <number> verification testing required for release this ticket will be used to document the cfe <number> . <number> verification testing that will be performed at each center and capture the results of each test .
use the <allcaps> osal </allcaps> configuration file loader library the es currently uses a combination of a simple file parser and calls to scanf . <allcaps> osal </allcaps> ticket <number> ( <url> introduces a configuration file loading <allcaps> api </allcaps> . es should move to using this <allcaps> api </allcaps> and ditch the awful scanf . this is related to ( instigated by ) <allcaps> trac </allcaps> # <number> .
"cppcheck a vxworks build i need to go through the somewhat manual ( for now ) process of grinding out some cppcheck results for "" development "" cfs on our lab machine that has vxworks capability ."
"es - recursive exit application error message es will continually send out event message # <number> - "" es_proccontrolreq : unknown state ( % d ) application %s "" , with the unknown state set to <number> , when an application exits via the cfe_es_exitapp ( ) <allcaps> api </allcaps> function call . see attached email thread for more details ."
cfe does not meet double floating point alignment requirements on ppc440x5 book e architecture ( <allcaps> gsfc dcr </allcaps> <number> ) the ppc440x5 architecture requires double floating point values to not cross <number> - byte boundaries . the cfe services use <number> - byte alignment and forces dfps to be non <number> - byte aligned .
"table services name buffer overflow table services adds an asterick character to the end of the table name whenever a table is modified . if a table is modified often , the name grows to fill up the table services name buffer . it is recommended to only place one asterick character followed by an incrementing counter to indicate the number of times the table has been modified . this solution should be discussed and agreed to by the <allcaps> ccb </allcaps> ."
"<allcaps> tbl </allcaps> - update table services to send messages to notify applications of pending table updates ( <allcaps> gsfc dcr </allcaps> <number> ) table services requires applications to periodically call an <allcaps> api </allcaps> function to perform a check for a possible table update or validation request . polling for changes to tables can be <allcaps> cpu </allcaps> intensive , especially for applications containing a large number of tables such as the stored command application . table changes should be event driven . it is recommended to update table services to send a software bus message ( s ) that applications would subscribe to to be notified when there is a pending table update or validation request . this update will require an additional message id for each application using a table ."
<allcaps> evs </allcaps> - add configuration to output events upon command message vs . function call ( <allcaps> gsfc dcr </allcaps> <number> ) the <allcaps> gsfc mms fsw </allcaps> team ran into a problem when several events were being output by high priority tasks . a recommended solution to this problem is to create a configuration for <allcaps> evs </allcaps> to send a specified number of events at a specified periodic rate . adding additional event filtering capabilities should to address this issue should also be looked into .
"add support to allow <allcaps> sbn </allcaps> to pass sender information across the network ( <allcaps> gsfc dcr </allcaps> <number> ) a cfe interface is needed to allow <allcaps> sbn </allcaps> to pass sender information ( processorid , application name ) across a network . one proposed change is a new private function called cfe_sb_passmsgwithsenderid . this function will be needed by <allcaps> sbn only </allcaps> . the <allcaps> ccb </allcaps> should discuss how this function can be used by <allcaps> sbn </allcaps> and blocked from being called / used by other applications . analysis is needed to determine the best solution ."
"es - registeredtasks counter does not decrement when child tasks are exited ( <allcaps> gsfc dcr </allcaps> <number> ) the <allcaps> gsfc gpm </allcaps> project team reported that the es "" registeredtasks "" counter was not decrementing when a child task exited . the cs code was examined to ensure the needed <allcaps> es api </allcaps> calls were being made . it was confirmed the cs child tasks make the <allcaps> es api </allcaps> call to cfe_es_exitchildtask . the cfe_es_exitchildtask <allcaps> api </allcaps> function does decrement the registeredtasks counter on line <number> however , this step is performed only if conditional checks are passed ."
"executive services always creates tasks with floating point enabled ( <allcaps> gsfc dcr </allcaps> <number> ) cfe es calls the os_taskcreate to create a cfe task or child task . os_taskcreate takes a parameter called "" flags "" that currently supports os_fp_enabled . this flag will tell the host os that the task should be created with a floating point context . in each place where the cfe es app calls os_taskcreate , it hard - codes os_fp_enabled . some tasks and applications may not be able to use a floating point context , so we need to examine why this flag is not an option and what can be done to fix it ."
"cfe_es_processcoreexception and cfe_es_resetcfe are not <allcaps> isr </allcaps> safe ( <allcaps> gsfc dcr </allcaps> <number> ) the functions cfe_es_resetcfe and cfe_es_processcoreexception are not <allcaps> isr </allcaps> safe . they must be called from the context of a running task . in <allcaps> gsfc </allcaps> ' s <allcaps> mms fsw </allcaps> , sometimes and exception can occur from an <allcaps> isr </allcaps> . when this happens , the cfe_es_processcoreexception code will not work , since it has multiple calls to take a semaphore . similarly , the cfe_es_resetcfe cannot be called from an <allcaps> isr </allcaps> to reset the system , as it will hang . this needs to be addressed with a long term solution or strategy for current and future platforms . for <allcaps> mms </allcaps> , it may be fixed by simply handling the exception completely within the <allcaps> psp </allcaps> . for future releases of the cfe we need to look at possibly re - writing the cfe_es_processcoreexception and cfe_es_resetcfe functions to be <allcaps> isr </allcaps> safe ."
es does not check cfe_psp_memread8 return code the <allcaps> es api </allcaps> functions need to properly alert users of errors . the cfe_es_calculatecrc <allcaps> api </allcaps> function will not alert users if an error code was returned from the call to the cfe_psp_memread8 .
"make compiles with - - std =c 9 9 work <allcaps> cfe </allcaps> has historically attempted to be strict <allcaps> ansi </allcaps> c90 , with obvious exceptions for cases where the code needed to use a facility that did not yet exist . compile with - - std =c 9 0 if you want to see these . the default compilation we do now does not specify that the code should be strictly conformant to any standard , so what we get in practice is <allcaps> gcc </allcaps> ' s c90 with extensions . turning up all the warnings using { { { gcc - w - wall - wextra - pedantic } } } will include a large number of very useful static code analysis checks , but will warn about the use of c99 facilities that we want to use . what i propose to do is to run a set of trial builds where the build script adjusts the compiler flags , on the fly ( no commits ) , to be : { { { gcc - - std =c 9 9 - o3 - g - w - wall - wextra - pedantic } } } this asks <allcaps> gcc </allcaps> to do as thorough a job as it can do to report any of our code that deviates from <code> . our code does require use of facilities not specified in c99 , and these facilities should be enabled , where necessary , by the use of the appropriate option feature macros . i anticipate that this will only require certain specific source files to have an annotation ( before the <code> lines ) that they are to be considered to contain <code> or <code> standard sources at a specific level of those standards . see also <allcaps> osal </allcaps> ticket [ cfs_osal : <number> ]"
"cfs . mak assumes directories , fails with git ( working with sourceforge release . ) the cfe / build / cfs . mak file assumes that some empty directories already exist and fails when they do not . git does not allow empty directories to be committed ( without special help ) . this problem is hit when the sourceforge cfe tarball is put under a git repo . the proposed patch below removes this assumption and makes the build more robust . { { { - - - a / cfe / build / cfs . mak + + + b / cfe / build / cfs . mak @ @ - <number> + <number> @ @ cfs_copy_core_incs : : <user> "" > > > [ <allcaps> pre </allcaps> - <allcaps> build </allcaps> ] <allcaps> copying header files from </allcaps> <cfs_mission> <allcaps> core </allcaps> < < < "" <user> "" "" <user> "" copying <cfe_fsw> / mission_inc / * . h to <cfs_mission_inc> "" + <user> - p $( cfs_mission_inc ) @ - cp - f $( cfe_fsw ) / mission_inc / * . h $( cfs_mission_inc ) <user> "" copying <cfe_fsw> / platform_inc / <cfe_core_platform_inc_src> / cfe_platform_cfg . h to . / inc "" + <user> - p . / inc @ - cp - f $( cfe_fsw ) / platform_inc / $( cfe_core_platform_inc_src ) /* . h . / inc <user> "" copying < <allcaps> osal </allcaps> > / build / inc / osconfig . h to . / inc "" @ - cp - f $( <allcaps> osal </allcaps> ) / build / inc / osconfig . h . / inc @ @ - <number> + <number> @ @ cfs_copy_app_shared_incs : : <user> "" > > > [ <allcaps> pre </allcaps> - <allcaps> build </allcaps> ] <allcaps> copying header files from </allcaps> <cfs_app_src> / <allcaps> inc </allcaps> < < < "" <user> "" "" <user> "" copying <cfs_app_src> / inc / * . h to <cfs_mission_inc> "" + <user> - p $( cfs_mission_inc ) @ - cp - f $( cfs_app_src ) / inc / * . h $( cfs_mission_inc ) # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - } } }"
"cfe build makefile does not copy core binary i am using a makefile to build a platform and then copy the build products to another location off the build_path . i set the build_path , cfe_exe , cfs_prom , cfs_prom_apps , and cfs_ram makefile variables . the build proceeds and the cfe <allcaps> apps </allcaps> and tables are properly copied to the desired locations . but not the actual core cfe binary , it was ignored . a prior version of this ( or another ? ) build makefile used to properly copy the core binary . ( i am using the sourceforge release . ) for consideration , the fix i made in my ( disconnected project ) was : { { { diff - - git a / cfe / build / cfs . mak b / cfe / build / cfs . mak @ @ - <number> + <number> @ @ cfs_copy_installs : : - chmod <number> $( cfs_exe ) /* . scr <user> "" "" <user> "" > > copy files < < "" + - cp - f $( cfs_exe ) /* . $( cfe_core_exe_type ) $( cfs_prom_apps ) - cp - f $( cfs_exe ) /* . $( cfs_app_exe_type ) $( cfs_prom_apps ) - cp - f $( cfs_exe ) /* . tbl $( cfs_prom_apps ) <user> "" "" } } }"
"update <allcaps> cfe </allcaps> version number we are committing to <allcaps> cfe </allcaps> release <number> . <number> containing # <number> # <number> # <number> ( with small adjustments and rebasing to master ) . when building the hotfix branch , we need to update the version header file to update the version number ."
implement bamboo builds of cfs <allcaps> cfe </allcaps> tree need to construct a bamboo plan that builds everything that can be built in <code> and runs all of the local test programs that are suitable for fast turnaround automatic test cycles .
<number> - <number> - <number> integration candidate <allcaps> ccb </allcaps> meeting on <number> - <number> - <number> authorized integration testing for merging into development of the current set of changes contained in joe ' s merge at [ changeset : 1 1 4 c641 ] .
"review use of cfe_psp_memcpy / cfe_psp_memset these wrapper functions may be over used in the <allcaps> cfe </allcaps> code . in some cases the standard c library implementations might be preferred . using a <allcaps> psp </allcaps> - supplied wrapper function makes sense when reading / writing from "" special "" memories that are truly platform - dependent , such as an <allcaps> nvram </allcaps> or any other type of memory that is either not directly mapped or has some type of access restriction ( e . g . <number> bit only , paged access , etc ) . however , for memories that __are__ directly mapped into the current process space ( and will always be ) such as copying one structure variable to another or clearing out a local stack variable , using the <allcaps> psp </allcaps> implementations is generally not necessary . every c library will have memcpy / memset as these were defined all the way back to c89 . usually , the c library implementation is already implemented as optimized assembly code tailored to the current <allcaps> cpu </allcaps> . in some circumstances using an extra wrapper might prevent some optimizations that would be done if the c library call were used directly - for instance , some c implementations might inline the function if used directly . at the least , the wrapper adds the overhead of another function call ."
"implement "" bootstrap "" script although the git repositories established on babelfish so far appear to work well enough for our development model , it is rather complicated to set up a build from a clean slate using them . in order to do so you need to clone ( at least ) <number> repos and also make sure you get compatible versions / branches from all <number> , then set up your build , which may involve copying some files around , which then have to go into the mission - specific version control . i suspect that real missions / users would __not__ want to keep these repos separate even though they are distributed separately ; it is much more effort to manage it when each subdirectory comes from a different repo and it is very easy to "" break "" the build by grabbing incompatible branches . instead , a project using these would probably want to set up a single git repo for their mission that has everything included . there are a couple ways to do this in git such that compatibility with the "" upstream "" repo is retained , but it does require some of the more esoteric git features to do this right . a script could do most of this work to simplify deployment and make sure it is done right ."
"remove references to coreflightsystem . org since it is now a malware site <section> this repo has several references to coreflightsystem . org . the current owner of that domain is using it for spreading malware ( i got a prompt to install a firefox malware addon ) . <section> steps to reproduce the behavior : <number> . go to <url> <number> . click on the links to coreflightsystem . org <number> . get prompted to install malware , or with spam links . <section> no links to malware sites <section> not applicable <section> firefox on chrome ( probably applies to other browsers and platforms )"
"release candidate <number> merge to master <section> bulk merge to <number> , plus bug fix # <number> and version update <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> , updated to latest cfe / <allcaps> osal </allcaps> / <allcaps> psp </allcaps> rc branches and setup / built via standard instructions <number> . ran cfe and observed version update <code> <section> minor behavior changes will be documented in the <allcaps> vdd </allcaps> upon release ( no major / requirements updates ) <section> - cfs development server - ubuntu <number> . <number> , <number> . <number> - <number> - generic , x64 - <number> . <number> bundle <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"ensure table name length is consistent across cpus <section> to ensure consistency in the size of the cfe_tbl_filehdr_t struct , this should be constrained to use only mission - scope definitions . also simplifies the structure definitions by _not_ padding strings out to <number> bit multiples . the default size of the strings are already <number> bit multiples so this is just unnecessary complexity . there is also no major issue if not <number> bit aligned , as the compiler will add it automatically where needed . add a note in the related cfe_mission_cfg . h descriptions to affected values , that these should be kept as a multiple of <number> to maintain alignment . fixes # <number> <section> built <allcaps> cfe </allcaps> using default / sample config verified no build issues , <allcaps> cfe </allcaps> and unit tests all run as expected ( no change ) . <section> no impact to behavior , but this may change the size of telemetry packets in some cases depending on the mission config . <section> ubuntu <number> ( <number> bit ) <section> full name and company / organization of all contributors ( required for acceptance ) <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"<allcaps> tbl </allcaps> services using platform - scope values in table header definition <section> the <code> size definition , which is used as part of the <code> structure , is partly based on the <code> value . the problem is that this value is platform scope and thereby configurable on a per - cpu basis . therefore , the <code> value can be ( validly ) different on each <allcaps> cpu </allcaps> in a multi - cpu deployment . this , in turn , means the table definition headers may be different on each <allcaps> cpu </allcaps> . tools like <code> and <code> do not account for this possibility ; when reading or writing the table header , they use a single definition . the definition that they use may or may not even match what the flight code uses at all , depending on how the mission is configured . <section> configure a mission with two cpus , and specify a different osconfig . h for each one ( i . e . set tgt2_platform to something other than default ) . change the value of <code> for the second <allcaps> cpu </allcaps> , and build all software . observe that the <code> is now also different on cpu2 vs . cpu1 . tables generated by <code> and the <allcaps> crc </allcaps> computed by <code> only work in cpu1 . cpu2 will not be able to load tables because of the incompatible header . <section> the <code> should remain consistent regardless of the platform - scope values used , because this is an external format shared between ( at least ) between ground systems and flight code . the <code> macro is a better choice here . it was introduced in a previous version of <allcaps> cfe </allcaps> for telemetry packets , but table files are effectively the same issue . <section> the problem definition is : <code> furthermore , as this definition is only really for the header struct , it should be in cfe_tbl_filedef . h , not cfe_tbl . h . this allows external tools to include this definition without having to pull in the rest of <allcaps> cfe </allcaps> headers implicitly . <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic <section> joseph hickey , vantage systems , inc ."
"fix <number> strlen <section> fixes issue # <number> <section> build and run <allcaps> cfe </allcaps> , verify that version information event is generated as expected . <section> no more undefined behavior <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic , gcc <number> . <number> <section> joseph hickey , vantage systems inc ."
"incorrect calls to strlen in cfe_es_taskinit <section> the function calls strlen as : <code> <section> this is undefined behavior but probably works by accident most of the time , so long as the byte before eventbuffer is not null . this also generates a compiler warning which somehow was never noticed before in previous reviews of this code ( gcc <number> . <number> with - wall switch ) <section> it probably was meant to be : <code> <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic , gcc <number> . <number> - 1 ubuntu1 ~ <number> . <number> <section> joe hickey"
make install - no rule to make target ' install ' . i get the following error when doing a make install - it fails on mission - install . <code>
"incorrect <allcaps> scid </allcaps> field length cfe_mission_cfg . h shows a note circa line <number> that ' <allcaps> ccsds </allcaps> allocates <number> bits for this field in the standard <allcaps> vcdu </allcaps> ' . newer <allcaps> ccsds </allcaps> versions actually allocate <number> - bits for this field - this seems like a minor thing but could potentially have implications elsewhere in the code . per <user> , maybe to , ds , and cf ?"
fix code markup in readme
"support for <allcaps> osx </allcaps> is the cfs version that is available on the master branch compatible with <allcaps> osx </allcaps> ? looking through the files , it seems like cfs uses a lot of the extended posix functionalities ( e . g . timers , thread prioritization and certain real time signals ) that are not available on <allcaps> osx </allcaps> . although <allcaps> osx </allcaps> is posix compliant , it does not support extended posix functionalities . from a development standpoint , support for <allcaps> osx </allcaps> is desirable . i have developed some patches that can be applied to some osal and psp src files to enable compilation on <allcaps> osx </allcaps> ( including a reimplementation of the timer <allcaps> api </allcaps> using the grand central dispatch on <allcaps> osx </allcaps> ) . if the cfs developers are interested in looking into this , i can integrate these patches and submit a pull request ."
possibly add <allcaps> cfpd </allcaps> <url>
"submodule updates fail while attempting to build this project , the submodule update process fails on <code> <code> it looks like the recent commit in . gitmodules <url> added new apps and used ssh instead of <allcaps> https </allcaps> . i presume changing them to the form of <code> will prevent this issue for others ."
""" could not load cfe application "" error - - yet <code> file exists cfe refuses to load my custom app . i built it from the <code> provided , and it compiles correctly . moreover <code> will create the expected <code> and place them in the expected locations ( i . e . <code> and <code> ) . furthermore , the header of these dynamic libraries confirms that they compiled for the correct target when compared to the other default libraries which load . any hint is greatly appreciated as i have been struggling with this issue for several long hours now . here ' s the relevant log : <code> and the full boot - up log : <code>"
"need default included mission configuration for unit tests you can run the following as a script if you find that easier : <code> then it complains about needing a <code> directory . when i create an empty directory , <code> , for that , it complains about <code> not existing . is there a default mission config that i can use ? i want to build this with a custom compiler , but i need a method to build it with <code> first and get unit tests running ."
add ci and to when available <url> <url>
make config fails make config returns the following error : <code> <code> <code> <code> returns <code> full output of make config <code>
"service not logging under systemd when ran on <allcaps> posix </allcaps> systems with systemd , cfe ' s log does not show up on <code> , the default logging service . it records all stdout by default . a test with a standard hello world c program on infinite loop showed that the stdout wasn ' t being buffered or detached . any help would be greatly appreciated"
"suggestion : modular platform and app makefiles one major improvement that could be made to cfe is the ability to specify which apps to build and which platforms to build for at runtime , instead of by changing the makefiles . <allcaps> cactus </allcaps> has a rudimentary implementation of this ( see <url> so that we can declare <code> as an environment variable . i think it would be a huge improvement to the build process to be able to optionally declare the_apps , <allcaps> psp </allcaps> , <allcaps> bsp </allcaps> , and more at the make command line , i . e . <code> some tricks may need to be done to allow this to propagate to make sub - tasks , as those variables would only be accessible in the makefile in the directory the command is run ."
"documentation is being improperly recognized as code on github hi flight software folks ! first off , great to see the project is finally being hosted somewhere other than sourceforge ! i noticed that because of all of the documentation present in the repository , github is falsely identifying the project as <allcaps> html </allcaps> - based . for my university project ' s fork of cfe ] ( <url> we edited our [ . gitattributes <url> to tell github ' s linguist software to interpret . htm , . html , and . css files in this project as being part of the documentation . this should give the repository the proper language statistics ."
"tblcrctool integration candidate : caelum - rc4 + dev40 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> tblcrctool checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , replace exit ( <number> ) with preferred macro exit_failure testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to code logic / behavior . <section> avi weiss <user>"
replace exit ( <number> ) statements with preferred macro exit_failure <section> use of <code> ( or <code> for that matter ) as input to exit ( ) is less clear and less portable than using the standard macros <code> and <code> . <section> recommend replacing with the more portable and less magic - numbery <code> macro . <section> <url> <section> avi weiss <user>
"tblcrctool integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> cfs - groundsystem checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"tblcrctool integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"uncontrolled data used in path expression <section> accessing paths controlled by users can allow an attacker to access unexpected resources . <section> same behavior , fix warning . <section> <url> <section> from codeql . may use something like <code> <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in tblcrctool that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"tblcrctool integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> tblcrctool checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
update build baseline to cfs - caelum - rc4 <section> - set baseline for cfs - caelum - rc4 : v1 . <number> - rc4 - update mission rev to use 0 xff for development version <section> tblcrcrtool checks < <url> cfs bundle checks < <url> <section> development version number now reports <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> tblcrctool codeql reuse : <url> tblcrctool format check reuse : <url> tblcrctool static analysis reuse : <url> <section> tblcrctool will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> # <number> , remove action branch restrictions , add duplicate checks , fix format check job name , remove - - quiet <section> - fix # <number> - fix # <number> remove action branch restrictions , add duplicate checks , fix format check job name , remove - - quiet <section> ci <section> - runs on all push / pr - skips on duplicate - format check job name correct - reports files analyzed by cppcheck <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <user>"
remove <code> flag from cppcheck <section> remove <code> so cppcheck reports files analyzed : <url> <section> remove . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"remove workflow branch restrictions , add duplicate check , fix format check job name <section> the format check and static analysis workflows only run on pushes to main or on pull requests so community users will not get the alerts on their forks . the codeql workflow may run on pull requests to branches other than main <section> fork repo , commit new branch : format check and static analysis workflows are not triggered . <section> all workflows run on fork branches , even those without pull requests . <section> <url> <url> <url> <section> github <section> should also add check - for - duplicates job to workflows after relaing the branch requirement on the push trigger"
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"fix # <number> , correct minor text typos <section> fixed <number> minor text typos . - fix # <number> <section> none . <section> none ( minor text changes that do not interact with any max lengths etc . ) . code execution is unaffected . <section> n / a <section> n / a <section> n / a"
"tblcrctool integration candidate : <number> - <number> - <number> # # context part of < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , add printf conversion casts cast ssize_t to long and uint32 to unsigned long for printf . this matches the % d and % lx conversions , respectively . # # # pr # <number> fix # <number> , implement coding standard in codeql"
"fix # <number> , add printf conversion casts <section> cast ssize_t to long and uint32 to unsigned long for printf . this matches the % d and % lx conversions , respectively . fixes # <number> <section> build tblcrctool as normal , ensure no errors <section> should now build successfully if <code> and <code> are not the same type . <section> ubuntu <section> should be tested with rpi4 toolchain that originally had the error <section> joseph hickey , vantage systems , inc ."
"rpi4 compile error hi , i am trying to compile the cfs on a raspberry pi <number> . i have followed the instructions here <url> . when compiling , i get the following error : <code> are there other edit ( s ) i need to make to a cmake file to get cfs to compile on the rpi4 ? thanks !"
"fix # <number> , implement coding standard in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> see prs <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> # <number> # <number> # <number> , overhaul tbl <allcaps> crc </allcaps> <section> fixes # <number> fixes # <number> fixes # <number> fixes # <number> all these issues were starting to overlap with each other too much so i made them all one file . this should clean up all the issues with the tblcrctool <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> replaces # <number> and # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"incorrect <allcaps> eof </allcaps> check <section> the end - of - file test in this tool is incorrect : <url> <allcaps> posix </allcaps> says that <code> returns <number> at <allcaps> eof </allcaps> . returning a size less than the requested size ( but more than <number> ) does not mean <allcaps> eof </allcaps> . <section> a mainly pedantic issue , this check as it is will probably work on regular files , but it might fail of someone tries to make this work on a pipe or something like that . <section> should check if <code> returned <number> , not <number> . <section> code review <section> while we are at it we should change the hardcoded <code> to be <code> too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , handle lseek error . <section> fixes # <number> checks if lseek returns an error and reports it . fixes # <number> use exit ( <number> ) <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , handle read failure <section> fixes # <number> handles case where read returns an error <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"tblcrctool integration candidate : <number> - <number> - <number> <section> fix # <number> , changed full word help option ' - help ' to ' - - help ' fix # <number> , add static analysis and format check fix # <number> , add codeql analysis to workflow <section> see < <url> <section> pr # <number> - changes <allcaps> cli </allcaps> "" help "" option to use two dashes : <code> pr # <number> - adds static analysis and format check to continuous integration workflow . adds workflow status badges to readme . pr # <number> - adds codeql analysis to continuous integration workflow . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds tblcrctool , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , replace <allcaps> lro </allcaps> reference with algorithm details <section> fix # <number> - comments change only , removed <allcaps> lro </allcaps> references and added algorithm details from nasa / cfe # <number> <section> none , comments only <section> none <section> n / a <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"tblcrctool integration candidate : <number> - <number> - <number> <section> fix # <number> , remove unimplemented crc cases fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities pr # <number> - removes unimplemented <allcaps> crc </allcaps> cases to eliminate static analysis warnings <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user>"
"fix # <number> , remove unimplemented crc cases <section> fix # <number> - removes unimplemented cases . add them if needed when implemented . <section> build and checked tool results against sample app table runtime checksum <section> none , just eliminates static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"tblcrctool integration candidate : <number> - <number> - <number> <section> fix # <number> , use sizeof ( ) for header sizes . <allcaps> hotfix </allcaps> , set <allcaps> revision </allcaps> to <number> and update baseline <section> see events for "" github actions test "" at <url> <section> pr # <number> - use <code> instead of a hard coded value for the table file header size to keep this tool in sync if the size of the cfe file or table header should ever change . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , change full word help option ' - help ' to ' - - help ' <section> fix # <number> change the command line argument to ' - - help ' instead of ' - help ' as per issue # <number> <section> compiled with <allcaps> gcc </allcaps> - <number> and clang , no compile errors and behavior remains the same . <section> only behavior change is the program expects - - help instead of - help <section> - hardware : macbook pro <number> - os : mac os <number> . <number> - os : ubuntu <number> ( in vm ) <section> todd martin , personal"
"fix # <number> , use sizeof ( ) for header sizes . <section> <code> will keep this tool in sync if the size of the <allcaps> cfe </allcaps> file or table header should ever change . fixes # <number> <section> run the tool and confirm that <code> is unchanged in practice ( still <number> ) . <section> none <section> ubuntu <number> <section> this does implicitly restrict this tool to the <allcaps> cfe </allcaps> build environment where these headers ( common_types . h , cfe_fs_extern_typedefs , h , and cfe_tbl_extern_typedefs . h ) are available . as a result this will no longer be buildable as a fully standalone / external tool . based on <url> this is intended / acceptable but i figured it was worth noting again . <section> joseph hickey , vantage systems , inc ."
"close # <number> and # <number> , add version . h and include buildnumber and baseline <section> close # <number> close # <number> <section> bundle test - <url> <section> on execution , tblcrc tool now reports its version when sent the <code> command <code> <section> augmented <allcaps> gcc </allcaps> docker image <url> <section> none <section> none <section> gerardo e . cruz - ortiz"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out <url> rc - <number> . <number> and followed setup instructions <number> . followed standard build instructions <number> . executed cfe_ts_crc from build / exe / host with no input , observed : <code> <number> . executed cfe_ts_crc on random file observed : <code> <section> - no impact to behavior from this change other than now builds as part of cmake <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle release candidate <number> with this branch <section> none <section> jacob hageman / <allcaps> nasa </allcaps> <section> <allcaps> cla </allcaps> on file"
"add a cmakelists . txt file for the tblcrctool <section> this allows it to be tied into the main <allcaps> cfe </allcaps> mission build and correctly reference the same header files as the <allcaps> fsw </allcaps> does . fixes # <number> <section> built a <allcaps> cfe </allcaps> mission per the default / sample scripts <section> cfe_ts_crc executable is now present in the "" host "" directory after install <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"tblcrctool needs a cmakelists . txt file implemented <section> this tool is not built like the rest of them , still using a one - off makefile . <section> build <allcaps> cfe </allcaps> using the recommended cmake practice . this tool is not built . the user must then manually build the tool within the source directory . <section> the tool should be built as part of the overall mission build and installed to the "" host "" directory . <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
gitignore cfe_ts_crc <section> executable shows up as untracked file <section> add cfe_ts_crc to . gitignore <section> none <section> none <section> jacob hageman / <allcaps> nasa gsfc </allcaps>
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out <url> rc - <number> . <number> and followed setup instructions <number> . followed standard build instructions <number> . make in tblcrctool directory ( no build warnings observed ) <number> . executed cfe_ts_crc with no input , observed : <code> <number> . executed cfe_ts_crc on random file ( grabbed makefile from the last test run and confirmed checksums matched ) , observed : <code> see additional testing in comments below <section> - no impact to behavior from this change <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle release candidate <number> with this branch <section> none <section> jacob hageman / <allcaps> nasa </allcaps> <section> <allcaps> cla </allcaps> on file"
"fix # <number> , hardcode table file header size pass size of <allcaps> cfe </allcaps> table headers to skipsize : cfe_tbl_file_hdr_t cfe_fs_header_t"
"fix # <number> , build warning include stdlib . h was fixed by pull request "" table <allcaps> crc </allcaps> tool fails to close file descriptor , # <number> """
"fix # <number> , table <allcaps> crc </allcaps> tool fails to close file descriptor add stdlib . h and unistd . h to fix warning ."
"[ question ] comparison of use cases of <allcaps> sch </allcaps> x sch_lab <section> - as far as i understood , the open issue <url> has no target date to be reached . how close is <allcaps> sch </allcaps> to being <allcaps> cfe </allcaps> draco - rc4 compliant ? - could you explain the differences in approach between <allcaps> sch </allcaps> and sch_lab ? - can the features of sch_lab fully comply with the capabilities of <allcaps> sch </allcaps> <number> . <number> ? - is sch_lab a test or mockup app ? i mean , is it not supposed to be production compliant and only used for simulation purposes ? - is the <allcaps> sch </allcaps> app required for draco - rc4 operation ? i mean , is sch_lab the only one supposed to be working with draco - rc4 ? <section> i would like a clear and objective description of the use - cases and usability of both apps , including guidance on when to use one over the other or if both are needed ."
"sch_lab integration candidate : caelum - rc4 + dev51 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add support for cmds w / args <section> adds support for commands w / args . fixes issue # <number> <section> tested lc sample action point command via build verification scripts . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - os : [ e . g . ubuntu <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . local testing with full cfs suite passing all tests and showing not change to coverage . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
sch_lab <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"sch_lab integration candidate : caelum - rc4 + dev46 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adjust table based on apps present <section> create an inclusion preprocessor macro for each app referred to in the subscription table , and only include that line if the app is present in the current configuration . in particular , do not assume that sample_app will always be there . fixes # <number> <section> build sch_lab without sample_app and confirm successful <section> presence of other apps is not assumed / hardcoded in the table <section> debian <section> this should fix workflow errors where apps are built with sch_lab but without sample_app . <section> joseph hickey , vantage systems , inc ."
"default / example table assumes presence of other apps <section> the default value for the sch_lab table directly refers to <code> msg id , assuming this these app will be present . this is fine for a user who is cloning the <url> bundle repo , because it includes all submodules . but in other cases if sample_app is not present , the table fails to build . this issue is now detected at configuration ( cmake ) time , if there is a reference to the include directories of a target that does not exist in this configuration . <section> notably , this change from compile to config time caused an unintended side effect - workflows for the other <allcaps> cfs </allcaps> apps seem to do this - it clones the <allcaps> cfs </allcaps> but modifies the <code> configuration in such a way that it no longer includes the <code> . <section> should not assume / require that <code> will always be part of the config . <section> problematic assumption is here in the table : <url> <section> github workflow ( see <url> <section> same issue in to_lab , see nasa / to_lab # <number> <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run tests , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove component - specific cfe header <hashtag> includes </hashtag> <section> - fixes # <number> - removes the component - specific cfe headers which are pulled in by the all - inclusive <code> . <section> tested with local cfs build + run , confirmed successful start - up . <section> none . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main of the cfs bundle . <section> avi weiss <user>"
"component - specific cfe headers not required ( all are pulled in by cfe . h ) <section> copy of <url> the component - specific cfe header files ( <code> , <code> etc . ) are all already pulled by the all - inclusive <code> . <section> remove unnecessary header <code> ' s . <section> <url> <section> avi weiss <user>"
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> github workflows <section> no expected behavior change . <section> - ubuntu <number> <section> depends on <url> <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"sch_lab integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> sch_lab checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , standardize naming of sch_lab functions / macros testing performed * * only github ci workflow actions . <section> no impact on behavior . <section> <user>"
apply standard naming convention ( sch_lab . <repeated> ) <section> copy of <url> a few cases also appear in sch_lab of inconsistent naming of macros and the main function . <section> apply standard pattern ( sch_lab . <repeated> ) <section> <url> <url> <url> <section> avi weiss <user>
"sch_lab integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ , function name in function header comments etc . ) expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"sch_lab integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in sch_lab that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"sch_lab integration candidate : caelum - rc4 + dev12 <section> pr # <number> - fix # <number> , update cmake_minimum_required <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> jphickey"
"fix # <number> , update cmake_minimum_required <section> fixes the warning that support for old versions will be removed the build does not actually expect such an old version fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> disable warning ? <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum - rc4 + dev10 <section> pr # <number> - fix # <number> , resolve uninit var static analysis warnings <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> none <section> skliper"
"fix # <number> , resolve uninit var static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
apply latest copyright header <section> updated copyright header <section> update <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
point codeql workflow to correct source <section> the codeql workflow points to a forked repository . <url> <section> update the codeql workflow to point at the nasa / cfs repository <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab ic : caelum + dev2 <section> sch_lab v2 . <number> - rc4 + dev13 pr # <number> - fix # <number> , add option to configure base tick rate <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add option to configure base tick rate <section> sch_lab was fixed at 1 hz because it bound to the 1 hz tick from cfe_time . this creates an <allcaps> osal </allcaps> timer instead , which posts a semaphore , and this can serve as a much more flexible time source , with configurable rate . this still binds to 1 hz and the <allcaps> sch </allcaps> does not start its first message until the first 1 hz is received , thereby keeping some form of 1 hz sync . fixes # <number> <section> used this feature to send wakeup events to cf at 1 0 hz instead of 1 hz . ( locally configurable - other items in the table got changed from <number> to <number> to compensate and keep those at <number> hz . ) <section> more configuration flexibility . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> - updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro - this also uses consistent naming - telemetryheader rather than tlmheader pr # <number> - fix # <number> , use separate address variable - avoids <code> cast by using a separate <code> local variable to hold the address . <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analyis , and format check <section> fixes # <number> <section> sch_lab format check reuse : <url> sch_lab codeql reuse : <url> sch_lab static analysis reuse : <url> <section> sch_lab will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check , overly restrictive on main push , remove - - quiet flag <section> missing duplicate check , overly restrictive on push : <url> remove <code> flag so cppcheck will report files analyzed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"format check workflow missing duplicate check , restricting to main push , job name incorrect <section> missing duplicate check , overly restrictive , incorrect job name : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove codeql workflow pr main branch restriction <section> - fix # <number> removed main branch restriction on pr <section> none <section> will run for all prs . <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql analysis workflow restricting to main pr <section> overly restrictive : <url> <section> remove branch restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , use separate address variable <section> avoids <code> cast by using a separate <code> local variable to hold the address . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> no warnings when using strict aliasing <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows sch_lab to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
typos in <allcaps> readme </allcaps> . md and <allcaps> security </allcaps> . md <section> found typos in documentation <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>
"hotfix <number> - <number> - <number> , fix missing typedef <section> see build failure in nasa / cfs # <number> <url> <code> <section> works in cfs - bundle fork <url> <section> clean build <section> ubuntu ci <section> part of nasa / cfs # <number> <section> none"
"sch_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add cmdcode to sch_lab_table pr # <number> hotfix <number> - <number> - <number> , fix missing typedef <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add cmdcode to sch_lab_table <section> allows the command / function code to be specified in the messages generated by sch_lab . this allows it to be used for testing apps that require a specific function code in the internal wakeup message . fixes # <number> <section> validated that the feature works by using it to test bp app ( which requires a specific code in it ' s wakeup <allcaps> mid </allcaps> ) <section> sch_lab now supports testing apps that require a specific function code in the generated wake up message <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"allow command codes to be specified in sch_lab_table <section> some apps have multiple functions that to be regularly scheduled , and use a single internal <allcaps> mid </allcaps> with separate command codes to do this . one example is bp , which has a "" <allcaps> wakeup </allcaps> "" internal <allcaps> mid </allcaps> that <allcaps> sch </allcaps> needs to send , but has two separate items that can be woken by this - differentiated by the fc field in the command header . sch_lab , in current form , is only capable of sending <allcaps> cmd </allcaps> messages with fc set to <number> . it would be fairly trivial to add "" cmdcode "" to the sch_lab_table , such that a nonzero fc can be used , so sch_lab can be used to test apps that need a specific fc value in their scheduled wakeup events . <section> add ability to set / specify an fc / cmdcode value for the command packets generated by sch_lab . <section> use full - featured <allcaps> sch </allcaps> ( but this is considerably harder to configure when just looking to test an app ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct typos in <allcaps> readme </allcaps> and <allcaps> security </allcaps> docs <section> - fix # <number> fixed a couple of minor typos in the _text_ of : - <allcaps> readme </allcaps> . md - <allcaps> security </allcaps> . md <section> none ( non - executable code ) . <section> none ( markdown doc changes only ) . <section> n / a <section> n / a <section> n / a"
"sch_lab integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"sch_lab integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests sch_lab tests < <url> cfs bundle tests < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , exit the main loop if init fails"
"fix # <number> , exit the main loop if init fails <section> initialize the "" runstatus "" to <allcaps> error </allcaps> if initialization fails . this causes the cfe_es_runloop function to return false , and the app will exit with an error status . fixes # <number> <section> build and run <allcaps> cfe </allcaps> with missing <allcaps> sch lab </allcaps> table file <section> sch_lab exits with error , does not loop infinitely <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sch_lab integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration # # testing performed sch_lab < <url> bundle < <url> # # expected behavior changes # # # pr # <number> removes app registration call , <code> since applications do not need to register themselves . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> see # <number> <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , update sequence count in transmitted messages <section> update the sequence counter in messages generated by sch_lab . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check behavior . <section> generated sch_lab messages have properly incrementing sequence number . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sch_lab , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , apply message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis <section> see events for "" github actions test "" at < <url> <section> pr # <number> - update to use <allcaps> msg </allcaps> module . replaces deprecated sb apis with <allcaps> msg </allcaps> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , apply alignment pattern <section> fix # <number> - use cfe_msg_commandheader_t and cfe_msg_telemetryheader_t in command and telemetry type definitions - use cfe_sb_transmitmsg to copy the command and telemetry into a cfe_sb_buffer_t and send it where needed - avoids need to create send buffers within the app ( or union the packet types with cfe_sb_buffer_t ) - eliminates references to cfe_sb_cmdhdr_t and cfe_sb_tlmhdr_t that formerly enforced alignment since these had potential to change the actual packet sizes <section> bundle ci , unit tests , spot checked cmd / tlm <section> none , pattern applied <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle integration - candidates + nasa / cfe # <number> + # <number> , and the subject of this pr # <number> <section> depends on nasa / cfe # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds header guard ( the other warning on the ticket was already resolved ) <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - reorganize the *sch_lab* table so it matches the *sample_app* usage and format . <section> ubuntu - ci <section> nasa / cfs # <number> <section> christopher knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , reorg schedule table to conform with std <section> closes # <number> this is a reorg and a "" normalization "" of the sch_lab table to be organized how the sample_app uses a table . <section> built and tested with functional testing . <section> changing of the filenames and symbols for the table . <section> debian <number> vm <section> <email>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - fixes schedule table documentation pr # <number> - add baseline and build number to version reporting <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"close # <number> , add build number and baseline <section> close # <number> <section> build bundle and confirm version report format <section> version report now includes development build information . see excerpt from cfs_log <code> <section> ubuntu docker on <allcaps> osx </allcaps> <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_sb_cmdhdr_t for cmd sizing <section> eliminates unnecessary union and uses cfe_sb_cmdhdr_t for zero parameter command sizing fix # <number> <section> steps taken to test the contribution : <number> . nominal build , confirmed hk ' s were sent <section> none , but allows for updates in nasa / cfe # <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
packet sizing dependence on generic cfe_sb_msg_t <section> uses cfe_sb_msg_t in a union typedef related to a command w / no parameters . <section> use cfe_sb_cmdhdr_t for no parameter command <section> none <section> related to nasa / cfe # <number> updates <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bioinic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - apply the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , and # <number> see pr # <number> for more details . <section> ci testing only <section> # <number> - improved table handling , see issue # <number> - sch_lab now builds on raspbian os # <number> - consolidate globals <section> ubuntu <section> see pr # <number> <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes pr # <number> - clean build when omit_deprecated = true system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"general sch_lab cleanup <section> fixes # <number> fixes # <number> fixes # <number> applies a consistent naming convention for all symbols in sch_lab to be consistent with the published <allcaps> cfe </allcaps> naming convention and other <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> modules . updates the message buffer structures to ensure proper alignment changes the table handling as described in # <number> <section> build code with <code> and confirm no errors or warnings in build . also build on raspberry pi and confirm the cast align warnings are gone . execute <allcaps> cfe </allcaps> and confirm nominal operation - all apps load and respond to basic commands as expected . test cfs - groundsystem python app to confirm that telemetry is being sent at the expected intervals . <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit raspberry pi 3 b + <section> this single pull requests addresses multiple issues because they cannot be parallelized without introducing conflicts ( the latter depends on the former ) . the fixes are kept as separate commits for review purposes . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed describe the contribution fixes # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed testing performed nominal build process : make distclean make prep make make install followed by building with omit_deprecated = true make distclean make omit_deprecated = true prep make make install confirmed clean build in both cases . expected behavior changes clean build when omit_deprecated = true system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> additional context there is a total of three pull requests to address issue_35 : nasa / to_lab nasa / sample_app nasa / sch_lab all three are intended to be delivered together . contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - corrected syslog writes - fixed return handling from cfe_tbl_gitaddress <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"accept cfe_success from cfe_tbl_getaddress ( ) <section> fix # <number> cfe_success is a valid return from the cfe_tbl_getaddress ( ) call . it should not be rejected as an error . <section> build for <allcaps> rtems </allcaps> , sanity check that sch_lab starts and runs normally . <section> adhere to the documented behavior / return codes of the cfe_tbl_getaddress ( ) call <section> i686 - rtems4 . <number> target running in <allcaps> qemu </allcaps> . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"correct writes to syslog <section> fix # <number> <number> . do not use the backslash to split string literal across lines . <number> . add casting to make the code work on both <number> - bit and <number> - bit platforms . <number> . correct misspelled "" <allcaps> scheule app </allcaps> "" - use "" sch_lab "" prefix instead . <section> build for <number> - bit <allcaps> rtems </allcaps> and confirm that warnings are fixed , and the sch_lab app starts and runs normally . <section> builds cleanly . no changes to runtime except for string formatting , the strings written to syslog will no longer have unintended whitespace included . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit building for i686 - rtems4 . <number> target . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"parameter myschtbl hides a global variable with the same name [ lgtm ] <section> sch_lab_app . c <code> sch_lab_sched_tab . h <code> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> : include definition of cfe_sb_msgid_t this type is provided by the cfe_sb_extern_typedefs . h file , so the table definition should include this header . <section> fixes issue # <number> add explicit inclusion of cfe_sb_extern_typedefs . h , which provides the definition of the <code> type . <section> compile all code in the <allcaps> cfs </allcaps> bundle <section> build no longer fails due to unknown type when integrating the <code> branch . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> bit ( build host ) <section> joseph hickey , vantage systems inc ."
"simplify table path in cmakelist . txt <section> fsw / src is ignored in : <url> <section> remove path , since it implies a specific file , when the build system actually searches the * _defs first for a matching file . <section> none <section> see the guide in elf2cfetbl <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> covers the following pull request : - # <number> - use table services ( was # <number> , just reopened ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> now uses cfe table services for schedule table management <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"fix # <number> , new table <section> fix # <number> , new table , reference closed pull request # <number> , reopen of it version of it . <section> references closed pull request # <number> , just a reopen version of it . <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sch_lab included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - updated performance id but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , implemented cfe table service <section> fix # <number> , implemented cfe table service <section> steps taken to test the contribution : <number> . build <number> . used groundsystem to enable telemetry <number> . used cosmos to verify package received : a . cfe_es - hk_tlm_pkt b . <allcaps> cfdp </allcaps> – cfdp_engine_hk c . cfe_evs – hk_tml_pkt d . cfe_sb – hk_tlm_pkt e . cfe_tbl = hk_tlm_pkt f . cfe_time – hk_tlm_pkt g . kit_ci – hk_tlm_pkt h . kit_to – hk_tlm_pkt i . <allcaps> unkown </allcaps> <number> . systematically removed each individual <allcaps> mid </allcaps> from table and verify : a . removed cfe_es_send_hk_mid . verify cfe_es is not receiving b . removed cfe_evs_send_hk_mid . verify cfe_evs is not receiving c . removed cfe_time_send_hk_mid . verify cfe_time is not receiving d . removed cfe_sb_send_hk_mid . verify cfe_sb is not receiving e . removed cfe_tbl_send_hk_mid . verify cfe_tbl is not receiving f . removed ci_lab_send_hk_mid . verify kit - ci is not receiving g . removed to_lab_send_hk_mid . verify kit - to is not receiving any package h . removed sample_app_send_hk_mid . verify unknown is not receiving any package * note - sample_app correspond to unknown in cosmos <section> no impact to behavior . <section> - hardware - os : ubuntu <date> - cosmos <number> . <number> ( part of opensatkit ) , groundsystem <number> . 9 0 a , cfe <number> . 0 a , <allcaps> osal </allcaps> <number> . 2 a <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , change perfid changed to <number>"
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
"sch_lab unused "" taskid "" originated by glimes ( <number> on babelfish ) : sch_lab application retrieves the task id for the current task at the top of its main loop , and never uses it ."
"non - distinct identifiers static analysis warning ds_closefilecmd conflict here : <url> <section> static analysis <section> unique identifiers . <allcaps> tbh </allcaps> calling this variable a cmd is misleading , it ' s a pointer to the payload . suggest changing to payloadptr for all of these command processing routines ( which would resolve this issue as well ) . <section> codesonar static analysis <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <code> for size parameters and variables testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to overall behavior . code is more compliant with relevant coding standards ( <allcaps> jpl </allcaps> , <allcaps> misra </allcaps> etc . which all prefer the more expressive typedefs where possible ) . <section> avi weiss <user>"
use <code> for size parameters / variables code snips * * <code> should be <code> : <url> <code> should be <code> : <url> . <repeated> and a few other local variables . <section> update to <code> where possible . <section> avi weiss <user>
"fix # <number> : use correct length filename for too large test fixes <url> <section> see reproduction steps from linked issue <section> tests should pass if osal_config_max_path_len is increased <section> - hardware : intel xeon <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> - versions : trunk ds , cfe draco rc - <number> <section> add any other context about the contribution here . related cfe issue : <url> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) isaac rowe , <allcaps> nasa jsc </allcaps> / jacobs technology"
"<allcaps> osal </allcaps> path length variables cause tests to fail a clear and concise description of what the bug is . for certain values of <code> and <code> , ds tests fail . <section> steps to reproduce the behavior : <number> . build cfs distribution with <code> set to <number> and <code> set to <number> <number> . <code> <section> a clear and concise description of what you expected to happen . expect test to pass . <section> if applicable , add references to the software . <code> <section> - hardware : intel ( r ) xeon ( r ) <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> linux - versions : draco - rc3 tags for cfe , <allcaps> osal </allcaps> , and ds . also tried with draco - rc4 ds . <section> add any other context about the problem here . related cfe issue : <url> <section> full name and company / organization if applicable isaac rowe , <allcaps> jsc </allcaps> / jacobs technology"
"fix # <number> , convert command success events to <code> type note : * * cfe and most ( but not all ) apps leave the reset command as <code> - should this remain the case , or should it be changed as well to <code> as the operator might still want to be informed that the reset command occurred successfully when <code> events are turned off . <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> align command event types to cfs guidelines as per cfe developer ' s guide s7 . <number> <url> <section> avi weiss <user>"
check the need of cfe_sb_messagestringget ( ) to ensure null term ok to squash the warning but i suspect we also have a null termination concern here . recommend to add another issue to check if this should really be <code> ( this ensures null term on the output string ) _originally posted by <user> in <url>
"fix # <number> , use sizeof destination instead of source fixes # <number> <section> pipeline verification <section> successful compilation when compiling with - werror = sizeof - pointer - memaccess <section> pipeline <section> jose f martinez pedraza - <allcaps> nasa gsfc </allcaps> <number>"
"convert command success events to <allcaps> information </allcaps> type command success events in ds are <code> , example : <url> <url> cfe pattern ( <allcaps> afaik </allcaps> ) is event success creates <code> . <section> since these are triggered by command only , flooding is not anticipated and it ' s useful to see the event nominally . would then match nominal pattern in cfe . <section> change all command success responses to <allcaps> debug </allcaps> , or even add a new command success type . consistency is key . <section> in concert w / reporting time stamps in event messages , this makes it easier to quickly verify <allcaps> rts </allcaps> timing / behavior . even without it in the log , the time tagged event messages provide a similar benefit . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"reject duplicate message id in filter table validation ds does not reject duplicate message id entry in the filter table . although sb does report the duplicate : <code> when ds does the lookup it only returns the first hit : <url> <section> since duplicate message id in filter table is not supported , should clearly reject an attempt by the user to do so . i suggest failing filter table validation . <section> none <section> can send to multiple destinations from a single entry , and supports changing those destinations via command so no additional functionality needed there . just should reject multiple filter table entries with the same <allcaps> mid </allcaps> ( user error ) . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use separate dispatcher for messages isolate the message verification and dispatch from the general message processing . functions in the "" cmds "" file now strictly handle the command content , and do not get involved in general validation . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use payload sub - struct in all messages puts the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> content in a member struct called "" payload "" . this makes it consistent with other <allcaps> cfe </allcaps> modules and provides a predictably named member for determining the position of non - header content . fixes # <number> <section> build and run all tests , sanity check operation <section> none , however the addition of the sub - structure may affect some compiler - added padding between members ( platform dependent ) . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use generated stubs separate the global variables into separate stub source units , then re - run the stub generator for all internal apis . the committed result here is the exact output of the tool , unmodified . this eases future maintenance , when an internal <allcaps> api </allcaps> changes one just needs to re - run the stub generator tool to update it . fixes # <number> <section> build and run all tests . ( affects ut only ) <section> stubs easier to maintain going forward . no changes in behavior . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove file age check bug - fix # <number> <section> ci and local check that files get produced as requested ( <number> per minute when configured to do so ) <section> will produce the expected files , vs <number> per <number> minutes when configured to produce <number> per minute <section> ubuntu <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update ut to handle ds_sequence_digits configuration - fix # <number> <section> ci and ran with ds_sequence_digits of <number> <section> will not fail for changed ds_sequence_digits <section> ubuntu <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unit test breaks on <code> configuration change unit test assumes default config for <code> , fails any customization . <url> <url> <url> <url> <url> <url> <section> built the test strings based on actual config , or otherwise improve result verification . <section> none . <section> likely an issue with default configuration changes all over cfs , but should at least move in the direction of unit tests that support valid configuration ranges . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from ds , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename sb command pipe to cmdpipe testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . ds ' s sb command pipe struct member is now named consistently with the rest of cfs and the other apps which improves future maintainability . <section> avi weiss <user>"
ds is the only app to label the sb command pipe as inputpipe code snips * * <url> <section> align ds with the rest of cfs by renaming inputpipe to cmdpipe . <section> avi weiss <user>
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
combine consecutive mutually exclusive status checks into an if / else code snips * * <url> <section> combine into an <code> / <code> - no need to do <number> evaluations . <section> avi weiss <user>
"fix # <number> , change evs_register failure from sendevent to writetosyslog testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . coverage maintained at <percent> : <code> <section> failure can be successfully recorded somewhere even without the <allcaps> evs </allcaps> now . <section> avi weiss <user>"
sends an event message on failure of registering with <allcaps> evs </allcaps> <code> is used when <code> fails . should use <code> for a better chance of actually recording the error . <section> use a mechanism for reporting errors that ' s more likely to succeed in case of an <allcaps> evs </allcaps> registration failure . <section> <url> <section> n / a <section> recommend checking the rest of the apps and marking as bug . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , use cfe_msg_ptr macro this updates ds to use the cfe_msg_ptr macro . this macro is provided by the <allcaps> cfe </allcaps> "" msg "" module to convert a local header buffer to the base struct type . use of this macro requires that the naming convention was followed , so this also means renaming <code> - > <code> and <code> - > <code> . fixes # <number> <section> build and run all tests <section> none <section> debian <section> this matches the current naming , usage patterns , and recommended practices used in <allcaps> cfe </allcaps> , thereby bringing ds more up to date . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove extraneous assignments to cfe_success testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
extraneous assignments to cfe_success code snips * * <url> <url> <section> remove assignments - unnecessary code . <section> avi weiss <user>
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , add ds_enabled to ds_extern_typedefs . h adds ds_enabled to ds_extern_typedefs . h <section> ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"ds_enabled should be included in ds_extern_typedefs . h * x] i reviewed the [ contributing guide <url> . * x] i reviewed the [ <allcaps> readme </allcaps> file <url> to see if the feature is in the major future work . * [x ] i performed a cursory search to see if the feature request is relevant , not redundant , nor in conflict with other tickets . <section> ds_enabled should be included in ds_extern_typedefs . h - as it is used routinely in filter table generation . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , set pathname and basename size based on config values fix # <number> , replaced hard coded sized with sizes based on configuration values . <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"commented - out test references old event type constant ( cfe_evs_error ) expected behavior * * <number> ) update to <code> , or <number> ) delete this commented - out code <section> <url> <section> avi weiss <user>"
"fix # <number> , adds unit tests for ds_cmdremovemid - fixes # <number> <section> lcov <section> <percent> coverage <section> - ubuntu <number> <section> ds_cmds_tests . c may require later cleanup / formatting changes for all tests to user ut_ds_test_add <section> if included , identify any third party code and provide text file of license <section> justin figueroa , vantage systems"
"fix # <number> , remove misleading / unnecessary event text testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully - ~ ~ except coverage rates which is being addressed in separate issue # <number> ~ ~ <section> no impact on logic . <code> will no longer be printed in these <number> event messages . <section> avi weiss <user>"
"add unit tests for ds_cmdremovemid unit test coverage is less than <percent> due to the additions of code in # <number> . <section> view unit test coverage resulting from workflow : <url> <section> <percent> unit test coverage <section> n / a <section> github workflow actions <section> n / a <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , change format string to avoid <allcaps> gcc </allcaps> workflow failure testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> workflow ( build + run ) will complete without <allcaps> gcc </allcaps> error causing failure . <section> avi <user>"
"change format string to avoid "" ‘ %s ’ directive argument is null error "" to reproduce * * run ci workflow ( specifically [ build and run with startup msg verification ) and observe error . <section> ci workflow run without failure . <section> <code> <section> avi <user>"
"fix # <number> , fix nasa / fm # <number> ; make ds / fm file header sub - types unique testing performed * * just github ci actions ( incl . build + run ) . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , remove mid - fixes # <number> <section> steps taken to test the contribution : * printed out filter table packet and ds appdata hash table entries after adding a message id to the table using <code> . * printed out filter table packet entries and ds appdata hash table entries after removing that same message id from the table using <code> . * observed that the filter table entry with the indicated message id was reset to <number> . * observed that the ds appdata hash table entry for the removed , indicated message id was reset . <section> allows users to remove message ids from the filter table . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> justin figueroa , vantage systems"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in ds that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , use cfe_fs_initheader ( ) to initialize <allcaps> cfe </allcaps> header fix # <number> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"command to remove mids from the filter table possibly long term , currently there is a command to add a <allcaps> mid </allcaps> to the filter table and subscribe to it . however short of a manual filter table file update , there is no way to remove unused mids from the filter table or unsubscribe from it . if the the mids required are changing overtime in flight this could potentially lead to running out of space in the filter table even though mids are no longer being used . this in turn would force manual intervention to correct it . <section> implement a command to unsubscribe from a <allcaps> mid </allcaps> and remove the <allcaps> mid </allcaps> from the filter table . ( if needed it could be limited to mids with all its filters set to ds_unused . ) <section> pushing an update to the table may not be feasible when needed in flight . since it unsubscribes to the entire table , it also creates a small gap in telemetry recording on those mids that are not modified . <section> <section> nathan lynch <allcaps> jsc </allcaps> - er611"
remove unnecessary handlers in ds_file_tests . c overriding handlers for success is unnecessary complexity <section> remove unnecessary handler overrides . just use os_opencreate to set up id correctly . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> # <number> # <number> # <number> , resolve multiple static analysis issues ( includes bug fixes ) and remove unnecessary ut handlers - fix # <number> - fix # <number> - fix # <number> - fix # <number> also removes the custom defined ds_string_terminator since anything other than ' \ <number> ' would break standard calls . <section> ci <section> no longer possible to overflow the various string buffers . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , standardize ut table initialization - fix # <number> <section> ci <section> avoids random test failures based on uninitialized ut variables <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"uninitialized variables in ut , potential test failure the destination file table and filter table are not consistently initialized in unit tests . example where destfiletable is not fully initialized : <url> observed test failure : <code> assuming there ' s a combination of random file name components that pass , which then cause os_opencreate to be called . <section> implement a consistent initialization scheme for commonly used elements <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove stray ut printf - fix # <number> <section> ci <section> removed stray print in ut <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove stray printf in ut leftover printf ? <url> <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , remove <allcaps> todo </allcaps> and clean associated ut - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove <allcaps> todo </allcaps> and clean up associated ut <url> <section> clean up the test , remove <allcaps> todo </allcaps> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , sends message when file complete a clear and concise description of what the contribution is . - fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> generate a message when a file gets completed . <section> - ubuntu <number> <section> none <section> if included , identify any third party code and provide text file of license <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"unit test currently dependent on default ds_total_fname_bufsize definition unit tests currently depend on the configuration define ds_total_fname_bufsize being a specific value , any other setting will fail . example : <url> <section> replace hard coded string values with logic to fill in the strings using the config size such that it meets the expected test conditions . for example in this case calculate which each length should be and fill pathname with repeating "" a "" and basename with repeating "" b "" or similar . pathname size could be ( ds_total_fname_bufsize - ds_sequence_digits - <number> ) / <number> basename size then just ds_total_fname_bufsize - ds_sequence_digits - <number> - pathname size then you can skip the assert on checking if the size is right ( since you set it explicitly ) , and it will work for a reasonable range of ds_total_fname_bufsize . apply this pattern for all the tests that depend on the current config size . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removes max missed branches a clear and concise description of what the contribution is . - fixes # <number> <section> <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> <percent> code coverage <section> - ubuntu <number> <section> none <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"update . github / workflows / unit - test - coverage . yml with no max missed lines or branches max - missed - branches and max - missed - lines should be removed to indicate <percent> unit test coverage . <url> <section> remove the max - missed - branches and max - missed - lines from . github / workflows / unit - test - coverage . yml after <url> and <url> are merged and closed . <section> none <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , fix # <number> , update code coverage , removes comments about ds_appprocesshk_test_snprintffail , adds ds_cmdcloseall_test_closeall , adds coverage of null filename with no "" / "" to ds_fileclosedest adds coverage of ! os_objectdefined 2 nd check in ds_filesetupwrite ( ) adds coverage of stringterminator branch in ds_filecreatedest_test ( ) adds coverage of maxpathnamelength branch in ds_filecreatname_test ( ) adds pathbaseseqtoolarge in ds_filecreatname_test ( ) adds pathbaseseqexttoolarge in ds_filecreatname_test ( ) adds extensionzero in ds_filecreatname_test ( ) a clear and concise description of what the contribution is . - fixes # <number> - fixes # <number> <section> <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> <percent> code coverage <section> ubuntu <number> <section> <percent> coverage depends on the resolution of <url> afterwards , . github / workflows / unit - test - coverage . yml will need to be updated in this pull request to account for no missing branch coverage . <section> if included , identify any third party code and provide text file of license <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , updates ds_tableaddmsgid header comment - fixes # <number> <section> manual inspection <section> header comment for ds_tableaddmsgid ( ) includes language about ds_tableaddmsgid ( ) <section> ubuntu <number> <section> none <section> if included , identify any third party code and provide text file of license <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove second loop condition using filterpackets a clear and concise description of what the contribution is . - fixes # <number> <section> unit test coverage <section> <percent> unit test coverage <section> ubuntu <number> <section> none <section> if included , identify any third party code and provide text file of license <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"ds_tablefindmsgid has an extraneous filterpacket loop condition line <number> from the code snip below shows an extraneous loop condition <code> . <code> is dereferenced on line <number> . the false branch of the condition is unreachable . <section> view code snip below . <section> <percent> code coverage . <section> <url> <section> ubuntu <number> <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"ds_tableaddmsgid definition includes incorrect header comment ds_tableaddmsgid ( ) has the header comment for ds_tablefindmsgid ( ) . <section> steps to reproduce the behavior : view the code snip below . <section> ds_tableaddmsgid ( ) should have the header comment associated with adding message ids . <section> <url> <section> ubuntu <number> <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"unreachable branch in ds_file . c <code> always remains true following <code> the if statement logic about <code> is not needed to maintain the same behavior . <section> steps to reproduce the behavior : the missing coverage of fsw / src / ds_file . c can be seen in unit test and coverage <url> . <section> <percent> coverage <section> <url> <url> <section> continuous integration <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> # <number> # <number> # <number> , requirements updates - fix # <number> - fix # <number> - fix # <number> - fix # <number> <section> na , requirements updates only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_psp_memset and cfe_psp_memset use - fix # <number> <section> ci <section> none , just removes unnecessary dependencies <section> ci ( unit test and bundle run cover it ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"ds : ds9007 failure ds appears to have been updated and descriptor text , pathname , basename and extention are no longer verified as specified in ds9007 imported from <allcaps> gsfccfs </allcaps> - <number>"
"ds : ds9005 failure ds appears to have been updated such that it no longer validates descriptor text , and always reports that it is ok . imported from <allcaps> gsfccfs </allcaps> - <number>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable <section> other coverage failures : failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
app requirement issues <number> . lc3002 . <number> & lc3002 . <number> - don ’ t see where event filter is able to be specified in action point or watchpoint definition tables . <number> . ds8000 – <allcaps> ds hk </allcaps> packet <number> . fm4000 – <allcaps> fm hk </allcaps> packet <number> . ds3000 - requirement incomplete imported from <allcaps> gsfccfs </allcaps> - <number>
"should use cfe_fs_initheader instead of manually populating ds initializes and populates the <allcaps> cfe fs </allcaps> header itself ( see ds_file . c , lines <number> - <number> <url> this requires ds to understand the details of the header structure and could break if that structure changes . it should instead use the <code> function which is designed to do exactly this ."
"tool likely does not currently function with modern cfe tool is likely related to supporting ground systems and seems to utilize old headers . consider deprecating if it ' s no longer used , supported , functional . possible alternative - <allcaps> ccdd </allcaps> for id management ."
question we are wondering if you could provide some information on why the repository is currently empty . thank you in advance for your help .
"fix # <number> , fixes errors in ic bundle workflow file addresses issue # <number> . <section> generated ic branch in fork . <section> no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"formatting issues with icbundle workflow <section> similar to nasa / cfe # <number> . there are some small formatting issues that should be corrected in the changelog / version . h updates made by the icbundle workflow : <number> . an additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h <number> . additional occurrences of the string "" changelog "" are replaced in the changelog . md file <section> steps to reproduce the behavior : <number> . push a code change to a user - owned feature branch <number> . submit a pull request for that code change <number> . go to the "" actions "" tab in github and run the "" integration candidate bundle generation "" workflow with the pr number as the input argument for the field labeled "" the pull request numbers to include ( comma separated ) : "" <number> . wait for the workflow to complete <number> . inspect the newly updated / generated "" integration - candidate branch "" <number> . observe the changes made to the changelog . md and src / os / inc / osapi - version . h files by the workflow <section> <number> . no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> os_build_number . <repeated> "" in src / os / inc / osapi - version . h <number> . additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"message receive timeout if system clock changes ? <section> # # # discussed in <url> < div type = ' discussions - op - text ' > <sup> originally posted by <section> <date> </sup> the cfe call for receiving a software bus message , <code> , uses the <code> call to manage the os - level interface for the message passing . unlike the <allcaps> rtems </allcaps> and vxworks implementations , the <allcaps> posix </allcaps> implementation of <code> uses an absolute timestamp from <code> ] ( <url> to set the timeout periods to wait for a message . this appears to be because the [ <allcaps> posix </allcaps> mqueue <allcaps> api </allcaps> requires it . <url> . the problem with basing the timeout off the absolute system clock rather than as a duration based on clock ticks ( as <allcaps> rtems </allcaps> and vxworks do ) , is that if they system clock changes , the timeout is affected . i have observed a situation if the system clock is updated ( for example , after resetting the clock based on acquired <allcaps> gps </allcaps> signal after being suspended ) calls to <code> that specify timeouts will be stuck forever if a message is not sent . it is no longer possible to have task occur after a certain amount of time if a message is not sent . <section> os_queueget call should still wake up after its indicated timeout even if / when clock_realtime gets updated in the background . <section> this is an underlying limitation with the <allcaps> posix api </allcaps> , the mq_timedwait call uses clock_realtime as its reference . see <url> <section> originally from <user> in cfs discussion"
"osal integration candidate : caelum - rc4 + dev54 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , separate bind and listen calls for streams add os_socketbindaddress ( ) and os_socketlisten ( ) to allow users to bind an address without also calling listen ( ) . the use case is for client side connections where the source port needs to be controlled . fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> users can call <code> to bind a specific port / address for client - side connections <section> debian <section> joseph hickey , vantage systems , inc ."
"socket <allcaps> api </allcaps> needs method to control source port for <allcaps> tcp </allcaps> client <section> the <code> call could be used on a client - side role ( without <code> ) to control the source port for outgoing <allcaps> tcp </allcaps> connections . the <code> <allcaps> api </allcaps> assumes a server - side role , in that it does both a <code> and <code> call underneath . currently , the <allcaps> osal api </allcaps> does not have any way to control the port used for a <allcaps> tcp </allcaps> connection on the client side . <section> introduce a method that can be used to control the source port used for client - side connections for example : <code> and <code> ( retaining existing os_socketbind for compatibility ) <section> this could potentially be done in os_socketconnect , such as <code> . <repeated> but keeping it in bind keeps it more closely related to standard sockets <allcaps> api </allcaps> . <section> this must be done with only new functions , cannot change definition of current os_socketbind . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not use intmax_t / uintmax_t types replace these with long and unsigned long , respectively , as some old systems might not have these types even if it does provide stdint . h fixes # <number> <section> build on vxworks <number> ( gcc <number> . <number> ) <section> build should succeed <section> <allcaps> gsfc </allcaps> vxworks build host <section> joseph hickey , vantage systems , inc ."
"some systems do not provide an "" intmax_t "" via stdint . h <section> although specified in c99 , there are some old systems out there that do not provide an <code> or <code> type in <code> . example is vxworks <number> / workbench <number> using gcc <number> . <number> . utassert uses these types , so it fails to build on this platform . <section> build utassert on vxworks <number> - fails on missing types <code> and <code> . <section> build should succeed <section> <allcaps> gsfc </allcaps> vxworks build host <section> workaround would be to use <code> and <code> instead . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev52 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"task <allcaps> api </allcaps> provides no mechanism to provide an instance parameter <section> there is currently no way to provide a runtime parameter to a task that is visible to the specific function executed in the task thread . <section> both <allcaps> posix </allcaps> ] ( <url> and [ <allcaps> rtems </allcaps> <url> . <section> without a mechanism to give a parameter to a task function , the only way to provide task - instance - specific data is some kind of an external thread - safe queue for each task function , and all of the excess bookkeeping required for that queue . <section> brian sipos , <allcaps> jhu </allcaps> / <allcaps> apl </allcaps>"
"fix # <number> , add additional counters to test summary adds additional counters to test summary . fixes # <number> <section> executed functional tests and confirmed output is as expected . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
counters included in test summary do not add up to total test count <section> test summary does does not contain information on all counters that increase the total test case count . this results in the appearance of missing tests when the results are read . <section> add an information statement that includes the test counters for the remaining tests that increase the total test count . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"condition variable logic does not agree with common uses <section> the current condition variable <allcaps> api </allcaps> in the main branch does not agree with the common uses in <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> which means there are many use cases that are not possible with the <allcaps> osal api </allcaps> . the major disconnect is that the condition variable wait should operate on an external mutex , not an internal single - use mutex . this is how <allcaps> posix </allcaps> ] ( <url> and [ <allcaps> rtems </allcaps> <url> both work , and it enables use cases where one mutex guards a resource but has multiple condition variables associated with it . <section> this is an <allcaps> api </allcaps> bug and is present in the header and documented logic . it is not possible to have a single guard mutex with multiple associated condition variables . <section> the <code> and <code> should take a handle to an external mutex to operate on , rather than an internal mutex . <section> this is an <allcaps> api </allcaps> issue and is not dependent on hw or os versions . this <allcaps> api </allcaps> is not present in the last release tag , so is only on the <code> branch . <section> add any other context about the problem here . <section> brian sipos , <allcaps> jhu </allcaps> / <allcaps> apl </allcaps>"
"fix # <number> , correct return value bug in vxworks <code> testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> <code> will actually return an error on all failure cases now . function logic and flow is clearer now - easing future maintenance . <section> avi weiss <user>"
"fix # <number> , add functional test for <code> <code> in <code> testing performed * * github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> no change to behavior ( test changes only ) . <section> avi weiss <user>"
"fix # <number> , refactor duplicate <code> swtiches into an inline function testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local tests confirm net coverage unchanged . <section> no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , refactor initializations of <allcaps> posix </allcaps> <code> variables to simplify code testing performed * * github ci actions all passing successfully , as do local unit tests . <section> no change to behavior . code is simplified slightly - improving future maintainability . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
posix <code> variables could be initialized to <code> to simplify code code snips * * <url> same for <code> and <code> . <section> simplify code by setting default to <code> / <code> and assigning <code> when necessary . <section> avi weiss <user>
"os_objectidfrominteger argument narrowing error <section> when building for vxworks <number> a c + + app , i get the error : error : narrowing conversion of ' value ' from ' long unsigned int ' to ' uint32_t ' { aka ' unsigned int ' } inside { } [ - werror = narrowing ] i fixed it by changing code to : <hashtag> if def </hashtag> osal_omit_deprecated osal_id_t idv = { ( uint32 ) value } ; <hashtag> else </hashtag> osal_id_t idv = ( osal_id_t ) value ; <hashtag> end if </hashtag> return idv ; the code above still narrow down value from long unsigned to int unsigned . i understand that both vxworks <number> and c + + are not supported , so really the question is : - should not os_objectidfrominteger be taking an integer in spite of a long since the returned values is always an int ? <section> <section> build without errors <section> osapi - idmap . h l105 <url> <section> - os : oracle linux <number> - v6 . <number> - rc4 + dev184 <section> <section> claudio olmi <allcaps> nasa jsc </allcaps>"
"osal integration candidate : caelum - rc4 + dev47 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , create workflow for ic bundle generation a clear and concise description of what the contribution is . - addresses issue # <number> . <section> generated ic branch in fork . <section> adds new workflow for integration candidate branch generation . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps> <number>"
"fix # <number> , light coding standards cleanup testing performed * * github ci actions all passing successfully . <section> no change to behavior . this pr will : - improve clarity & consistency - improve compliance with rules common to all / most of the relevant coding standards - reduce technical debt and ease future maintenance - result in cleaner builds with fewer alerts / warnings from code scanners <section> avi weiss <user>"
"light coding standards cleanup expected behavior * * comply with rules common to the relevant coding standards / guidelines where it makes sense , improves clarity , improves consistency and eases future maintenance . <section> avi weiss <user>"
"fix # <number> , change format of utassert_stringbufcompare testing performed * * github ci actions and local cfs test suite run all passing successfully . <section> the change makes it easier to identify the discrepancy between the strings in case of a failed test . only slight downside is the increase in length of the test log . <repeated> ( each call to <code> now results in <number> lines printed instead of <number> ) . there are currently ~ <number> uses of <code> in cfe and <allcaps> osal </allcaps> . <section> avi weiss <user>"
"fix # <number> , implement os_err_invalid_priority return code check for <allcaps> rtems </allcaps> testing performed * * i do not think this file ( <code> ) has any tests currently ( see <url> if someone can advise if this needs to be tested , and the best way of doing so , i would appreciate it . <section> calls on the <allcaps> rtems </allcaps> implementation to <code> ( which calls <code> ) and <code> ( which calls <code> ) will now actually return <code> if the <allcaps> rtems </allcaps> calls return <code> , rather than simply returning os_error . <section> avi weiss <user>"
"fix # <number> , convert some ut_getstubcount to utassert_stub_count testing performed * * github ci actions all passing successfully . local testing with standard cfs suite shows all tests passing and no change in coverage . <section> no change to code . tests also essentially identical , just a bit simpler , clearer and more useful for debugging . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev43 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add assert macros for other data types adds generic macros for asserting on integer values that can work with any integer data type , including size_t and <number> - bit values where needed . fixes # <number> <section> build and run all tests <section> new assert macros available . some logs have a slightly different output format but should not affect much . <section> debian <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev41 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev40 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , workflow to validate <allcaps> osal api </allcaps> adds a new build and test workflow that includes an <allcaps> api </allcaps> validation with both c and c + + compilers . this should catch any cases where syntactical elements that work in c but do not work in c + + appear in the headers . fixes # <number> <section> build and run workflow <section> <allcaps> osal api </allcaps> headers will now be checked against a c + + compiler . <section> github workflow <section> note that due to # <number> , this currently fails ( thus validating that this workflow is catching what it is supposed to ) . once the fix is merged , this should pass . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixup <allcaps> api </allcaps> headers for c + + correct a few syntactical items that are valid c99 but not valid for c + + <number> . this includes use of the designated initializer , compound literals , variadic macros , and a trailing comma in enum declarations . note this only matters for public <allcaps> api </allcaps> headers , as some users may need to include these directly from a c + + file . for normal c source files , these are all compiled as c99 and thus the syntax is fine . fixes # <number> <section> build and run all <allcaps> osal </allcaps> tests <section> no impact to behavior , headers are now valid syntax for c + + <number> ( and c99 , of course ) <section> debian ( using g + + <number> to check c + + syntax ) <section> joseph hickey , vantage systems , inc ."
"add build script and workflow to validate <allcaps> api </allcaps> headers in c + + <section> as noted in issue # <number> , there is currently no tests to check compatibility of the <allcaps> osal api </allcaps> with c + + . although c + + is <section> an officially targeted platform for <allcaps> osal </allcaps> , some users do have c + + code and occasionally the <allcaps> osal </allcaps> header files are included from c + + code . <section> this is two parts : <number> . all public <allcaps> osal </allcaps> headers should have an conditional <code> to handle the case if / when they are included from a c + + file . <number> . there should be a workflow check to confirm that the <allcaps> api </allcaps> header files for <allcaps> osal </allcaps> are compliant with c + + <number> . <section> the only other workaround is to insist that the user never include <allcaps> osal </allcaps> headers directly from c + + , instead provide their own c + + wrapper for the <allcaps> osal api </allcaps> . but this is a fairly big thing when a few minor updates can make the <allcaps> osal </allcaps> headers more c + + - friendly . <section> note that c + + would still be considered a secondary target here - a workflow can do some simple checks to at least make sure the headers do not contain any declarations that are outright incompatible with c + + , but otherwise c + + support would be totally on the user to validate . notably - none of the unit tests run in c + + . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev39 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove unreachable branch ( superfluous if condition ) testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , removed cast that hid bug at compile time fix # <number> <section> - hardware : gr740 - os : <allcaps> rtems </allcaps> - versions : cfs draco - rc2 + mods <section> if included , identify any third party code and provide text file of license <section> jose f . martinez pedraza | <allcaps> gsfc </allcaps> <number>"
"designated initializer in <code> header breaks c + + compilation unit . <section> designated initializer in <code> header breaks c + + compilation unit . c + + does not support this until c + + <number> <section> <code> in a c + + compilation unit build file , observe error . <section> successful compilation <section> instance of designated initializer used here : <url> other instances in <code> , <code> , <code> , <code> . issue seems to have been introduced in <url> . <section> - sp - 0 s - os : vxworks <number> - versions : cfe v7 . <number> - rc4 + dev242 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev179 , <allcaps> psp </allcaps> v1 . <number> - rc4 + dev67 <section> inline header functions should use c + + <number> ( latest standard supported by vxworks <number> ) compatible constructs . <section> john n pham , northrop grumman"
"fix # <number> , remove unimplemented test stub prototype testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior ( prototype was not implemented ) . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev38 - v2 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add doxygen for ut_configuregenericstubreturnvalue adds a function and parameter description for this <allcaps> api </allcaps> which resolves a doxygen warning about it being undocumented . fixes # <number> <section> build full set of documentation <section> functions are fully documented <section> debian <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev38 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev37 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove stray remaining ' goto ' in <allcaps> osal </allcaps> test code testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . program flow is clearer , and removes the only remaining use of <code> in <allcaps> osal </allcaps> . <section> avi weiss <user>"
"fix # <number> , separate append on volume_name to system_mountpt generating the system_mountpt string via a single call to snprintf triggered a compiler warning about overlapping memory . however this does not seem like a real warning , as the volume_name should always be null terminated before the overlap would be possible . by separating this to be a separate append of the volume_name along with an explicit size check to ensure the buffers indeed do not overlap , this avoids the warning . fixes # <number> <section> build and run all tests <section> avoids a false compiler warning about possible pointer overlap by explicitly checking and limiting the string length being appended . no functional change , as the generated "" system_mountpt "" string should be identical . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , align mismatched function prototype / implem . parameter names testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> function prototypes and their implementations should ( ideally ) always have matching parameter names . <section> avi weiss <user>"
"fix # <number> , ut assert stub return values improves default support for return values of sizes other than <number> bits . previously this required a custom handler for any value that was not a <number> bit integer . with this update any integer value can be used , and a value translation will occur if the size is different . thus boolean values , <number> , and <number> - bit ints can be configured through the same basic <allcaps> api </allcaps> without needing to add a handler . fixes # <number> <section> build and run all tests , including <allcaps> cfs </allcaps> app tests , to confirm all still run as expected . <section> no change to _existing_ behavior - all currently - implemented test cases should continue to behave as they have in the past , whether they used a <number> - bit integer return or if they had a custom hook / handler . going forward , it should no longer be required to implement a custom handler for the sole purpose of adjusting the size of the return value in case it is not a <number> - bit integer . as a fallback default , any return value that is unset by a test will be memset to <number> . so a pointer stub return will get <code> , a boolean will get <code> , and any numeric value of any time will be zero . the <code> and <code> functions now accept a <code> value instead of <code> . this typedef is defined using the c99 <code> type , which will be <number> bits in size on modern hardware . when passing by value from an int32 , this should be transparent , but it is large enough to also allow test cases to pass in pointer values here without truncating . <section> debian <section> <allcaps> api </allcaps> to set return values is still numeric in nature . this adds some framework to allow fully - typed values and abstract objects bigger than <code> values to be returned , but there is no <allcaps> api </allcaps> yet - that can be added in a future change . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev34 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , break up pc - rtems to support generic configuration - fix # <number> splits up bsp_start . c so features can be optionally included : cmdline , shell , stand alone exe vs module <allcaps> rtems </allcaps> configuration is now in bsp_init . c , included based on stand alone / module selection <section> ran w / leon3 <allcaps> qemu </allcaps> with / without shell and stand alone / module options . <section> pc behavior should not change based on default options matching previous behavior except for the file system and command line , the rest is usable by leon3 <section> leon3 <allcaps> qemu </allcaps> modified as documented by <allcaps> rcc </allcaps> : <code> <allcaps> rcc </allcaps> - <number> . <number> for running as a module i based it on <url> although there are mods . <repeated> <section> <allcaps> draft </allcaps> submitted for initial discussion <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove obsolete _using_rtems_includes_ - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , support adding default flags at task creation - fix # <number> <section> ci , also tested on rtems5 / leon3 with os_fp_enabled <section> no default change but supports adding flags at task creation <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev31 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , update action versions use the "" v3 "" version of checkout and upload - artifact actions , which resolves a warning about depending on an obsolete node . js version . fixes # <number> <section> execute workflow <section> no more warning about node . js <number> <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add doc - prebuild dependency when building as part of <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> , register the osal header list file ( osal - public - api . doxyfile ) as a dependency of the doc - prebuild abstract target . this way , <allcaps> cfe </allcaps> and any other <allcaps> cfs </allcaps> apps that refer to the <allcaps> osal </allcaps> headers in their documentation can easily ensure that this ( and any other file produced by other modules ) exist prior to attempting to run doxygen . fixes # <number> <section> build documentation <section> none directly to <allcaps> osal </allcaps> , but dependent items can now operate correctly <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"update workflows to use newer action versions <section> calls to the checkout and upload - artifacts actions in the workflow files refer to deprecated version <number> . this should be updated to v3 , which resolves a warning about deprecated node . js versions . <section> see any workflow log , e . g . <url> in the "" annotations "" section . <section> should be clean . <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev30 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"osal integration candidate : caelum - rc4 + dev29 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> and # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , fix # <number> , cppcheck updates passes a cmake configuration so cppcheck can use the exported commands , allowing it to use all header files that the actual build uses . also resolves a number of other issues reported by cppcheck fixes # <number> fixes # <number> <section> build and run tests verify results of static analysis workflow <section> static analysis workflow should be clean <section> github workflow <section> joseph hickey , vantage systems , inc ."
fix # <number> : truncate symbol name if > os_max_sym_len truncates symbol name in symbol table dump if the length exceeds os_max_sym_len . <section> tested against vxworks <number> <section> dump completes successfully when symbol names exceed os_max_sym_len . <section> - hardware : sp0 - os : vxworks <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , update ci to use ubuntu <number> - fix # <number> <section> ci <section> just updates ci to use ubuntu <number> <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ci to use ubuntu <number> <section> ubuntu <number> <allcaps> eol </allcaps> is approaching cfs was already updated in nasa / cfs # <number> , cfe should match <section> update to use ubuntu <number> in ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev28 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully ( excl . cppcheck issues being addressed in <url> <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
"fix # <number> , always provide ut stub library move the ut stub library so it is not dependent on enable_unit_tests the "" ut_osapi_stubs "" library is mostly relevant for testing other applications , as opposed to testing <allcaps> osal </allcaps> itself . therefore this library should be provided regardless of whether <allcaps> osal </allcaps> is being tested . fixes # <number> <section> build and check <allcaps> osal </allcaps> in standalone build and <allcaps> cfe </allcaps> build <section> the <code> library is always available <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"always build / provide <allcaps> osal </allcaps> stub library , decouple from enable_unit_tests <section> currently , <allcaps> osal </allcaps> only provides the stub library ( <code> ) when <code> is set . however , the <code> switch is supposed to cover the testing of <allcaps> osal </allcaps> itself , but the stubs are mostly relevant for testing _other_ components . in a modular deployment , <allcaps> osal </allcaps> may be treated as an external / independent component . as such , it may be built separately from the application , with headers and binary libraries installed in a system location e . g . <code> or similar . to keep the installation footprint smaller and cleaner , generally build intended for system install like this would be done without unit tests . however , the lack of <code> when compiled in this mode means that other components in the system based on <allcaps> osal </allcaps> cannot be unit tested either . <section> always provide <code> , independently of the <code> switch . this will enable dependent applications to be unit tested , even if <allcaps> osal </allcaps> itself is not being tested . <section> note that ut assert is always provided this way for similar reasons - it is still useful for external "" black box "" testing ( which is done using binaries that are built and linked normally , not stubbed out binaries ) , and furthermore other applications can be tested even if <allcaps> osal </allcaps> itself is not being tested . in a <allcaps> cfs </allcaps> build , this disconnect was not apparent because the entire system gets the same <code> setting , but in a decoupled / standalone build this is not the case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , modify unreachable branch in os_objectidallocatenew testing performed * * github ci unit tests all passing successfully . <section> no change to behavior . <section> avi <user>"
"additional errors reported by new cppcheck <section> the latest version of cppcheck reports the following errors / concerns in the <allcaps> osal </allcaps> source code : <code> <section> execute the following cppcheck command in <allcaps> osal </allcaps> ( same as what is used in the static analysis workflow "" strict "" setting ) : <code> <section> should pass cleanly <section> ubuntu <number> ( cppcheck version <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add bugcheck_void macro adds a variant of the <allcaps> bugcheck </allcaps> macro that has no return value argument , which can be used in functions with no return value without the unusual syntax appearing in the code . fixes # <number> <section> basic build and run tests run cppcheck against source <section> cppcheck does not report a syntax error <section> ubuntu <number> ( using cppcheck v2 . <number> ) <section> just a wrapper macro is enough to satisfy cppcheck . added a note that the missing second argument ( return value ) is intentional on a void function . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update incorrect function header comment testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> none . comments change only . <section> avi weiss <user>"
"osal integration candidate : caelum - rc4 + dev27 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adjust timing on condvar tests the order of task wakeup when using os_condvarsignal ( ) with multiple tasks pending may not be guaranteed . this relaxes the test case so that a specific order is not assumed / required . this also adjust certain sleep times to make sure the test waits long enough for the tasks to do the expected work . fixes # <number> <section> execute the "" condvar "" test multiple times execute github workflows <section> should resolve / avoid intermittent failure due to tasks not running in expected order <section> ubuntu <number> <section> as this failure was intermittent , this needs to be watched in the future to confirm there is no more failure <section> joseph hickey , vantage systems , inc ."
"intermittent failure in condvar functional test <section> occasionally the "" condvar "" functional test fails with an unexpected result , snippet of the test log here : <code> the test case is expecting that the tasks will wake up in the same order on which they started pending on the condvar , but in this run , the second task woke up before the first task did . <section> intermittent issue , not directly reproducible . not seen running locally , seems to occur only on cloud hosts where perhaps timing is not as accurate and system load is not predictable . <section> tests should pass <section> github workflow <section> as <allcaps> posix </allcaps> does not specifically guarantee an execution order here , this test case should be relaxed and not assume that tasks will execute work in the order they started . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , add export targets and package script adds optional "" install "" commands to cmake script , which is useful when building <allcaps> osal </allcaps> as a standalone software package . the public <allcaps> api </allcaps> and static libraries will be installed to the specified system location , and can then be used to compile and link external <allcaps> osal </allcaps> applications without the need for the original <allcaps> osal </allcaps> source or build trees . note this also installs the "" osconfig . h "" file as this does affect the binary formats of some items ( i . e . size of items using os_max_api_name and other similar structure members ) . the external application must be compiled using the same osconfig . h after installation . fixes # <number> <section> build <allcaps> osal </allcaps> with both <allcaps> cfe </allcaps> and standalone and run all tests ( existing build ) then run "" make install "" on standalone build to stage headers and library binaries to a build tree . tested an external application to using <code> and building against the <allcaps> osal </allcaps> headers and binaries provided by that exported package . <section> exports a cmake package containing targets that can be used by <allcaps> other </allcaps> builds without necessarily having the full <allcaps> osal </allcaps> source tree integrated into that project . <section> ubuntu <number> <section> this is necessary when developing standalone ( non - <allcaps> cfe </allcaps> ) software that still uses <allcaps> osal </allcaps> to provide portability to different systems and / or does any unit testing ( the exported packages includes ut assert ) . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev25 - pr # <number> , rtems queue multi - size , mimic posix logic - pr # <number> , cmake script modernization - pr # <number> , create <allcaps> changelog </allcaps> . md <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , locks for condvar objects on rtems / vxworks instantiate the condvar lock on rtems and vxworks even though the feature is not currently implemented . this is because os_max_condvars must still be nonzero and if the "" create "" function is called , it still goes through the motions of allocating an id . this also adds a <allcaps> null </allcaps> check in the lock implementation , and thus if a lock is not instantiated in the future this will not dereference a <allcaps> null </allcaps> pointer . fixes # <number> <section> build and run all tests <section> missing lock is instantiated add null check - avoids possible null dereference in the event of a missing lock in the future <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add time conversion reciprocal functions adds the following apis which are direct reciprocals of the existing time conversion functions : <code> fixes # <number> <section> added test cases to cover the new apis build and run all tests to confirm that the new functions are working as intended <section> adds reciprocal operations for existing time conversions <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"time conversion routines should include inverse of "" total "" functions <section> <allcaps> osal </allcaps> provides a number of time apis to convert <code> values into different standard units , all of which return an <code> so as to represent the largest possible range ( within c99 at least ) : <code> however , there is no direct inverse function . for example , there is no way to go from an interval expressed in total milliseconds ( such as the return value from <code> back into an <code> value . the original assumption was that the user should be able to use <code> to perform this task , but that is not a direct inverse as it takes two arguments - seconds and milliseconds - the latter of which is only <number> - bits in size . thus the user must do divide and modulus operations to convert the single <code> value to seconds and milliseconds , then use the <allcaps> osal api </allcaps> to recombine them again . this results in a lot of extra math and complexity . <section> add <number> new functions which would be a true inverse operation of the <number> apis listed above . these would take a single <code> as an input , and return an <code> back : <code> the relationship should be such that calling e . g . <code> returns the original <code> value again ( within reasonable overflow limitations , particularly in the case of nanoseconds ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , stop empty function catching ci workflow format checks quick fix of # <number> <section> none <section> empty function will stop catching up workflow check and causing its failure . <section> <user>"
"ci workflow check catching empty function > > <user> can you fix the issue pointed out in the format check workflow > > can i still address these now that the issue is closed and pr merged ? that ' s a good point , you may need to open a new pr to address it . you could either reopen the original issue or create a new one specific to the format check error . let me know if you ' d like me to create an issue for you . thanks again ! _originally posted by <user> in <url>"
"array access overflow in src / os / vxworks / src / os - impl - idmap . c <section> array access overflow in src / os / vxworks / src / os - impl - idmap . c <section> enable fm in cfs on vxworks . streaming <code> / <code> errors should occur when <code> is enabled <section> error printouts should not occur <section> this pr <url> adds the following lines : <url> this allows <code> to become a valid index for the <code> call chain . unfortunately , <code> for vxworks does not contain an entry for <code> : <url> <code> / <code> runs past the end of the array , which results in invalid vxids being passed to <code> / <code> <section> - sp0 - s ( simics ) - os : vxworks - versions : <allcaps> cfe </allcaps> : 9 f42688b2bf92e18c6faf9e7ce1f9a4f2ea08316 , <allcaps> osal </allcaps> : 3 8 5 5 9 d447fdeb1a85f8bb09938df30d7a50918a4 , <allcaps> psp </allcaps> ( gateway ) : f1c952121ea73b0de50eeb62ef3c0bd9d4609ca0 , fm : 6 ed4fc2407cfc2f2c9db97bfea2a515c5416e480 ) <section> <section> john n pham , northrop grumman"
implicit declaration of function errors <section> make fails due to implicit declaration of function errors for <code> and <code> in uttools . c file <section> steps to reproduce the behavior : <number> . clone main cfs build <number> . copy makefile and sample_defs as instructed <number> . <code> error happens during the make build in the uttools . c file . <section> clean build of cfs <allcaps> osal </allcaps> module <section> <code> <section> - x86_64 system - os : ubuntu <number> - versions : most recent commits . <section> ben l .
"bump to v7 . <number> - rc4 + dev120 - pr # <number> , do not set file permissions on ut assert outputs <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , do not set file permissions on ut assert outputs file permissions in general are a <allcaps> posix </allcaps> concept , but this tool should be pure c99 . it should not rely on any <allcaps> posix </allcaps> headers or <allcaps> posix </allcaps> - specific <allcaps> api </allcaps> calls . fixes # <number> <section> build and run tests <section> no more build failures <section> ubuntu <number> <section> setting permissions explicitly is not really necessary . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev23 - pr # <number> , use fstat and fchmod for <allcaps> toctou </allcaps> bug - pr # <number> , remove ' return ; ' from last line of void functions . - pr # <number> , remove unnecessary parentheses around return values . <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"fix # <number> , adding commit - msg hook , copy to . git / hooks to enable . adds a githook that matches the regex that the server side checks for . - include explicitly what issue it addresses [ e . g . fixes # <number> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
enforce commit message name rule as githook <section> enforce commit message name rule as githook i am always frustrated when i push and then have to go back and rework my history . <section> git doesnt event let me commit changes . <section> a clear and concise description of any alternative solutions or features you have considered . vacations ? <section> add any other context about the feature request here . <section> sam price
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in <allcaps> osal </allcaps> that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> n / a <section> <user>"
"fix # <number> , cmake script modernization use target properties to define interfaces and compiler definitions rather than referencing global variables or using "" known "" paths in other modules . this better aligns with current practices and creates a more robust build environment that is less dependent on specific path names existing in a given module . this adds an "" osal_public_api "" interface target that contains the paths to the public <allcaps> api </allcaps> headers as its interface_include_directories and any required compiler definitions as its interface_compile_definitions property . applications should use this rather than referring to the "" ${ osal_source_dir } / src / os / inc "" include path directly . fixes # <number> <section> build and confirm <allcaps> osal </allcaps> successfully builds on various platforms including ubuntu <number> ( new - ish cmake ) and <number> ( old - ish cmake ) . <section> no impact to runtime behavior ( no actual source code changes here ) build script makes more use of cmake "" <allcaps> interface </allcaps> "" libraries to communicate compiler options , include paths , and definitions to dependencies , moving away from using global variables to perform this task . notably , this permits the targets to be imported into another build more easily . <section> ubuntu <number> and <number> ( native , newer and older cmake ) <allcaps> rtems </allcaps> <number> and <number> <section> all changes should be backward compatible , in that the "" magic variables "" are still being honored as the current version of the cmake script had previously implemented : - osal_api_include_directories ( input ) - osal_user_c_flags ( input ) - ut_coverage_compile_flags ( output ) - ut_coverage_link_flags ( output ) the preferred method of configuring these items going forward would be to get / set the corresponding properties on the <code> interface target for include directories and compile options , and use the <code> and <code> interface targets for coverage testing flags . defining both methods for now allows for transition . if the osal_omit_deprecated flag is set , then the ut_coverage flags will not be exported . <section> joseph hickey , vantage systems , inc ."
"free space calculations work for anything less than 4 g but will fail for anything above 4 g on <allcaps> pace </allcaps> we noticed the upper bits of the free space entry jumping . the bug is in the function os_fsbytesfree in the file osal / src / os / vxworks6 the function has the following line bytes_free_local = stat_buf . f_bfree * stat_buf . f_bsize ; where bytes_free_local is a uint64 and the bfree and bsize are <number> bit numbers . when the result of the multiplication is a number greater than 0 xffff <allcaps> f <elongated> </allcaps> , bytes_free_local gives an incorrect result , where lower <number> bits are correct but upper <number> bits is set to 0 xffffffff the line was modified as follows to give the right results when bytes_free_local is greater than 4 gbytes bytes_free_local = ( uint64 ) ( ( uint64 ) ( stat_buf . f_bfree ) * ( uint64 ) ( stat_buf . f_bsize ) );"
"clean up remaining deprecated / obsolete features used by the cmake scripts <section> in recent years the cmake build has been adopting the current best - practices whenever feasible to do so , and moving away from features that have been marked as obsolete or deprecated . - use interface properties to propagate compiler flags , definitions , etc to dependencies , rather than setting "" magic variables "" that need to be known by the dependency - prefer <code> as opposed to <code> at directory scope - prefer <code> as opposed to <code> at directory scope - use of <code> should include the scope keyword ( <allcaps> public </allcaps> / <allcaps> private </allcaps> ) rather than the "" bare "" signature ( also noted by <allcaps> cfe </allcaps> user in nasa / cfe # <number> ) <section> in particular - the following specific areas should be modernized : - public <allcaps> api </allcaps> location should be an interface library : <url> - management of impl - specific flags can also be done via interface library rather than manual propagation here : <url> - use scope keyword on link libraries : <url> - implement ut coverage interface library as alternative to "" flag variables "" exported here : <url> <section> it is not currently possible to propagate the ut coverage flags if <allcaps> osal </allcaps> and the application are in separate builds . using the target - scope features and interface libraries is of particular benefit to making a proper <allcaps> osal </allcaps> "" package "" that can be compiled and linked separately from the application ( see # <number> ) <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev21 - pr # <number> , condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , rtems queue multi - size , mimic posix logic refactor rtems queue to not do size check , and to mimic posix logic . fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"fix # <number> , rtems on task creation register name . registers task name with rtems on creation fixes # <number> <section> steps taken to test the contribution : ran on microblaze , typed cpuuse in rtems task , saw names . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : microblaze kcu105 - os : <allcaps> rtems </allcaps> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> nasa / <allcaps> gsfc </allcaps>"
"fix # <number> , rtems allow variable length queue msgs . a clear and concise description of what the contribution is . drops check on size ! = rtems_size to allow variable length queue messages . matches the posix queue implementation . <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' built and ran a non cfs system using posix . built and ran the same cfs system using rtems , this fix allowed system to run . <number> . execution steps ' . <repeated> ' ran on <allcaps> rtems </allcaps> on microblaze . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : <allcaps> rtems </allcaps> queues changed to match posix queues for variable length messages <section> <allcaps> rtems </allcaps> / microblaze <section> add any other context about the contribution here . <section> n / a <section> <allcaps> nasa gsfc </allcaps>"
"fix # <number> , condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> implementation of condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> currently implemented only for <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> can be added with future commit . <section> coverage and functional test of condvar <allcaps> api </allcaps> is included <section> adds condition variable <allcaps> api </allcaps> <section> ubuntu <number> <section> the bp / <allcaps> dtn </allcaps> implementation ( <url> makes use of condition variables to signal between worker tasks . in order to support running this library natively , <allcaps> osal </allcaps> would need to provide this set of functionality . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev15 - pr # <number> , remove stray terminators - pr # <number> , add <allcaps> rtems </allcaps> timebase callback wrapper <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , add <allcaps> rtems </allcaps> timebase callback wrapper fixes # <number> by creating a wrapper function to convert timebase callback task argument from rtems_task_argument into osal_id_t <section> steps taken to test the contribution : <number> . built with <code> and <code> for <allcaps> rtems </allcaps> / gr740 <number> . run and verify successful cfs init <section> - hardware : gr740 - os : <allcaps> rtems </allcaps> <number> - versions : draco - rc2 + <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> code <number>"
"osal integration candidate : caelum - rc4 + dev14 - pr # <number> , ensure address alignment of <allcaps> tcb </allcaps> for vxworks <number> <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> skliper"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , ensure address alignment of <allcaps> tcb </allcaps> for vxworks <number> - fix # <number> <section> ci <section> resolves bug , otherwise no change in behavior <section> ci , will try to coordinate testing the fix on a real vxworks <number> , <number> - bit platform <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum - rc4 + dev12 pr # <number> - fix # <number> , update cmake mimimum required to something more recent ( or remove ) pr # <number> - fix # <number> , <allcaps> osal </allcaps> loader unit test builds hardcoded <number> modules , test fails if more modules are supported pr # <number> - fix # <number> , update cmake mimimum required to something more recent ( or remove ) <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> jphickey dzbaker skliper"
"fix # <number> , update minimum required cmake version - fix # <number> this updates the main minimum required version from <date> to <number> <section> ci <section> none , just updates minimum required version <section> ci <section> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , set <allcaps> osal </allcaps> loader unit test number of modules to osal_config_max_modules . fixes # <number> <section> printed value of <allcaps> mod </allcaps> variable in cmakelists . txt to ensure that it gets set to one more than the osal_config_max_modules value ran <allcaps> osal </allcaps> unit tests <section> <allcaps> osal </allcaps> loader unit tests will now support up to osal_config_max_modules modules . <section> - os : <allcaps> rhel </allcaps> <number>"
"fix # <number> , update cmake_minimum_required remove the extra / unneded cmake_minimum_required that was triggering a deprecation warning . this will just inherit the minimum version of the parent . fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent ( or remove ) <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> in this case the <allcaps> osal </allcaps> main project currently lists <date> so it does not generate a warning here ( unlike some other modules which specified <number> . <number> ) but the "" unit - test - coverage "" submodule is where the problem lies . however , in this case , as this is just added as a subdirectory from the main build - it probably does not need a separate minimum_version at all . suggestion would be to remove this line , it will inherit the minimum version from the top level project . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : caelum - rc4 + dev10 pr # <number> - fix # <number> , resolve ut uninit vars static analysis warnings - fix # <number> , remove redundant checks in ut - part # <number> , resolve ut uninit vars static analysis warnings pr # <number> - fix # <number> , add <allcaps> rtems </allcaps> <number> support <section> cfs bundle checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> if included , identify any third party code and provide text file of license <section> acudmore skliper"
"fix # <number> , add os_statustostring <allcaps> api </allcaps> - fix # <number> related to : - nasa / cfe # <number> - nasa / cfe # <number> - # <number> <section> added unit and functional tests , confirmed expected output <section> none , just adds macro for future cleanup that will be draco compliant <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> see links above . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add rtems <number> support - fix # <number> these changes add support for <allcaps> rtems </allcaps> <number> in the <allcaps> rtems osal </allcaps> and pc - rtems <allcaps> osal bsp </allcaps> . the changes consist of modifications to the conditional compilation blocks and a couple of new conditional compilation blocks in the pc - rtems <allcaps> osal bsp </allcaps> startup code to account for an include and <allcaps> api </allcaps> that was deprecated in <allcaps> rtems </allcaps> <number> . in the <allcaps> rtems osal </allcaps> , the existing conditional compilation blocks were flipped from : <code> to : <code> by flipping the blocks as described above , it should work with future versions of <allcaps> rtems </allcaps> provided the <allcaps> api </allcaps> does not change . there is also a change in the os - impl - loader . c file to solve a warning with <allcaps> gcc </allcaps> <number> . <allcaps> gcc </allcaps> <number> is now used by <allcaps> rtems </allcaps> <number> . <section> all tests were run on the <allcaps> qemu rtems </allcaps> <number> , <allcaps> qemu rtems </allcaps> <number> , and the new <allcaps> qemu rtems </allcaps> <number> containers . <section> there should be no impact to the behavior . all tests passed on <allcaps> rtems </allcaps> <number> , <number> , and <number> . <section> <allcaps> qemu </allcaps> x86 with pc - rtems <allcaps> rtems bsp </allcaps> and cfs pc - rtems platform . in addition these changes are being used on a generic - rtems platform that will be submitted in a future pr . <section> this is the last set of code changes in the first round of <allcaps> rtems </allcaps> <number> updates described here : <url> <section> none <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"add <allcaps> osal </allcaps> support for <allcaps> rtems </allcaps> <number> <section> <allcaps> rtems </allcaps> <number> is currently under development in the main branch of the <allcaps> rtems </allcaps> git repository . there are a few minor changes that have to be addressed in the <allcaps> osal </allcaps> code to support <allcaps> rtems </allcaps> <number> . <section> modify the <allcaps> osal rtems </allcaps> implementation and <allcaps> osal </allcaps> pc - rtems <allcaps> bsp </allcaps> to support <allcaps> rtems </allcaps> <number> while still supporting <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . this is done with approximately <number> minor changes . in the existing code there are conditional blocks selecting either <allcaps> rtems </allcaps> <number> and defaulting to <allcaps> rtems </allcaps> <number> . for example : <code> to support <allcaps> rtems </allcaps> <number> , these blocks can be flipped as so : <code> by flipping these blocks , <allcaps> rtems </allcaps> <number> and <number> can be supported in the else block . <section> alternatives include not supporting <allcaps> rtems </allcaps> <number> , or just supporting <allcaps> rtems </allcaps> <number> , neither of which are ideal . this solution will continue to support <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> , and add support for <allcaps> rtems </allcaps> <number> . <section> these changes depend on a number of other changes : <url> <url> <url> i will not submit a pull request for this fix until the above changes are all in the main branch of the cfs bundle . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
redundant condition checks in ut <section> redundant conditions ( unsigned int check >= <number> ) observed in ut <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
uninitialized variable static analysis warnings in unit tests <section> uninitialized variable static analysis warnings observed for unit tests ( license prevents publishing ) <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"osal integration candidate : caelum - rc4 + dev9 pr # <number> - fix # <number> , update codeql workflows for reusable update pr # <number> - fix # <number> , add os - impl - no - select . c for <allcaps> rtems </allcaps> <section> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> acudmore skliper"
"<allcaps> fix </allcaps> # <number> , add os - impl - no - select . c for <allcaps> rtems </allcaps> - fix # <number> implements os - impl - no - select . c for <allcaps> rtems </allcaps> or any other os that has a configuration without select . currently only used for <allcaps> rtems </allcaps> when the network stack is disabled in the <allcaps> osal </allcaps> . on <allcaps> rtems </allcaps> the select call only works with network file descriptors . in current <allcaps> rtems </allcaps> <number> and <number> builds , when the osal_config_include_network option is false , the select call will still be included even though it cannot be used . the does not fail because the select call is still available in the <allcaps> rtems </allcaps> libraries . if you build <allcaps> rtems </allcaps> <number> or <number> without the default network stack , the select call will not be included in the <allcaps> rtems </allcaps> libraries , causing the <allcaps> osal </allcaps> build to fail . in addition , <allcaps> rtems </allcaps> <number> removes the legacy network stack , so a default os build will cause the <allcaps> osal </allcaps> build to fail . by selecting os - impl - no - select . c when the osal_config_include_network option is false , the select call will be omitted , and it will build for <allcaps> rtems </allcaps> with and without the network stack . <section> steps taken to test the contribution : this was tested with <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> using the pc - rtems ci platform . i ran all tests on <number> and <number> with osal_config_include_network set to true and false . all tests pass , but i did notice that the <allcaps> osal </allcaps> module unload test did not pass on <allcaps> rtems </allcaps> <number> - i do not think this test is related . this is also being used on leon3 / <allcaps> rtems </allcaps> <number> for gtosat . <section> a clear and concise description of how this contribution will change behavior and level of impact . when building the cfs with the osal_config_include_network to false for <allcaps> rtems </allcaps> only ( currently ) , the os_select * calls will return os_err_not_implemented . this is probably safer , since the underlying select call should only be used with network sockets / file descriptors anyway . <section> - build system : docker containers for <allcaps> rtems </allcaps> <number> and <number> cfs ci tests - target os / cfs platform : <allcaps> rtems </allcaps> <number> /x 8 6 with cfs pc - rtems platform , and <allcaps> rtems </allcaps> <number> /x 8 6 with cfs pc - rtems platform - this patch has also been in use for gtosat on a leon3 / <allcaps> rtems </allcaps> <number> platform for a year . <section> alan cudmore , <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , update codeql workflows for reusable update - fix # <number> <section> ci <section> none , just fixes codeql workflows <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix function documentation <section> name of function on comment does not match the actual function name <section> <url> <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> <number>
"fix # <number> , apply latest contributor license agreement links <section> - fixes # <number> adds checklist for <allcaps> cla </allcaps> and contributing guide . <section> working links to the latest cfa documents and removal of old cfa documents <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"apply latest contributor license agreement links <section> applies links to the latest contributor license agreements ( cfa ) . removes old cfa documents . <section> working links <section> add any other context about the feature request here . depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"incorrect status reporting from os_socketsendto_impl <section> the return value of <code> returns the number of characters sent on success and - <number> on error . in <code> the return of <code> is being assigned as os_status and returned . this results in a non - zero ( <code> ) status being reported back to the calling function which is interpreted as an error <section> steps to reproduce the behavior : <number> . put breakpoint on <code> <number> . enable to output using <code> <number> . chaeck the value of <code> <section> <code> should be <code> if the return value of <code> . <section> <code> <section> syed huq , kepler communications ."
"format truncation warning in <code> ( ubuntu <number> ) <section> a ubuntu <number> release job reveals that the current implementation of osal / ut_assert / cmakefiles / ut_assert . dir / src / utassert . c / utassert_dotestsegmentreport potentially truncates the output to fit in <code> . <section> steps to reproduce the behavior : <number> . go to <url> <number> . click on build ( ubuntu - <number> , release ) <url> <number> . scroll down to lines <number> - <number> of the "" make install "" job <section> passing workflow <section> screen shot <number> - <number> - <number> at <number> <number> <number> pm <img> <section> ubuntu <number> <section> <code> is currently implemented with size <number> . utassert_dotestsegmentreport may truncate the output to fit in the buffer . attempting to write <code> with <number> uint32 variables , <number> character array of size <number> named <code> , and <number> bytes of hard - coded strings ( e . g . "" <allcaps> total </allcaps> "" , "" <allcaps> pass </allcaps> "" , "" <allcaps> fail </allcaps> "" , "" <allcaps> mir </allcaps> "" ) . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"<allcaps> hotfix </allcaps> # <number> , revert changes to versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"osal integration candidate : caelum - rc4 + dev7 <section> - <allcaps> hotfix </allcaps> # <number> , enable format check on all branches pr # <number> - <allcaps> hotfix </allcaps> # <number> , fix failed format check pr # <number> - fix # <number> , update copyright header pr # <number> - fix # <number> , avoid calling memchr ( ) with unknown size buffer pr # <number> - <allcaps> hotfix </allcaps> # <number> , revert changes to versioning information <section> osal checks < <url> cfs bundle checks < <url> failed codeql workflow is being examined . <section> see prs <section> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user>"
"fix # <number> , avoid calling memchr ( ) with unknown size buffer <section> in some systems , passing a large size value to memchr ( ) causes it to return <allcaps> null </allcaps> , even if the char is guaranteed to be found within the actual valid buffer memory . this modifies the string buffer comparison function to actively check for this sentinel value and use "" strlen ( ) "" instead . fixes # <number> <section> build and sanity check , run all tests on both ubuntu ( latest version ) and centos <number> vm <section> tests pass in both systems ( no <allcaps> segv </allcaps> on centos <number> ) <section> ubuntu <number> centos <number> <section> joseph hickey , vantage systems , inc ."
"<code> <allcaps> segv </allcaps> when - <number> for size passed in ( on centos <number> ) <section> <code> returns <allcaps> null </allcaps> on centos <number> ( at least in one case ) , which within <code> causes the <code> to use the max size_t which causes a <allcaps> segv </allcaps> . <url> <section> build and run this test case ( others also use this pattern ) : <url> <section> no <allcaps> segv </allcaps> <section> see above <section> - hardware : unknown - os : centos <number> - versions : bundle main <section> add any other context about the problem here . <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix ic </allcaps> : caelum - rc4 + dev6 , fix failed format check <section> fixes format check failure that sneaked into ic : caelum - rc4 + dev6 <section> osal checks : < <url> cfs bundle checks : < <url> <section> none <section> <allcaps> rtems </allcaps> <number> / <number> ubuntu <number> <section> none <section> none <section> gerardo cruz - ortiz , <allcaps> nasa </allcaps>"
"osal integration candidate : caelum - rc4 + dev6 <section> pr # <number> - partial # <number> , update cfs - build codeql reusable worfklow target pr # <number> - fix # <number> , implement os_modulegetinfo_impl for <allcaps> rtems </allcaps> pr # <number> - fix # <number> , doxygen strip path and expose common config pr # <number> from skliper / fix1227 - doxygen_mainpage - fix # <number> , refactor doxygen and remove mainpage <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> / <number> ( bundle ) <section> part of <url> <section> none <section> <user> <user>"
"fix # <number> , doxygen strip path and expose common config <section> - fix # <number> <section> built <allcaps> osal </allcaps> users guide locally and from bundle , no warnings . inspected generated documents <section> none , but osal - common . doxyfile can now be used by other documents to resolve <allcaps> osal </allcaps> references <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"partial # <number> , update cfs - build codeql reusable worfklow target <section> partial # <number> changes tests input to boolean , changes source input for uses , component - path to osal , changes to tests to test , removes makeprep input <section> github actions check : <url> <section> passing workflow <section> ubuntu <number> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"format workflow not running on push to non - main branches <section> the format - check workflow has a restriction to only run on pushes to main . <section> create a new branch , push code changes to it , notice that format - check workflow does not execute . <section> workflow runs on all pushes <section> <url> <section> github actions <section> might be worth leveraging the reusable workflow in cfs < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , refactor doxygen and remove mainpage <section> - fix # <number> <section> built osal users guide and mission documentation , confirmed content <section> none , documentation only <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + cfe doxygen commits + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> - j - lin"
"osal integration candidate : caelum - rc4 + dev4 <section> pr # <number> - fix # <number> , resolve ut uninitialized variable warnings pr # <number> - fix # <number> , add ut_assert to doxygen and fix warnings pr # <number> - fix # <number> , protect if os_fdgetinfo called on socket <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> ( bundle ) <section> none <section> none * * contributor info - all information <allcaps> required </allcaps> for consideration of pull request * <user> <user>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the osal codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , protect if os_fdgetinfo called on socket <section> datagram sockets do not have a name_entry , it is set <allcaps> null </allcaps> . if the user calls os_fdgetinfo ( ) on this type of id , it will pass the first test , so this needs to be checked for non - <allcaps> null </allcaps> . fixes # <number> <section> build and sanity check <allcaps> osal </allcaps> run all tests confirm coverage test is exercising the new check <section> calling os_fdgetinfo on a datagram socket returns an empty string in the path field , it does not segfault . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> implement os_modulegetinfo_impl for <allcaps> rtems </allcaps> <section> a clear and concise description of what the contribution is . - fixes # <number> <section> the es "" query application "" command yields a telemetry packet that contains section information supplied by os_modulegetinfo_impl . compared object section sizes ( . text , . data , . bss ) in the telemetry given by the query app command to section sizes reported by the "" size "" tool in the platform toolchain . checked the disassembly of application objects built in <allcaps> fsw </allcaps> to find symbols in each section ( . text , . data , . bss ) and used the mm application to report the addresses for each . verified that symbol addresses reported were contained in the interval [ addr , addr + size ) for each section . tested with cfs bundle : <url> <url> <section> - behavior change : os_modulegetinfo will report section information for apps in <allcaps> rtems </allcaps> <number> + . es application info packet will contain valid section information for apps in <allcaps> rtems </allcaps> <number> + . <section> - hardware : wildcat processor card ( <allcaps> qemu </allcaps> emulation ) ( gr740 ) - os : <allcaps> rtems </allcaps> <number> via gaisler ' s <allcaps> rtems leon </allcaps> / erc32 <allcaps> gnu </allcaps> cross - compiler system ( <allcaps> rcc </allcaps> ) <number> . <number> - versions : cfs caelum rc4 + this commit + customizations for runtime environment ( <allcaps> psp </allcaps> + build system ) <section> this will only work for <allcaps> rtems </allcaps> <number> + . version <number> was the first version to support dynamic loading of objects via the <allcaps> rtems </allcaps> runtime loader ( <allcaps> rtl </allcaps> ) . <section> eric pollack - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add ut_assert to doxygen and fix warnings <section> - fix # <number> <section> build detailed design , observe osal warnings go away . also built unit tests to confirm parameter name change worked . <section> squash doxygen warnings <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve ut uninitialized variable warnings <section> - fix # <number> <section> built <number> - bit and ran unit tests in valgrind , warnings squashed <section> no more uninit variable warnings <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
missing handler for os_socketaddrgetport_impl causing uninitialized variable ut warnings <section> unit under test call to <code> does not set port . <section> handler should set the port on success ( at minimum ) to avoid uninitialized variables in unit tests <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"select - test failed , non - repeatable <section> first time i recall seeing it on caelum + osal , unfortunately it was a batch run so details not available : <code> <section> investigate , probably needs many runs since it ' s frequently tested and i have not seen it fail . <section> none <section> <allcaps> osal </allcaps> git hash that failed : e3d2f4c1c1e455dc7b5b42a7776451d3a1853c1a , which is a commit past v6 . <number> - rc4 + dev29 <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : caelum + dev2 <section> pr nasa / osal # <number> , search global and local symbol tables pr nasa / osal # <number> , add missing space to utassert_stub_count pr nasa / osal # <number> , add uint8 and uint16 equivalents for utassert_uint32_ macros pr nasa / osal # <number> , correct warnings on gcc11 pr nasa / osal # <number> , set output in os_stat handler pr nasa / osal # <number> , - fix # <number> , reuse codeql , static analysis , format check <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , set output in os_stat handler <section> - fix # <number> - provides consistent default os_stat handler behavior <section> tested with fm that relies on default behavior , ci <section> avoids uninitialized variable risk in unit tests <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , typesafe definition of osal_id_t <section> modifies the osal_id_t typedef to be a non - integer value . the intent is to catch cases where it inappropriately being used as an integer value . this is transparent so long as the osal_id_t typedef and provided check and conversion routines are used . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> and <allcaps> osal </allcaps> with and without osal_omit_deprecated flag <section> when osal_omit_deprecated is enabled ( opt - in ) this will catch misuse of <allcaps> osal </allcaps> ids as integers , or failure to use correct <code> typedef to hold the value . <section> ubuntu <number> <section> <allcaps> osal </allcaps> and <allcaps> cfe </allcaps> should all be compliant , but <allcaps> cfs </allcaps> apps probably are not yet compliant with this . hence why it is "" opt - in "" via osal_omit_deprecated flag , like other similar changes done in the past . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct warnings on gcc11 <section> - fix # <number> these new warnings are detected by the new compiler . they are all places in unit test where an uninitialized value is passed via "" const "" pointer into a unit under test . by definition a "" const "" pointer is always an input . while the warning is pedantically true - should not pass an uninitialized struct as an input - these were all unit tests where the object value is a do not - care value , so it does not matter . but to fix the warning , simply need to initialize a value before making the call . fixes # <number> <section> build and run all tests on <allcaps> gcc </allcaps> <number> ( ubuntu <number> ) <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add uint8 and uint16 equivalents for utassert_uint32_ <comparison> macros <section> - fix # <number> adds uint8 and uint16 equivalents for utassert_uint32_ <comparison> macros . <section> <number> . built according to steps listed in <allcaps> readme </allcaps> <number> . performed tests on each new macro with relevant input to ensure correctness ( for example , passing <number> and <number> + <number> to utassert_uint8_eq and verifying that test passed ) . <section> allows for users to call utassert comparisons on unsigned <number> and <number> - bit values and provides expected wrap - around behavior without users needing to explicitly cast . for example , <code> outputs the following : compare uint8 : <number> ( <number> ) = = <number> + <number> ( <number> ) <section> - hardware : thinkpad t480s - os : pop ! _os <number> <number> - bit <section> n / a <section> n / a <section> kurtis dinelle ( <email> ) student at oregon state university <allcaps> cla </allcaps> already on file ."
"fix # <number> , add missing space to utassert_stub_count <section> - fix # <number> by adding missing space to utassert_stub_count . <section> <number> . built tests according to instructions in <allcaps> readme </allcaps> quick start section . <number> . ran <code> in <code> to verify correct output . <section> example output ( old ) : "" callcountcfe_evs_sendevent ( ) ( <number> ) = = <number> ( <number> ) "" example output ( new ) : "" callcount cfe_evs_sendevent ( ) ( <number> ) = = <number> ( <number> ) "" <section> - hardware : lenovo thinkpad t480s - os : pop ! _os <number> <number> - bit - versions : n / a <section> n / a <section> n / a <section> kurtis dinelle ( <email> ) student at oregon state university"
augment utassert_abort for more descriptive error messages <section> see comments in <url> <section> additional arguments to utassert_abort <section> none <section> none <section> <user>
"osal integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> rename os_xxxtime to os_xxxlocaltime in comments pr # <number> - fix # <number> , vxworks intlib stub aliasing issue pr # <number> - fix # <number> , recognize ifdef __cplusplus pr # <number> - fix # <number> , remove extern in stub prototypes - update generate_stubs . pl pr # <number> - partial # <number> , add typedef for <allcaps> osal </allcaps> status codes - fix # <number> , recognize ifdef __cplusplus - fix # <number> , vxworks intlib stub aliasing issue pr # <number> - fix # <number> , add duplicate check to local unit test <section> <allcaps> osal </allcaps> checks < <url> bundle checks < <url> <section> see prs <section> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , reuse codeql , static analysis , format check <section> fixes # <number> <section> tested on forked repos . <allcaps> osal </allcaps> static analysis reuse : <url> cfs static analysis reuse : <url> <allcaps> osal </allcaps> codeql reuse cfe build : <url> <allcaps> osal </allcaps> codeql reuse <allcaps> osal </allcaps> default : <url> cfs codeql reuse : <url> <allcaps> osal </allcaps> format check reuse : <url> cfs format check : <url> <section> cfs will hold the workflows for codeql , static analysis , and format check . these workflows will be called by all <allcaps> osal </allcaps> to reuse . these workflows will not work until <url> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the workflow simply uses <code> and the full path of the workflow . the cfs workflows , or targeted workflows , must include workflow_call and runs - on as seen below . <code> <section> keep it as is . <section> tested in forked cfs : <url> tested in forked <allcaps> osal </allcaps> : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , format workflow add duplicate check , remove main , fix job name <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . run on all branches for push and pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add duplicate check to local unit test <section> fixes # <number> <section> <url> <section> skip workflows on push for local unit tests if there is a duplicate workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , static analysis add duplicate and remove main push <section> fixes # <number> <section> forked repo , <url> <section> static analysis workflow should run on all branches for both pull requests and push . the duplicate job prevents two instances of the static analysis to run at the same time . pull requests are prioritized . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check and restricted to main push <section> missing duplicate check and restricting to push to main : <url> <section> add duplicate check , remove main restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
local unit test workflow missing duplicate check <section> missing duplicate check : <url> <section> add <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"format check workflow missing duplicate check , restricted to main push , job name does not match <section> no duplicate check , restricting to main and job name does not match : <url> <section> add duplicate check , remove main branch restriction , update name to match action , maybe "" format - check "" ? <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use fstat and fchmod for <allcaps> toctou </allcaps> bug <section> fixes # <number> <section> github actions <section> resolve <allcaps> toctou </allcaps> bug by using fstat and fchmod instead of stat and chmod . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove extern in stub prototypes removed ' extern ' from function prototypes in stub generator script # <number> ."
"fix # <number> , check chmod return <section> - fix # <number> check the return values on the calls to <code> <section> using the ci / id pipeline on github . <section> no expected behavior change <section> - os : ubuntu <number> <section> none <section> none <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url> jh edit : added fix keyword to autolink"
"fix # <number> , check return value for setsockopt <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] resolves # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url>"
"fix # <number> , recognize ifdef __cplusplus <section> add feature to generate_stubs . pl input phase to recognize and skip over <code> blocks . this makes it so it can be used on c headers which are c + + - enabled too . the logic should be fairly easy to extend to other <code> conditionals as needed . fixes # <number> <section> generate stubs for a c header that has c + + - aware extern wrappers in it . <section> stubs for prototypes inside c + + extern "" c "" block are generated successfully . <section> ubuntu <section> tempting to attempt to use gcc proprocessor here ( - e ) to get full evaluation of all preprocessor logic , but this would depend on the target headers and may introduce more problems than it solves . so in the interim this just adds a local check that specifically looks for <code> and filters out everything inside this block . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , vxworks intlib stub aliasing issue <section> use a separate local variable rather than casting to ( void * <wink> . fixes # <number> <section> build with strict aliasing , confirm no warnings <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"os / posix : port of the posix implementation to macos ( take <number> ) <section> this is an improved version of the previous macos - related pr : <url> since <number> , the improvements in the <allcaps> osal </allcaps> ' s build system made it possible to reuse most of the linux / <allcaps> posix </allcaps> layer and reduce the size of the diff to just a few lines plus the addition of several small libraries that are missing on macos . <section> - i am running the <allcaps> osal </allcaps> ' s tests on a macos machine . - there is a separate github action for running this changeset on github actions ' s macos machine . - i do not have a non - trivial cfs simulation with many apps to test the full cfs integration on macos just yet . <section> with this change , it should be possible to run the cfs <allcaps> osal </allcaps> on macos . related nice - to - have and non - blocking issues : - [ ] <url> - [ ] <url> - [ ] <url> - [ ] <url> - [ ] <url> <section> - hardware : mac - os : macos big sur <number> . <number> ( 2 0 g95 ) - versions : <url> + this changeset . <section> i am not sure how much the macos port is relevant to the community . this work still needs discussion ( <number> - <number> trivial - to - medium discussion items ) and i clearly need someone from the cfs team to support this effort . <section> i have left a comment on the <code> file that points to the book where the implementation was adapted from . <section> stanislav pankevich , personal . the individual <allcaps> cla </allcaps> has been signed ."
"osal integration candidate : <number> - <number> - <number> <section> *combines* pr # <number> - fix # <number> , enable symbol api test and <allcaps> mir </allcaps> dump too large pr # <number> - fix # <number> , <allcaps> mir </allcaps> symbol too long or table to long for osloader test pr # <number> - fix # <number> , add bsp - specific configuration flag registry pr # <number> - fix # <number> , add os - specifc socket flag function <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( see cfs bundle checks ) <section> part of <url> <section> none <section> <user> <user>"
"fix # <number> , add os - specifc socket flag function <section> adds the capability for the bsd sockets implementation to use a function provided by the os layer to set the socket flags . this allows vxworks to have an alternative implementation that uses ioctl rather than fcntl to set the flags . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> vxworks will use <code> rather than <code> to set the socket flags <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add bsp - specific configuration flag registry <section> adds a simple <allcaps> bsp api </allcaps> to get / set integer flags for each resource type . all bits are platform - defined , so this can be used to store any arbitrary platform flag . initial use case is for setting task flags on vxworks platforms which require a certain task flag to be set . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> none on the framework build . however this feature can be used internally to get around an issue where some vxworks task flags need to be set only on one specific platform . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> mir </allcaps> symbol too long or table to long for osloader test <section> - fix # <number> makes either symbol too long or table to big error code returns into <allcaps> mir </allcaps> , since it ' s not an actual failure of the test . <section> ran on sp0 and ci <section> <allcaps> mir </allcaps> for symbol table configuration related errors <section> - hardware : sp0 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> osal </allcaps> loader test hard fails if size exceeded <section> hard failure if ut_symtable_size_limit not big enough : <url> <section> <allcaps> mir </allcaps> if symbol table is not large enough <section> could consolidate this and test / symbol - api - test <section> similar issue as fixed in # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> osal </allcaps> loader unit test builds hardcoded <number> modules , test fails if more modules are supported <section> test failure based on hard <number> setting in cmakelist . txt in the osal tree larger os_max_modules is configured : <url> <section> possibly relate to osal_config_max_modules ( + <number> <sad> <url> otherwise at minimum make it configurable , and if so test should <allcaps> tsf </allcaps> with a useful message like increase <allcaps> x <elongated> </allcaps> to match <allcaps> y <elongated> </allcaps> . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , enable symbol api test and <allcaps> mir </allcaps> dump too large <section> - fix # <number> always runs symbol tests now and checks for not implemented . also will report <allcaps> mir </allcaps> for a symbol table that will not fit instead of causing a failure . <section> ran on mcp750 , confirmed pass . ci . <section> symbol test now is not skipped <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"symbol <allcaps> api </allcaps> test uses old os_include_module_loader , ends up skipping tests <section> possibly missed in # <number> conversion to source selection , testsymbolapi depends on the old define which means it has not been getting tested for a while : <url> <section> convert to check for os_err_not_implemented ( applies to os_symbollookup , os_symboltabledump already has it ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove softsleep , as a dead store . <section> a clear and concise description of what the contribution is . - removes softsleep , as it doesnt appear to be used . <section> steps taken to test the contribution : <number> . run through your ci pipeline <section> a clear and concise description of how this contribution will change behavior and level of impact . - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> deleting code <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add typecast to memchr call pr # <number> - fix # <number> , regex update in coverage enforcement to match . <number> <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , regex update in coverage enforcement to match . <number> <section> - fix # <number> updates the regex to always get <number> matches ( was ignoring . <percent> ) so coverage enforcement will work as expected . also simplified the comparison . <section> ran regex offline with various inputs including . <percent> case . <section> ci will work more consistently <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"coverage verification will fail if percentage is a round number <section> <code> will only find three matches for any percentage that ends with <code> , where <number> matches are expected . <section> change the first match to <number> - <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add typecast to memchr call <section> this function is documented as returning <code> , and on some compilers this requires an explicit cast to <code> to avoid a warning . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none <section> ubuntu <section> isolated from draft contribution from <user> in # <number> <section> joseph hickey , vantage systems , inc ."
"draft : qt5 <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] adds qt as an operating system . <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' built on mac using mac ports install of qt <code> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ macbook ] - os : [ qt5 ] - versions : [ ] <section> several things not implemented , unsure how to implement timers / etc . <section> if included , identify any third party code and provide text file of license qt library is linked against . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) you have my info ."
"remove <code> from function prototypes in stub generator script <section> function prototype <code> prefix has no effect , from generator script : <url> <section> remove . <section> none <section> nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add bitmask assert macros <section> osal checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( bundle ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , correct typos in documentation , print statements , and comments <section> fixed various minor text typos in <allcaps> readme </allcaps> docs , comments and a few debug / error message strings . - fix # <number> <section> none ( non - executable code ) . <section> none . code execution is unchanged / unaffected . <section> n / a <section> n / a <section> n / a"
"fix # <number> , add bitmask assert macros <section> add a pair of macros that can confirm a value has bits set or does not have bits set . by using bitmask - aware macros , the logged information can include both the raw / actual value as well as the specific bits being tested . fixes # <number> <section> build and run all tests <section> none here , just adds new macros <section> ubuntu <section> tested by updating the new time clock state checks to use this macro . looks a little something like this in the log : <code> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , disable unit tests in codeql <section> fix # <number> <section> tested on forked repo : <url> <section> disabled unit tests for both codeql workflows . shows less code scanning alerts with it disabled . alerts should only be shown for flight code . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"disable unit tests in codeql <section> do not analyze unit and functional test code for codeql . <section> disable unit tests in the workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> fix # <number> , add test case types similar to na <section> osal ci < <url> cfs bundle ci < <url> <section> see pr <section> ubuntu <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add test case types similar to na <section> add two more test case variants , similar to na , where failure of the test case does not translate to failure of the overall test . the additional cases have different levels of default visibility , and may be handled differently by the end user . that is , some tests may be skipped because they are truly na ( and nothing for the user to do to change that ) and some tests may be skipped because the system was not set up in a way that allowed them to be run ( and the user must fix that and re - run ) . fixes # <number> <section> build and run all tests . also modify <allcaps> cfe </allcaps> test to use new casetype , confirm working as expected . <section> none <section> ubuntu <section> intended to differentiate between the nuances of all tests that are currently marked "" n / a "" . for some cases , its purely informational because the check does not apply , and nothing more needs to be done . for other cases , a test might be skipped because the user did not start the system in a way where the tests could be run , and the user should correct that . lastly , for some cases , the condition was na simply because there was more than one acceptable result for that test case . for the first two , they should remain visible in the log by default , because they add some value to indicate what was ( and was not ) tested . however the first requires no action of the user , and the second does require the user to correct something , so they should be marked differently . the third is only relevant to software developers , it does not add much value to the log , so it can be hidden by default , but can still be seen by increasing the test verbosity to the debug level . <section> joseph hickey , vantage systems , inc ."
add standalone osal builds for <allcaps> rtems </allcaps> in continuous integration <section> the cfs bundle has builds running on <allcaps> rtems </allcaps> . it would be helpful to do a standalone osal build using the same toolchain . <section> port the workflows in the cfs bundle repo to the osal repo and modify for a standalone build - <url> - <url> <section> none <section> see <url> for example of a standalone osal build
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add absolute branch coverage check <section> osal checks < <url> cfs checks < <url> <section> see prs <section> ci - ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"osal integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> add utassert_mir macro pr # <number> - fix # <number> , add generic asserts from <allcaps> cfe </allcaps> coverage testing pr # <number> - fix # <number> , add osapi - shell - stubs . c to <allcaps> osal </allcaps> stub library <section> osal checks < <url> cfs checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , add generic asserts from <allcaps> cfe </allcaps> coverage testing <section> migrates some of the assert extensions that were added for <allcaps> cfe </allcaps> coverage testing to the utassert level , so they can be used in a wider scope of tests , not just <allcaps> cfe </allcaps> coverage . the existing macros ( e . g . utassert_int32_eq ) are updated to use the same facility . all macros are now also a single line and return the boolean pass / fail status , which was a useful feature of the <allcaps> cfe </allcaps> macros . fixes # <number> <section> build and run all tests ( functional + coverage ) and confirm results are normal . <section> no operational change to existing asserts , but formatting of some logs may change a little bit , so it may affect some scripts that are looking for very specific message ( although it did not affect any of my log parsing scripts ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
fix # <number> add utassert_mir macro <section> fixes # <number> added utassert_mir macro to avoid misuse of <code> when using the <allcaps> mir </allcaps> case type <code> <section> <number> . ran cfs unit tests <section> no changes expected . macro utassert_mir is now available for use . <section> ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , add osapi - shell - stubs . c to <allcaps> osal </allcaps> stub library <section> adds the missing file to the library fixes # <number> <section> build and run unit tests <section> dependencies which invoke <code> should now link successfully <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add absolute branch coverage check check for absolute number of missed branches in github workflow instead of checking a percentage branch coverage . ensure that the number of missed branches does not increase from the current <number> missed branches . <section> fixes # <number> . the pr # <number> that is currently in the integration candidate branch has only <number> missed branches in the unit tests . this pr checks that the number of missed branches is <= <number> instead of checking the percentage branch coverage . this puts an absolute limit on the number of missed branches . <section> steps taken to test the contribution : <number> . the local_unit_test workflow will currently fail on any branch that is not the current integration candidate , so i merged this pr into my fork ' s integration candidate branch to see it pass here <url> . <number> . the error output when the coverage is not high enough can be seen here <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - this pr will only change the behavior of the local_unit_test github actions workflow and will fail the test if more than <number> branches are not covered by the unit tests . <section> - github actions runner <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"osal integration candidate : <number> - <number> - <number> # # context part of <url> # # # tests osal checks < <url> cfs checks < <url> # # # authors <user> # # description # # # pr # <number> fix # <number> , add unit test branch coverage"
"enforce branch coverage in workflow ( set limit on uncovered branches ) <section> # <number> gets us down to <number> uncovered branches ( with issues for each ) , need to enforce so this does not slip w / future updates . <section> workflow currently checks for <percent> line coverage : <url> add check of branches , suggesting reading in the branches *( <allcaps> a <elongated> </allcaps> of <allcaps> b <elongated> </allcaps> branches ) and confirming <allcaps> b <elongated> </allcaps> - <allcaps> a <elongated> </allcaps> <= <number> ( suggesting the bash math support to keep things simple ) . <section> minimum % coverage is somewhat weak since it does not really catch if you add more uncovered branches ( as long as you add enough covered ones also ) . hard count check is better . really getting to <percent> is even better , but we are not there yet . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add unit test branch coverage <section> fix # <number> - added branch coverage and minor test updates to use macros ( not full update ) <section> build / run coverage tests and confirm branch coverage ( and success ) full branch coverage except # <number> , # <number> , # <number> : <code> <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # # tests osal < <url> bundle < <url> # # # authors <user> # # description # # # pr # <number> fix # <number> , add independent os_rename functional test parameter checks"
"partial # <number> , add typedef for <allcaps> osal </allcaps> status codes <section> minimal change to add a typedef for <code> , a macro for constants / literals <code> , and an inline function to convert to "" long "" for printing / logging . partial / related to # <number> ( this pr is just for the typedef and conversions , so that <allcaps> cfe </allcaps> / app code can potentially use the type ) <section> build and run <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> this pr is only intended to avoid a chicken / egg scenario with the <code> type . that is , just to make it exist , so other entities can theoretically start using it , even if <allcaps> osal </allcaps> itself does not ( yet ) . <section> joseph hickey , vantage systems , inc ."
"shared module uncovered branch due to run time logic based on compile time config <section> run time logic for compile time config example : <url> full branch coverage of while loop requires both <code> set to <code> and non - <allcaps> null </allcaps> . note by design the build system has a <number> to <number> to <number> relation - code / ut code / test exec , so an extra build would break the pattern . <section> possibilities : - break build pattern and build additional "" special "" test w / o <code> defined - source selection based on compile time config ( or utilize preprocessor ) - add a function to set and / or get the static symbol table pointer - build / run twice from the test procedure . <repeated> once with the definition removed from the unit - test - coverage cmakelists . txt <section> none <section> coverage testing <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unreachable error branch in <code> <section> code checks for error and if so returns , then checks for not error ( always true ) : <url> <section> could be an else , or just remove check . <repeated> ( or test for = = os_success and the else could be the error case ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
stray <code> prototype <section> prototype with no implementation here : <url> macro here : <url> <section> remove stray . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
unreachable branch on unknown fstype in <code> <section> <code> is always true due to memset of filesys to zero in <code> call . nothing else can logically set it otherwise or reason to not set if the other conditions are true . <url> <section> remove dead branch . <section> clear justification for leaving in . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add independent os_rename functional test parameter checks <section> fix # <number> - individual parameter checks for <code> <section> build / run unit tests , passed <section> none , unit test only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<code> unit test does not independently check parameter validity <section> overloaded parameter test : <url> <section> test each individually <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"add <code> functional test for <allcaps> null </allcaps> <code> case <section> <allcaps> api </allcaps> documentation claims <code> parameter for <code> can be null , but this is not functionally tested / confirmed . <section> add a test to confirm implementation meets <allcaps> api </allcaps> description . <section> none . <section> note this case is included in the coverage test . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user> # # description # # # pr # <number> , fix # <number> , timer reconfig tests"
"move test runs out of code ql workflow <section> codeql - cfe - build . yml <url> . tests should be in their own workflow . <url> <section> create new workflow for building and testing osal with a cfs bundle context . <section> move bundle test to the "" local_unit_test """
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests < <url> < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , add range to os_taskdelay checks # # # pr # <number> fix # <number> , return <code> for root task id on <allcaps> rtems </allcaps> # # # pr # <number> fix # <number> , increase ut symbol dump size limit # # # pr # <number> fix # <number> , do not register <allcaps> rtos </allcaps> timer for external sync # # # pr # <number> fix # <number> , avoid task delete during utprintf # # # pr # <number> fix # <number> , add osal prefix to network <allcaps> api </allcaps> group # # # pr # <number> fix # <number> , increase timeout in network - api - test"
"fix # <number> , avoid task delete during utprintf <section> in the osal_core_ut test , the test task was being deleted while it was in the midst of a utprintf call , which left the <allcaps> bsp </allcaps> mutex in a locked state , causing deadlock . using sem_delete_safe attribute avoids task deletion for the mutex holder , and adding a small delay to the test case makes all the messages appear as expected ( accounts for slow serial console on test platform ) . fixes # <number> <section> run osal_core_ut <section> test now passes , does not deadlock <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase timeout in network - api - test <section> the number of asserts being printed was still taking longer than 1 0 0 0 ms on a <number> baud serial link , so increasing the timeout allows tests to pass . fixes # <number> <section> run network - api - test <section> test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not register <allcaps> rtos </allcaps> timer for external sync <section> skip the registration of a timer in vxworks when the assigned_signal is <number> ( this indicates an external sync function is used ) . fixes # <number> <section> run time - base - api - test <section> test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase ut symbol dump size limit <section> for the mcp750 , the symbol table fairly large and requires a considerably larger limit to avoid the os_err_output_too_large limit . this also uses a different name , so that the user can actually see the symbol dump file if they want ( otherwise the next test overwrites the file ) . fixes # <number> <section> run osal_loader_ut <section> symbol table dump test now passes <section> mcp750 / vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , timer reconfig tests <section> the underlying os mechanism that rejects calls to timer apis from timer callbacks does not work on anything except <allcaps> posix </allcaps> . this skips these unit tests on non - <allcaps> posix </allcaps> platforms , and also adds documentation clearly indicating that the <allcaps> api </allcaps> must not be called from a timer context . fixes # <number> <section> run unit tests <section> test now passes because this check is skipped on these platforms <section> mcp750 / vxworks <number> <allcaps> qemu </allcaps> / <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , root task id on <allcaps> rtems </allcaps> <section> ensures that os_gettaskid_impl ( ) returns os_object_id_undefined if called from the root task - as this does not have an <allcaps> osal </allcaps> task id . fixes # <number> <section> run unit tests on <allcaps> rtems </allcaps> <section> tests pass <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add range to os_taskdelay checks <section> to account for potential of imprecise timing / clock sampling when running on a vm , allow for a wider range of time values to pass the test . fixes # <number> <section> build and run tests using <allcaps> qemu </allcaps> <section> test now pass even if the time difference is not exactly the expected range . <section> <allcaps> rtems </allcaps> <number> . <number> under <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> bundle checks < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , implement missing parameter / retcode test permutations"
"<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> , osal - api - guide workflow # # description the osalguide workflow needed an update after nasa / osal # <number> and nasa / osal # <number> first commit : updated the warnings . log location second commit : renames the file . # # tests on github actions"
"remove the ut object limit since original purpose no longer appilcable <section> the ut object validity table was to check against old style passed in id ' s vs the opaque id ' s in current use . this required a limit , which can cause ut failures if it ' s exceeded . <section> remove the ut object validity table logic to eliminate the potential ut failure . <section> none <section> related to # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # tests osal checks < <url> cfs bundle checks < <url> # # context part of <url> # # authors <user> <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , implement coding standard rules in codeql # # # pr # <number> fix # <number> , rename doc to docs # # # pr # <number> fix # <number> , add mutex lock around utassert globals # # # pr # <number> fix # <number> , resolve discrepancies between file <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between filesys <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between idmap <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between select <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between socket <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , const correct os_selectfdisset # # # pr # <number> <allcaps> hotfix </allcaps> : <number> - <number> - <number> , add missing os_select param doc # # # pr # <number> fix # <number> add workflow to build and verify <allcaps> osal api </allcaps> guide # # # pr # <number> fix # <number> , add detail design template # # # pr # <number> fix # <number> , update error codes and documentation # # # pr # <number> fix # <number> , increase ut object limit for testing"
"fix # <number> , increase ut object limit for testing <section> fix # <number> - increases the ut object limit bits from <number> to <number> <section> ci <section> none <section> ci <section> fix for stakeholder <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"increase the number of ut objects allowed to support > <number> <section> right now the 1 2 8 th object fails on creation ( even though the ut code says <number> are supported ) : <url> <section> bump to <number> , since <number> is not unreasonable on a large system . <section> none <section> the use case was for pipes , they hit the <number> limit and doubled , then encountered ut errors . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , ping <user>"
"<allcaps> hotfix </allcaps> : <number> - <number> - <number> , add missing os_select param doc <section> fix usersguide doxygen warning for os_selectsingle and os_selectmultiple msecs input parameter . <section> <section> no doxygen warning <section> <section> see <url> <section> none"
"fix # <number> , update error codes and documentation <section> updates the documentation related to status code test / check , provide description of how to check for any error status in a future - proof manner . also updates the list of error code string conversions to match the current set ( some were missing ) . fixes # <number> <section> build documentation and verify content . build complete <allcaps> fsw </allcaps> and run all unit tests . <section> documentation has better description of status code checking / handling <code> function will work for all currently - defined codes . ( <allcaps> fsw </allcaps> does not actually use this function ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add detail design template <section> this file indicates which input dirs to use for the cfe detail design document . it should be controlled with <allcaps> osal </allcaps> , as this knows the detail of the directory tree . fixes # <number> <section> build cfe detail design document , confirm correct / expected content , with no duplicate "" mainpage "" <section> detail design document has <code> and <code> content , but <allcaps> not </allcaps> the mainpage that is specific for the <allcaps> osal api </allcaps> guide . <section> ubuntu <section> related to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> add workflow to build and verify <allcaps> osal api </allcaps> guide <section> fix # <number> adding a workflow that will build the <allcaps> osal api </allcaps> guide , and check that there are no errors or warnings . currently , the warning - check job always finds warnings . workflow will complete successfully once documentation warnings are fixed . marked as draft since it needs integration - candidate to be merged to main . <section> steps taken to test the contribution : <number> . pushed workflow file . <number> . verified workflow runs as expected . <section> a new workflow will run on every push and pull request . <section> - tested on the github servers where ci actions get to run . ( ubuntu <number> ) <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , implement missing parameter / retcode test permutations <section> another pass through the <allcaps> api </allcaps> to ensure that : <number> . every function parameter marked "" nonnull "" in doxygen has an individual <code> retcode test <number> . every function parameter marked "" nonzero "" in doxygen has an individual <code> retcode test <number> . every function parameter accepting an <code> type has two <code> retcode tests , and that it is tested with <code> and <code> ( which is not zero , but not valid ) . <section> run all unit tests , and run validation script on tests logs to confirm parameters have been exercised and confirmed for each required retcode . <section> missing tests are implemented <section> ubuntu <section> this pr will have each subsystem done as separate commits <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add mutex lock around utassert globals <section> adding a mutex around modifications to globals allows utassert statements to be done from any test thread . fixes # <number> <section> build and run all unit tests , confirm correct operation <section> utassert statements can now be used from any test task without risk of interference <section> ubuntu <section> will require an update to <allcaps> cfe </allcaps> if accepted <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between select <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> select <allcaps> api </allcaps> . this substantially overhauls the select - test to get better coverage of the various features . fixes # <number> <section> build and sanity check , run all unit tests , re - run cross reference script to confirm retcodes are exercised in the unit tests . <section> better coverage of the various select <allcaps> api </allcaps> return codes in the tests . <section> ubuntu <section> this does asserts in sub - tasks ( preexisting condition ) so rather than rewrite i suggest fixing # <number> to make it safer . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , const correct os_selectfdisset <section> this function does not modify its "" set "" argument , therefore it should be qualified as "" const "" . fixes # <number> <section> build and sanity check , run all unit tests <section> none , just const correct <allcaps> api </allcaps> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between socket <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> socket <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , include doxygen targets locally # # # pr # <number> fix # <number> , resolve discrepancies between timer <allcaps> api </allcaps> and unit tests ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timer <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , resolve discrepancies between binsem <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , add missing clock retcode tests # # # pr # <number> fix # <number> , resolve discrepancies between common <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between countsem <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between dir <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between module <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between mutex <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between queue <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between task <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , resolve discrepancies between timebase <allcaps> api </allcaps> and unit tests # # # pr # <number> fix # <number> , check misc <allcaps> api </allcaps> return codes # # # pr # <number> fix # <number> , rename codeql cfe build and add duplicate job # # # pr # <number> fix # <number> , filter only whole words for keyword match # # # pr # <number> fix # <number> , update <allcaps> osal </allcaps> config guide link"
"fix # <number> , resolve discrepancies between filesys <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> filesys <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between file <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> file <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between idmap <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> idmap <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> this does update one return code from the the internal function <code> , changing it from os_err_incorrect_obj_type to os_err_invalid_id . there was one case in os_getresourcename where this status code gets eventually returned to an application caller , and os_err_invalid_id makes it more consistent with other apis in this regard . ( in other modules the idtype is hard coded so it does not affect these , this error is not triggered except for coverage tests ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between timer <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timer <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between timebase <allcaps> api </allcaps> and unit tests <section> ensures correlation between the test cases and documented return values for the <allcaps> osal </allcaps> timebase <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bubdle checks < <url> # # description # # # pr # <number> fix # <number> , add count sem timeout test # # # pr # <number> fix # <number> , defer cancellation when <allcaps> bsp </allcaps> locked removes chance of deadlock by ensuring <code> returns the task id it knows about , regardless of whether the task is pending cancellation or not . defers cancellation of the task while the <allcaps> bsp </allcaps> is locked , ensure it reaches the unlock , then restores the previous cancel state . fixes a bogus debug message about unlocking from the wrong task if the task is pending delete . # # authors <user> <user>"
"fix # <number> , filter only whole words for keyword match <section> in the stub generator script , filter only whole words when ignoring keywords . do not match if the word appears as a substring inside a larger word . fixes # <number> <section> regenerate stubs , and build and run all unit tests . <section> corrects the argument name in os_timebasecreate stub ( only occurrence discovered so far ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
add a functional test for <code> <section> missing functional test of <code> <section> add a test that confirms the handlers are called for the defined events <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , resolve discrepancies between common <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> common <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between dir <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> directory <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between mutex <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> mutex <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between module <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> module <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement coding standard rules in codeql <section> fix # <number> created two configuration files , one for default queries and security queries and another for jpl rules . waiting for <url> to be merged to add these queries in the newly created workflow , codeql - cfe - build . yml . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , resolve discrepancies between countsem <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> countsem <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between binsem <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> binsem <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename codeql cfe build and add duplicate job <section> fixes # <number> rename codeql - build . yml to codeql - cfe - build . yml for clarity of what the workflow does . changed from codeql analysis to codeql cfe build as workflow name . <section> users can differentiate between this workflow and the osal default workflow . <section> skip duplicate actions license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , resolve discrepancies between queue <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> queue <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve discrepancies between task <allcaps> api </allcaps> and unit tests <section> ensures correlation between the unit - tests and documented return values for the <allcaps> osal </allcaps> task <allcaps> api </allcaps> . fixes # <number> <section> build and run unit tests , re - run cross reference script to confirm <section> all documented return values are tested or noted that they cannot be tested in functional test <section> ubuntu <section> joseph hickey , vantage systems , inc ."
add documentation build and confirmation of no warnings to ci <section> should build and confirm no warnings as part of <allcaps> osal ci </allcaps> to catch errors in prs . currently not checked until at the bundle level . <section> add documentation build and no - warning / error verification to <allcaps> osal ci </allcaps> . <section> none <section> pending merge of # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"rename codeql cfe build and add duplicate jobs <section> users may be confused of the two codeql workflows . multiple jobs may run at the same time . <section> make it clear that there is an analysis for osal using the cfe configuration build . rename codeql - build . yml to codeql - cfe - build . yml . rename the workflow from "" codeql analysis "" to "" codeql analysis cfe build "" . <code> add the multiple jobs action so the workflow does not run multiple times . <section> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add coding standard rules in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . <section> testing done on forked repository , arielsadamsnasa / cfe . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . to prove that this workflow will work , i tested a workflow on a forked repository . in the screenshot , the configuration path is changed to the forked repo and tested branch and successfully runs both codeql jobs . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , include doxygen targets locally <section> add the "" doxyfile "" templates and various <allcaps> osal </allcaps> doxygen pages locally under the "" doc / src "" directory . add a cmake script to build the documentation in either a standalone or integrated build environment . fix # <number> <section> build <allcaps> osal </allcaps> "" api guide "" documentation in a standalone build environment , confirm output works and matches what is generated from the <allcaps> cfe </allcaps> build . <section> able to build <allcaps> osal api </allcaps> guide in a standalone environment , independently of <allcaps> cfe </allcaps> build . <section> ubuntu <section> if this is merged , then a logical follow on would be to remove the same templates and dox files from <allcaps> cfe </allcaps> tree and have the <allcaps> cfe </allcaps> documentation call this script to build the <allcaps> osal api </allcaps> guide . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document os_objectidtoarrayindex as public <section> fix # <number> - updates the public nature of os_objectidtoarrayindex and related documentation <section> ci , documentation only <section> none , documentation <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , check misc <allcaps> api </allcaps> return codes <section> correct missing doxygen retvals and other discrepancies between test and documentation note , other tests were ok , but depend on support being enabled and supported by <allcaps> rtos </allcaps> . script will report n / a items ( due to no impl ) as missing . confirmed os_heapgetinfo ( ) is ok on <allcaps> rtems </allcaps> . fixes # <number> <section> run unit tests , revalidate test log against documentation <section> no change to <allcaps> fsw </allcaps> , test / doc only <section> ubuntu <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing clock retcode tests <section> corrects unit test retval discrepancies in clock code note that the success case for os_setlocaltime is tested , but is marked as a <allcaps> mir </allcaps> test case because it requires elevated permission , it is expected to fail when running as a normal user on linux . fixes # <number> <section> run all unit tests , confirm documented return values are checked , and checked return values are documented . <section> no change to <allcaps> fsw </allcaps> , test / doc only <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , defer cancellation when <allcaps> bsp </allcaps> locked <section> resolves two related issues : - os_taskgetid does not return a valid value for tasks where cancellation is pending , but they are still running . this in turn is likely to trigger other ( bogus ) debug checks which invoke os_debug and in turn do console writes . - the console write itself is a cancellation point , which is now done while holding a <allcaps> bsp </allcaps> mutex . if canceled here , then the mutex is not released . solution is in two parts : - os_taskgetid should return the task id it knows about , regardless of whether the task is pending cancellation or not . - defer cancellation of the task while the <allcaps> bsp </allcaps> is locked , ensure it reaches the unlock , then restore the previous cancel state . fixes # <number> <section> run mutex - test repeatedly , ensure no deadlocks <section> no chance of deadlock , and also fixes a bogus debug message about unlocking from the wrong task if the task is pending delete . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add count sem timeout test <section> fixes # <number> adds count semaphore timeout test <section> build and run unit test <section> adds about <number> seconds to unit tests . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"implement <allcaps> jpl </allcaps> rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"unit test status code discrepancies in other public headers <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [x ] ok : os_err_invalid_size - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - timer . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_unavailable file <code> , function <code> : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_internal - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_success - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_internal file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - timebase . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : <section> : this <allcaps> api </allcaps> does not have a "" unit - tests "" program to test these status codes - hence why they are all flagged as being only in doxygen . the "" time - base - api - test "" program does exercise many of them , but is not included in this test run . file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_timer_err_invalid_args file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_state - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - task . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_priority - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_priority - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - sockets . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> <section> : this <allcaps> api </allcaps> does not have a "" unit - tests "" program to test these status codes - hence why they are all flagged as being only in doxygen . the "" network - api - test "" program does exercise many of them , but is not included in this test run . resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - select . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : false - [ ] <allcaps> only in doxy </allcaps> : true <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - queue . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [x ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_queue_invalid_size - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_queue_empty - [x ] ok : os_queue_invalid_size - [x ] ok : os_queue_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_queue_full - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - mutex . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - module . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_not_implemented - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - idmap . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : <section> - test cases and retvals likely need to be added file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_type - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_incorrect_obj_type - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - filesys . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_err_name_too_long - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [x ] ok : os_fs_err_device_not_free - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_drive_not_created - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_fs_err_device_not_free - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_drive_not_created - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [ ] <allcaps> only in doxy </allcaps> : os_err_not_implemented - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_name_not_found - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - file . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_error - [ ] <allcaps> only in test </allcaps> : os_err_no_free_ids - [ ] <allcaps> only in test </allcaps> : os_fs_err_name_too_long - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [ ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error_timeout - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : <number> - [ ] <allcaps> only in doxy </allcaps> : os_error_timeout - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_err_invalid_size - [ ] <allcaps> only in doxy </allcaps> : os_invalid_pointer file <code> , function <code> : <section> - no specific retvals in <allcaps> api </allcaps> , and no checks in test ( possibly need to add ) . file <code> , function <code> : - [x ] ok : os_error - [ ] <allcaps> only in doxy </allcaps> : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_err_invalid_id file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_name_too_long - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [ ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - dir . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_invalid - [x ] <allcaps> only in test </allcaps> : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_err_invalid_id - [x ] ok : os_invalid_pointer file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success file <code> , function <code> : - [x ] ok : os_error - [x ] ok : os_fs_err_path_invalid - [x ] ok : os_fs_err_path_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - countsem . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [ ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [ ] <allcaps> only in doxy </allcaps> : os_invalid_sem_value - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_sem_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [ ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - common . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] ok : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_error - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - clock . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in test </allcaps> : os_success file <code> , function <code> : - [x ] <allcaps> only in doxy </allcaps> : os_invalid_pointer <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"unit test status code discrepancies in osapi - binsem . h <section> the unit tests and <allcaps> api </allcaps> documentation should match , where all status codes in the <allcaps> api </allcaps> documentation are tested in a unit test , and likewise all codes being tested for are documented in the <allcaps> api </allcaps> . <section> resolve the following mismatches : file <code> , function <code> : - [x ] <allcaps> only in test </allcaps> : os_error - [x ] ok : os_err_name_taken - [x ] ok : os_err_name_too_long - [x ] ok : os_err_no_free_ids - [x ] ok : os_invalid_pointer - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_sem_timeout - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] <allcaps> only in doxy </allcaps> : os_sem_failure - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_name_not_found - [x ] ok : os_err_name_too_long - [x ] ok : os_invalid_pointer - [x ] ok : os_success file <code> , function <code> : - [x ] ok : os_err_invalid_id - [x ] ok : os_invalid_pointer - [x ] ok : os_success <section> originally noted in # <number> , split into separate work items . <section> joseph hickey , vantage systems , inc ."
"remove test run from codeql workflow <section> codeql workflow is running unit tests which is confusing . <section> see <url> <section> code ql workflow should only run enough of the build steps to run the codeql analysis <section> keep the tests here , rename the workflow , and run the tests and codeql as separate jobs for parallelization <section> <url> <section> github actions <section> ensure that new codeql workflow in # <number> does not have the "" run tests "" step"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , rename hooks to handlers <allcaps> ccb </allcaps> <number> - <number> - <number> review item . makes filenames better match terms used in implementation . # # # pr # <number> fix # <number> , propagate status code in os_rmdir the status code from the low level implementation needs to be returned from the caller , in case it was not os_success . the status returned from os_rmdir ( ) should now be correct if the implementation failed . # # # pr # <number> fix # <number> , rework "" unit - tests "" to use macros adds details to log file and can be cross referenced back to documentation . updates most of the conditions in the "" unit tests "" to use the support macros whenever possible . the macros display the function being called as well as the return value being checked for and enables that documented return codes are being tested . removes repetition in the test programs . # # # pr # <number> fix # <number> , remove extra newlines in utassert logs if messages ( e . g . from utprintf , etc ) already have a newline , do not add another . extra blank lines in test log are removed . this should preserve extra newlines in the event that the test case was intentionally adding whitespace , by only appending one if it was not there to begin with . # # # pr # <number> fix # <number> , add test for object id inline functions <code> , <code> , <code> , <code> now have tests . # # # pr # <number> , fix # <number> , fixed invalid inputs for os_mkdir changed tests to use valid inputs for all os_mkdir calls . # # # pr # <number> - community contribution ! improves config guide documentation issues referenced in # <number> , # <number> , # <number> # # # pr # <number> fix # <number> , show codeql preview # # authors <user> <user> <user> <user>"
access parameter in os_makedir <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> _originally posted by <user> in <url>
"fix # <number> , remove extra newlines in utassert logs <section> if messages ( e . g . from utprintf , etc ) already have a newline , do not add another . fixes # <number> <section> build and run <allcaps> osal </allcaps> unit tests <section> extra blank lines in test log are removed . <section> ubuntu <number> <section> this should preserve extra newlines in the event that the test case was intentionally adding whitespace , by only appending one if it was _not_ there to begin with . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework "" unit - tests "" to use macros <section> update most of the conditions in the "" unit tests "" to use the support macros whenever possible . the macros display the function being called as well as the return value being checked for , and therefore this makes it so the test log file can be cross referenced back to the documentation to ensure the documented return codes are being tested . as a nice side effect this also removes quite a bit of repetition in the test programs . fixes # <number> <section> build and run all <allcaps> osal </allcaps> unit tests <section> log file produced has much more detail , and can now be cross referenced back to documentation . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( pc686 + qemu ) <section> see gist of complete test output log for "" osal_core_ut "" : <url> dependency note : pr # <number> fixes the os_rmdir test . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , propagate status code in os_rmdir <section> the status code from the low level implementation needs to be returned from the caller , in case it was not os_success . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> the status returned from <code> should now be correct if the implementation failed . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixed invalid inputs for os_mkdir <section> fixes # <number> changed tests to use valid inputs for all os_mkdir calls . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , quiet cppcheck # # describe the contribution fix # <number> , removes - - quiet option so files checked go to stdout # # testing performed ci # # expected behavior changes reports files checked in ci # # system ( s ) tested on github actions ci ( ubuntu <number> ) # # additional context see nasa / cfe # <number>"
"osal integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , configuration guide updates significant update to the configuration guide for the current build system ( cmake ) and the currently provided set of os / <allcaps> bsp </allcaps> layers . many of the examples in this guide referred to items which are now obsolete . # # # pr # <number> fix # <number> , improve documentation of utassert <allcaps> api </allcaps> calls the utassert <allcaps> api </allcaps> documentation was very terse and some references are obsolete / incorrect . this converts to doxygen form and corrects the stale / incorrect references . in particular - utmemset does not exist , but the standard c memset call should be used to fill a memory region with a constant value . # # # pr # <number> fix # <number> , update os_taskcreate doc clarify use of the stack_size parameter , and that it should not be <number> . # # # pr # <number> related to # <number> , ensure consistency between the return values generated by each <allcaps> osal api </allcaps> and the doxygen documentation . fix missing or incorrect explicitly - returned status code in the coverage tests . correct one argument name mismatch in queuecreate where it was prototyped as "" data_size "" but implemented as "" max_size "" . # # authors <user>"
"enable users to confirm that cppcheck workflow is successfull # # description the "" all "" static analysis check suppresses standard output with - - quiet , so can not see that it actually did anything # # solution remove - - quiet # # alternatives none # # additional context see nasa / cfe # <number> and nasa / cfe # <number> for reference"
os_mkdir tests should use valid access settings ( even though not implemented yet ) <section> per note in the <allcaps> api </allcaps> : <url> yet tests do not use sensible values ( examples ) : <url> <url> <section> use appropriate values . <number> is definitely not correct and could lead to confusion . <section> at minimum do not use an incorrect value . <number> is probably least - bad . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , do not require nonblock mode <section> in some versions of vxworks the fcntl f_getfl / f_setfl opcodes do not appear to be implemented , and thus it is not possible to set o_nonblock mode . however , this mode is not necessarily required , it is more of a backup / failsafe . the "" selectable "" flag should not be dependent on whether o_nonblock flag got set . this also adjust some timeouts and adds some delays to improve the reliability of network - api - test on vxworks . the timeouts were only 1 0 ms , and this is much too short as messages are getting written on a <number> baud console ( avg 1 ms / char ) . a single log message can easily take <number> - 6 0 ms alone . fixes # <number> <section> execute network - api - test on supported platforms ( esp . vxworks <number> in particular ) <section> test now passes reliably . <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> this also requires / depends on # <number> for reliable operation . the console mutex is required to ensure that the various information messages from the client / server tasks inside network - api - test do not clobber eachother , but it also helps synchronize them too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add local mutex to <allcaps> bsp </allcaps> console <section> adds a generic mutex facility to the low level <allcaps> bsp </allcaps> . this is mainly for use with low level <allcaps> bsp </allcaps> console output , but could be used for other items that should only be accessed by one task at a time . this needs to be actually implemented in the <allcaps> bsp </allcaps> layer , so it can be used by utassert report outputs ( pass / fail message ) in addition to os_printf ( ) . note that utassert always uses the <allcaps> osal bsp </allcaps> and does its text output via this layer , but it does __not__ necessarily use the full <allcaps> osal </allcaps> with its os_printf / console abstraction . so by implementing the lock in the <allcaps> bsp </allcaps> , it works with all modes of operation . this also converts <code> outputs to use the same console output facility rather than calling <code> directly . the combination of a mutex and all common print outputs ( utassert , os_printf , os_debug ) going through the same path makes the test output on vxworks much more coherent . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> and run all unit tests on native and <allcaps> rtems </allcaps> . also build and run select tests on vxworks to confirm . <section> console output when running utassert - based tests is not garbled , much more coherent and readable . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( <allcaps> qemu </allcaps> ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"add functional test to confirm <code> waits up to the requested amount of time <section> there ' s only <number> checks , one for the os_sem_timeout return and one immediate success case . nothing to confirm the passed in wait value is being honored . <section> add a time check ( maybe as part of count - sem - test ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add test for object id inline functions <section> fixes # <number> adds test for inline object id functions <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , show codeql preview <section> fix # <number> checkout just the osal repository rather than the entire cfs bundle to allow codeql to provide a code preview . code preview is not available when the entire cfs bundle is checked out . the osal itself must be the only repository checked out . since the tests require the cfe repo , they are removed . <section> tested locally on forked repository image <img> tested on this pr . example of code scanning result found here : <url> <section> code preview should be available in the osal repository . <section> tests are not used . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"show codeql preview <section> code preview is not available for code scanning results from codeql . <section> the preview is available when the osal submodule is checked out rather than the cfs bundle . i have not found a way to checkout just the submodule <allcaps> and </allcaps> use the tests . currently , the workflow checks out the cfs bundle . <code> to show the preview , only the osal submodule needs to be checked out : <code> <section> would like to keep the tests , but believe they require the cfs bundle . <section> community support thread : <url> > the reason is that we currently don ’ t look for files across submodules for the preview . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , rename hooks to handlers <section> <allcaps> ccb </allcaps> <number> - <number> - <number> review item . makes filenames better match terms used in implementation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none , only renames files <section> ubuntu <number> <section> also renames terms in the generator script , the "" - - hook - suffix "" option is renamed to "" - - handler - suffix "" , etc . <section> joseph hickey , vantage systems , inc ."
"partial # <number> , scrub return values <section> confirm consistency between the return values generated by each <allcaps> osal api </allcaps> and the doxygen documentation . each explicitly - returned status code should have a corresponding "" retval "" entry in the documentation . also confirms that each explicitly - returned status code has a matching case in the coverage tests that specifically checks for that return value . some were actually missing , where as some were just being reported incorrectly . finally this also corrects one argument name mismatch in queuecreate where it was prototyped as "" data_size "" but implemented as "" max_size "" . related to # <number> ( but more work to do , so should not close yet ) <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , build osalguide documentation and confirmed no warnings <section> none , test and documentation updates only . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , utprintx function fixes infinite loop in <code> . adds the data ' s memory address to output . note , utprintf displays the the file / line of the <code> function , <section> ; it is better to call <code> directly . # # # pr # <number> fix # <number> , add socket shutdown implementation adds <code> <allcaps> api </allcaps> wrapper around <allcaps> bsd </allcaps> ' s socket shutdown ( ) <allcaps> api </allcaps> . this allows a data transfer of a stream socket to be gracefully shut down prior to socket closure . # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user>"
"fix # <number> , configuration guide updates <section> significant update to the configuration guide for the current build system ( cmake ) and the currently provided set of os / <allcaps> bsp </allcaps> layers . many of the examples in this guide referred to items which are now obsolete . however , this does * <allcaps> not </allcaps> * fix references to the applications and in particular the "" tasking example "" as this still may be brought back . fixes # <number> <section> view guide in markdown viewer , confirm commands / pathnames in guide seem to match current version <section> none - documentation only <section> commands in document were validated on linux and <allcaps> rtems </allcaps> where possible <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update os_taskcreate doc <section> clarify use of the stack_size parameter , and that it should not be <number> . fixes # <number> <section> build and sanity check , run all unit tests <section> none , documentation update only <section> ubuntu <number> <section> other items listed in # <number> are fixed by pr # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add socket shutdown implementation <section> adds an os_socketshutdown ( ) wrapper around the <allcaps> bsd </allcaps> socket shutdown ( ) <allcaps> api </allcaps> . this allows a data transfer of a stream socket to be gracefully shut down prior to socket closure . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests the "" network - api - test "" program is enhanced with several more test cases to confirm that the shutdown functionality is working as intended . <section> <code> <allcaps> api </allcaps> added . no effect unless <allcaps> api </allcaps> is used , existing code not changed . <section> ubuntu <number> , <allcaps> rtems </allcaps> <number> <section> this pr depends on pr # <number> , so this is based on the ic right now . <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , update documentation for read / write [ docs ] clarifies that that zero will be returned on <allcaps> eof </allcaps> condition in the <allcaps> api </allcaps> documentation for os_read / write / timedread / timedwrite . in the case of the timed <allcaps> api </allcaps> calls , the <code> status code will be returned if the timeout expired without the handle becoming readable / writable during that time . # # # pr # <number> fix # <number> , add "" handler "" feature to utassert stub <allcaps> api </allcaps> addresses a shortcomings in the ut assert hook functions . namely the assumed return type of int32 which is not always the case . adds the concept of a "" handler "" function to ut assert to replace hard - coded custom logic in ut assert . a handler is the custom logic that exists between the hook function and the return to the stub caller . the handler is directly responsible for setting all outputs . adds a script to auto - generate stub functions that match this pattern . given an <allcaps> api </allcaps> header file , the script extracts the declarations , and generates a source file with stub definitions that rely on a separate handler to deal with the needed outputs . refactors <code> ) into two parts to improve the compatibility with the script method . updates all existing stubs in <allcaps> osal </allcaps> to use the auto - generated stub logic from the script , created directly from the c header . this ensures that stubs will match the <allcaps> fsw </allcaps> implementation . only affects coverage testing with stubs , and should be fully backward compatible with existing tests . # # # pr # <number> < ! - - fix # <number> # <number> # <number> , adds local makefile and bundle / local unit test actions with coverage verification - - > fix # <number> - adds local makefile ( trivial single build sample , can use different build directories for multiple platform ) fix # <number> - adds bundle and local unit test run and coverage verification fix # <number> - added missing line coverage [ continuous - integration ] adds a local osal - specific makefile to help build unit tests . adds a new github workflow that runs the unit tests in both the context of the bundle configuration and the local <allcaps> osal </allcaps> config . verifies <percent> line coverage . # # # pr # <number> fix # <number> , socket accept using incorrect record fixes incorrect token use in <code> . enables the <code> to handle multiple connections that re - use the same acceptor socket between them . # # # pr # <number> fix # <number> , move async console option promotes the <code> option into the shared layer to remove duplicate implementation code and add more coverage testing . adds an osconfig option to allow the user to elect this mode at configuration time . no externally - visible impacts # # context part of nasa / cfs # <number> # # testing <allcaps> osal </allcaps> checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
"fix # <number> , improve documentation of utassert <allcaps> api </allcaps> calls <section> the utassert <allcaps> api </allcaps> documentation was very terse and some references are obsolete / incorrect . this converts to doxygen form and corrects the stale / incorrect references . in particular - utmemset does not exist , but the standard c memset call should be used to fill a memory region with a constant value . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none - documentation only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , utprintx function <section> fix the utprintx ( ) routine such that the loop stops correctly . also improves the output to print the address , not just the data . note if utprintf is used , one sees the file / line of the utprintx function , not the actual test location , so it is better to call ut_bsp_dotext directly so it omits this extraneous info . fixes # <number> <section> temporarily update a test to use utprintx ( ) - - this function was not used in any current tests - - and confirm that the output now works as expected . <section> no infinite loop in utprintx , and also it now includes the memory address of the data , not just the data itself . <section> ubuntu <number> <section> joseph hickey vantage systems , inc ."
"fix # <number> , update documentation for read / write <section> update the <allcaps> api </allcaps> documentation for os_read / write / timedread / timedwrite . clarify that zero will be returned on <allcaps> eof </allcaps> condition , and in the case of the timed <allcaps> api </allcaps> calls , the os_err_timeout status code will be returned if the timeout expired without the handle becoming readable / writable during that time . this is intended behavior such that it allows the caller to differentiate between a handle which is in a state where it cannot read / write any more data ( e . g . at <allcaps> eof </allcaps> , or a pipe / socket with remote end closed ) and a handle which is simply idle or busy . fixes # <number> <section> build and sanity check , run all tests <section> none - documentation update only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , socket accept using incorrect record <section> this improves the network - api - test to do multiple connections , re - using the same acceptor socket between them . as reported in # <number> , the os_socketaccept call was using the incorrect token , using the server / acceptor socket when it should have used the connection socket . the bug overwrote data in the acceptor socket , but it would only cause an issue when the user attempted to use the server socket to accept a second connection , but the tests only performed a single connection . with the improvement to network - api - test to run multiple connections , it now reveals the bug in the test . without the fix , the test failed on the second connection . with the fix to os_socketaccept to use the correct token , the test passes fine again . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests ( particularly network - api - test ) . <section> os_socketaccept ( ) does not clobber the server socket , allows it to be re - used for additional connection ( s ) as intended . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> - changed parameter names to avoid collisions renames <code> as <code> in <code> . renames <code> as <code> in <code> . # # # pr # <number> fix # <number> , shell implementation on posix and rtems deletes the broken <allcaps> rtems </allcaps> <code> file so so <allcaps> osal </allcaps> builds with <code> . <allcaps> rtems </allcaps> will always report <code> . # # context part of < <url> # # testing osal checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
"fix # <number> , add "" handler "" feature to utassert stub <allcaps> api </allcaps> <section> adds the concept of a "" handler "" function to ut assert . a handler is basically the custom logic that exists between the hook function and the return to the stub caller . in current ut stubs , this is hard coded , and it generally comprises setting output parameters and translating return values as needed . this concept adds the basic plumbing to allow the handler to be configured just like a hook function already does . the difference is that the handler is directly responsible for setting all outputs . this also includes a script to auto - generate stub functions that match this pattern . given an <allcaps> api </allcaps> header file , the script extracts the declarations , and generates a source file with stub definitionsthat rely on a separate handler to deal with the needed outputs . lastly , all existing stubs in <allcaps> osal </allcaps> will be updated to use the auto - generated stub logic from the script , created directly from the c header . this ensures that stubs will match the <allcaps> fsw </allcaps> implementation . note - one header in <allcaps> fsw </allcaps> ( <code> ) was broken into two parts , to improve the ability to do this . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests , ensure all tests pass . confirm that unmodified coverage test scripts are passing as - is , and coverage is still <percent> . <section> this change only affects coverage testing with stubs , and should be __fully backward compatible with existing tests__ . once a stub is regenerated via the auto - generator script : - stub is exactly in sync with <allcaps> fsw </allcaps> implementation - any return type handled ( not just <code> ) - all args passed through context - handler can be completely overridden by test case when desired , such that test case can have <percent> control over the stub call . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> the "" handler "" function uses a different hook function prototype than the hook functions do . the latter is kept the same for backward compatibility with existing tests . the intent is to address a few long - standing shortcomings in the design of the hook function . in particular , hook function design assumes / requires that the function returns <code> . while most do , some do not , and this is a major issue if the goal is to completely replace the handler associated with a stub . in this design there is now a dedicated data buffer to hold the return value , which can be of any data type , and a macro that the handler ( or hook ) implementation can use to fill / set that return value . however the framework will automatically populate that buffer from the <code> status code if the hook / handler did not populate it , which was what ~ <percent> of stub functions did in their "" post - hook "" logic . this simplifies things in that those functions do not need any handler at all unless they had other work to do . <section> joseph hickey , vantage systems , inc ."
<allcaps> wip ci </allcaps> fail check i am just checking the continuous integration . this is not a real pull request .
"fix # <number> , move async console option <section> puts the "" async "" option into the shared layer instead of the impl layer . this allows both options to be coverage tested and also allows a bit more of the logic to be common instead of duplicated in the <number> implementations . this also adds back an osconfig option to allow the user to elect this mode at configuration time . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> with <code> set each way confirm coverage test also exercises both runtime paths , regardless of compile time config . confirm ( via debugger on native build ) that when <code> is set false , the extra utility task is <allcaps> not </allcaps> spawned . <section> no externally - visible impacts gets better path coverage on both modes of operation <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> ( <allcaps> qemu </allcaps> ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"convert stub count checks to use utassert_stub_count <section> many stub count checks call <code> directly , utilize <code> for the test and do not print the expected / actual stub count . <section> use the stub . the standard print is more useful . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , allow <allcaps> osal </allcaps> re - initialization fix # <number> , combine initialized and shutdown flags into one replaces the separate "" initialized "" and "" shutdown "" flags with a single state flag . creates a global single source of truth for the <allcaps> osal </allcaps> state . this enables users to run tests and <code> multiple times without a reboot in the middle to reset the state . - multiple invocations of <code> are allowed - subsequent calls can be ignored - deleting of any internal objects that did get created if <code> fails ( this leaves system in same state as when it started ) - allows re - initialization of <allcaps> osal </allcaps> after <code> - may be relevant when running unit tests several times without rebooting . # # # pr # <number> fix # <number> , add os_api_teardown fix # <number> , black box unit tests do not ensure resources are cleaned up between tests adds <code> to complement <code> os_api_init ( ) ` may be invoked again . # # # pr # <number> fix # <number> , rework shell test reworks the shell unit test which was probably not working . note this requires modifying the osal config to enable shell , otherwise test is skipped . # # context part of < <url> # # testing osal checks < <url> bundle checks < <url> # # authors <user>"
<allcaps> osal </allcaps> line coverage missing if using os_debug <section> missing test cases in bsd - sockets accept function . <section> cover branches / lines . <section> none <section> see # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"format codes <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : <allcaps> osal </allcaps> individual <allcaps> cla </allcaps> <url>"
"osal integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , scrub include guards replaces nonstandard header file block comments and include guards . no behavior changes # # # pr # <number> fix # <number> , switch to use clock_realtime removes <code> as the osal colck source since <allcaps> psp </allcaps> no longer needs it . <code> and <code> will work as described . # # # pr # <number> fix # <number> , specify shell name in shelloutputtofile replaces <code> with a specific <code> that can be polled safely and changes its type to a char of <code> length for safety . # # context part of < <url> # # tests osal checks < <url> cfs bundle checks < <url>"
"fix # <number> , eliminate time and access name collisions with vxworks <section> fix # <number> - changed parameter names to avoid collisions <section> build / run unit tests , passed <section> none <section> - hardware : local docker container - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , test teardown cleanup <section> invokes os_api_teardown as a test teardown function for all unit tests . this returns the global state objects to their initial state and therefore allows the test to be re - run / repeated without rebooting . it also ensures that any resources allocated by the test are removed before the test finishes . <section> build and run all unit tests , confirm passing <section> test resources are cleaned up to the extent possible , and set back to initial state . tests can be repeated if desired . <section> ubuntu <number> mcp750 vxworks <number> <section> depends on # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add os_api_teardown <section> this cleans up all <allcaps> osal </allcaps> resources as best as possible , ideally leaving the system in a state where os_api_init ( ) may be invoked again . fixes # <number> fixes # <number> <section> build and run all unit tests , confirm correct behavior test in conjunction with fix for # <number> , confirm test can be run multiple times on vxworks without reboot <section> adds os_api_teardown <allcaps> api </allcaps> to complement os_api_init <section> ubuntu <number> ( native ) mcp750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"duplicated documentation in unit - tests is out of date and does not add anything <section> tests in the unit - tests directory repeat <allcaps> api </allcaps> documentation , leading to possible inconsistencies . example - os_create was removed , this actually tests os_opencreate <url> <section> remove duplicated documentation <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , shell implementation on posix and rtems <section> fix # <number> due to other changes the shell implementation on <allcaps> rtems </allcaps> and <allcaps> posix </allcaps> failed to build under certain configurations . - on <allcaps> posix </allcaps> the check of <code> field was not valid . using the existing <code> function does what is needed here and is much simpler . - on <allcaps> rtems </allcaps> , the shell does not recognize the redirect operators . this was basically cut and pasted from linux / bash shell syntax and probably never worked on <allcaps> rtems </allcaps> , and there was no test to verify . now that "" shell - test "" exists , it confirms that this does not actually work . for now , the broken impl file is simply deleted , and <allcaps> rtems </allcaps> will always use <code> . in a future version , the implementation can be fixed properly . <section> build <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> with shell enabled ( osal_config_include_shell = true ) run "" shell - test "" and confirm behavior on <allcaps> posix </allcaps> ( passes ) and <allcaps> rtems </allcaps> ( skips ) ( note that <allcaps> cfe </allcaps> does not directly use the <allcaps> osal </allcaps> shell function , but apps might ; it is optional ) <section> broken code is removed , so <allcaps> osal </allcaps> builds with <code> on all platforms , but <allcaps> rtems </allcaps> will still result in os_err_not_implemented always . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> <section> i briefly investigated what it would take to fix this on <allcaps> rtems </allcaps> properly . the issue is that the <code> function attaches to a "" device name "" ( typically / dev / console for interactive use ) , not individual input / output file descriptors . so it appears to be a matter of creating a pseudoterminal - type device that "" reads "" from the script and writes to the file . but it also appeared this was an area that changed a fair bit in <allcaps> rtems </allcaps> between <number> and <number> . x release , so any solution would be unlikely to work on both , and this is why i decided its probably not worth pursuing for now . ( a stakeholder who wants the shell to work on <allcaps> rtems </allcaps> can always re - implement ) . but since the existing code in <code> was very broken , it is just removed ( not even useful as a basis for future ; better to use posix or vxworks as basis instead ) . <section> joseph hickey , vantage systems , inc ."
"timer - add - api - test failing intermittently <section> on my virtual machine running ubuntu <number> , the timer - add - api - test fails roughly <percent> of the times i run it . <section> run make test <section> it should pass <percent> of the time . <section> here is the printout from the test [ <allcaps> begin </allcaps> ] <number> testtimeraddapi [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timebasecreate ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timebaseset ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> created rc = <number> id = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> programmed rc = <number> [ <allcaps> info </allcaps> ] timer - add - api - test . c : <number> : starting delay loop . [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> delete rc = <number> . count total = <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - expected ticks = <number> [ <allcaps> fail </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count >= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - timer <number> count <= <number> [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( <number> ) = = os_success [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_err_invalid_id [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_err_name_taken [ <allcaps> pass </allcaps> ] <number> timer - add - api - test . c : <number> - os_timeradd ( ) ( - <number> ) = = os_invalid_pointer [ <allcaps> end </allcaps> ] <number> testtimeraddapi <allcaps> total </allcaps> : : <number> <allcaps> pass </allcaps> : : <number> <allcaps> fail </allcaps> : : <number> <allcaps> mir </allcaps> : : <number> <allcaps> tsf </allcaps> : : <number> <allcaps> ttf </allcaps> : : <number> n / a : : <number> <allcaps> complete </allcaps> : <number> tests segment ( s ) executed <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , allow <allcaps> osal </allcaps> re - initialization <section> replaces the separate "" initialized "" and "" shutdown "" flags with a single state flag . this simplifies things and makes for a single source of truth for the state of <allcaps> osal </allcaps> globally . note this is not strictly necessary , but it will likely be required if the intent is to be able to run tests ( and os_api_init ( ) ) multiple times without a reboot in the middle to reset the state . fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> - multiple invocations of <code> are allowed - subsequent calls can be ignored - deleting of any internal objects that did get created if <code> fails ( this leaves system in same state as when it started ) - allows re - initialization of <allcaps> osal </allcaps> after <code> - may be relevant when running unit tests several times without rebooting . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework shell test <section> the shell may add extra output beyond the intended content , but the shell - test was only looking for exact match . extra output may include whitespace and / or an echo of the command itself . this reworks the shell test to allow for this extra output , as long as the intended string appears in the content of the file it will pass . fixes # <number> <section> build and run the shell test note this requires modifying the osal config to enable shell , otherwise test is skipped . <section> test passes . <section> ubuntu <number> ( native , posix ) mcp750 vworks6 . <number> <section> not clear how this test ever worked . <repeated> maybe different versions of vxworks work differently here . but this approach should ( hopefully ) be a little more agnostic to the platform - specific shell behavior . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , specify shell name in shelloutputtofile <section> rather than using a default name , use a specific name so that it can be polled more safely . fixes # <number> <section> build and run coverage tests also enable shell and run "" shell - test "" on mcp750 <section> no longer using a string pointer which may be invalid . <section> mcp750 , vxworks <number> <section> although this while loop seems to be working ok , the overall "" shell - test "" actually fails on the mcp750 because it looks like the shell does not have an "" echo "" function . this seems to be a separate issue , not sure if / how this test ever worked . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , switch to use clock_realtime <section> the portable clock_gettime implementation had been using clock_monotonic to support its use as a <allcaps> psp </allcaps> timebase for some platforms that used it this way . however with updates on the <allcaps> psp </allcaps> side this is not required anymore . preference should be to use clock_realtime as it better aligns with the described semantics of the <allcaps> osal </allcaps> clock function , and makes for a better default . this can still be easily changed back if the user desires . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> os_getlocaltime ( ) and os_setlocaltime ( ) will work as described . <section> ubuntu <number> <section> this depends on _not_ using the <allcaps> osal </allcaps> clock as a monotonic timebase . nasa / psp # <number> is required to fix this . <section> joseph hickey , vantage systems , inc ."
"add option to build osal with coverage flags so functional test coverage can be reported <section> ideally functional tests should strive for full coverage , with the exception being impossible paths based on the inability to force return codes or other lower level behaviors that can not be triggered when using the "" full stack "" . additional "" coverage "" testing ( utilizing stubs ) is really only necessary to cover this final % where calls need to be stubbed out to force alternate paths . coverage report on functional tests helps for reporting test traceability ( coverage tests do not count for <allcaps> api </allcaps> verification ) , and to easily identify missing functional tests or test cases . it ' s better to strive for coverage w / functional tests first ( higher value tests , checking for correct full - stack behavior ) , then fill in the gaps with targeted coverage tests . <section> add the option to include coverage reporting on <allcaps> osal </allcaps> . currently thinking this could be independent from enable_unit_tests , since it may be useful to build or not build with these flags for higher level analysis ( easily show what parts of <allcaps> osal </allcaps> are exercised by cfe tests , etc ) . <section> debated adding a coverage ( osal - coverage ) target along side the non - coverage target ( osal ) , but who wants twice the compile time ? easy enough to build one or the other depending on need . could just add the ( osal - coverage ) target when unit tests are enabled and always use it with the functional tests . <repeated> debatable . different targets could avoid accidentally linking a coverage - enabled osal . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused script_mode flag <section> fix # <number> , removes the flag defined in tests / cmakelists . txt that is not used anywhere <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove unused script_mode definition <section> the following define no longer does anything : <url> <section> remove <section> none <section> likely <allcaps> obe </allcaps> from transition to the osal / ut_assert <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , scrub include guards <section> apply script to scrub all header file block comments and include guards on <allcaps> osal </allcaps> . fixes # <number> <section> build and sanity check , run all unit tests <section> none , comment and ifdef consistency fixups only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use test function for osal_id_t <section> do not initialize or compare osal_id_t directly to integers , use the provided comparison function . fixes # <number> <section> build and run unit tests <section> system builds and runs again when using a type - safe / non - integer osal_id_t type . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove <allcaps> big </allcaps> / <allcaps> little </allcaps> bit order macros fix # <number> , minor clean up and clarification in comments / naming fix # <number> , finish os - impl - bsd - socket . c coverage testing fix # <number> , better return codes from os_symboltabledump_impl fix # <number> , remove os_taskregister fix # <number> , remove unused script_mode flag fix # <number> , use test function for osal_id_t # # testing performed osal checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes <code> and <code> macros from <code> . these are not needed by <allcaps> osal </allcaps> and cannot handle all cases . application code with endianness dependency that was relying on these symbols may break . users should leverage code in cfe : <code> . see < <url> for more details . # # # pr # <number> applies minor code and documentation cleanup : white space , typos , etc . # # # pr # <number> adds test to get full coverage of vxworks in <code> resulting in full line coverage for <allcaps> osal </allcaps> # # # pr # <number> adds more descriptive return codes if <code> does not do what is expected . adds a new error <code> if the size limit was insufficient . return <code> if an empty file was written - this likely indicates some fundamental issue with the vxworks symbol table . returns <code> if one of the symbol names was too long . improves unit test to check for / verify these responses . # # # pr # <number> removes the unneeded <code> and all references to it in code , tests , and documentation . no impact to behavior , but does affect <allcaps> api </allcaps> and has depenedencies # # # pr # <number> removes unused <code> flag in cmake # # # pr # <number> remove comparison between <code> and <code> to use the provided comparison function , <code> . system builds and runs again when using a type - safe / non - integer osal_id_t type . # # additional context part of nasa / cfs # <number> # # authors <user> <user>"
"fix # <number> , remove os_taskregister <section> the <code> function is no longer needed and has been a no - op since v5 . <number> . this removes the function and all references to it in code , tests , and documentation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to behavior , but does affect <allcaps> api </allcaps> and has depenedencies <section> ubuntu <number> <section> function removal affects <allcaps> api </allcaps> - needs to be merged with nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
<allcaps> hotfix </allcaps> : osal integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle tests < <url> osal tests < <url> <section> see # <number> <section> ubuntu <number> <section> missing part of ic : <number> - <number> - <number> <section> none <section> <user>
trigger for static analysis <number> <section> codeql results not showing up on branch pushed to fork . test pr for static analysis <section> n / a <section> n / a <section> ci <section> for static analysis <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , finish os - impl - bsd - socket . c coverage testing <section> fix # <number> - adds test to get full coverage of os - impl - bsd - socket . c <section> built / run unit tests , pass <section> full line coverage of os - impl - bsd - socket . c for <allcaps> osal </allcaps> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> - example for stubs / hooks / etc"
"fix # <number> , make non - selectable fd an error <section> fix # <number> do not silently ignore a filehandle which was included in the <code> but the "" selectable "" flag is false . instead translate this to the <code> error . <section> run unit tests on native and <allcaps> rtems </allcaps> and make sure all passing <section> passing a filehandle into <code> ( via the os_fdset ) for which the <allcaps> rtos </allcaps> does not implement select ( ) should return the os_err_operation_not_supported error ( again ) <section> ubuntu <number> ( native ) and <allcaps> rtems </allcaps> <number> . <number> ( cross ) <section> this is old behavior but was masked by the fact that os_selectmultiple_impl ( ) actually returned the same error - os_err_operation_not_supported - for an _empty_ set as it did if one passed a non - empty set that had a non - selectable filehandle within it . if the handles passed in did not support select ( ) then the implementation treated it as an empty set . a recent change modified that behavior and gave it a different code if the sets were truly empty vs . being not empty but having a bad fd inside it . however the unit tests were relying specifically on the os_err_operation_not_supported code being generated in order to skip the test cases on <allcaps> rtems </allcaps> . this change basically restores the return code of os_err_operation_not_supported but still keeping a unique code for if / when the sets are passed in completely empty . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check index inside fdset conversions <section> add an extra limit check for the index , as it is possible due to padding that this goes beyond the end of the array . fixes # <number> <section> validate all coverage tests now pass <section> none <section> ubuntu <number> <section> should fix the issue seen in integration candidate # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , minor clean up and clarification in comments / naming <section> fix # <number> , minor cleanup detailed in # <number> identified during code review <section> build / run unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , move copyblock size to a <hashtag> define </hashtag> and add comments fix # <number> , removed rogue while loop fix # <number> , scripted replacement for <hashtag> include </hashtag> < os and <hashtag> include </hashtag> < osc_ matches of < and > with "" fix # <number> , consolidates the duplicated switch in os_socketopen_impl fix # <number> , const correct input pointers fix # <number> , removed network prototypes defined in osapi_sockets . h that are also in osapi_network . h fix # <number> , removes <allcaps> null </allcaps> redefine from common_types . h fix # <number> , add contributing guide fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented fix # <number> , add assert for fd_set_size in relation to osal_set fix # <number> , correct interval calculation in doselect fix # <number> , comments describing select after connect fix # <number> , add check for <allcaps> eagain </allcaps> in addition to <allcaps> eintr </allcaps> fix # <number> , compile time assert for sockaddr size fix # <number> , add shell functional test fix # <number> , check / report fcntl status fix # <number> , better error translation for <allcaps> espipe </allcaps> errno fix # <number> , rename os_u32valuewrapper_t fix # <number> , break up logic in return statement fix # <number> , report timer_gettime error fix # <number> , return moduleinfoget error fix # <number> , remove unreachable test fix # <number> , make module comment same as other services fix # <number> , check index inside fdset conversions fix # <number> , make non - selectable fd an error # # tests osal tests < <url> cfs bundle tests < <url> # # expected behavior changes # # # pr # <number> moves copyblock size to a macro and add comments . defines <code> and adds clear documentation that it could be adjusted for page size , performance , etc . # # # pr # <number> removes while loop # # # pr # <number> replaces all <code> s of <code> and <code> matches with <code> to match coding standard . # # # pr # <number> consolidates the duplicated switch in <code> # # # pr # <number> describe the contribution add <code> to input pointers for <code> and <code> # # # pr # <number> removes network prototypes defined in <code> that are also in <code> # # # pr # <number> removes <code> redefine from <code> # # # pr # <number> adds <code> that points to bundle - level contribution guide # # # pr # <number> reports test cases that "" fail "" as "" not implemented "" with new <code> macro instead of <code> # # # pr # <number> calls to <code> and <code> will fail if an fd within the set is outside the range of the underlying <code> from the c library . # # # pr # <number> fixes calculation used for the relative time interval in the select ( ) call . also adds a ut case that specifically exercises the carryover described . fixes delay when this carry condition is hit # # # pr # <number> documents algorithm that provides application - controlled timeout on the connection initiation . also adds a debug statement if the connect fails for a reason other than <code> . no impact to normal behavior . # # # pr # <number> adds check for <code> if the system fails to allocate kernel - internal resources . # # # pr # <number> adds a <code> to confirm that the size of the abstract buffer for socket addresses is large enough to store any of the enabled address types thereby removing the need for runtime tests . with this change , if <code> is not large enough for the address type , osal will fail to compile . this enforces that the abstract size is large enough for any / all enabled address types , regardless of what is actually used . # # # pr # <number> adds missing functional test for <code> # # # pr # <number> add test for <code> error return of <code> and report <code> . if setting <code> fails , then debug message is printed and blocking mode is used and timeouts will not work as a result . # # # pr # <number> improves error codes when attempting to seek on a pipe / socket . translates the <code> error rather than "" not implemented "" . the <code> errno means that seeking is not supported on the given file handle . # # # pr # <number> renames <code> as <code> to better indicate its purpose . the point is to pass a value through a void * . adds a compile - time assert to check that this is only used to directly pass values which have a size of less than or equal to sizeof ( void <wink> . # # # pr # <number> refactors the return statement for <code> so it is easier to read and adds some informational comments . # # # pr # <number> reports an error if calling <code> after <code> fails . # # # pr # <number> returns <code> status to caller after an error on <code> # # # pr # <number> removes an extraneous / unreachable <code> check and its accompanying debug statement . the only way this check could have been reached would be if the normal unlock process was bypassed such that the underlying os mutex was unlocked but <allcaps> osal </allcaps> state still had it owned by a task . this condition never happens at runtime . # # # pr # <number> updates documentation for <code> # # # pr # <number> adds an extra limit check for the while loop index in <code> , as it is possible due to padding that this goes beyond the end of the array . if <code> was not a multiple of <number> , and some of these "" padding "" bits are set as <number> , these functions will attempt to read entries beyond the end of <code> . # # # pr # <number> restores the return code of <code> while keeping a unique code for if / when the sets are passed in completely empty . passing a filehandle into <code> via the <code> for which the <allcaps> rtos </allcaps> does not implement <code> should return <code> . # # additional context part of < <url> # # authors <user> <user> <user> <user>"
"fix # <number> , better return codes from os_symboltabledump_impl <section> improve the error codes from this function . - introduces a new error <code> if the size limit was insufficient ( instead of <code> ) . - return <code> if an empty file was written - this likely indicates some fundamental issue with the vxworks symbol table . - return <code> if one of the symbol names was too long , ( instead of generic <code> ) . improve unit test to check for / verify these responses . fixes # <number> <section> build and sanity check , run all unit tests , confirm coverage of new cases . <section> better / more descriptive return codes if os_symboltabledump_impl does not do what is expected . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented <section> fixes # <number> create new macro utassert_na to use instead of utprintf to report cases when not implemented <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> this is a redo of # <number> which was closed because it was going to be part of # <number> but that will not be done in the near future so this task is back as its own pull request . <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , check / report fcntl status <section> the fcntl ( ) function is documented as returning - <number> on error , so test for this condition and report errno if so . there is no recourse / handling - this just reports the error . however - failure to set the o_nonblock flag via this method will fall back to blocking mode being used ( timeouts will not work as a result ) . fixes # <number> <section> build and sanity check , run unit tests , check coverage <section> if setting o_nonblock fails , then debug message is printed and blocking mode is used . <section> ubuntu <number> <section> no real recourse in code - this should not fail , but if it does , errno is printed so user can diagnose why it failed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , comments describing select after connect <section> a select ( ) is used after connect ( ) to provide application - controlled timeout on the connection initiation . this just adds some comments to describe why this is done . it also adds a debug statement if the connect fails for a reason other than <code> . fixes # <number> <section> build and sanity test , run unit tests <section> this does add one more os_debug statement for an unexpected error . no impact to normal behavior . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , compile time assert for sockaddr size <section> <allcaps> osal </allcaps> provides an abstract buffer for socket addresses , independent of the underlying implementation . the size of this buffer is configurable by the user via compile - time options . this adds a compiletimeassert to confirm that the size of this abstract buffer is large enough to store any of the enabled address types . this also removes the need for runtime tests . fixes # <number> <section> build and sanity test , run unit tests <section> this change means that the <code> __must__ be configured large enough for all enabled address types . for instance , ipv6 addresses are likely to be larger than ipv4 addresses in the implementation . it is therefore possible to se os_sockaddr_max_len large enough for ipv4 but not large enough for ipv6 . a configuration such as this used to work if the runtime code only used ipv4 addresses . if runtime code used ipv6 address , it would fail at runtime . with this change , a configuration such as this will fail to compile , and enforce that the abstract size is large enough for any / all enabled address types , regardless of what is actually used . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , report timer_gettime error <section> in vxworks the impl calls timer_settime followed by timer_gettime on the same timer to check if rounding occurred . if the second call fails this reports it as an error . note unless there is some sort of os bug this should be impossible to happen as this code only runs after a successful timer_settime . fixes # <number> <section> build and sanity check , run unit tests <section> a failure to call timer_gettime after timer_settime is reported as an error . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , return moduleinfoget error <section> propagate a vxworks error on moduleinfoget ( ) call into os_error return . fixes # <number> <section> build and sanity check , run unit tests <section> error on moduleinfoget ( ) gets returned to caller as os_error status . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , make module comment same as other services <section> in the current implementation , the same patterns apply to modules as the rest of the <allcaps> osal </allcaps> services . fixes # <number> <section> build and run tests <section> none - comment only <section> ubuntu <number> <section> in a previous version there as a special case for <number> modules but this is no longer true , and the comment had become outdated . <section> joseph hickey , vantage systems , inc ."
"a bug in os_taskexit workwith vxworks very sorry to bother you i work with vxwork6 . <number> got an error when task exiting os_unlock_global ( <sad> <number> : <allcaps> error </allcaps> : global <number> released by task 0 xffffffff when owned by task <my_task_id> when exiting a task , in os_taskexit os_objectidfinalizedelete ( os_success , & token ) ; will change final id to <allcaps> undefined </allcaps> in os_objectidfinalizedelete os_objectidtransactionfinish change task_record_active_id to final_id ( i . e <allcaps> undefined </allcaps> ) and then os_unlock_global ( token - > obj_type ) but when os_lock_global ( token - > obj_type ) is called task id is true task id os_unlock_global ( token - > obj_type ) get taskid from task record active id ( i . e <allcaps> undefined </allcaps> ) so produce an error maybe changing os_objectidfinalizedelete ( os_success , & token ) to os_objectidfinalizedelete ( os_error , & token ) help ? very very appreciate your reply"
"fix # <number> , better error translation for <allcaps> espipe </allcaps> errno <section> the <allcaps> espipe </allcaps> errno means that seeking is not supported on the given file handle . translate to the <code> error rather than not implemented as it better indicates the actual condition . fixes # <number> <section> build and sanity check , run tests <section> better error code if attempting to seek on a pipe / socket <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add check for <allcaps> eagain </allcaps> in addition to <allcaps> eintr </allcaps> <section> this is documented as a possible errno from select on some systems , and the call should be repeated in that case . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename os_u32valuewrapper_t <section> the "" u32 "" designation in the name had become confusing because all the members had over time migrated to a separate non - uint32 / dedicated type . the point is to pass a value through a void * so a name change better indicates that purpose . also adds a compile time assert to this intent - this wrapper may only be used to directly pass values which have a size less than or equal to <code> - - if anything is bigger than this it will not work . fixes # <number> <section> build and run all tests , sanity check <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , break up logic in return statement <section> the return statement from os_filesys_findvirtmountpoint ( ) was performing several match operations and was hard to understand . this breaks up the statement so it is easier to read and adds some informational comments . fixes # <number> <section> build and run unit tests <section> none - actual logic is the same . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unreachable test <section> the only way for this test happen would be if somehow the normal unlock process was bypassed , such that the underlying os mutex was unlocked but <allcaps> osal </allcaps> state still had it owned by a task . removing as extraneous / unneeded . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , run unit tests <section> none . this condition never happens at runtime , and only a debug statement if it did . <section> ubuntu <number> <section> as noted , it is not _entirely_ unreachable in all circumstances - if there was some sort of bug that cause the wrong mutex to get released and / or otherwise throw off <allcaps> osal </allcaps> state , this debug message would tell you that it happened . but outside of a bug somewhere , this really should never happen . <repeated> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct interval calculation in doselect <section> when calculating the relative time interval for the select ( ) call , the increment should have been a decrement . this also adds a ut case that specifically exercises the carryover described . fixes # <number> <section> run test case specifically targeting this carry condition , confirm calculation result is correct now ( 4 0 0 ms rather than <number> . 4 s ) <section> no extra delay when this carry condition is hit <section> ubuntu <number> <section> this just fixes the current calculation - but a better fix would be to use the interval logic now in <code> ( this wasn ' t available when this code was initially implemented ) . should do a follow - on issue to look into this for next version . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check against fd_setsize in bsd - select <section> the <code> implementation utilizes its own set size limit that should be checked . fixes # <number> <section> build and run all unit tests , confirm coverage of select is testing new branches / returns . <section> calls to os_selectsingle / os_selectmultiple will fail if an fd within the set is outside the range of the underlying <code> from the c library . <section> ubuntu <number> <section> unfortunately this is a limitation / problem of the <code> <allcaps> api </allcaps> - valid file handles may be effectively un - selectable due simply to the fact that <code> may be lower than the maximum number of open file descriptors . the only alternative is to use <code> instead which uses a different <allcaps> api </allcaps> that does not have this limitation , but has a different issue in that it requires an array of <code> data structures to be allocated somehow . however in practice it is very unlikely to hit the <code> limit because this is ( probably ) much higher than the <code> limit . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove <allcaps> null </allcaps> redefine <section> fix # <number> - removes <allcaps> null </allcaps> redefine from common_types . h note : identified in <allcaps> osal </allcaps> code review and as implemented it was <section> defining <allcaps> null </allcaps> <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove duplicate network prototypes <section> fix # <number> - removed network prototypes defined in <code> that are also in <code> <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , const correct input pointers <section> fix # <number> - const input pointers for os_fdset_convertin_impl and os_objectidtransactionfinish <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code review"
"fix # <number> , consolidate duplicated switch in os_socketopen_impl <section> fix # <number> - consolidates the duplicated switch in os_socketopen_impl <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use quotes for local includes <section> fix # <number> - scripted replacement for <code> and <code> matches of <code> and <code> with <code> <section> build and execute unit tests <section> none , just coding standard <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove rogue while loop in os_deleteallobjects <section> fix # <number> - removed rogue while loop <section> build / run unit tests , passed ci <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , move copyblock size to define <section> fix # <number> - move copyblock size to a <code> and add comments <section> build and run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"avoid collisions in key value generation <section> could be collisions in key value : <url> <section> analyze and fix if needed . add comments if it would help , remove bug label if not a real issue . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code reivew"
"fix constraints / bounds in os_objectidfindnextfree <section> the local_id is constrained by serial , which is constrained by max_id . then serial is further constrained by local_id . seems circular : <url> bounds check ? <url> <section> scrub logic and fix if needed , and / or add comments if they would help . if not in error remove bug label . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <allcaps> osal </allcaps> code review"
social media <url>
"fix # <number> , remove <allcaps> big </allcaps> / <allcaps> little </allcaps> bit order macros <section> the "" common_types . h "" file will no longer provide these as they are not needed by <allcaps> osal </allcaps> and do not / cannot handle all cases . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> application code with endianness dependency that was relying on these symbols may break ( it should be fixed ) . <section> ubuntu <number> <section> needs nasa / cfe # <number> in order to not break the <allcaps> cfe </allcaps> build . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add shell functional test <section> fixes # <number> adds functional test for shell commands <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> override default stub logic <section> this is a new set hook function that allows a test designer to bypass the remaining default stub implementation after the hook is called . test designers can do this as needed , but current tests will be unaffected because it must be set in a test to be used . current tests will never set the override and their expectations of the stub code running after the hook are still valid . stubs will need updated to make the check for the override , but that is all that will need to change in them . <section> i have written <number> unit type tests to show that the behavior without the override set continues to be the same . each of these tests is doubled with a control test , for a total of <number> tests . the tests are run with no changes , with cfs commit 5 ca472a and using my working version of cfs_cf ( unit - test - cf - <number> ) , this shows that the results of each pair of tests are the same ; which is the expectation as they are duplicates . the repo for cfs_cf is given the new ut_sethookoverridestubfunction instead of ut_sethookfunction in <number> of the tests with each duplicate test left untouched as the control test . a build is attempted showing that the function does not exist . the repo , osal , is updated with the changes implementing the override and the repo , cfe , gets a two stubs updated to allow the bypass ( cfe_msg_getsize , cfe_msg_getmsgid ) . after a successful full rebuild , the <number> tests are run again . the results confirm the changes have provided the desired behavior . while the control tests all still receive the same results as the no updates test run , all of the override tests have their expected changes . details of the specific tests : <number> test_getsize_returns_1 & test_getsize_returns_1_control - initial testing : both receive <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , no data buffer set - override control : receives <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , no data buffer set - override updated : no <allcaps> tsf </allcaps> , no extra pass = = no stub code after hook - as expected override enabled , no data buffer set <number> test_getsize_wutsdb_returns_1 & test_getsize_wutsdb_returns_1_control - initial testing : both receive extra <allcaps> pass </allcaps> - as expected , forced return value >= <number> , yes data buffer set - override control : receive extra <allcaps> pass </allcaps> - as expected , forced return value >= <number> , yes data buffer set - override updated : no <allcaps> tsf </allcaps> , no extra pass = = no stub code after hook - as expected override enabled , yes data buffer set <number> test_getsize_returns_0 & test_getsize_returns_0_control - for brevity , these results are the same as <number> , i used <number> , <number> , - <number> in my tests because it is the cross over point , >= <number> <number> test_getsize_wutsdb_returns_0 & test_getsize_wutsdb_returns_0_control - same as <number> <number> test_getsize_returns_neg1 & test_getsize_returns_neg1_control <number> test_getsize_wutsdb_returns_neg1 & test_getsize_wutsdb_returns_neg1_control - all grouped together because all are same , no <allcaps> tsf </allcaps> , no extra <allcaps> pass </allcaps> , forced return < <number> , code does not run anyway <number> test_getsize_otherkey & test_getsize_otherkey_control - initial testing : both receive <number> <allcaps> tsf </allcaps> - as expected , forced return value >= <number> , <number> to cfe_msg_getsize , <number> to cfe_msg_getmsgid - override control : same as initial testing - as expected - override updated : <number> <allcaps> tsf </allcaps> , no extra <allcaps> pass </allcaps> - as expected , both cfe_msg_getsize overridden , but cfe_msg_getmsgid is not overrideexperiment . txt <url> do - no - harm . txt <url> <section> test designers will have the option to use ut_sethookoverridestubfunction instead of ut_sethookfunction . when this is selected any stub behavior that appears after the hook function is called can be bypassed ; as long as the stub checks for the override and allows it . no other behavior will be changed , as it was a requirement that the change have no impact to current operations . <section> - pc - <allcaps> rhel </allcaps> <number> - cfs commit <url> - cfs_cf unit - test - cf - <number> branch <section> the override control tests show there is no behavioral changes unless the new override function is used . the override updated tests show that the desired outcome is achieved in each instance . <section> alan gibson <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <number>"
integration candidate : <number> - <number> - <number> <section> pr # <number> <section> steps taken to test the contribution : ci <section> none <section> ci <section> none <section> none <section> <user>
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> - initializes the file descriptor ( output parameter ) for all cases in os_opencreate fix # <number> - adds all the currently possible source files for <code> to coverage statistics and adds coverage tests fix # <number> , restrict permissions on file create fix # <number> , change the comment style fix # <number> , <allcaps> osal </allcaps> should have a "" os_getversionstring ( ) "" function <section> see < <url> <section> pr # <number> - avoids various "" possible uninitialized variable "" warnings for routines that utilize this <allcaps> api </allcaps> . pr # <number> - renames <code> structures to <code> to deconflict from structure name in <code> . adds <code> to <code> compilation . renames <code> to <code> . coverage now includes all currently possible files in vxworks build pr # <number> - resolves codeql security warning by restricting permissions on file create . pr # <number> - changes comments using "" cpp "" comment style to "" c "" style pr # <number> - adds _new_ accessor functions apis to get version strings and return the values of string macros defined in <code> . <number> . the "" simple "" version currently <code> macro - this is the semantic version without any extra detail . this is returned by <code> . <number> . the "" descriptive "" version in <code> macro - this has extra detail like the most recent official release . this is returned by <code> . <number> . the release code name , now returned by <code> . these functions are the preferred way to get the <allcaps> osal </allcaps> version string , from now on users should avoid using the macro definitions as it is evaluated at <allcaps> osal </allcaps> library compile time , rather than application compile time , and thus will remain correct in the event that <allcaps> osal </allcaps> is relinked without recompiling the application . adds <code> to implement these <number> calls and associated coverage test . this allows the version . c file to be auto - generated in the future . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , initialize file descriptor in os_opencreate <section> fix # <number> - initializes the file descriptor ( output parameter ) for all cases in os_opencreate avoids various "" possible uninitialized variable "" warnings for routines that utilize this <allcaps> api </allcaps> . <section> build and execute unit tests , passed <section> avoids static analysis warning , output never unset . <section> - hardware : cfs lab <number> - os : centos <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ut stubs / support such that user registered hook / return value override / etc skips the rest of the default stub logic <section> some logic implemented in stubs after the hook call is dependent on a status of os_success or positive , which is overly restrictive for a stub user that wants full control stub behavior ( ability to return a positive and explicitly control implementation ) <section> provide a mechanism to skip stub logic if user has registered an "" override "" action . <section> none <section> user requested <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> <user>"
"finish adding line coverage to portable os - impl - bsd - sockets . c <section> # <number> added os - impl - bsd - sockets . c to the vxworks coverage statistics , but not full coverage <section> finish the coveragetest - bsd - sockets . c to get full line coverage of portable / os - impl - bsd - sockets . c <section> none <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> and # <number> , tests fail when no network fix # <number> , ut stub match macro behavior fix # <number> , remove redundant logic fix # <number> , simplify name truncation in os_createsocketname fix # <number> , change global vars to not be hidden by local vars . fix # <number> , remove deprecated elements fix # <number> , ut_stub_checkforcefail - > ut_stub_checkdefaultreturnvalue <section> see < <url> <section> pr # <number> - makes tests skip after getting their first not implemented error . pr # <number> - updates stub helpers to match the behavior of calling the default implementation stub macro ( <allcaps> null va </allcaps> list ) pr # <number> - removes redundant logic and assignment to fix static analysis warnings pr # <number> - truncates at the end of the logic flow for socket name as opposed to possibly <number> different locations . fixes static analysis warning . pr # <number> - renames <code> in unit tests to <code> to avoid conflicts pr # <number> - removes all deprecated elements pr # <number> - no behavior change . renames <code> to <code> , also only sets <code> if not <code> ( can pass in <allcaps> null </allcaps> value does not matter ) <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , fix comment style <section> fixes # <number> change the comment style <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , restrict permissions on file create <section> fixes # <number> adds restriction check to file open . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add uncovered vxworks source files to coverage statistics <section> fix # <number> - adds all the currently possible source files for vxworks to coverage statistics and adds coverage tests - renamed sockaddr * structures to deconflict from structure name in os - impl - bsd - sockets . c to make stubbing out the os structures easier . - compiling os - impl - bsd - sockets . c in coverage test with os_network_supports_ipv6 to cover that option also - renamed bsd - select - stubs . c to sys - select - stubs . c since it ' s really stubbing sys / select . h not the bsd implementation of select <section> build and execute unit tests , passed <section> none , but coverage now includes all currently possible files in vxworks build <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> not full coverage yet on os - impl - bsd - sockets . c ( plan to keep improving prior to <allcaps> ccb </allcaps> ) also will squash <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add accessor functions for version strings <section> adds <number> simple <allcaps> api </allcaps> calls : const char * os_getversion ( void ) ; const char * os_getversioncodename ( void ) ; const char * os_getversiondescription ( void ) ; these directly return the values of string macros defined in <code> . the accessor function should be the preferred way to get the <allcaps> osal </allcaps> version string ( vs . using macro directly ) as it is evaluated at <allcaps> osal </allcaps> library compile time , rather than application compile time , and thus will remain correct in the event that <allcaps> osal </allcaps> is relinked without recompiling the application . fixes # <number> <section> build and run all unit tests , sanity check <allcaps> cfe </allcaps> . <section> this adds _new_ apis to get version strings - does not change anything existing within <allcaps> osal </allcaps> . <section> ubuntu <number> <section> looking at the existing macros i determined we really needed <number> functions for version info : <number> . there is the "" simple "" version currently in <code> macro - this is the semantic version without any extra detail . this is returned by <code> . <number> . there is the "" descriptive "" version currently in <code> macro - this has extra detail like the most recent official release . this is returned by <code> . <number> . finally the release code name , which might be useful to obtain separately / in isolation from the rest of the details . <repeated> i separated this from the <code> macro and this is returned by <code> . i resisted the temptation to simply toss these into <code> and instead added a new / separate source file called <code> to implement these <number> calls . in turn this meant a new coverage test needed to be added too ( since the pattern in <allcaps> osal </allcaps> is one coverage test per file unit ) . putting this in a separate source file is better as it maintains the pattern / relationship between . c and . h files , and it also allows the version . c file to be auto - generated at some point if we decide to go that route in the future . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , ut_stub_checkforcefail - > ut_stub_checkdefaultreturnvalue <section> fix # <number> - renames ut_stub_checkforcefail to ut_stub_checkdefaultreturnvalue , also only sets value if not <allcaps> null </allcaps> ( can pass in <allcaps> null </allcaps> value does not matter ) <section> build and execute unit tests ( with corresponding nasa / cfe # <number> ) <section> none , name change <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + nasa / cfe # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removes all deprecated elements <section> build and execute unit tests , passes . <section> none for compiles with omit_deprecated = true <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove redundant logic <section> fix # <number> - removes redundant logic ( static analysis warnings ) <section> build and execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify name truncation in os_createsocketname <section> fix # <number> - just truncating at the end for socket name ( not possibly <number> different locations ) <section> built and executed unit tests , passed <section> will just truncate socket name at the end <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> note coverage test is not doing full branch coverage , still getting full line coverage . branch coverage is an existing issue . <section> none <section> jacob hageman - <allcaps> nasa </allcaps>"
"fix # <number> , utilize utassert_casetype_na to report os_err_not_implemented <section> ( would have fixed # <number> ) use utassert_casetype_na instead of utprintf to report cases when not implemented <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , ut stub match macro behavior <section> fix # <number> - updates stub helpers to match the behavior of calling the default implementation stub macro ( <allcaps> null </allcaps> va list ) <section> build / execute unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> and # <number> , tests fail when no network <section> fixes # <number> fixes # <number> made the tests skip after getting their first not implemented error . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , cast args to printf in queue - test <section> using <code> conversion requires an <code> arg , not <code> ( it matches on some platforms , not on others ) . fixes # <number> <section> build and run tests on <allcaps> rtems </allcaps> <number> . <number> . <section> no more format mismatch warning / error . <section> <allcaps> rtems </allcaps> <number> . <number> <allcaps> qemu </allcaps> target on ubuntu <number> build host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , length - limited string length checks <section> create a wrapper around <code> that mimics the non - c99 function <code> which is defined in <allcaps> posix </allcaps> - <number> . use this instead of <code> whenever the string being checked either originates in or will be copied into a fixed - length array buffer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests on both native and <allcaps> rtems </allcaps> <section> no behavior changes except if a bug causes strings to be unterminated . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> ( qemu ) <section> worth noting that in most cases this was testing the length of a string in the internal <allcaps> osal </allcaps> table entry , which was already length - checked when created . so this check is somewhat redundant , the only way this could catch something is if there is memory corruption of some sort . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , null terminate when using strncpy <section> fix # <number> - fixed a couple missing null terminations and applied the general pattern ( sizeof where it works ) <section> build and execute unit tests <section> avoid missing null termination issues , no longer truncating filename in os_moduleinfo ( src / os / shared / src / osapi - module . c ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add check of semaphore to avoid unreachable code in posix os_binsemcreate_impl <section> fix # <number> - adds a check to send the semaphore to avoid unreachable code , basically a non - op placeholder to avoid refactoring unreachable code which would make it less future - proof <section> build and execute unit tests , passed <section> none , avoids static analysis warning and uncoverable code <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> eventually when coverage is added to posix this will help meet the <percent> goal <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unreachable code in os_socketopen_impl for <allcaps> bsd </allcaps> socket <section> fix # <number> , just simplifies switch statements based on previous checks . can always be expanded again if additional cases are implemented . <section> build and execute unit tests , passed <section> no impact to behavior <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> static analysis warning fix <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update os - impl - no - symtab . c to match apis <section> fix # <number> - updates os - impl - no - symtab . c to match latest apis <section> builds . <section> now can build without dynamic loader ( osal_config_include_dynamic_loader <allcaps> false </allcaps> ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update os - impl - no - sockets . c to match apis <section> fix # <number> - updates os - impl - no - sockets . c to match latest apis <section> builds . <section> now can build without network ( osal_config_include_network <allcaps> false </allcaps> ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , change global vars to not be hidden by local vars . <section> fixes # <number> rename global timer_id to local_timer_id <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , return status from os_consoleapi_init <section> fix # <number> - now returning status from os_consoleapi_init so debug warnings will get reported correctly on errors <section> build and executed unit tests , passed ( note the os_consoleapi_init test does not check status ) <section> will send debug message on error <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> see # <number> to add full branch coverage to unit tests w / return checking <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"implement <percent> branch coverage with return verification <section> see os_consoleapi_init test , called once with no return checking . <repeated> does not meet expectations for coverage ( current minimum goal is all lines , all branches ) . note future standards may require mc / dc . <url> <section> add full branch coverage to unit tests <section> add mc / dc coverage to unit tests <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"consolidate around single base set of unit test apis ( can extend , but should be based on a consistent set ) <section> i realize we have discussed this before , but our unit tests are all over the place . <section> we should implement gold - standard patterns , and drive the rest of the system towards that goal as we update unit tests . really the <allcaps> assert </allcaps> * macros at this point seem like the most informative / standard set but they are not available to <allcaps> osal </allcaps> . update the ut_assert macros or add ones that match this pattern . <section> none <section> developers have added all sorts of non - standard debug statements when if we just used the informative macros the output would be standardized ( see # <number> ) <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean commented out code <section> fix # <number> - cleans commented out code ( all from test code ) <section> build / execute unit test , passes <section> none , just avoids static analysis warnings <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> would really benefit from <allcaps> assert </allcaps> macro in cfe . <repeated> maybe consider moving / consolidating these general macros ? almost all the debug code that was commented out would be better replaced by <allcaps> assert </allcaps> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize locals flagged in static analysis <section> fix # <number> , simply adds initialization where flagged by static analysis as possibly uninitialized <section> build and run unit tests <section> no functional change to non - test code , avoids returning uninitialized values from stubs . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , terminate ut macro variadic lists <section> fix # <number> - terminates the variadic lists with <allcaps> null </allcaps> in the unit test macros <section> build and execute unit tests , pass <section> avoids codeql warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , static allocation of dummyvec in osc_inum_to_ivec stub <section> fix # <number> , declares dummyvec as static to avoid warning ( and returning stack allocated memory ) when returning vectbl . <section> build and execute unit tests , passed . <section> bug in stub fixed ( could have been issues if return value used ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle + this commit <section> codeql warning resolution <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds osal , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , make sure all pointers are checked for null fix # <number> , remove null checks from internal methods . fix # <number> , bring <allcaps> osal </allcaps> code coverage back up to <percent> fix # <number> , add null pointer check . fix # <number> , add workflow timeout and format check fix # <number> , static allocation of dummyvec in osc_inum_to_ivec stub fix # <number> , initialize locals flagged in static analysis fix # <number> , clean commented out code fix # <number> , resolve coercion alters value warnings fix # <number> , return status from os_consoleapi_init fix # <number> , update os - impl - no - symtab . c to match apis fix # <number> , remove unreachable code in os_socketopen_impl for <allcaps> bsd </allcaps> socket fix # <number> , terminate ut macro variadic lists fix # <number> , add check of semaphore to avoid unreachable code in posix fix # <number> , length - limited string length checks fix # <number> , cast args to printf in queue - test fix # <number> , add codeql analysis to workflow fix # <number> , null terminate when using strncpy fix # <number> , apply standard formatting <section> see <url> <section> pr # <number> - adds test cases for <code> , <code> , and others to get <percent> line and function coverage on vxworks and shared / portable layers . pr # <number> - ensures apis check for <code> inputs or have documentation stating that a null value is allowed . pr # <number> - adds timeout to static analysis check and adds format check . removes old . travis . yml and updates badges in readme . pr # <number> - adds code ql analysis on push to main and pull requests ( to main ) pr # <number> - cleans commented - out code in tests to address static analysis warnings pr # <number> - initializes local variables to avoid returning uninitialized values from stubs and address static - analysis findings pr # <number> - replaces two local return codes defined as <code> with <code> to resolve static - analysis warnings pr # <number> - simplifies switch statements based on previous checks . removes unreachable , dead code to resolve static - analysis warnings pr # <number> - terminates unit test macros variadic lists with <code> to address <allcaps> cwe </allcaps> - <number> codeql warning pr # <number> - adds a check to send the semaphore to avoid unreachable code pr # <number> - adds a status return to <code> so debug warnings will get reported correctly on errors . pr # <number> - declares <code> as static to avoid warning and returning stack allocated memory when returning <code> in <code> stub pr # <number> - updates types in <code> to match latest apis pr # <number> - updates types in <code> to match latest apis pr # <number> - fixes missing <code> terminations and applies the standard "" sizeof "" pattern where appropriate . no longer truncates filename in <code> . pr # <number> - fixes <code> conversion in <allcaps> rtems </allcaps> so to address build warning pr # <number> - create a wrapper around <code> that mimics the non - c99 function <code> defined in <allcaps> posix </allcaps> - <number> . use this instead of <code> <code> clang - format ` <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , apply standard formatting <section> fix # <number> - applies standard formatting ( again ) , format check should eliminate need for huge sets of changes like this since we should maintain continuous compliance . <section> na - whitespace only . <section> will pass # <number> <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add workflow timeout and format check <section> fix # <number> , adds timeout to static analysis check and adds format check . removes old . travis . yml and updates badges in readme . <section> ci <section> timeout and format check <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add workflow timeouts and format check <section> - no timeout in workflow ( default is <number> minutes ) could consume allocations - missing format check - remove old travis configuration - update badges <section> add timeout and format check <section> none <section> similar to transition in nasa / cfs and nasa / <allcaps> psp </allcaps> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , bring <allcaps> osal </allcaps> code coverage back up to <percent> <section> adds test cases where necessary to get <percent> line coverage on vxworks implementation + shared / portable layers . fixes # <number> <section> build <allcaps> cfe </allcaps> with unit tests run all unit tests and check coverage report ( <allcaps> fsw </allcaps> not affected ) <section> no impact to <allcaps> osal </allcaps> implementation - only affects coverage tests . coverage testing is now back at <percent> functions + <percent> lines . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , add utdebug message from os_printf stub fix # <number> , resolve typos in unit test assert or statements fix # <number> , document nested tests not supported fix # <number> , remove ut_checkforopensockets fix # <number> , add mqueue functional test fix # <number> , readd extern c in osapi . h to support c + + use fix # <number> , display message when not implemented error occurs fix # <number> , add test teardown failure to test summary fix # <number> , format printf correctly fix # <number> , change file create to use read write fix # <number> , add additional casts fix # <number> , create security policy fix # <number> , update os_time_t definition to <number> ticks fix # <number> , deprecate os_fsblocksfree and os_fsbytesfree fix # <number> , terminate string in testreadwritelseek fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , update ut_setdefaultreturnvalue comments fix # <number> , mqueue test uses sequence of numbers fix # <number> , install modules and clean up files for unit tests <section> see <url> <section> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , make sure all pointers are checked for null <section> fixes # <number> went through all the api ' s and made sure all pointers have a null check , or a comment stating that it can be null . fixes # <number> <section> build and run unit test <section> none <section> ubuntu <number> <section> <number> to do left in here that will be fixed by # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , install modules and clean up files for unit tests <section> fix # <number> - installs the modules used in unit testing and added removal of files where they were left - over after tests completed <section> built and ran unit tests ( also installed and ran osal_loader_ut from build / exe / * directory ) . confirmed no files were left over in / dev / shm <section> ut ' s work and clean up files <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , terminate string in testreadwritelseek <section> fix # <number> , terminate string in testreadwritelseek <section> initialized the character arrays to known values , observed missing termination in report , fixed w / this comment and observed the garbage no longer being reported . <section> no impact to main code , ut only ( and just the report , test passes either way ) . <section> - cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecate os_fsblocksfree and os_fsbytesfree <section> deprecates the <code> and <code> functions because the return value is inadequate for larger file systems . users should call os_filesysstatvolume ( ) and read the respective output members of the structure as indicated . fixes # <number> <section> build <allcaps> cfe </allcaps> and unit test with both omit_deprecated as true and false <section> any calls to these functions will become an error if building with <code> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , read extern c in osapi . h to support c + + use <section> fix # <number> , readd extern c in osapi . h to support c + + use <section> build and unit test , passes . <user> - could you test in c + + context and confirm this resolves your issue ? <section> works to include header in c + + again , no other functional change <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve subtasks not ending on time <section> fix # <number> removed the second semaphore that was trying to make sure the subtasks finish closing and instead just forcibly close them from the main task . <section> ran the select test <number> times on my computer with no fails . <section> test should not fail or hang <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove ut_checkforopensockets <section> fix # <number> - removes ut_checkforopensockets which was an old hack to check if unit tests cleaned up sockets . no longer applicable since the ut framework resets the state for each unit test . <section> built and ran unit tests with nasa / cfe # <number> <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + nasa / cfe # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove ut_checkforopensockets <section> see also nasa / cfe # <number> , was used to check that unit tests closed sockets but is no longer applicable . <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"test case reporting of not - implemented functionality not uniform <section> various messages in the unit tests are used to report <allcaps> api </allcaps> ' s that are not implemented , and it ' s not trivial to get a list : <url> <url> <section> utilize utassert_casetype_na to report all os_err_not_implemented returns . also useful to know if it ' s the <allcaps> api </allcaps> or an option that is specifically being tested . <section> macro <section> see links above <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , document nested tests not supported <section> fix # <number> - adds documentation to the uttest_add <allcaps> api </allcaps> that nesting ( uttest_add from within an added test ) silently fails . <section> none , documentation only . <section> none <section> n / a <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , use iterators instead of for loops fix # <number> , implement separate lock / unlock key fix # <number> , implement exclusive / reserved lock fix # <number> , make os_taskdelete sync fix # <number> , unit test fix # <number> , use <allcaps> posix </allcaps> dir implementation on v fix # <number> , improve fs_based mounts on fix # <number> , chmod error h fix # <number> , order of operations for delete all fix # <number> , add pointer parameter checks fix # <number> , add os_filesyssta fix # <number> , add pointer check fix # <number> , resolve cast - align error in vxworks os_taskget fix # <number> , update <allcaps> osal </allcaps> code to use time ac fix # <number> , check time conversions in coverage test fix # <number> , remove alignment macros fix # <number> , add "" assemble "" routines for milli / mi fix # <number> change uint32 to size_t fix # <number> , resolve subtasks not ending on time <section> see < <url> <section> pr # <number> - address issues with <allcaps> osal </allcaps> global table management : - use iterators whenever possible - use an unlock key rather than task id so os_taskexit ( ) does not trigger a warning - general cleanup of lock / unlock impl and remove redundant logic - unlock global tables during create / delete - keep threads "" attached "" in <allcaps> posix </allcaps> , so they can be joined when deleted . - no longer triggers warning with os_taskexit ( ) on vxworks ( see # <number> ) - <code> on <allcaps> posix </allcaps> does not return until the task has actually exited ( see # <number> ) pr # <number> - the chmod test is now skipped on vxworks rather than failing . the <code> function now returns <code> when run on a file system that does not have permissions , which in turn causes the unit test to be skipped rather than fail . - corrects a file handle leak . pr # <number> - add parameter check to <code> and adjust coverage test to validate . pr # <number> - replace <code> and <code> with <code> . this new <allcaps> api </allcaps> for getting stats on file system . uses existing <code> call and exposes it in the public <allcaps> api </allcaps> . pr # <number> - when cleaning up for shutdown , delete resources that have a task / thread first , followed by other resource types . this helps avoid possible dependencies as running threads might be using the other resources . no detectable external impact ; internally , the tasks are deleted first during shutdown , which only has an impact if / when tasks are actively using other <allcaps> osal </allcaps> resources . pr # <number> - the mount / unmount *vxworks* implementation was not adequately checking for and handling the <code> pass - through mapping type - which should be mostly a no - op . create a mount point directory if it does not already exist when using this mapping type for consistency with <allcaps> posix </allcaps> . - adds a documentation note to <code> : the virtual mount point cannot be empty - so <code> does not work but <code> does work and allows one to open files in the root as <code> from <allcaps> osal </allcaps> applications . mount - point directories do not need to previously exist when using os_filesysaddfixedmap pr # <number> - store <code> return in a <code> , then cast to <code> to avoid a strict alignment compiler error pr # <number> - removes the non - portable <code> and <code> macros . pr # <number> - uses the <allcaps> posix </allcaps> dir implementation on vxworks <number> . the only incompatibility is the prototype for <code> which is missing the second argument ; this is worked around with a compatibility macro for vxworks <number> . x builds . - translate and convert the vxworks coverage test cases to the portable dir implementation , which benefits vxworks7 , <allcaps> rtems </allcaps> , and <allcaps> posix </allcaps> . pr # <number> - fixes prototypes so they run on <allcaps> rtems </allcaps> by replacing uint32 with size_t pr # <number> - adds <code> macros to <code> and <code> so they can handle <allcaps> null </allcaps> pointers and return the correct error . pr # <number> - adds access functions to convert / extract different units from an os_time_t value - so that other code in <allcaps> cfe </allcaps> / <allcaps> psp </allcaps> / apps can be updated to use the access functions and thereby not break when the internal time definition changes . replaces the <code> with <code> in the "" stat "" structure used by the file module . updates the pointer argument to <code> to be <code> . prototype change of <code> should be backward compatible . <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> change file create to use read write <section> fixes # <number> changed the file create to read write to work on <allcaps> rtems </allcaps> <section> ran the test on <allcaps> rtems </allcaps> <number> <section> test should pass <section> ubunto <number> , <allcaps> rtems </allcaps> <number> <section> alex campell <allcaps> gsfc </allcaps>"
"fix # <number> , format printf correctly <section> fixes # <number> fixed the formatting to correctly build . have been unable to test on <allcaps> rtems </allcaps> <number> <section> tested on <allcaps> rtems </allcaps> <number> and worked . <section> able to build <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> needs to be tested on <allcaps> rtems </allcaps> <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add utdebug message from os_printf stub <section> fix # <number> - added utdebug in os_printf stub <section> built tests and confirmed debug output <section> outputs the os_printf input as a debug message from stub <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"vxworks <allcaps> osal </allcaps> missing os_waitforstatechange_impl <section> after the merge of vxworks7 support , a rebase was done . it turns out a new required function os_waitforstatechange_impl in the implementation is missing . <section> p5020 vxworks7 <section> steven seeger , <allcaps> efsi </allcaps> , inc . ( <allcaps> gsfc </allcaps> - <number> )"
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , document utassert_message parameters fix # <number> , correct utassert_zero description typo <code> os_binsemflush <code> os_binsemgive <code> os_waitforstatechange ` pr # <number> - add cppcheck static analysis workflow to osal ci <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , re - add automated static code analysis <section> fix # <number> <section> see action runs in fork < <url> <section> static analysis workflow runs on pull requests and push . workflow saves log file as an artifact for analysis . <section> ubuntu <number> <section> part of travis ci to github actions migration <section> n / a"
"fix # <number> , fix or statements <section> fixes # <number> fixed the or statement to correctly compare against both options . <section> build and run unit test <section> will correctly cath failures when they happen <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> - deprecates ut_stub_getforcefail ( ) and allows <allcaps> null </allcaps> for the … … value pointer closes # <number> <section> the <code> was deprecated and replaced with <code> . same has been done for <code> and <code> . also , made it so that <allcaps> null </allcaps> can be passed as the <code> out parameter to <code> for when a user just wants to check whether it ' s set or not but does not care what the value is . <section> built and ran <allcaps> sb ut </allcaps> . <section> <email>"
"deprecate ut_stub_checkforcefail ( ) with the deprecation of <code> , its functionality was replaced with <code> . the <code> should likewise be deprecated . <url>"
"fix # <number> , replace ut_os_log with utprintf <section> fix # <number> - replaces ut_os_log with utprintf ( it was just a duplicated macro ) <section> standard build and run of unit tests <section> no change , just code duplication cleanup <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , os_time_t with single tick counter <section> use a single <number> - bit tick counter to implement <code> , rather than a split <number> bit seconds + <number> bit microseconds counter . this benefits in several ways : - increases the timing precision by 1 0 x ( <number> . 1 us ticks ) - increases the representable range by 4 0 0 x ( + / - <number> yrs ) - simplifies addition / subtraction ( no carry over ) - avoids "" year <number> "" bug w / <number> - bit timestamps fixes # <number> <section> build and run all unit tests , sanity check <allcaps> cfe </allcaps> <section> none <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> + pc686 ( qemu ) <section> this is the final step listed in issue # <number> , and it depends on several dependencies being merged already : - pr nasa / cfe # <number> - pr nasa / psp # <number> - pr nasa / osal # <number> it is submitted as a separate pr from # <number> due to the dependencies , so it does not necessarily all have to be merged at once . however if <allcaps> ccb </allcaps> wants to accelerate the rollout this can be all done in a single merge cycle . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove alignment macros <section> fix # <number> - removes the non - portable os_pack and os_aligned macros <section> built and ran unit tests , no issues ( no dependencies in bundle ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , change uint32 to size_t <section> fixes # <number> change prototypes should be the same , from uint32 to size_t <section> build on <allcaps> rtems </allcaps> <number> <section> able to build <section> ubuntu <number> as build host for <allcaps> rtems </allcaps> <number> . <number> <section> dependant on nasa / osal # <number> to successfully build <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , suppress invalid redundantassignment warning from cppcheck <section> fix # <number> - suppresses the invalid warning . <section> re - ran cppcheck and observed no warnings <section> none except no warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve user ' s guide generation warnings <section> fix # <number> - closed group and removed old group . <section> <code> locally and confirmed no warnings <section> no warnings on user ' s guide build <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , rename ut clear force fail <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue fixes # <number> update the comments of ut_setdefaultreturnvalue to match the more general function <section> build and run unit test <section> no impact to behavior <section> there will be more pull requests from other sub modules that are dependant on this . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"change ut_clearforcefail to ut_cleardefaultreturnvalue <section> ut_setforcefail was deprecated in favor of ut_setdefaultreturnvalue , so ut_clearforcefail is no longer a mirror <section> change ut_clearforcefail to ut_cleardefaultreturnvalue <section> none <section> see also # <number> , the comments should be updated for ut_setdefaultreturnvalue and ut_cleardefaultreturnvalue <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_time_t access functions <section> initially the first commit just adds access functions to convert / extract different units from an <code> value - so that other code in <allcaps> cfe </allcaps> / <allcaps> psp </allcaps> / apps can be updated to use the access functions and thereby not break when the internal time definition changes . there will then be a second commit that updates the actual time format . it also uses os_time_t in the "" stat "" structure used by the file module rather than having this be a <code> . minor detail - also updates the pointer argument to <code> to be <code> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> initially just a set of new access functions - no impact to behavior eventually will change the internal format of <code> which will break any code that is _not_ using the access functions . prototype change of <code> should be backward compatible . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> initial commit which just adds the access functions and updates <allcaps> osal </allcaps> can be merged at any time , it does not have any dependencies and does not break anything . second commit will depend on nasa / cfe # <number> and nasa / psp # <number> ( may be a separate pr depending on how review / merge cycles go ) <section> joseph hickey , vantage systems , inc ."
fix # <number> change sem flush to solve race condition <section> fixes # <number> removed sem flush and changed it to sem give to prevent a rare race condition . change the port numbers to be different from network test for when test are run in parallel . <section> ran the unit tests in parallel <section> test should not lock or fail <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , resolve cast - align error in vxworks os_taskgetid_impl <section> fix # <number> - store tasktcb return in a <code> , then cast to <code> just for the pointer math to avoid a strict alignment compiler error note the error was observed with cast - align = strict on ubuntu <number> with enable_unit_tests = true <section> built without the error after fix . built / ran unit tests on ubuntu <number> and they all passed . <section> none other than avoid compiler error <section> - hardware : cfs dev server - os : ubuntu <number> ( and <number> to confirm strict alignment error resolved ) - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_filesysstatvolume <section> add os_filesysstatvolume as replacement for os_fsbytesfree and os_fsblocksfree . fixes # <number> <section> run all unit tests . <section> new <allcaps> api </allcaps> for getting stats on file system . uses existing os_filesysstatvolume_impl call - just exposes it in public <allcaps> api </allcaps> . <section> ubuntu <number> <section> this pr is only adding a new <allcaps> api </allcaps> , it is not ( yet ) deprecating the existing os_fsblocksfree / os_fsbytesfree calls . applications and <allcaps> cfe </allcaps> will need an update before these calls can be deprecated , but the new <allcaps> api </allcaps> needs to be in place before the existing refs can be fixed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add pointer check <section> add parameter check to os_socketsendto and adjust coverage test to validate . fixes # <number> <section> run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add pointer parameter checks <section> add os_check_pointer macros to os_converttoarrayindex and os_timebasegetfreerun . fixes # <number> <section> run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document utassert_message parameters <section> fix # <number> - document utassert_message parameters , also adds see also for helper macros <section> ci , comment change only . <section> none <section> n / a <section> worth considering making this internal , no identified use case for direct call . would be confusing to output any message other than info / debug . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
replace ut_os_log use in unit - tests with utprintf <section> ut_os_log is the same as utprintf <section> remove duplicate macro <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , order of operations for delete all <section> when cleaning up for shutdown , delete resources that have a task / thread first , followed by other resource types . this helps avoid possible dependencies as running threads might be using the other resources . fixes # <number> <section> build and run unit tests sanity check <allcaps> cfe </allcaps> , ensure shutdown works as expected <section> no visible impact . <repeated> internally the tasks are deleted first during shutdown , which only has an impact if / when tasks are actively using other <allcaps> osal </allcaps> resources . <section> ubuntu <number> ( native ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , chmod error handling <section> implement better error translations in the os_filechmod_impl ( ) function . also corrects a file handle leak . this makes it return os_err_not_implemented when run on a file system that does not have permissions , which in turn causes the unit test to be skipped rather than fail . fixes # <number> <section> build and run all unit tests <section> the chmod test is now skipped on vxworks rather than failing . <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve fs_based mounts on vxworks <section> the mount / unmount implementation was not adequately checking for and handling the <code> ( pass - through ) mapping type - which should be mostly a no - op . but to be consistent with <allcaps> posix </allcaps> it should also create a mount point directory if it does not already exist when using this mapping type . adds a documentation note to <code> regarding the limitation that the virtual mount point cannot be empty - so <code> does not work - never did . however <code> does work and allows one to open files in the root as "" / root / <file> "" from <allcaps> osal </allcaps> applications . fixes # <number> <section> build and run all unit tests on native sanity check <allcaps> cfe </allcaps> confirm behavior of <code> + <code> when mapping to root fs . <section> mount point directories do not need to be already existing when using <code> <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> auto - creating the mount point dir is relevant to unit tests - this simplifies running the unit tests by not requiring the user to pre - create this directory . otherwise without this one gets unit test failures if the directory does not already exist . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use <allcaps> posix </allcaps> dir implementation on vxworks6 <section> instead of keeping / maintaining a one - off implementation for vxworks <number> , use the <allcaps> posix </allcaps> implementation for this module . the only incompatibility is the prototype for mkdir ( ) which is missing the second argument . this can be worked around with a simple compatibility macro that is only enabled for vxworks <number> . x builds . this replaces previous pr # <number> . fixes # <number> . <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior <section> ubuntu <number> ( native ) vxworks <number> ( mcp750 ) <section> the actual posix dir implementation did not change at all - just using it on vxworks <number> too . also translates / converts the coverage test cases from vxworks specific to the portable dir implementation , which benefits vxworks7 , <allcaps> rtems </allcaps> and <allcaps> posix </allcaps> too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , <number> , <number> , <number> - <allcaps> osal </allcaps> global table management <section> address multiple issues with the <allcaps> osal </allcaps> global table management - general cleanup and bug fixes . fixes # <number> - use iterators whenever possible fixes # <number> - use an unlock key rather than task id so os_taskexit ( ) does not trigger a warning fixes # <number> - general cleanup of lock / unlock impl and remove redundant logic fixes # <number> - unlock global tables during create / delete fixes # <number> - keep threads "" attached "" in <allcaps> posix </allcaps> , so they can be joined when deleted . <section> build and run all tests for all platforms sanity check <allcaps> cfe </allcaps> and also confirmed <allcaps> reload </allcaps> / <allcaps> restart </allcaps> commands are working correctly . <section> no longer triggers warning with os_taskexit ( ) on vxworks ( see # <number> ) os_taskdelete ( ) on <allcaps> posix </allcaps> does not return until the task has actually exited ( see # <number> ) most other changes are internal only and do not change behavior . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> . <number> + pc686 vxworks <number> + mcp750 <section> noted other issues when running some unit tests on vxworks target that are not related to this change / preexisting issues . will file separate bugs about those . <section> joseph hickey , vantage systems , inc ."
"update unit tests to work with bug and argument macro non - default settings <section> # <number> /# <number> implement bug and argument check macros . the default setting matches what unit tests currently check for . any other setting will not pass unit tests ( disabling checks will cause segfaults / errors , strict will abort the tests ) . <section> - implement argument check tests in a way they can be easily skipped based on settings - add option to skip <section> none . <section> issue generated from conversion in # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use version_less instead of version_greater_equal <section> the version_greater / less_equal comparisons wer not introduced until cmake <number> . however , the basic version_greater / <allcaps> less </allcaps> ( no equal ) comparison is much older , and <date> has no complaint about it . so use version_less and invert the condition . fixes # <number> <section> build for vxworks <number> on <allcaps> rhel </allcaps> <number> <section> makefiles are generated and build succeeds . <section> vxworks <number> using <allcaps> rhel </allcaps> <number> host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , mqueue functional test <section> fixes # <number> generalized queue timeout test to also test message queue functionality <section> build and run the unit tests <section> adds <number> seconds to the unit tests <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add test teardown failure to test summary <section> fixes # <number> added test teardown failures to the test summary also changed the print out to use the same style as startup failures . <section> used a test that always fails teardown and verified that it was reported in the test summary . <section> n / a <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> integration candidate : <number> - <number> - <number> <section> combines ic - <number> - <number> - <number> and <number> - <number> - <number> fix # <number> add "" <allcaps> osal </allcaps> select "" functional tests fix # <number> , breakup <allcaps> osal </allcaps> includes fix # <number> , avoid ut failure if sem_value_max >= uint32_max fix # <number> , check and report sysconf error return fix # <number> , add vxworks <number> support fix # <number> , clean up task definitions in core test fix # <number> # <number> , improve global lock on <allcaps> posix </allcaps> fix # <number> , convert <allcaps> osal </allcaps> config guide to markdown fix # <number> , use errno in clock_getres error reporting fix # <number> , implement macro to facilitate argument checking <section> see < <url> <section> pr # <number> - convert the <allcaps> osal </allcaps> configuration guide from docx and pdf to a markdown file . pr # <number> - test tasks do not run at <percent> . move all definitions and instantiations out of the core - test header file and reuse the already - existing single task definition . pr # <number> - break up <code> files into units that correspond to the implementation units . kept old header file names for compatibility . pr # <number> - reworks the <allcaps> posix </allcaps> global lock implementation . does not change the <allcaps> posix </allcaps> signal mask when locking / unlocking the global . - fixes a race condition . - adds a condition variable to the global lock structure . improves handling of tasks competing for access to the same object . - no longer changing signal masks repeatedly / unexpectedly . may be relevant to some <allcaps> bsp </allcaps> / driver developers . pr # <number> - checks return of sysconf for error and reports them . only sets pagesize on success . if sysconf fails it provides a mechanism to avoid error propagation . pr # <number> - uses <code> instead of status return from <code> with <code> reporting . pr # <number> - adds support for vxworks <number> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , implement value check and bug report macros <section> provide a set of macros to facilitate the argument value checking typically performed by every public <allcaps> api </allcaps> . - <code> is a printf - like macro that reports an invalid / unexpected condition has been found which indicates a bug in the application ( i . e . uncorrectable ) . - <code> provides a simplified method to confirm a condition is true . if not true , then it invokes <code> and ( possibly ) returns an error code to the caller . this is used for items which __must__ be true or else indicate serious bugs where execution cannot / should not continue normally . - <code> confirms a condition is true , but amy take a mitigation / corrective action rather than treat it as a bug if false . this can be used for "" normal "" range checking which should always produce a soft failure / error code response or enforce a suitable minimum / maximum value . fixes # <number> <section> execute the "" bin sem "" tests - note only the "" bin sem "" implementation has been updated to use these macros thus far . confirm the basic modes work : <number> . normal / default mode where <code> and <code> . in this case the error code is returned and the test passes normally . no change to behavior , but new error printfs are visible when running the test programs and they pass in bad values . <section> : this is the historical behavior and the application keeps running . this requires the application to actually check / handle the error code . as these indicate bugs , it is quite likely that the application does not expect the error response and / or is already in a bad state such that it will not handle it correctly , causing a more obfuscated failure later on . <number> . efficient mode where <code> ( <code> is not used ) . may be used by applications that have reached a high level of stability and have been confirmed never to invoke functions with outrightly bad arguments . bug checks are not performed at all , but other argument checks still are . <number> . strict mode where <code> and <code> . in this mode any <allcaps> bugreport </allcaps> actions result in an <code> which in turn intentionally causes the application to generate core dump if possible ( i . e . if <code> permits ) . the core file may then be opened via debugger to determine the cause of the failure with full context available . the intent here is to catch the error early while the context / stack is still present , and avoid the obfuscation that is likely to occur with ( <number> ) . <section> no impact to behavior ( beyond additional debug printfs ) when using default mode . other modes change behavior as noted above . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add "" <allcaps> osal </allcaps> select "" functional tests <section> fixes # <number> added new functional tests for the the select and select multiple functions . <section> ran the new tests . <section> none <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , check and report sysconf error return <section> fix # <number> - checks return of sysconf for error and if so reports , only sets pagesize on success . <section> build and run unit tests <section> none since sysconf should never fail , but if it does provides mechanism to avoid error propagation <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , avoid ut failure if sem_value_max >= uint32_max <section> fix # <number> - avoids a potential unit test failure if an invalid semaphore value can not be passed in <section> build and run unit tests , passed <section> none . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> unable to reproduce error from issue ( requires feedback from <user> ) but this fix avoids a potential error case . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> integration candidate : <number> - <number> - <number> <section> fix # <number> , exit console loop on shutdown fix # <number> , remove obsolete printf tests fix # <number> , add <allcaps> rtems </allcaps> <number> . x support fix # <number> , add new functional tests for os_chmod fix # <number> , scrub array references in shared layer fix # <number> , rename internal fields for consistency fix # <number> , sanitize array refs on impl layer fix # <number> , use full object id in timecb list fix # <number> , os_chmod uses read or write access . fix # <number> , change type of sync callback argument to osal_id_t <section> pr # <number> - add support for <allcaps> rtems </allcaps> <number> . the change provides defines and necessary ifdefs so <allcaps> rtems </allcaps> <number> can continue to be supported . pr # <number> - <code> now checks for either read or write access instead of just read access pr # <number> - adds functional test for <code> pr # <number> - refactor the table array access across <allcaps> osal </allcaps> . use a token concept in combination with a macro to obtain the table entry instead of indexing arrays directly . all access is then done through this table pointer . use the full object id in the timer call back list . update the timer sync callback prototype . pass the entire <allcaps> osal id </allcaps> to the sync function , not just the index . this is technically an <allcaps> api </allcaps> change . pr # <number> - replaces condition on forever loops to end on shutdown . loops now exit on shutdown . pr # <number> - removes obsolete printf tests that did not work <section> see <url> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> and # <number> , update global locks <section> reworks the <allcaps> posix </allcaps> global lock implementation . - does not change the <allcaps> posix </allcaps> signal mask when locking / unlocking the global . aside from being unnecessary , there was also a race condition in here ( fixes # <number> ) - adds a condition variable to the global lock structure . in the event that there is more than task competing for access to the same object , this allows the second task to be woken immediately instead of polling for a change ( fixes # <number> ) . <section> build and run all unit tests build and sanity check <allcaps> cfe </allcaps> <section> no longer changing signal masks repeatedly / unexpectedly . ( may be relevant to some <allcaps> bsp </allcaps> / driver developers ) <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , synchronous task delete on <allcaps> posix </allcaps> <section> make os_taskdelete actually wait for the task to exit , not simply a cancellation request . fix # <number> <section> build and run <allcaps> cfe </allcaps> and all unit tests test the <allcaps> cfe </allcaps> "" reload app "" command as documented in nasa / cfe # <number> which depends on having os_taskdelete actually exit the task <section> no impact to external <allcaps> api </allcaps> / observed behavior . internally , the global tables are now _unlocked_ when using an <allcaps> exclusive </allcaps> lock type , which is used for create and delete ops . instead of holding the global lock , the id is set to "" <allcaps> reserved </allcaps> "" ( <allcaps> f <elongated> </allcaps> ) which effectively prevents any other task from obtaining a reference to that object . this way <allcaps> osal </allcaps> can more safely call c library functions which block , including ( but not limited to ) pthread_join , while allowing ops on other records to proceed . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> required as part of the fix for <allcaps> cfe </allcaps> requirement documented in nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , breakup includes <section> break up <code> files into units which correspond to the implementation units . the old header file names still exist for compatibility . fix # <number> <section> build and run <allcaps> cfe </allcaps> and unit tests . <section> none - just header refactoring , no actual change . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove obsolete printf tests <section> fix # <number> - removes obsolete printf tests <section> none , this code did not work to begin with . <section> none <section> n / a <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean up task definitions in core test <section> move all definitions and instantiations out of the header file . reuse the single task definition that was already defined . also only define <number> instances of each type , as this is all that the test actually uses ( no need for <number> ) . fixes # <number> <section> build and run the unit tests <section> test tasks do not run at <percent> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
type mismatch variable return_code should be of type int32 .
"fix # <number> , <number> , <number> - refactor all table array access <section> refactor the table array access across <allcaps> osal </allcaps> . multiple fixes combined into one pr as they depend on each other . fix # <number> : rather than indexing arrays directly , use a token concept in combination with a macro to obtain the table entry . all access is then done through this table pointer . the token contains all relevant information about an object , importantly it has the "" truth "" as to what actual object id is being manipulated . this is necessary when operations such as new / delete may change the value in the table itself - the token always has the right value . fix # <number> : use the full object id in the timer call back list . this avoids complexities ( and issues ) associated with trying to regenerate the id when the list changes . fix # <number> : update the timer sync callback prototype . pass the entire <allcaps> osal id </allcaps> to the sync function , not just the index . this is technically an <allcaps> api </allcaps> change ( although they are both uint32 , the value changes ) . <allcaps> afaik </allcaps> this sync feature is not actively used so this should not really have an impact though . <section> build and run all tests for native ( <allcaps> posix </allcaps> ) , rtems <number> and vxworks <section> no impact to behavior - just a substantial cleanup of the internal patterns . <section> ubuntu <number> , rtems <number> <section> this is also necessary as a prerequisite to a couple other <allcaps> osal </allcaps> issues - where the original id needs to be preserved across ops which create / delete entities . the token provides this . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add new functional tests for os_chmod <section> fixes # <number> by adding new function tests <section> these new test , but ran them on the branch from # <number> <section> the new tests added to make test <section> dependant on # <number> <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
fix # <number> os_chmod uses read or write access . <section> fixes # <number> by checking for either read or write access instead of just read access <section> used the chmod tests i am building in another branch that found this issue in the first place . <section> a clear and concise description of how this contribution will change behavior and level of impact . - no changes <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"osal integration candidate : <number> - <number> - <number> <section> fix # <number> , refactoring ut_setforcefail to ut_setdefaultreturnvalue fix # <number> , add typedefs for osal stack and priority fix # <number> , use <number> argument form of open fix # <number> , use unsigned types in vxworks stack calculation fix # <number> , cleaning up rebasing fix # <number> , add functional test of one shot timer <section> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing pr # <number> - add a 5 th timer to timertest functional to test the one shot ( zero - length time interval ) case . pr # <number> - ensure all apis use the proper type . sizes are now size_t ; these will now be <number> bits on a <number> bit platform . pr # <number> - fix build issue on vxworks <number> by using the <number> argument form of <code> . passing <code> as the mode solves the build issue . this parameter is ignored when not creating a file . pr # <number> - the address calculations now use <code> instead of <code> to ensure that all rounding and base address adjustments behave the same way in the event that the addresses lie in the upper half of memory ( i . e . start with a <number> bit ) which would put it in the negative range of a long type . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> - add <allcaps> rtems </allcaps> <number> . x support <section> fix # <number> this change adds support for <allcaps> rtems </allcaps> <number> in the <allcaps> osal </allcaps> . the change provides defines and necessary ifdefs so <allcaps> rtems </allcaps> <number> can continue to be supported . <section> following the instructions in the pc - rtems <allcaps> psp </allcaps> : <url> and the updated readme_rtems_5 . txt from <allcaps> psp </allcaps> pull request <number> , i built the <allcaps> rtems </allcaps> toolchains , the pc686 bsps and cfs bundle for both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . x . i then ran the bundle on both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> on <allcaps> qemu </allcaps> x86 . note , that for <allcaps> rtems </allcaps> <number> , the latest <allcaps> rtems </allcaps> <number> . x git repository has to be used , since there was an <allcaps> rfs </allcaps> file system bug that prevented the bundle from working on the pc - rtems platform . i did not run the complete set of tests yet on <allcaps> rtems </allcaps> <number> . <section> for <allcaps> rtems </allcaps> <number> there should be no behavior changes at all . for <allcaps> rtems </allcaps> <number> there should be no behavior changes as well . <section> - hardware : <allcaps> qemu </allcaps> x86 - os : <allcaps> rtems </allcaps> - versions : <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> this change requires cfe pull request <number> . it is associated with <allcaps> psp </allcaps> pull request <number> , but since that contains readme files , it is not required to build . <section> n / a <section> alan cudmore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , add markdown version of <allcaps> osal </allcaps> configuration guide <section> pandoc was used to convert the <allcaps> osal </allcaps> configuration guide to a markdown file . during the conversion , issues were presented such as broken tables . tables were fixed and block codes were added where appropriate . fix # <number> <section> please provide feedback on whether the markdown file is acceptable in terms of formatting . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , use unsigned types in vxworks stack calculation <section> this should avoid any inconsistencies in the event that the memory address translates to a negative numeric value . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> none - just avoids possible sign conversions . <section> ubuntu <number> vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use <number> argument form of open <section> vxworks only provides the <number> argument form of <code> . passing <number> as the mode solves the build issue . this parameter is ignored when not creating a file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> no behavior change . fixes build issue on vxworks <number> <section> vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reduce use of uint32 , add more <allcaps> osal </allcaps> typedefs <section> scrub all uses of <code> type across <allcaps> osal </allcaps> , and replace most usage of this generic type with more appropriate , purpose - specific typedefs . all use of <code> to store an object size is now replaced with <code> . adds proper typedefs for : - <code> - used for indicating a task priority - <code> - for indicating a task stack pointer - <code> - for indicating a table position / array index of all internal tables - <code> - for indicating the type of an object fixes # <number> <section> build and sanity test <allcaps> osal </allcaps> on supported platforms run all unit tests <section> none . this is mainly a scrub of all apis to use the proper type , but keeps it as <code> most of the time , so it really should not change anything . except for sizes which are now <code> - so they will be <number> bits on a <number> bit platform . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> this does expose another <allcaps> api </allcaps> problem with functions that return a size as an <code> ( e . g . os_read , os_write , etc ) . <repeated> as an <code> cannot represent the full range of possible values . we may need a type to correlate with <allcaps> posix </allcaps> <code> to address this . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add one shot timer functional test <section> fixes # <number> , added a one shot timer . added a 5 th timer to functional test to test the one shot ( zero - length time interval ) case . <section> build and run unit test . <section> no behavior change <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , static module unload fix fix # <number> , add flags to os_moduleload <section> bundle ci on astrogeco : <url> <section> pr # <number> - ensure that the handle is not <allcaps> null </allcaps> before invoking dlclose ( ) . in particular the handle will be <allcaps> null </allcaps> for static modules . shutdown after <allcaps> ctrl </allcaps> + c occurs normally ( no segfault ) . pr # <number> - add a "" flags "" parameter to os_moduleload ( ) to indicate the desired symbol visibility : - <allcaps> global </allcaps> ( <number> , the default , and matches current behavior ) - <allcaps> local </allcaps> which hides from other modules and prevents other modules from binding to symbols in this module , thereby ensuring / preserving the ability to unload in the future <allcaps> cfe </allcaps> should use <allcaps> local </allcaps> flag for apps , and <allcaps> global </allcaps> flags for libraries . <section> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , rename set force fail <section> fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> <section> alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_moduleload flags <section> add a "" flags "" parameter to os_moduleload ( ) and use this to indicate the desired symbol visibility - either <allcaps> global </allcaps> ( <number> , the default , and matches current behavior ) or <allcaps> local </allcaps> , which means symbols are hidden from other modules . this is intended as a "" hint "" to <allcaps> osal </allcaps> as to how the module will be used - <allcaps> local </allcaps> prevents other modules from binding to symbols in this module , thereby ensuring / preserving the ability to unload in the future . <allcaps> cfe </allcaps> should use <allcaps> local </allcaps> flag for apps , and <allcaps> global </allcaps> flags for libraries , which are typically not ever unloaded . fixes # <number> <section> build and run unit test sanity check <allcaps> cfe </allcaps> ( update / patch required update to <allcaps> cfe </allcaps> to add flags parameter on <allcaps> api </allcaps> call ) <section> no impact to behavior if flags are passed as <number> . <section> ubuntu <number> <section> related to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> and fix # <number> , squash <allcaps> lgtm </allcaps> warnings fix # <number> , add debug messages for mutex double locks fix # <number> , update utassert macros with dynamic string formatting <section> see framework - bundle ci : <url> <section> pr # <number> - when <code> is enabled , this adds a message if mutex give / take actions occur outside the expected sequence . this informs the user ( via the debug console ) if a lock is taken more than once or if a lock is given by a different task than the one that originally took it : <code> pr # <number> - no behavior changes - removes all <allcaps> fixme </allcaps> comments - resolves security / filename race issue by opening file and acting on descriptor by adding fstat stub - squashed the minor recommended bugs pr # <number> - utassert macros now accept variable string arguments . the <code> wrapper around call is no longer needed to accommodate dynamic string output , thus removing the double assert . utassert macros will now be able to offer more information by themselves . <section> ubuntu ci <section> <url> <section> none <section> <user> <user> <user>"
"fix # <number> , fix os_moduleunload for static modules <section> ensure that the handle is not <allcaps> null </allcaps> before invoking <code> . in particular the handle will be <allcaps> null </allcaps> for static modules . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> with apps linked statically . <section> - shutdown after <allcaps> ctrl </allcaps> + c occurs normally ( no segfault ) - also confirmed that specifying an incorrect entry point symbol in startup script also benign . ( because a bad entry point also causes module to be "" unloaded "" as part of cleanup , which triggered the bug too ) <section> ubuntu <number> i686 - rtems4 . <number> / pc686 via <allcaps> qemu </allcaps> <section> this issue only affects statically linked apps , which "" go through the motions "" of module loading for consistency in operation , but do not actually load a module - because its already linked . <section> joseph hickey , vantage systems , inc ."
clean out old osprintf tests related to arinc653 and <allcaps> ghs </allcaps> <section> old tests no longer in scope are still in code base . see <url> and all related code . <section> prune . <section> none . if platforms ever do get brought back in should be implemented using current techniques . <section> none . <section> full name and company / organization if applicable
"fix # <number> , add debug messages for mutex double locks <section> if <code> is enabled , this adds a message if mutex give / take actions occur outside the expected sequence . in particular , this warns if a task takes a mutex more than once . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> with debug events enabled , confirm normal boot and operation . send "" remove packet "" request to to_lab . confirm warning is generated as follows ( this is a known issue in <allcaps> cfe </allcaps> doing multiple locks ) : os_mutsemtake ( <sad> <number> : <allcaps> warning </allcaps> : task <number> taking mutex <number> while owned by task <number> <section> if debugging is enabled this now informs the user ( via the debug console ) if a lock is taken more than once . it will also warn if a lock is given by a different task than what originally took it . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> and # <number> , squash <allcaps> lgtm </allcaps> warnings <section> - turned all <allcaps> fixme </allcaps> comments into issues ( and removed <allcaps> fixme </allcaps> ) - fix # <number> : security / filename race issue resolved by opening file and acting on descriptor ( had to add fstat stub ) - fix # <number> : squashed the minor recommended bugs <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> , # <number> - new issues from <allcaps> fixme </allcaps> # <number> - uncovered missing functional test on os_chmod <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
os_chmod missing functional test <section> missing functional test ( coverage test exists ) . <section> add functional test <section> none <section> required for cert <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> <section> ubuntu ci <section> part of < <url> <section> none <section> <user>
"os_filerename_impl yields different results on different operating systems <section> an fm test is showing different behavior on linux and vxworks . the issue is in a test that does a file rename . there ' s a test that renames a file to the name of an existing file . on linux , this file is overwritten . on vxworks , the call to rename ( ) fails . it would be good to have consistent behavior for fm across both operating systems . <section> walt moleski can provide more information on reproducing . <section> it would be ok for the rename to fail or for the rename to succeed . the <allcaps> ccb </allcaps> should decide what the desired behavior should be . fm test except the rename to succeed . the expected result is consistency across both operating systems , so that fm can pass its tests on both . <section> linux ( pc ) and vxworks <number> ( mcp750 ? ) <section> steven seeger <allcaps> gsfc </allcaps> - <number> ( embedded flight systems , inc . )"
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - deprecate <code> and <code> to and replaced them with by <code> , which implements both functions via flags , and follows the correct <allcaps> osal api </allcaps> patterns . pr # <number> - change use of uint32 for id to the correct typedef . also use objectidfrominteger / objectidtointeger where it is intended to convert these values to integers e . g . for the "" name "" fields in <allcaps> rtems </allcaps> . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , use osal_id_t in <allcaps> rtems </allcaps> implementation <section> change use of uint32 for id to the correct typedef . also use objectidfrominteger / objectidtointeger where it is intended to convert these values to integers e . g . for the "" name "" fields in <allcaps> rtems </allcaps> . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> on <allcaps> rtems </allcaps> confirm all unit tests working <section> none <section> <allcaps> rtems </allcaps> <number> . <number> / pc686 ( <allcaps> qemu </allcaps> ) via ubuntu <number> build host <section> for consistency with all other modules <section> joseph hickey , vantage systems , inc ."
"fix # <number> , deprecate os_open and os_creat <section> these functions are replaced by os_opencreate , which implements both functions via flags , and follows the correct <allcaps> osal api </allcaps> patterns . fixes # <number> <section> build and run all tests , sanity check <allcaps> cfe </allcaps> check coverage of file - related apis ( still <percent> ) <section> <code> and <code> are deprecated . <section> ubuntu <number> <section> this initially puts the items inside an <code> block for review and testing , like has been done traditionally . should discuss at <allcaps> ccb </allcaps> whether this should become a hard - cut given that the next release will be a major one . although the previous discussions on the topic agreed to hard cut at major releases , these are such widely - used routines that this will cause grief to a lot of users . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> rtems </allcaps> build issues <section> correct issues involving recent os_milli2ticks change . note - for os_taskdelay it is important that this does not degrade into a no - op . so if os_milli2ticks fails here , this returns the error but still also does a non - zero delay . <section> build and sanity check <allcaps> cfe </allcaps> under <allcaps> rtems </allcaps> run all unit tests <section> builds and runs correctly <section> <allcaps> rtems </allcaps> <number> . <number> + pc686 <allcaps> bsp </allcaps> target ( <allcaps> qemu </allcaps> ) using ubuntu <number> build host <section> includes the typo fix in # <number> plus others . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci : <url> <section> pr # <number> - adds an event callback mechanism to certain state changes in <allcaps> osal </allcaps> . this allows the <allcaps> cfe psp </allcaps> to be notified at these points , and therefore it can add platform - specific functionality . this can , for instance , set the task name as requested in # <number> or set the processor affinity in a multi - core setup . pr # <number> - correct issues involving recent os_milli2ticks change . <section> ubuntu on travis ci <section> part of <url> <section> none <section> <user>"
"update <allcaps> osal </allcaps> configuration guide <section> the <allcaps> osal </allcaps> configuration guide <url> is out of date . more specifically , i found in section <number> . <number> , setup the <allcaps> osal </allcaps> source distribution , that the <allcaps> osal </allcaps> source distribution directories are not aligned with our current directories . for example , osal / src / make and osal / src / inc no longer exists . <section> a new revision should be published . last revision was on <date> . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes os_tick2micros and internalize os_milli2ticks . pr # <number> - adds ut_assert address equal macro . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
nasa
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - sets revision to <number> for development builds <section> ubuntu - ci <section> <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add vxworks7 support <section> this is a more joe - approved vxworks7 addition without the copy of the code . fix # <number> <section> none yet . i am going to bed . but i wanted to look at it with the <allcaps> ccb </allcaps> . i will try and do testing before the <allcaps> ccb </allcaps> . <section> steven seeger , embedded flight systems , inc ."
"new osal_id_t code and unit tests using osal stubs <section> the <allcaps> sbn </allcaps> application ' s coverage tests include tests of tasks , such as : <code> the issue is , now , the result of os_taskgetid ( ) is an osal_id_t value that i need to compute to put into the sendtaskid field above . there is a helper function <code> that could be used by unit tests but it is not currently exposed . for now , i have removed the <code> call and instead i hand - copied the id to write it <code> ( the value returned by <code> ) which is clearly not sustainable . <section> expose the objidcompose ( ) function from the <allcaps> osal </allcaps> stubs so that unit test code can generate matching id ' s . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - move this existing function into the public <allcaps> api </allcaps> , as it is performs more verification than the <code> function . pr # <number> - the c library type is signed , and this makes the result check work as intended . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , promote os_objectidtoarrayindex to public <allcaps> api </allcaps> <section> move this existing function into the public <allcaps> api </allcaps> , as it is performs more verification than the <code> function . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all tests <section> none . <section> ubuntu <number> <section> no change to function , just moved to public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , change ocs_off_t to a signed type <section> the c library type is signed , and this makes the result check work as intended . fixes # <number> <section> run all unit tests . note ocs_off_t is only used in coverage testing for <allcaps> osal </allcaps> . <section> fixes issue if caller uses correct type <code> to store result . <section> ubuntu <number> <section> issue was exposed by travis ci failure in change suggested in pr # <number> , but really a separate issue . <section> joseph hickey , vantage systems , inc ."
"vxworks7 <section> this is changes for vxworks7 , built on top of a standalone branch to solve several wconversion warnings when compiling for the platform . <section> i built it and ran my environment with cf <number> on a <allcaps> ppc </allcaps> <number> with vxworks <number> . <section> none , but this branch suggests some small <allcaps> api </allcaps> typing changes . <section> powerpc <number> ( dual - core <number> - bit powerpc ) vxworks <number> <section> there were some issues building base stuff with conversion and cast - align issues with the vxworks7 <number> - bit powerpc toolchain . <section> steven seeger , <allcaps> gsfc </allcaps> - <number> . embedded flight systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - introduces a new <code> , in <code> , which should be used to represent an <allcaps> osal id </allcaps> . all <allcaps> api </allcaps> structures / functions are updated to use this typedef in place of the uint32 type wherever it actually refers to an <allcaps> osal id </allcaps> . pr # <number> - fail tests on startup or tear down failures . these are failures , just a different severity ( likely mean the test did not work as expected and needs to be fixed ) . pr # <number> - max timer create test was using <code> ( the limit for adding timers to a time base ) , but creating timers is limited by <code> since the create adds a new time base . <allcaps> hotfix </allcaps> <number> - fix documentation warnings in <allcaps> osal </allcaps> . <allcaps> hotfix </allcaps> <number> - hide the call graph on utility functions . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"apply # <number> to bootes , set revision to <number> for development build <section> fix # <number> for bootes <section> built and ran locally based on bundle tag for bootes - rc1 built in ci , see <url> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> approved for main branch in < <url> also see nasa / cfe # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , set revision to <number> for development builds <section> fix # <number> <section> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> also see nasa / cfe # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use os_max_timebases for max timer create unit test <section> fix # <number> - max timer create test was using os_max_timers ( the limit for adding timers to a time base ) , but creating timers is limited by os_max_timebases since the create adds a new time base . <section> build and ran osal_timers_ut , passed without <allcaps> tsf </allcaps> <section> all unit tests now pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> <allcaps> tsf </allcaps> failures started getting reported as test failures as part of # <number> . this pr should be merged with ( or before ) # <number> or unit tests will fail . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - in the next major <allcaps> osal </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . this code was already conditional on the <code> flag and as such the <allcaps> ccb </allcaps> has already tested / verified running the code in this configuration as part of ci scripts . after this change , the build should be equivalent to the result of building with <code> . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"osal_timer_ut test setup failure <section> <code> <section> fix failure , related to # <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , fail tests on startup and tear down failures <section> fix # <number> - fail tests on startup or tear down failures . <repeated> these are failures , just a different severity ( likely mean the test did not work as expected and needs to be fixed ) <section> built tests with a known startup failure , test failed as expected <section> now will fail on startup / tear down failures <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes internal functions that are no longer used or defined but whose prototypes and stubs were still present in <code> pr # <number> - removes repetitive clearing of the global id and unlocking global table and replaces these with common implementation in the idmap source file . this moves deleting tables to be similar to creating tables and provides a common location for additional table - deletion - related logic . pr # <number> - propagates return code from <code> . if this routine fails then return the error to the caller , which also prevents the task from starting . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , provide typedef for <allcaps> osal id </allcaps> <section> introduces a new typedef , <code> , in <code> , which should be used to represent an <allcaps> osal id </allcaps> . all <allcaps> api </allcaps> structures / functions are updated to use this typedef in place of the <code> type wherever it actually refers to an <allcaps> osal id </allcaps> . adds inline functions for basic equality / validity check , and conversion back to bare integer for logging purposes . fixes # <number> <section> build and run all unit tests execute and sanity test <allcaps> cfe </allcaps> . <section> should be none . as the <code> typedef is a <code> , this is just an alias for the same thing . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , consolidate delete finalization code <section> remove repetitive clearing of the global id and unlocking global table and replace with common implementation in the idmap source file . in addition to removing repeated logic , this makes deletion more like an inverse of creation , and provides a common / single point where additional deletion - related logic can be added . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> confirm all unit tests <section> no impact to external <allcaps> api </allcaps> or behavior . internal code consolidation only . <section> ubuntu <number> <section> see also # <number> and # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , propagate return code from os_taskregister_impl ( ) <section> if this routine fails then return the error to the caller , which will also prevent the task from starting . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> build and run all unit tests incl . coverage . <section> no impact to behavior , as no known way to force this error , but will correctly propagate an error if one were to occur . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds <allcaps> osal </allcaps> network apis missing functional tests as well as tests for os_timedread and os_timedwrite pr # <number> - allows separate , dynamic registration of test setup and teardown routines which are executed before and after the normal test routine , which can create and delete any global / common test prerequisites . pr # <number> - adds filesysaddfixedmap missing functional <allcaps> api </allcaps> test <section> ubuntu - ci <section> part of nasa / cfs # <number> <section> none <section> yasir khan , emergent space technologies , inc joseph hickey , vantage systems , inc ."
"fix # <number> , remove all deprecated code <section> in the next major <allcaps> osal </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . fixes # <number> <section> build on native , <allcaps> rtems </allcaps> , and vxworks and confirm no issues / errors . run all unit tests . sanity check <allcaps> cfe </allcaps> core . <section> all old compatibility code is removed . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> this code was already conditional on the <code> flag and as such the <allcaps> ccb </allcaps> has already tested / verified running the code in this configuration as part of ci scripts . after this change , the build should be equivalent to the result of building with <code> . <section> joseph hickey , vantage systems , inc ."
"stub for cfe_sb_msg_t should not get return value from passed in message pointer <section> a stub should not have it ' s return value based upon a passed in value ; a stub ' s return value should be able to be set directly from the unit test . <section> steps to reproduce the behavior : write a unit test and attempt to set the return value of cfe_sb_getmsgid with a null ptr as the passed in value . <section> the value returned from cfe_sb_getmsgid should be the one that it is set to , not derived from a passed in message . <section> if applicable , add references to the software . <section> <allcaps> rhel </allcaps> <number> <section> the current design is more in lines with a "" mocked "" method , which can provide output based upon input ; a stub should not have this much deterministic behavior ( this is more in line with a ut hook ) . i do think it is a good thing to have a mocked version of this function , but it should not be the default stub . when unit testing it is doubtful there is an actual message available and a unit test will have to build a dummy with the message id installed within it . this adds many steps to what would be a much easier job with just being able to set the return value . <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , remove os_objectidmap / unmap prototype and stub <section> these internal functions were no longer used or defined but the prototype and stub were still present . this removes them . fixes # <number> <section> compile and run unit tests . <section> none - unused / stale code cleanup . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add function groups to ut assert <section> clean up and refactor the internal list storage structures to support having multiple list heads / groups . define a separate list / group for setup , normal test , and teardown . the existing uttest_add ( ) routine maps to the normal test group . added a uttest_addsetup ( ) and uttest_addteardown ( ) routine that maps to the setup and teardown group , respectively . the existing uttest_run ( ) routine then merges the groups and executes the full suite of tests . this allows separate , dynamic registration of test setup and teardown routines which are executed before and after the normal test routine , which can create and delete any global / common test prerequisites . fixes # <number> <section> build and run all unit tests update a unit test to additionally register separate setup and teardown functions and confirm that these are always run first and last , respectively . <section> test programs may now register global setup and teardown routines . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> osal </allcaps> network apis missing functional tests and fix # <number> os_timedread and os_timedwrite missing functional tests fix # <number> , add <allcaps> osal </allcaps> network apis missing functional tests fix # <number> , os_timedread and os_timedwrite missing functional tests <section> added <allcaps> osal </allcaps> network and os_timedread and os_timedwrite missing functional tests . <section> steps taken to test the contribution : standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
fix # <number> - ut_assert doc updates <section> fixes # <number> fixes a typo in ut_assert <allcaps> readme </allcaps> and clarifies stub documentation . <section> <email>
"would like a single function to reset all stubs in writing unit tests , i would find it useful to be able to reset the stub configurations per each test , and while there is a way to reset individual stubs , there is not a global reset capability in the ut_assert framework . the ut_resetstate ( ) resets one stub , and makes reference to ut_init ( ) , but the ut_init ( ) function is not exposed publicly . <url>"
"fix # <number> , add event callback framework <section> adds an event callback mechanism to certain state changes in <allcaps> osal </allcaps> . this allows the <allcaps> cfe psp </allcaps> to be notified at these points , and therefore it can add platform - specific functionality . this can , for instance , set the task name as requested in # <number> or set the processor affinity in a multi - core setup ( <allcaps> tbd </allcaps> ) . fixes # <number> <section> create an event handler in the pc - linux <allcaps> cfe psp </allcaps> and register it , and print out each event received . confirm events are generated as expected , and that it did not break the <allcaps> fsw </allcaps> in any way . note - not completely tested yet - - this is mainly a proof of concept and pushed for design review at this time . <section> adds ability to implement custom platform - specific functionality for defined events . <section> ubuntu <number> <section> previous discussion in # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct loop variable for coverage install <section> install use the loop variable ( <allcaps> tgt </allcaps> ) not <allcaps> tgtname </allcaps> for <allcaps> destination </allcaps> . fixes # <number> <section> build with enable_unit_tests = <allcaps> true </allcaps> and a configuration with multiple cpus sharing a single arch + platform config . <section> without this fix , the coverage binaries are installed twice to cpu2 but not at all for cpu1 . with this fix , they are correctly installed for cpu1 and cpu2 . <section> ubuntu <number> <section> no change to behavior at all - just an install path fix . <section> joseph hickey , vantage systems , inc ."
"resolve # <number> , add baseline and build number <section> resolve # <number> <section> bundle ci docker - based testing using gcc image <section> new macros defined . no changes on it ' s own . when combined with nasa / cfe # <number> and nasa / psp # <number> then startup reporting looks like < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> <section> ubuntu <section> left in a commented - out section for replacing the version string for official releases . <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , adjust ut assert buffer sizes <section> avoids a possible truncation in snprintf call . fixes # <number> <section> build and run unit tests . <section> no buffer size / truncation warning when building with optimization enabled . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set pthread names to match <allcaps> cfe </allcaps> tasks names <section> this change allows underlying os tools to view thread names for platforms that support the pthread_setname_np function . <section> steps taken to test the contribution : <number> . set <hashtag> define </hashtag> os_have_pthread_setname_np in osconfig for target <number> . run <allcaps> cfe </allcaps> environment <number> . run htop under linux and verify thread names appear <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : adds a task_name parameter to the os_posix_internaltaskcreate_impl function - behavior change : none <section> - hardware : pc - os : ubuntu <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> <section> none <section> none <section> daniel burns <allcaps> gsfc </allcaps> - code <number> <email>"
"set posix thread names using task name when creating <allcaps> cfe </allcaps> tasks <section> it would be helpful for the pthread name to match the <allcaps> cfe </allcaps> task name in the underlying os on <allcaps> posix </allcaps> platforms . this would allow for a better user experience when debugging <allcaps> cfe </allcaps> applications using linux based utilities i . e . strace , htop , etc . <section> this can be accomplished by using the _pthread_setname_np_ function in the _os_posix_internaltaskcreate_impl_ function . since this is a non - posix function , each <allcaps> bsp </allcaps> can specify the availability of this function through a <hashtag> define </hashtag> in osconfig . h <section> none <section> none <section> dan burns ( <allcaps> gsfc </allcaps> - <number> ) <email>"
"add build number and codename to version . h <section> need a better way to describe versions during development <section> as discussed , we will add a a build name string and a continuously incrementing build number to <code> <section> see notes from <allcaps> ccb </allcaps> : < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"os_fpuexcsetmask and os_fpuexcgetmask vxworks <allcaps> osal </allcaps> unit tests fail <section> the vxworks <allcaps> osal </allcaps> unit tests for os_fpuexcsetmask and os_fpuexcgetmask are <allcaps> cpu </allcaps> specific , not just os specific . these functions have conditionally compiled code that is conditional on whether or not the platform is the ppc440 , but the unit test code does not . <section> the unit test should pass , though i am unsure whether the break is in the <allcaps> osal </allcaps> or the unit test code . <section> - aitech sp0 - s - os : vxworks <number> - <allcaps> osal </allcaps> <number> . <number> - bv <section> mathew benson windhover labs"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - changed timer - test to be able to use os_max_timers value on top of the hard - coded number_of_timers value . this will allow the test to be functional even if the os_max_timers value is reconfigured . pr # <number> - <code> sets <code> and returns a status when successful . pr # <number> - ensures that - all stub routines register their arguments in the context , so that the values will be available to hook functions . - the argument names used in stubs match the name in the prototype / documentation so the value can be retrieved by name . pr # <number> - adds back rounding up to pthread_stack_min and also adds rounding up to a system page size . keeps check for zero stack at the shared level ; attempts to create a task with zero stack will fail . allows internal helper threads to be created with a default minimum stack size . pr # <number> - avoids a possible truncation in snprintf call . no buffer size / truncation warning when building with optimization enabled . pr # <number> - added new macros to <code> to report baseline and build number pr # <number> - the coverage binaries are now correctly installed for cpu1 and cpu2 as opposed to installed twice to cpu2 but not at all for cpu1 . pr # <number> - fixes a typo in ut_assert <allcaps> readme </allcaps> and clarifies stub documentation . <section> ubuntu - ci <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> yasir khan , emergent space technologies , inc joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , ensure <allcaps> posix </allcaps> stack size meets requirements <section> the <code> function stipulates that it may fail if the user - supplied stack size is not at least <code> and also possibly a multiple of page size . this partially reverts previous pr # <number> and adds back rounding up to <code> and also adds rounding up to a system page size . however the check for zero stack still remains at the shared level so attempts to create a task with zero stack will still fail . this allows internal helper threads to be created with a default minimum stack size , however . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> executing as both normal user and root user . execute all unit tests as both normal user and root user . <section> no failure due to stack size not meeting system requirements . <section> ubuntu <number> , running as normal user . centos <number> in vm running as root user . <section> this also moves the <code> call such that it is configured regardless of whether task priorities are enabled nor not ( i . e . non root user ) . the normal user should still be able to configure the stack size even if they lack permission to set scheduling priority . also confirmed that by moving the call to <code> that the original bug report is reproducible in a non - root environment - which is also fixed by this change . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub <allcaps> osal </allcaps> stubs <section> ensure that : <number> . all stub routines register their arguments in the context , so that the values will be available to hook functions . <number> . the argument names used in stubs match the name in the prototype / documentation so the value can be retrieved by name . fixes # <number> <section> build and execute all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior . this just makes it so hook functions can access the full set of parameters for all stub apis . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update license and <allcaps> readme </allcaps> for apache <number> , also updated quickstart <section> update license and <allcaps> readme </allcaps> for apache <number> approval fix # <number> fix # <number> <section> ci ( comment / document changes only ) <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> - socketopen stub should set sock_id <section> fix # <number> - os_socketopen ( ) should , on "" success "" , set sock_id and return a status . <section> see os_socketopen ( ) definition in <url> <section> <email>"
"os_socketopen ut stub returns "" socket id "" not status per the os_socketopen ( ) definition , on successful socket creation , it should set the sock_id out parameter and return status . instead the stub does not set the sock_id but returns the id . <url>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - command line options in linux are recognized , no longer ignored / dropped . pr # <number> - no impact to current unit testing which runs ut assert as a standalone app . add a position independent code ( <allcaps> pic </allcaps> ) variant of the ut_assert library , which can be dynamically loaded into other applications rather than running as a standalone <allcaps> osal </allcaps> application . this enables loading ut assert as a <allcaps> cfe </allcaps> library . pr # <number> - unit tests pass on <allcaps> rtems </allcaps> . pr # <number> - resolve inconsistency in how the stack size is treated across different os implemntations . with this change the user - requested size is passed through to the underlying os without an enforced minimum . an additional sanity check is added at the shared layer to ensure that the stack size is never passed as <number> . pr # <number> - update licenses for apache <number> <section> ubuntu : bionic <section> part of <url> <section> none <section> joseph hickey , vantage systems , inc . jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use absolute timeout for timedlock calls <section> the pthread <allcaps> api </allcaps> defines the timeout parameter for the pthread_mutex_timedlock call as an absolute value based on clock_realtime . this introduces a wrapper function to calculate the absolute timeout for this . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> , sanity check <allcaps> cfe </allcaps> operation , and run all unit tests . coverage is not affected because there is no coverage test for <allcaps> posix </allcaps> . <section> the timed lock in binary semaphores should now correctly wait for up to <number> seconds for the lock to become available before failing . the net effect of passing a relative timeout in place of an absolute one meant that the code would not wait , basically turning into a "" trylock "" instead . <section> ubuntu <number> <section> unfortunately this wasn ' t previously noticed during testing because it requires getting two tasks to operate on the same binary sem at exactly the same time , which is difficult to replicate . <section> joseph hickey , vantage systems , inc ."
"osal_timer_ut has an incorrect failure <section> the ut_os_timerset_test ( ) in the osal_timer_ut calls "" os_timerset ( <number> , starttime , intervaltime ) "" , with both starttime and intervaltime set to <number> , expecting that it will fail the id check before it will fail the start and interval time checks . <section> steps to reproduce the behavior : <number> . build and run osal_timer_ut on the sample build from the getting started instructions in the cfs repository . <section> the unit test is written expecting that the id validity check will fail before the start and interval time check fails . its expecting it will return os_err_invalid_id , but when when you run this on using the <allcaps> posix osal </allcaps> from <number> . <number> - bv version , it will actually return os_error because the start and interval times are invalid . <section> a quick fix is to initialize starttime and intervaltime to <number> , which will cause the os_timerset ( ) function to pass the start and interval time checks , and fail on the id check as expected . <section> - virtualbox - ubuntu <number> - <allcaps> osal </allcaps> <number> . <number> - bv <section> while changing the start and interval times to <number> will fix this problem in this specific case , the test is actually specific to the <allcaps> osal </allcaps> ( posix , vxworks , rtems , etc . <repeated> ) under test . i would argue that a better design would be to have <number> common <allcaps> osal </allcaps> unit test to verify functionality , i . e . that tasks function as tasks , and mutexes function as mutexes , but that each <allcaps> osal </allcaps> might have their own individual set of unit tests that are specific to that <allcaps> osal </allcaps> . you can think of the common set as black box tests , that are verifying the <allcaps> osal </allcaps> meets functional requirements , and white box tests for coverage . white box testing , by their nature , are specific to the source code under test . therefore , each <allcaps> osal </allcaps> might have its own set of white box testing to ensure coverage for that particular <allcaps> osal </allcaps> . those unit tests normally exercise all the function parameters , to get coverage . that particular unit test does not exercise the start or interval time arguments , because the original <allcaps> osal </allcaps> they were written to does not have a validity check for the start or interval time arguments . this is an example of a unit test suite that was written for a specific <allcaps> osal </allcaps> . we follow this concept in our <allcaps> cfs </allcaps> fork . the unit tests originally created by <allcaps> gsfc </allcaps> work well as black box tests . they have little to know platform or configuration dependency . we run the same unit tests on all the <allcaps> nasa </allcaps> provided osals , as well as all the osals we have written . the unit tests originally created by <allcaps> jsc </allcaps> work well as white box tests , as this bug report indicates . those unit tests usually fail when we try running them on other osals , because of issues similar to what this issue is referring to . <section> mathew benson owner windhover labs , <allcaps> llc </allcaps>"
"fast track for integration candidate <number> - <number> - <number> <section> fast tracked changes to integration candidate <number> - <number> - <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - added the following wrappers macros around <code> for commonly - used asserts : - <code> - check equality as <number> bit signed int - <code> - check equality as <number> bit unsigned int - <code> - check pointer not null - <code> - check pointer is null - <code> - check integer is nonzero - <code> - check integer is zero - <code> - check stub count pr # <number> - using <code> instead of <code> to fix support for vxworks <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> - add text to make clear that ids are non - zero fix # <number> , add missing stub functions for <allcaps> osal api </allcaps> fix # <number> , increase ut assert buffer sizes <section> bundle ci : <url> <section> pr # <number> - adds "" non - zero "" to the out variable description for os_create ( and related ) <allcaps> api </allcaps> ' s . pr # <number> - the buffer for context info increases from <number> to <number> bytes and the total report buffer to <number> bytes . pr # <number> - added stub functions for <code> , <code> , <code> , <code> , and <code> <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc . christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , remove uintmax_t usage <section> some systems may not provide this type . using <code> instead should be sufficient . fixes # <number> <section> build on vxworks run all unit tests on native system and on <allcaps> rtems </allcaps> . <section> no impact to behavior <section> ubuntu <number> <allcaps> gsfc </allcaps> vxworks lab build machine ( gs582w - cfelnx ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , enforce nonzero stack size <section> resolve inconsistency in how the stack size is treated across different os implemntations . <allcaps> posix </allcaps> would enforce a minimum , where <allcaps> rtems </allcaps> would not . with this change the user requested size is passed through to the underlying os exactly as is , no enforced minimum . an additional sanity check is added at the shared layer to ensure that the stack size is never passed as <number> . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> and sanity test build and execute all unit tests . also tested creating a task with zero stack size and confirm error is generated on linux . <section> the <code> passes on <allcaps> rtems </allcaps> . attempting to create a task with zero stack now will result in error . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> / pc686 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , warnings in time base <allcaps> api </allcaps> test <section> add requisite cast to printf . also use <code> rather than hardcoded size of <number> . fix # <number> <section> build and execute all unit tests <section> unit tests pass on <allcaps> rtems </allcaps> . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> / pc686 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> pic </allcaps> library for ut assert <section> add a position independent code ( <allcaps> pic </allcaps> ) variant of the ut_assert library , which can be dynamically loaded into other applications rather than running as a standalone <allcaps> osal </allcaps> application . this enables loading ut assert as a <allcaps> cfe </allcaps> library . this required moving some symbols / functions around . mainly , the <allcaps> pic </allcaps> library does _not_ contain the <code> file which has the bindings to the <allcaps> osal bsp </allcaps> when running as a standalone app , but everything else should be the same . fixes # <number> <section> build and execute all unit tests . also test linking new <allcaps> pic </allcaps> library into a <allcaps> cfe </allcaps> loadable app and running tests . <section> no impact to current unit testing which runs ut assert as a standalone app . <section> ubuntu <number> <section> some functions were moved to support the alternative linking structure but no <allcaps> api </allcaps> / functionality changes . the moved functions include the buffer length extension that were originally part of pr # <number> . <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add extra assert macros <section> add the following macros for ut assert : <code> - check equality as <number> bit signed int <code> - check equality as <number> bit unsigned int <code> - check pointer not null <code> - check pointer is null <code> - check integer is nonzero <code> - check integer is zero <code> - check stub count these are all just wrappers around <code> for commonly - used asserts . the description message is auto generated so it is consistent . fixes # <number> <section> build and run all existing unit tests . also test with new <allcaps> psp </allcaps> coverage tests that use the new macros and confirm they work as described . <section> no impact to current behavior . these are just new macros for new test case , to improve ease of use and consistency for future testing . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , store all arguments in generic - linux <allcaps> bsp </allcaps> <section> keep the entire argc / argv from the shell . do not prune the command name as getopt expects this to be there . fixes # <number> <section> execute unit tests , confirm all passing . execute new <allcaps> psp </allcaps> tests , confirm command line options are being recognized . <section> command line options in linux are recognized , no longer ignored / dropped . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing stub functions for <allcaps> osal api </allcaps> <section> did a quick scrub for public <allcaps> osal </allcaps> apis defined in <code> but not defined in stub library . added stub functions for : <code> required for testing other modules that use these functions . also correct a name mismatch issue in <code> . fixes # <number> <section> build and run all unit tests . <section> no change to behavior or <allcaps> fsw </allcaps> . just adds stubs for future use . <section> ubuntu <number> <section> these were not actively used anywhere yet ( otherwise would be a link failure ) but likely to become an issue as <allcaps> psp </allcaps> coverage tests are implemented . <section> joseph hickey , vantage systems , inc ."
"add testexit function to ut assert <section> it would often be useful to exit a test function and resume at the next test function in a group of tests . this is useful in two cases : - when something goes wrong or it is determined that the test block is unnecessary , so it is pointless to continue running tests in the same block , but the next test case still should run ( i . e . do not abort ) . in some existing cases ( e . g . <allcaps> osal </allcaps> unit - test ) this type of situation was implemented using a <code> statement to skip the rest of the test . - functions which contain infinite loops are not testable right now , because the test case will never exit . this is often the case for "" run loops "" within tasks that do not have any exit condition . this can be used from a hook function to exit the test . <section> add a <code> <allcaps> api </allcaps> call that would return control back to ut assert to resume with the next test case . <section> leave as - is . any infinite loops would have to be rewritten with an exit condition in order to be tested . test writers continue to use <code> to skip remainder of test , when desired . <section> this would be useful but to actually implement it would require setjmp / longjmp to return back to ut assert control logic rather than the immediate caller . flight software is not supposed to call this , as this is unit test framework , maybe its ok ? without it , we may have to modify some <allcaps> psp </allcaps> functions in order to do coverage test , which would violate another objective in that we should be able to test code without changing the code . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , race condition in idmap api test <section> add a delay loop to ensure that the child task has executed before continuing with the rest of the test . this also uses a separate "" setup "" function to create the resources for the test and adds asserts that the setup worked . fixes # <number> <section> execute unit tests and confirm passing . <section> no more race condition in idmap - api - test . <section> ubuntu <number> ( native ) centos <number> vm ( single core ) <section> may want to fast track as this causes occasional ci failures in current master branch . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase ut assert buffer sizes <section> the buffer for context info increases from <number> to <number> bytes and the total report buffer to <number> bytes . fixes # <number> <section> build and execute all unit tests . <section> confirmed that long report lines that had been truncated are no longer truncated . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"allow longer messages in ut assert <section> currently the ut assert library truncates messages at <number> characters due to the buffer sizes used internally . with macros using function names as well as more complete context info in tests , this is easy to hit . <section> increase message buffer size and maximum report line length . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix timer - test to be able to use os_max_timers value fix # <number> , fix timer - test to be able to use os_max_timers value <section> changed timer - test to be able to use os_max_timers value on top of the hard - coded number_of_timers value . this will allow the test to be functional even if the os_max_timers value is reconfigured . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
"fix # <number> , add filesysaddfixedmap functional <allcaps> api </allcaps> test fix # <number> , add filesysaddfixedmap functional <allcaps> api </allcaps> test . <section> added filesysaddfixedmap functional <allcaps> api </allcaps> test <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir majeed khan <allcaps> nasa gsfc </allcaps> / emergent space"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> <url> <section> pr # <number> - rename bsps that can be used on multiple platforms . <code> becomes <code> <code> becomes <code> pr # <number> - new features only , does not change existing behavior . ut hook functions now have the capability to get argument values by name , which is more future proof than assuming a numeric index . pr # <number> - add functional test for <code> pr # <number> - added functional tests for <code> on <code> , <code> , <code> , <code> , <code> , <code> <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> - add text to make clear that ids are non - zero <section> fix # <number> - adds "" non - zero "" to the out variable description for os_ <obj> create ( and related ) <allcaps> api </allcaps> ' s . <section> <email>"
"use ut_assert macros in tests / unit - test - coverage / unit - tests <section> upgrade tests in time - base - api - test . c to use new macros in <url> really in general could be used all over for consistency . note there ' s typos in the use of utassert_true , example : <url> <section> see # <number> <section> gerardo cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
hotfix for # <number> object utilitys missing functional api tests hotfix # <number> object utilitys missing functional api tests <section> fixed os_converttoarrayindex failing test . added copyright . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add functional tests for <code> , <code> and <code> functions . pr # <number> - fix doxygen warnings pr # <number> - unit test cases which use <code> and run on an <code> volume will be skipped and categorized as "" na "" due to <code> response , rather than a failure . pr # <number> - the device_name field was using the wrong length , it should be of <code> also correct another length check on the local path name . pr # <number> - for <allcaps> rtems </allcaps> , will not shutdown the kernel if test abort occurs . pr # <number> - unit tests work on <allcaps> rtems </allcaps> without <allcaps> bsp </allcaps> preallocating ramdisks pr # <number> - if <code> cache variable is set , this location will be checked first for a <allcaps> bsp </allcaps> / os implementation layer . pr # <number> - implement <code> and <code> , which are new functions that allow for additional query capabilities . no impact to current behavior as the <allcaps> fsw </allcaps> does not currently use any of these new apis . pr # <number> - - a functional test enhancement to <code> which replicates the specific conditions for the observed bug to occur . deletes the task calling <code> and then attempts to use the semaphore after this . - employ a <code> "" cleanup handler "" to handle the situation where a task is canceled during the <code> call . this ensures that the <code> is unlocked as part of the cleanup , so other tasks may continue using the semaphore . - change all initial <code> locking to be a finite "" timed "" wait rather than an infinite wait . in all cases , the condition variable is only held for brief periods of time and should be readily available . if a task blocks for a long time , this considers the mutex "" broken "" and aborts , thereby avoiding deadlock . this is a "" contingency "" fix in that if an exception or signal or other unknown / unhandled async event occurs that leaves the mutex permanently locked . pr # <number> - adds the mutex to protect the timer callback <code> resource table . <section> see prs <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc . leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add os_timebase api functional tests fix # <number> , add os_timebase api functional tests <section> added os_timebase api functional tests for os_timebasecreate , os_timebaseset , os_timebasedelete , os_timebasegetidbyname , os_timebasegetinfo , os_timebasegetfreerun <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add name association to stub arguments <section> add the capability to store parameter names in addition to pointers as part of the stub argument context data . macroize the ut_stub_registercontext function utstubs . h to also pass the parameter name in addition to the pointer . add hook - side accessor functions / macros to make it easier and more reliable to get this information from the context data . also other minor items : - increase max "" fixed "" args from <number> to <number> - add convenience macros for variable argument stubs fixes # <number> <section> build and execute unit tests , confirm all passing ( baseline ) . update <allcaps> evs </allcaps> stub and sample_app test cases to use new functions and confirm operation . <section> new features only , does not change existing behavior . ut hook functions now have the capability to get argument values by name , which is more future proof than assuming a numeric index . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add global lock / unlock wrapper <section> add a wrapper at the shared layer to provide a common location to check the status of global lock / unlock ops . all calls to os_lock_global_impl and os_unlock_global_impl from the shared modules are replaced with calls to this wrapper . notably - this detects and reports the problem described in # <number> , in case something similar happens in the future . fixes # <number> <section> build and execute all unit tests , and sanity check <allcaps> cfe </allcaps> operations . <section> now detects and reports errors in global mutex lock / unlock ops . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> if this patch is applied in isolation without any other changes , one will see debug trace generated as it is detecting the problem previously reported in # <number> : <code> these errors go away as soon as the pr # <number> is also applied <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - <code> will return an error code if the depth parameter is larger than the configured <code> . <section> ubuntu : bionic <section> see prs for detailed test and change information part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add timecb global mutex <section> adds the mutex to protect the timer callback ( timecb ) resource table . fixes # <number> <section> build and confirm all unit tests pass , <allcaps> cfe </allcaps> runs normally . <section> timer callback ( timcb ) resource types are mutex protected . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , binary sem task delete issues <section> corrects issue when a task waiting on a binary semaphore is deleted , it left the mutex in a locked state preventing other tasks from using the mutex . this has <number> parts : <number> . a functional test enhancement to bin - sem - test which replicates the specific conditions for the observed bug to occur . it deletes the task calling <code> and then attempts to use the semaphore after this . ( without the rest of this change , it fails ) . <number> . employ a pthread "" cleanup handler "" to handle the situation where a task is canceled during the <code> call . this ensures that the mutex is unlocked as part of the cleanup , so other tasks may continue using the semaphore . this is the main fix as it directly addresses the root cause of the issue , which is that the mutex was left in a locked state . <number> . change all initial mutex locking to be a finite "" timed "" wait rather than an infinite wait . in all cases , the condition variable is only held for brief periods of time and should be readily available ; tasks should almost never block on this initial lock . if a task blocks for a long time , this considers the mutex "" broken "" and aborts , thereby avoiding deadlock . this is a "" contingency "" fix in that if an exception or signal or other unknown / unhandled async event occurs that leaves the mutex permanently locked , it at least does not deadlock the system and allows it to be restarted . fixes # <number> fixes nasa / cfe # <number> <section> build and run all unit tests . confirm that including only the unit test change ( item <number> above ) reliably reproduces the failure . in this mode , bin - sem - test will get stuck when attempting to give the semaphore after task deletion . confirm that the bin sem changes ( items <number> and <number> above ) correct the issue . note each one taken individually will avoid deadlock in a different way . item <number> ( timed mutex ) alone will cause the subsequent calls to return <code> rather than deadlock , so shutdown will continue and the test exits with a failed status rather than pending forever . sanity check <allcaps> cfe </allcaps> operation and <allcaps> ctrl </allcaps> + c handling - all works ok . <section> binary semaphores after task deletion continue to work as expected and are usable by other tasks . <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> joseph hickey , vantage systems , inc ."
"fix # <number> , expand <allcaps> api </allcaps> for object queries <section> implement <code> and <code> , which are new functions that allow for additional query capabilities . <code> modified to accept <code> as the first parameter , to allow it to work with any object type , not just objects for which a specific type is expected / known . also adds unit test ( functional + coverage ) for <code> and <code> fixes # <number> <section> run all unit tests , sanity check <allcaps> cfe </allcaps> and confirm normal operation <section> no impact to _current_ behavior as the <allcaps> fsw </allcaps> does not currently use any of these new apis . existing apis are unchanged . <section> ubuntu <number> <section> querying objects by type is potentially needed for nasa / cfe # <number> and nasa / fm # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add external source directory for os / <allcaps> bsp </allcaps> <section> if the "" osal_ext_source_dir "" cache variable is set , this location will be checked first for a <allcaps> bsp </allcaps> / os implementation layer . this can point to an out - of - tree implementation layer if necessary . fixes # <number> <section> configure a test project to use a <allcaps> bsp </allcaps> provided in the external source dir , and confirm that it builds correctly and sanity check result ( unit tests , <allcaps> cfe </allcaps> runs normally ) . <section> no impact to behavior unless user requires a <allcaps> bsp </allcaps> / os implementation which is not part of the included set . <section> ubuntu <number> <section> it is discouraged from actually doing this as there is no attempt at <allcaps> api </allcaps> stability at the low level implementation layer . the actual location of the implementation layer being used is now also displayed during "" prep "" so that one can confirm its the correct / expected one . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename bsps to be generic <section> rename bsps that can be used on multiple platforms . mcp750 - vxworks becomes generic - vxworks pc - linux becomes generic - linux ( pc - rtems stays the same for now ) <section> build for all supported operating systems ( linux , vxworks , rtems ) and confirm all unit tests pass and <allcaps> cfe </allcaps> runs normally . <section> no impact to behavior , but build scripts in external entities need to change the name . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 / <allcaps> qemu </allcaps> vxworks <number> on mcp750 <section> see related issue nasa / psp # <number> and pr nasa / psp # <number> which changes the refs to these . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , dynamically create <allcaps> ram </allcaps> disk devices on <allcaps> rtems </allcaps> <section> rather than relying on the <allcaps> bsp </allcaps> to preallocate , the ram disk block devices can be created based on request . this correlates with the way <allcaps> ram </allcaps> disks are implemented on vxworks and is cleaner and more flexible by making it more independent of the <allcaps> bsp </allcaps> . this allows all the unit tests to work on <allcaps> rtems </allcaps> without the needing the <allcaps> bsp </allcaps> to preallocate a ramdisk . fixes # <number> <section> build and run all unit tests , and sanity check <allcaps> cfe </allcaps> operation <section> unit tests work on <allcaps> rtems </allcaps> without <allcaps> bsp </allcaps> preallocating ramdisks <section> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , provide <allcaps> bsp </allcaps> shutdown handler <section> this provides a better method of handling test abort , in a <allcaps> bsp </allcaps> - specific manner . fixes # <number> <section> build and execute unit tests on <allcaps> rtems </allcaps> platform , and run a test that has a problem causing an abort . ( e . g . <code> ) . confirm that in normal ( non - batch ) mode the system stays alive and allows use of the shell to check the system state . when using batch mode the system still shuts down ( as expected ) . <section> no impact to behavior on linux / vxworks . for <allcaps> rtems </allcaps> , will not shutdown the kernel if test abort occurs . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct length of device_name in filesys <section> the <code> field was using the wrong length , it should be of <code> also correct another length check on the local path name . fix # <number> <section> build and execute unit tests , and sanity check <allcaps> cfe </allcaps> operation . <section> no impact to behavior <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , better error translation on statvfs ( ) <section> map the <allcaps> enosys </allcaps> errno to os_err_not_implemented , which is more appropriate than os_error . fixes # <number> <section> build and execute unit tests on <allcaps> rtems </allcaps> <number> . <number> <section> unit test cases which use os_statfs and run on an <allcaps> rtems imfs </allcaps> volume ( default for the root file system ) will be skipped and categorized as "" na "" due to os_err_not_implemented response , rather than a failure . <section> <allcaps> rtems </allcaps> <number> on pc686 via <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , select <allcaps> api </allcaps> and unit test updates <section> on some os ' s ( notably <allcaps> rtems </allcaps> ) one must only call select ( ) socket file handles . this is indicated in <allcaps> osal </allcaps> via the "" selectable "" flag on each file handle . the select implementation needs to check this before invoking select ( ) . also update unit tests to match . fix # <number> <section> confirm unit tests passing on relevant platforms <section> calls to select apis on <allcaps> rtems </allcaps> where unsupported will return os_err_operation_not_supported , rather than crashing . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on i686 via <allcaps> qemu </allcaps> <section> this also affects # <number> in that it improves the test , but the functional test still could be better in that it currently only checks for file handles being set , not file handles being unset , after select . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , <number> , <number> , deprecate os_volumetable and other fixes <section> deprecate the os_volumetable structure , which is no longer necessary with the current <allcaps> osal </allcaps> . remove the os_volumetable definition from all bsps , and provide a default ( empty ) one to support linking when omit_deprecated is not set . note due to unit test dependencies this pr also has to include fixes for other related issues . fix # <number> fix # <number> fix # <number> fix # <number> these are all in separate commits and they each build individually but there are some dependencies in making the unit tests work , so they were added to this pr . <section> build with unit tests , confirm unit test execution and sanity check <allcaps> cfe </allcaps> on supported platforms <section> <allcaps> osal </allcaps> no longer defines the types or symbols associated with os_volumetable when omit_deprecated is set . any external psps should replace their respective os_volumetable with calls to the runtime registration <allcaps> api </allcaps> . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> on i686 via <allcaps> qemu </allcaps> vxworks <number> on mcp750 <section> nasa / psp # <number> exists to remove these references from the <allcaps> cfe psp </allcaps> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fix # <number> , add new <allcaps> api </allcaps> for obtaining exception task id fix # <number> , changes for string ops warnings <section> see prs bundle ci - <url> <section> pr # <number> - resized buffers and added explicit termination to string copies . no warnings on gcc9 with strict settings and optimization enabled . pr # <number> - new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add os_timeradd functional test fix # <number> , add os_timeradd functional test <section> added os_timeradd functional test <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , resolve doxygen warnings <section> fixes # <number> , additional doxygen warnings <section> steps taken to test the contribution : <number> . corrected the issues referenced in the <code> file <number> . rebuilt the docs with <code> <number> . observed no recurrence of same warnings in <code> <section> no doxygen warnings for the affected files <section> leor bleier , <allcaps> nasa gsfc </allcaps> \ code <number>"
"fix # <number> , add new <allcaps> api </allcaps> for obtaining exception task id <section> the os_task_prop_t had contained an <code> field which was used for reverse - mapping the <allcaps> osal </allcaps> task id during exception processing by <allcaps> cfe </allcaps> . unfortunately this was a uint32 and not compatible with any os which used task identifiers that were not convertible to such a value ( e . g . <code> , or <number> - bit pointers , etc ) . deprecate the old field and replace with a new <allcaps> api </allcaps> that performs reverse lookup within <allcaps> osal </allcaps> using an abstract pointer and size , so its compatible with any os task representation object . fix # <number> <section> tested as part of testing exceptions within the scope of pr ' s nasa / psp # <number> and nasa / cfe # <number> . confirm that the newly - added apis are performing as expected . <section> new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> ubuntu <number> <allcaps> lts </allcaps> vxworks <number> on mcp750 <section> prerequisite to the <allcaps> psp </allcaps> / <allcaps> cfe </allcaps> prs listed above . <section> joseph hickey , vantage systems , inc ."
"integration candidate : fast track <section> fixes # <number> <section> see <url> bundle ci - <url> <section> changes build system considerably : - no more user - maintained osconfig . h file , this is now replaced by a cmake configuration file - breaks up low - level implementation into small , separate subsystem units , with a separate header file for each one . <section> see pr bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor <allcaps> osal </allcaps> to avoid inclusion of c files <section> use separate source files and cmake - based source selection based on feature configuration , rather than using the c preprocessor for including / excluding different <allcaps> osal </allcaps> function groups . refactor all implementation units to provide a separate header file for each functional group / subsystem . remove "" static "" declaration on internal helper functions so they can be invoked from unit test . fixes # <number> also fix # <number> and fix # <number> ( trivial fixes rolled in as part of refactoring ) <section> build and execute <allcaps> cfe </allcaps> for vxworks , <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> . sanity check of <allcaps> cfe </allcaps> functions . confirm all unit tests passing and coverage test of vxworks is working . also confirm build with each inclusion / exclusion of each option ( loader , network , shell ) and with / without omit_deprecated . <section> no impact to runtime code . changes build system considerably , however . - no more user - maintained <code> file - now replaced by a cmake configuration file - break up low level implementation into small , separate subsystem units , with a separate header file for each one . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit ( build host , native test ) i686 - rtems4 . <number> cross build using <allcaps> qemu </allcaps> ppc - vxworks6 . <number> cross build using mcp750 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , deprecate os task id and add replacement <allcaps> api </allcaps> for <allcaps> psp </allcaps> exceptions <section> the os_task_prop_t had contained an <code> field which was used for reverse - mapping the <allcaps> osal </allcaps> task id during exception processing by <allcaps> cfe </allcaps> . unfortunately this was a uint32 and not compatible with any os which used task identifiers that were not convertible to such a value ( e . g . <code> , or <number> - bit pointers , etc ) . deprecate the old field and replace with a new <allcaps> api </allcaps> that performs reverse lookup within <allcaps> osal </allcaps> using an abstract pointer and size , so its compatible with any os task representation object . <section> tested as part of testing exceptions within the scope of pr ' s nasa / psp # <number> and nasa / cfe # <number> . confirm that the newly - added apis are performing as expected . <section> new <allcaps> api </allcaps> to reverse lookup an os - provided thread / task identifier back to an <allcaps> osal id </allcaps> . any use of existing ostask_id field within the task property structure is now deprecated . <section> ubuntu <number> <allcaps> lts </allcaps> vxworks <number> on mcp750 <section> prerequisite to the <allcaps> psp </allcaps> / <allcaps> cfe </allcaps> prs listed above . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fix string manipulations to avoid warnings <section> resize buffers and add explicit termination to string copies . avoids warnings on gcc9 with strict settings and optimization enabled . fixes # <number> <section> build with default config and gcc <number> . <number> and confirm warnings are gone <section> warnings fixed . <section> ubuntu <number> <allcaps> lts </allcaps> <section> currently a draft because it uses pr # <number> as a baseline . will mark as non - draft once prerequisite is merged . <section> joseph hickey vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate <number> - <number> - <number> fixes : # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> ci - <url> bundle ci - <url> see prs for other tests <section> <number> . pr # <number> - adds library build , functional , and coverage test to ci <number> . pr # <number> - deprecates <code> from from osapi - os - filesys . h <number> . pr # <number> - individual directory names now limited to <code> <number> . pr # <number> - fix tautology , <code> is now compared with <code> <number> . pr # <number> - module files are generated when the <code> test is built and run <number> . pr # <number> - consistent osal - core - test execution status <section> ci - ubuntu : bionic <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> dan knutsen , <allcaps> nasa </allcaps> / goddard yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , add object utility <allcaps> api </allcaps> functional tests fix # <number> , object utility <allcaps> api </allcaps> ' s missing functional test <section> created missing functional tests for the os_identifyobject , os_converttoarrayindex and os_foreachobject functions . <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa gsfc </allcaps>"
"fix # <number> , infer osal_system_ostype from osal_system_bsptype <section> simplify user configuration by inferring the <code> from the <code> if the former is not set . this means the user does not have to explicitly set both of these configuration options . in the event they are _both_ explicitly set ( as is done in the current configurations ) but refer to an invalid / unexpected combination of os + <allcaps> bsp </allcaps> , this adds a warning message to the cmake setup ( make prep ) stage , as this is likely a mis - configuration that deserves attention , but there could be valid reasons for doing this during development . fixes # <number> <section> build <allcaps> osal </allcaps> for various platform combos ( native , x86 - linux cross , i686 - rtems4 . <number> cross ) . confirm successful build . <section> no <allcaps> fsw </allcaps> affected , only build script . also fully backward compatible with old configs . - builds successfully using the inferred os when only osal_system_bsptype is set ( not osal_system_ostype ) . - generates a warning when osal_system_bsptype and osal_system_ostype are both set but are mismatched . confirmed this works by intentionally mismatching in a config . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> prerequisite to pr nasa / cfe # <number> . <section> joseph hickey , vantage systems , inc ."
"unhandled output truncation errors when building on centos <number> <section> on centos <number> , when cfs is being built with enabled unit tests , <code> returns the following unhandled output truncation errors ( <code> ) related to osal unit tests : <code> <section> steps to reproduce the behavior : on an up - to - date centos <number> , follow the current cfs <code> while enabling unit tests ( step <number> <sad> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> <code> should not return any error . <section> n / a <section> - imac ( retina 4 k , <number> ) - os : centos <number> ( <code> ) ( via vmware fusion <number> . <number> ) / minimal installation / packages installed : git , make , cmake , gcc . - <allcaps> gcc </allcaps> : <code> - versions : master bundle <section> for convenience and mainly to investigate the possibility of performing automated end - to - end testing ( for instance , to make a pseudo - <allcaps> gsw </allcaps> deterministically interact with the <allcaps> fsw </allcaps> and check the telemetry ) , i have taken the initiative to dockerize cfs . in this context , these errors occurred when creating a centos - based docker image . their occurrence was then confirmed using a centos virtual machine ( the logs provided above come from the unit tests performed on the virtual machine ) . no such errors occur on ( a virtualized ) ubuntu <number> . this behavior seems then specific to centos , or perhaps to a certain version of <allcaps> gcc </allcaps> . ( because these errors are directly related to osal , i have decided to open this issue here instead of the cfs repository ) . <section> guillaume lethuillier personal"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci - <url> <section> <number> . pr # <number> - coverage test added to os_timercreate for os_err_name_too_long . updated comments related to sizing includes null terminator for : os_max_api_name , os_max_path_len , os_buffer_size <number> . pr # <number> - updated comments in ostimer . c to reflect what the code is actually doing . added debug message if microsecs per sec value does not equal <number> . <number> . pr # <number> - externalizes enum for selectsingle , ensures that pointers passed to selectfd . <repeated> ( ) apis are not null , ensures that pointer to selectsingle is not null . <number> . pr # <number> - removes a duplicate reference doxygen warned about <number> . pr # <number> - none <number> . pr # <number> - none <number> . pr # <number> - command to run in shell and output to fill will fail with default ( not implemented ) setting . open issue to resolve is nasa / cfe # <number> <number> . pr # <number> - no <allcaps> fsw </allcaps> affected , only build script . also fully backward compatible with old configs . builds successfully using the inferred os when only <code> is set ( not osal_system_ostype ) . generates a warning when <code> and <code> are both set but are mismatched . confirmed this works by intentionally mismatching in a config . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of <url> <section> chris d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"fix # <number> , unit - tests / osloader - test : make modules always be built for the test <section> fixes # <number> . <section> running <code> on macos as described in the linked issue . <section> without this patch , the <allcaps> module </allcaps> * files are not generated in the build folder . after this patch is applied , the module files are generated when the <code> test is built and run : <code> <section> - hardware : macbook - os : macos mojave <number> . <number> ( 1 8 g1012 ) - versions : <allcaps> osal </allcaps> as of a66eb2dc00136a77779414452835bb6364d5e1fb commit . <section> none . <section> none . <section> stanislav pankevich , <allcaps> pts </allcaps> gmbh the hand signed <allcaps> cla </allcaps> has been sent before ."
"when running standalone , osal_loader_ut test binary file is missing test module files <section> this is another piece of the work on macos support in # <number> . when i run the <code> from <allcaps> ide </allcaps> ( clion ) , some of the tests are failing because the module files they exercise are not there . example : <code> the test expects the <code> files to be there in the build directory and they are not found : <code> the underlying problem is that the modules are not built automatically when the <code> target is built : <code> <section> i will open a pr where adding the following fixes the problem : <code> adding explicit build dependency makes sure that the module files are built . having this added i see this : <code> <section> i see no alternatives given the current design of the test and its build rules . <section> i am using the <allcaps> posix </allcaps> port on macos with my addtions from # <number> configured as follows : <code> <section> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , correct test_os_converttoarrayindex assertion typo fix # <number> test_os_converttoarrayindex : tautological assertion <section> unit test test_os_converttoarrayindex implements the following assertion : osal / src / unit - test - coverage / shared / src / coveragetest - idmap . c lines <number> to <number> in 7 d9c4c8 utassert_true ( local_idx1 = = local_idx1 , "" local_idx1 ( % lu ) = = local_idx2 ( % lu ) "" , ( unsigned long ) local_idx1 , ( unsigned long ) local_idx2 ) ; this is a tautological assertion as it compares local_idx1 with itself . update : local_idx1 is now compared with local_idx2 : utassert_true ( local_idx1 = = local_idx2 , "" local_idx1 ( % lu ) = = local_idx2 ( % lu ) "" , ( unsigned long ) local_idx1 , ( unsigned long ) local_idx2 ) ; <section> steps taken to test the contribution : <number> . standard build and ran unit tests . <section> <section> cfs dev server os : ubuntu <number> versions : <allcaps> osal </allcaps> <number> . <number> <section> yasir khan <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , refactor <allcaps> osal </allcaps> code selection <section> use separate source files and cmake - based source selection based on feature configuration , rather than using the c preprocessor for including / excluding different <allcaps> osal </allcaps> function groups . refactor all implementation units to provide a separate header file for each functional group / subsystem . remove "" static "" declaration on internal helper functions so they can be invoked from unit test . fix # <number> ( primary ) also fix # <number> and fix # <number> ( trivial fixes rolled in as part of refactoring ) and fix # <number> ( separate commit ) <section> build and execute <allcaps> cfe </allcaps> for vxworks , <allcaps> posix </allcaps> and <allcaps> rtems </allcaps> . sanity check of <allcaps> cfe </allcaps> functions . confirm all unit tests passing and coverage test of vxworks is working ( lcov shows <percent> for covered modules ) . <section> no impact to runtime code . changes build system considerably , however . - no more user - maintained <code> file - now replaced by a cmake configuration file - break up low level implementation into small , separate subsystem units , with a separate header file for each one . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit ( build host , native test ) i686 - rtems4 . <number> cross build using <allcaps> qemu </allcaps> ppc - vxworks6 . <number> cross build using mcp750 <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add looping wait for self exiting task <section> loops the parent os_taskdelay until child task exits before testing os_taskdelete . avoids the test depending on system loading / performance with single delay approach . fix # <number> <section> steps taken to test the contribution : <number> . standard build , ran <code> and observed loop count of <number> ( i have never experienced the failure , which if avoided would have a loop count > <number> ) <section> consistent osal - core - test execution status <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle + this commit <section> issue seen on dev server <number> and mac os <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consistent directory entry size limit <section> changes filename in os_dirent_t from os_max_path_len to os_max_file_name , and moves os_check_name_length into os_translatepath so it is consistantly applied everywhere . also fixes the length checks in os_check_name_length to account for terminating null . unit tests updated to match new directory name limit . fix # <number> note - since this was merged with the # <number> fix , this will also resolve that issue . <section> steps taken to test the contribution : <number> . ci - <url> <section> individual directory names now limited to os_max_file_name <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle + this branch <section> note it ' s based on # <number> to avoid conflicts and help with ic merge . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecates os_fs_ * defines that are not unique to fs <section> fix # <number> deprecates the following os_fs * defines from osapi - os - filesys . h : os_fs_success , os_fs_error , os_fs_err_invalid_pointer , os_fs_err_no_free_fds , os_fs_err_invalid_fd , and os_fs_unimplemented used sed to perform a bulk find / replace on each one to swap with common definitions . <section> steps taken to test the contribution : <number> . ran unit tests . <section> none <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , shell related <allcaps> api </allcaps> separated for optional implementation <section> adds a portable os_shelloutputtofile_impl no - shell implementation following the no - network model splits posix / rtems / vxworks os_shelloutputtofile_impl into a separate osshell . c ( was in osfileapi . c ) defaults to use the not implemented version ( to match certification target ) added unit test wrapper fix # <number> <section> steps taken to test the contribution : <number> . built for posix with and with not implemented version <number> . ci test with not implemented - <url> <allcaps> note </allcaps> - build for vxworks attempted , but ran into other issues introduced since last check on that system ( elf2cfetbl casts missing to match format ) <section> command to run in shell and output to fill will fail with default ( not implemented ) setting . open issue to resolve is nasa / cfe # <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle w / this commit on top of nasa / cfe # <number> , nasa / <allcaps> psp </allcaps> # <number> , nasa / osal # <number> - [ ] recommend build / test on <allcaps> rtems </allcaps> - [ ] resolve unrelated issue for vxworks and complete test <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> see bundle ic at <url> <section> see prs bundle ci - <url> <section> - pr # <number> - fixed typo , no behavior changes - pr # <number> - code cleanup , no behavior changes - pr # <number> : - use the target_include_directories and target_compile_definitions functions from cmake to manage the build flags per target . - build implementation components using a separate cmakelists . txt file rather than aux_source_directory . - provide sufficient framework for combining the <allcaps> osal bsp </allcaps> , <allcaps> ut bsp </allcaps> , and the <allcaps> cfe psp </allcaps> and eliminating the duplication / overlap between these items . - change the <allcaps> osal </allcaps> coverage test to be built with the standard build whenever enable_unit_tests is set . <section> see prs bundle ci - ubuntu : bionic <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc . david archuleta jr . , self gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , deprecated exception handling apis <section> deprecates the <allcaps> fpu </allcaps> exception and exception handling apis never fully implemented and more appropriate in <allcaps> psp </allcaps> layer due to platform dependencies note - also removes old interrupt unit test header ( missed in interrupt deprecation ) fixes # <number> <section> ci - <url> <section> none <section> ci - with master bundle <section> may need slight mods relative to cmake related to listing c files vs aux <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , deprecate os_fs_err_name_t <section> fix # <number> deprecates the define and updates the reference in unit test <section> ci - <url> <section> none <section> - ci , master bundle w / this branch <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , osal select <allcaps> api </allcaps> unit tests and fixes <section> fixes # <number> , fixes # <number> - - adds unit tests for <allcaps> osal </allcaps> select <allcaps> api </allcaps> partially addresses # <number> , but full solution is a functional test that includes an operational scenario ( actually select on a resource , confirm it pends until that resource is available ) . <repeated> bonus points if it illustrates the differences between os ' s so it ' s clear from a user perspective what will work and what wont . <section> built unit tests , tests passed . <section> externalizes enum for selectsingle , ensures that pointers passed to selectfd . <repeated> ( ) apis are not null , ensures that pointer to selectsingle is not null . <section> debian <number> <section> <email>"
"integration candidate <number> - <number> - <number> <section> integration candidate fixes # <number> , # <number> , # <number> , and # <number> <section> see related prs bundle ci - <url> test log : <url> <section> pr # <number> - the more descriptive return value <code> ( instead of <code> ) will now be returned from the following functions (): <code> , <code> , <code> , <code> pr # <number> - no more config warnings reported by travis - ci pr # <number> - the correct variable values will now be displayed when the test is executed . pr # <number> - wraps <code> prototype and unit test wrapper additions in <code> . <section> see prs bundle ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , comment update to correct for microseconds not always rounding up + a … describe the contribution fixes # <number> , microsecond round up code does not round up . updated comments in ostimer . c to reflect what the code is actually doing . added debug message if microsecs per sec value does not equal <number> . testing performed ran unit tests . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , remove old unit test example , add <allcaps> readme </allcaps> . md , further macro cleanup <section> removes outdated unit test examples , adds macros for concise and clear unit tests , converted binsem unit tests to new macros . fix # <number> <section> built unit tests and executed . <section> same behavior , concise code . <section> debian <number> . <section> <email>"
"fix # <number> , # <number> , and # <number> , <allcaps> osal </allcaps> build cleanup ( multiple issues ) <section> general cleanup and rework of the <allcaps> osal </allcaps> build scripts . fixes several issues : fixes # <number> fixes # <number> fixes # <number> fixes # <number> these are combined into a single pull request as they each depend on the previous fix - they cannot be easily isolated into separate pull requests . however , each specific issue fix is still an individual commit for review . summary of changes : - do not clobber ( or generally even rely upon ) the <code> variable , instead use the preferred approach of using the <code> and <code> functions from cmake to manage the build flags per target . - build the implementation components using a separate cmakelists . txt file per - directory rather than aux_source_directory . this allow allow <allcaps> bsp </allcaps> - specifc or os - specific compiler flags to be set , where required . - provide sufficient framework for combining the <allcaps> osal bsp </allcaps> , <allcaps> ut bsp </allcaps> , and the <allcaps> cfe psp </allcaps> and eliminating the duplication / overlap between these items . - change the <allcaps> osal </allcaps> coverage test to be built with the standard build whenever enable_unit_tests is set . <section> - built <allcaps> cfe </allcaps> for all three supported platforms ( native / x86 - <number> linux , i686 - rtems4 . <number> , ppc - vxworks6 . <number> ) and confirm successful build . - confirm ut passing on <allcaps> rtems </allcaps> <number> and native / x86 - <number> linux - sanity check on <allcaps> cfe </allcaps> ( execute , send command ) in <allcaps> rtems </allcaps> <number> and native / x86 - <number> linux - confirm standalone <allcaps> osal </allcaps> builds ( without <allcaps> cfe </allcaps> ) on basic posix / pc - linux combo and passes unit tests . <section> - <allcaps> osal </allcaps> coverage testing results shown in standard <allcaps> cfe </allcaps> test build ( make test , etc ) . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native ) - <allcaps> qemu </allcaps> for testing <allcaps> rtems </allcaps> <number> builds <section> vxworks testing limited to building only at this point . runtime tests pending on mcp750 hardware availability . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adds library build , functional , and coverage test to ci <section> fix # <number> , adds library build , functional , and coverage test to ci <section> steps taken to test the contribution : <number> . ci from fork - <url> <section> just adds tests to ci <section> - hardware : <allcaps> amd </allcaps> - os : ubuntu <number> - versions : bundle + warning fix from previous pull request + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , pthread stack min typo <section> fixes # <number> pthread_stack_min typo . i could have changed the number to <number> but i thought ( <number> * <number> ) was more true to where the number comes from . let me know if this is not inline with <allcaps> nasa </allcaps> code style preferences . <section> steps taken to test the contribution : <number> . build steps : built with cmake : <code> <number> . ran all tests and unit tests . note that osloader module test nominal <number> failed ( ut_osloader_module_test . c : <number> ) but it failed no matter whether my changes were implemented or not . i assume it ' s a quirk of my system / environment . <section> - no impact to behavior <section> - hardware : <allcaps> asus </allcaps> zenbook laptop - os : debian <allcaps> gnu </allcaps> / linux <number> vm on hyper - v manager - versions : <allcaps> osal </allcaps> <number> . <number> <section> n / a <section> n / a <section> david archuleta jr . personal"
integration candidate <number> - <number> - <number> <section> fixes # <number> <section> pr # <number> bundle ci <url> <section> os_socketaccept ( ) should work to accept new incoming <allcaps> tcp </allcaps> connections . <section> bundle ci - ubuntu : bionic <section> christopher . d . knight - <allcaps> nasa </allcaps> / <allcaps> arc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
fix # <number> - strawman for discussion <section> strawman for discussion at the <allcaps> ccb </allcaps> . <section> builds / runs / passes .
"fix # <number> , add test for name too long and update comments describe the contribution fixes # <number> , add test for name too long and update comments . coverage test added to os_timercreate for os_err_name_too_long . updated comments related to sizing includes null terminator for : os_max_api_name , os_max_path_len , os_buffer_size testing performed ran unit tests . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , deprecate interrupt related apis <section> removes coverage test code completely . marks os_int * <allcaps> api </allcaps> ' s as deprecated and implementations removed if osal_omit_deprecated defined fixes # <number> only changes under review for this request are 3 6 1 8 ae3 , the rest of the commits were included to avoid merge conflicts ( they were included in other pull requests for review ) <section> steps taken to test the contribution : <number> . remove calls from cfe / fsw / cfe - core / src / es / cfe_es_perf . c , note this change will break until the performance ticket is resolved ( which removes the os_int calls ) - <url> <number> . built and ran test with and without omit_deprecated defined . <section> none <section> - hardware : cfs dev <number> vm - os : ubuntu <number> - versions : bundle , these commits , and changes noted above <section> associated os_int tickets become wontfix - # <number> , # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"adds unit tests for os_select . <repeated> <allcaps> api </allcaps> <section> fix for ticket # <number> which adds unit tests for <allcaps> osal </allcaps> select <allcaps> api </allcaps> ' s . this relies on , and has merges from , # <number> and # <number> . <section> make ; cd cpu1 / osal / unit - tests / oscore - test ; . / osal - core - ut # all passes <section> adds unit tests for select . <section> debian <number> vm <section> <email>"
"fix # <number> , resolve ci config warnings <section> fix # <number> resolve ci config warnings <section> <number> . ci ( ci config change only ) <section> no more config warnings reported by travis - ci <section> - hardware : ci - os : ubuntu <number> - versions : master w / this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , os_selectfd . <repeated> <allcaps> api </allcaps> ' s check that set ! = <allcaps> null </allcaps> <section> fix to os_selectfdzero / set / add / clear / isset to check that set is not <allcaps> null </allcaps> <section> will commit unit tests that check this as a separate pull request for # <number> . <section> <allcaps> api </allcaps> calls should return os_pointer_error when set is <allcaps> null </allcaps> . ( isset returns "" false "" . ) <section> have not tested yet , # <number> will test . <section> <email>"
"fix # <number> , replaces task_1_work with correct variable names describe the contribution fixes # <number> , replace task_1_work with correct variable names testing performed ran unit tests expected behavior changes the correct variable values will now be displayed when the test is executed . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , updated osapi - filesys . c + ut_osfilesys_diskio_tes . ct to use … <section> fixes # <number> , updatese osapi - filesys . c + ut_osfilesys_diskio_test . c to use desired return values . <section> <number> . ran unit tests <section> the more descriptive return value ( os_err_name_not_found ) will now be returned from the following functions ( instead of os_fs_error ) : os_rmfs os_mount os_unmount os_fs_getphysdrivename <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , deprecate shared memory apis <section> this just wraps os_shmem * prototype and unit test wrapper additions in osal_omit_deprecated . fixes # <number> <section> steps taken to test the contribution : <number> . pushed bundle branch with this change to fork <number> . bundle ci passed : <url> <section> only impact would be to an <allcaps> osal </allcaps> that implements these apis and compiles with osal_omit_deprecated defined . none of the framework apis do . path forward would be for that <allcaps> osal </allcaps> to own the prototype , or split into a separate library , or however else you want to handle it . <section> - hardware : ci - os : ubuntu <number> - versions : master bundle w / this change <section> only <url> is relevant to this request , i can rebase once the other changes are merged . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate os_int * related apis <section> interrupt abstraction is platform / <allcaps> cpu </allcaps> dependent , and better suited to the <allcaps> psp </allcaps> if needed as indicated by the partial implementation in <allcaps> osal </allcaps> , the related issues , and lack of functional tests at the <allcaps> osal </allcaps> level . <section> deprecate <section> none <section> see # <number> , # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"gcc "" - - wrap "" argument and stubs for os - provided functions <section> i have been frustrated that we do not have unit tests for checking that <allcaps> osal </allcaps> properly handles error conditions when calling os functions ( like open , read , socket , accept , etc . ) apparently if we define - - wrap = open , then all calls to open ( ) will go to our open ( ) function and the os - provided open will be renamed as __wrap_open ( ) . i suggest this be used to stub most / all os calls and we can add unit tests for such things as running out of memory / storage / file descriptors and also support unit testing in sandboxed environments ( do not know if travis ci sandboxes ) where such things as network calls are disabled . <section> stub functions for os functions . <section> been looking around for alternatives and have not seen any . <section> add any other context about the feature request here . <section> <email>"
os_intgetmask os_intsetmask missing functional tests <section> missing functional tests for os_intgetmask and os_intsetmask <section> add tests <section> none <section> certification issue <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> fix # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs <section> see related pr <section> bundle ci ubuntu : bionic - see <url> <section> see pr # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , os_socketaccept ( ) fix <section> fixes # <number> , note that this does *not* include unit tests . there do not seem to be any unit tests for the <allcaps> osal </allcaps> networking code . we should discuss at the <allcaps> ccb </allcaps> . <section> tested with the <allcaps> tcp </allcaps> version of <allcaps> sbn </allcaps> , without the fix it fails on the accept ( ) call , with the fix , <allcaps> sbn </allcaps> nodes connect and traffic flows as expected . <section> os_socketaccept ( ) should work to accept new incoming <allcaps> tcp </allcaps> connections . <section> <number> - bit debian <number> vm . <section> add any other context about the contribution here . <section> none <section> <email>"
"fix # <number> and others , scrub user ' s guide <section> document / comment changes only fix # <number> - see issue for detailed changes fix # <number> - since old doc was removed , and autodoc is correct fix # <number> - replicated changes to old document in <allcaps> api </allcaps> header comments in <url> fix # <number> - documented callback restrictions <url> fix # <number> - document os dependent behavior on open files <url> partially addresses # <number> , # <number> , # <number> , # <number> <section> steps taken to test the contribution : <number> . nominal build ( native ) and run , no issues <number> . make usersguide and confirmed no warnings in build / doc / warnings <number> . cd build / doc / users_guide / latex <number> . make <number> . confirm completes and guide looks ok <number> . make osalguide and confirmed no warnings in build / doc / warnings <number> . cd build / doc / osalguide / latex <number> . make <number> . confirm completes and guide looks ok <section> no behavior change other than warnings resolved for doc build <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle w / the commits below <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"os_intack placeholder resolution <section> "" placeholder "" is not sufficient ( prototype only ) . <section> either implement with a not_implemented error response or eliminate prototype ( deprecate if it is not appropriate ) . if implemented , needs a mechanism to test ( functional / coverage / unit ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ic <number> <section> integration candidate <number> fixes # <number> see pr # <number> for details <section> ci , ubuntu - bionic <section> none <section> see pr # <number> <section> andrei - costin zisu - planetary transportation systems gmbh ( berlin , germany ) . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove os_fs_err_name_t <section> old compatibility typedef <section> deprecate for now , remove in major release . <section> none <section> do after # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove <allcaps> fpu </allcaps> and exception handling apis from <allcaps> osal </allcaps> <section> exception and <allcaps> fpu </allcaps> exception handling only partially implemented in <allcaps> osal </allcaps> <section> remove from <allcaps> osal </allcaps> , better suited to <allcaps> psp </allcaps> if / when fully implemented . <section> none <section> see also # <number> to remove shared memory apis <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> osal </allcaps> coverage test should be part of normal build <section> currently the <code> directory is an entirely separate build which needs to be invoked separately by the user . as per <allcaps> cfe </allcaps> request nasa / cfe # <number> it is desired to integrate the <allcaps> osal </allcaps> coverage tests as part of the normal unit test builds , so these do not need to be built separately . <section> the tentatively agreed - upon approach is to build _all_ coverage targets by default , and use the target <allcaps> bsp </allcaps> to run them . <section> the side effect is that this may build coverage targets which are not relevant to the deployed platform ( e . g . building and running a vxworks coverage test for a platform that does not use vxworks ) . <section> joseph hickey , vantage systems , inc ."
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes # <number> - fixes memset bug in <code> system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> : src / os / shared / osapi - module . c : handle return value of os_moduleload_impl <section> this changeset fixes # <number> . <section> the change is not detectable by the current test suite in the current master branch ( as of 6 4 ad0f551c01ab846bc79b23411e72cddf987dde ) but i can confirm that building <allcaps> osal </allcaps> and running its tests on ubuntu linux and macos works fine . <section> this changeset only adds a handling of the <code> function ' s return value . in all nominal cases there should be no changes in the existing behavior . <section> - hardware : linux laptop , macos laptop - os : ubuntu <number> , macos <number> . <number> - versions : <allcaps> osal </allcaps> as of 6 4 ad0f551c01ab846bc79b23411e72cddf987dde <section> none . <section> none . <section> stanislav pankevich , personal the signed individual <allcaps> cla </allcaps> has been sent today to the email specified in the <allcaps> cla </allcaps> document ."
"integration candidate <number> <section> fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> resolved <allcaps> lgtm </allcaps> errors , no functional changes <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate multiple "" success "" code options <section> <allcaps> api </allcaps> ' s with multiple "" success "" codes are frequently mishandled <section> single success response , unique information should be passed back in parameters <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> merge # <number> , # <number> fix # <number> , fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> os timer test should now always pass <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove classic build <section> remove classic build <section> steps taken to test the contribution : <number> . make prep <number> . make install <number> . verify build / run cfs <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"os - impl - bsd - sockets . c lgtm warning <section> references <url> and pull request <url> os - impl - bsd - sockets . c <code> <section> use compiletimeassert ( sizeof ( sockaddr_in ) <= os_sockaddr_max_len , addrlenexceedsockaddrlen ) at the top of file or in header . <section> leave it as it is . <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , fix memory corruption produced by misplaced memset ( ) <section> this pr fixes # <number> . the exact change has been recommended by <user> . <section> currently , i cannot test this on linux only on macos . as reported in the issue , i confirm that that the issue gets fixed with this change applied . also , the bug has been confirmed by <user> and the changeset is created from his recommendation . <section> see related issue : # <number> . <section> running osal - core - test tests ( <allcaps> bsem </allcaps> tests ) os : macos mojave <number> . <number> ( 1 8 g87 ) versions : master branch as of 1 5 5 e9ebcd6d <phone> a44237e6883d229d22c . <section> stanislav pankevich , personal the signed individual <allcaps> cla </allcaps> has been sent to the email specified in the <allcaps> cla </allcaps> document ."
"clear pending signal when configuring timer <section> fix # <number> on <allcaps> posix </allcaps> , call sigtimedwait ( ) on the selected rt signal as part of the set up for the timebase . this ensures that if the signal is already pending , it will be cleared . this also simplifies the timer callback routine in the ut code , cleaning up some unnecessary extra logic . <section> build with enable_unit_tests = <allcaps> true </allcaps> and execute <code> in a repeated loop . prior to this fix , it would typically fail after about <number> - <number> iterations , sometimes fewer . after this fix , it does not fail ( <number> + iterations , no failures ) . confirmed normal operation of <allcaps> cfe </allcaps> core ( no change ) . <section> fixes occasional failures in the nominal timer test . no change to <allcaps> fsw </allcaps> code <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> tracked down the root cause of the occasional timer failures to the timer test that preceded it . the previous test involved a short interval ( 5 us ) . depending on the timing of the preceding delete call , the timer signal might fire again before the timer is fully un - configured ( i . e . during the delete process ) . in this case , the system will be left with the signal still pending ( blocked ) but with no task running to accept / clear it . this is ok until the next timer is configured , and the same signal will be selected ( the first rt signal ) . in this case , because the signal was already pending from the previous config , it results in an extra "" spurious "" initial callback at the start . this in turn was interfering with the difference calculations in the timer ut . it is unlikely that this issue would be seen in <allcaps> fsw </allcaps> code , as it depends on deleting and recreating timers and <allcaps> fsw </allcaps> generally does not do this ( i . e . it sets up timers once ) . the main part of the fix is to call <code> with a zero timeout to ensure that the signal is not pending . additionally , there is some cleanup in the ut callback code , which fixes two other possibilities . these were not occurring , but potentially could . - the interval computation could be incorrect if the time elapsed was greater than <number> second . - always set the currtime / endtime in case there is a lag time in stopping the timer . but only set "" g_status "" once . - remove unneeded / invalid "" os_timerset "" call . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> 1 st merge : fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> 2 nd merge : fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve osfileapi . c lgtm issue <section> fixes # <number> resolve osfileapi . c lgtm issue . <section> steps taken to test the contribution : <number> . build dummy repository against lgtm <number> . verify it fixes . <section> a clear and concise description of how this contribution will change behavior and level of impact . - execl ( ) will only execute for / bin / sh . <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , lgtm warning <section> fix lgtm warning . <section> steps taken to test the contribution : <number> . build against dummy repo using lgtm . <number> . verify warning is fixed <number> . cppcheck . <number> . verify no warning <number> . build <number> . verify still build . <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard ."
"fix # <number> , fix lgtm osal issue <section> resolve lgtm issue <section> steps taken to test the contribution : <number> . build dummy repository against lgtm <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"use alternate setup function for tests <section> fix # <number> implements a more layered architecture for test code . rather than having each test provide <code> directly , now the ut assert library provides <code> in common code . the actual test setup is now done by a function called uttest_setup ( ) . this also introduces a new function <code> to implement the test routine . this replaces the existing <code> function . note - by using a more generic name the <code> routine can apply to both normal applications and test applications . this is a prerequisite to a future removal of the separate <allcaps> ut bsp </allcaps> . this allows for better layering where ut - assert provides the notion of an "" <allcaps> osal </allcaps> application "" . this is a step toward simplifying the <allcaps> bsp </allcaps> architecture , eventually combining the normal application and unit test <allcaps> bsp </allcaps> code into a single <allcaps> bsp </allcaps> . <section> build with default config and enable_unit_tests = <allcaps> true </allcaps> for all three supported platforms ( pc - linux , pc - rtems , and mcp750 - vxworks ) . confirm normal operation of <allcaps> cfe </allcaps> core ( no change ) and all unit tests run normally . <section> no changes to behavior . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( via <allcaps> simulation </allcaps> = native ) <section> needs to be merged in coordination with issue in nasa / cfe # <number> <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"avoid infinite sem - speed - test <section> fix # <number> <number> . add a hard limit to the execution ( work ) counter for the sem - speed - test worker threads . with this they will self - exit eventually even if the root task never gets <allcaps> cpu </allcaps> time to stop them . <number> . set the priority of the worker tasks to be logically lower , so it is less likely to preempt the main task . note that the logical priority is inverted from the numeric value . <section> execute unit tests on <allcaps> rtems </allcaps> and native ( posix / x86 - <number> ) and confirm successful operation of the sem - speed - test on both platforms . example output from running in <allcaps> rtems </allcaps> : <code> <section> the test completes normally and does not run infinitely . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native , build host ) <allcaps> rtems </allcaps> <number> on i686 ( <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"update os_vxworks_sigwait test case <section> fix # <number> this is related to the change for # <number> , where the return value of this function depends on the configured timer interval . the coverage test case for this was not updated in the original change . <section> build and execute <allcaps> osal </allcaps> coverage tests <section> test case now passes , as : <code> <allcaps> fsw </allcaps> code is not changed . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"lgtm issue <section> os - impl - bsd - sockets . c <code> os - impl - posix - files . c <code> posix / osfileapi . c <code> shared / osapi - idmap . c <code> shared / osapi - sockets . c <code> shared / osapi - time . c <code> os - posix . h <code> osapi - filesys . c <code> <section> steps to reproduce the behavior : <number> . run against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"refactor <allcaps> osal c </allcaps> library stubs <section> fix # <number> rather than utilizing a separate "" stub - map - to - real . h "" file that would need to be injected into the build of the unit under test , this builds the mappings into the mapping into the override files themselves . the stub functions are then moved into a separate header under a unique name with an ocs_ prefix . this introduces a number of new files , as what previously required a single header now requires two , but it it eliminates the separate map file . <section> build coverage test before and after change , confirm no changes to test operation or result . <section> none , just a structural change to the source file layout / patterns <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"use ut assert for <allcaps> osal </allcaps> unit tests <section> fix # <number> refactor the "" unit - tests "" ( extended / functional tests ) for <allcaps> osal </allcaps> to use the ut assert library for test case reporting and platform support . reduce or eliminate the use of macros for platform abstraction wherever possible . this removes most platform - specific logic from the test cases , leaving that to the <allcaps> osal </allcaps> / <allcaps> bsp </allcaps> abstraction . <section> build unit tests for all three supported test platforms and confirm operation ( <allcaps> posix </allcaps> , vxworks , <allcaps> rtems </allcaps> ) . <section> tests were previously only being built / executed on <allcaps> posix </allcaps> . now the tests are built on all <allcaps> osal </allcaps> platforms , using the ut assert library . output logfiles are in provided by ut assert and are therefore now in the same ut assert style . this test set no longer has a different set of output files . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native / posix ) - <allcaps> rtems </allcaps> <number> on i686 ( using <allcaps> qemu </allcaps> target ) - vxworks <number> on <allcaps> ppc </allcaps> / mcp750 <section> this should be pulled in parallel with # <number> to ensure that the <allcaps> posix </allcaps> platform continues to pass all tests . note that the relevant tests ( <allcaps> fpu </allcaps> , interrupt ) were being skipped on <allcaps> posix </allcaps> . , but with this change all tests are executed on all platforms . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"exception / interrupt <allcaps> api </allcaps> updates <section> fix # <number> - ensure the <allcaps> fpu </allcaps> functions that are actually not implemented in <allcaps> rtems </allcaps> / <allcaps> posix </allcaps> all return os_err_not_implemented , not os_success . - the <allcaps> rtems </allcaps> intenable / disable <allcaps> api </allcaps> should not be a duplicate of the intlock / unlock <allcaps> api </allcaps> , as the semantics are slightly different . the enable / disable <allcaps> api </allcaps> should return os_err_not_implemented . - the os_fpuexcgetmask <allcaps> api </allcaps> should confirm that the output buffer is not <allcaps> null </allcaps> . <section> sanity check on basic <allcaps> cfe </allcaps> operation on native / simulation build - no changes to <allcaps> fsw </allcaps> behavior . modified apis are exercised in the <allcaps> osal </allcaps> unit tests . unit tests executed on <allcaps> rtems </allcaps> , <allcaps> posix </allcaps> ( native ) , and vxworks in conjunction with changeset for # <number> . <section> no change to <allcaps> fsw </allcaps> . unit tests related to these particular <allcaps> api </allcaps> calls now all <allcaps> pass </allcaps> or are skipped appropriately for the ones that are actually not implemented . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native / posix ) - <allcaps> rtems </allcaps> <number> on i686 / pc ( <allcaps> qemu </allcaps> - emulated target ) - vxworks <number> on <allcaps> ppc </allcaps> / mcp750 <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"issue # <number> , adding cppcheck to bsp and os <section> adding travis . yml file for cppcheck on flight code . src / bsp and src / os <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , remove unsupported bsps <section> remove unsupported <allcaps> bsp </allcaps> and change genppc - vxworks6 . <number> → mcp750 - vxworks <section> - hardware - ubuntu <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cpp warning in os dir . <section> resolve cppcheck for os dir . possible cppcheck bug for structure member - suppress . <section> steps taken to test the contribution : <number> . make prep , make , make install <number> . run <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck test dir . <section> from issue # <number> <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cppcheck warning ut_stubs <section> resolve cppcheck warning . <section> steps taken to test the contribution : <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test <number> . verify passing unit - test <number> . cppcheck - - force - - inline - suppr - - std =c 9 9 - - language =c - - error - exitcode = <number> enable = warning , performance , portability , style - - suppress = variablescope - - inconclusive osal / src <number> > osal . txt <section> - hardware - os : ubuntu <number> - osal <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning ut - stubs <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning unit - test <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning misc . dir . <section> cppcheck warning from # <number> <code> <section> resolve cppcheck warning . <section> anh van , <allcaps> nasa </allcaps> goddard"
"cppcheck warning coverage test <section> cppcheck warning from issue # <number> for coverage - test . <code> <section> resolve cpp warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"stricter cppcheck <section> resolve the follow cppcheck . <code> <section> resolve cppcheck warning <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix minor warnings in <allcaps> osal </allcaps> code <section> fix # <number> fix warnings that are triggered by compiling the <allcaps> osal </allcaps> coverage unit test with strict settings . - the <code> function needs to be prototyped as accepting a function pointer ( not <code> ) - const - correctness on <code> - use <code> instead of <code> for buffer pointer as the specific type is not known - cast the function passed into <code> on vxworks <section> build code on all three supported os ' s ( <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , vxworks ) with full warnings and enable_unit_tests = <allcaps> true </allcaps> execute all unit tests and confirm passage execute cfe and confirm normal operation <section> none . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> - bit ( native ) - vxworks <number> / mcp750 ( <allcaps> gsfc </allcaps> build machine ) - <allcaps> rtems </allcaps> <number> / i686 ( running within <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"add alignment wrapper to os_sockaddr_t <section> fix # <number> add a union wrapper for the abstract data field such that it will be aligned for <number> bit integer values and / or pointers , whichever is greater . this removes cast alignment warnings in this code with compiling on <allcaps> cpu </allcaps> architectures with strict alignment requirements . <section> build code with full warnings ( including - wcast - align ) on both native (x 8 6 - <number> ) and mips32 execute <allcaps> cfe </allcaps> on native (x 8 6 - <number> ) ( with ci_lab / to_lab that use <allcaps> osal </allcaps> - provided socket abstraction ) , confirm no changes in behavior . <section> no compiler warning . no changes to runtime behavior . <section> linux <allcaps> mips </allcaps> <number> bit ( build ) ubuntu <number> <allcaps> lts </allcaps> , <number> bit ( build + run ) <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes , all doxygen / cppcheck warning / error cleanup <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : cppcheck warnings <section> replace use of <code> and <code> with <code> which should squelch the cppcheck warnings about the left shift as well as being more correct ( the values in question are uint32 ' s , not int ' s ) . also address two false positives about a return value being unassigned , by simply initializing the value to be <number> . fixes issue # <number> <section> build coverage test and ensure all tests passing and line coverage is unaffected build and run <allcaps> cfe </allcaps> and confirm no effect . ran cppcheck and confirmed that warnings are gone . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix cppcheck warning for unit - test <section> resolve cppcheck warning for unit - tests . did not compiled unit test . <section> steps taken to test the contribution : <number> . cppcheck - force - - inline - suppr . <number> > cppwarning <number> . verify warning is gone . <section> - hardware - ubuntu <number> - <allcaps> osal </allcaps> <number> . 2 a , cppcheck <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"remove explicit disable priorities flag or warn if disabled <section> user unknowningly was disabling priorities , causing issues <section> remove the explicit disabling of priorities . <allcaps> permissive </allcaps> mode should try to set requested priorities , and if it fails then go to default vs having a separate flag . <section> warn user when using default priorities <section> note may have already been solved , but getting ticket in to confirm . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( from thad )"
"cpp check error <section> cppcheck returns warning : osal / src / os / posix / osapi . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / shared / src / coveragetest - time . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / shared / src / coveragetest - timebase . c : <number> <url> shifting signed <number> - bit value by <number> bits is undefined behaviour osal / src / unit - test - coverage / ut - stubs / src / libc - stdio - stubs . c : <number> <url> uninitialized variable : actual osal / src / unit - test - coverage / ut - stubs / src / libc - stdio - stubs . c : <number> <url> uninitialized variable : actual osal / src / unit - tests / oscore - test / ut_oscore_binsem_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_countsem_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_exception_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_interrupt_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_misc_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_mutex_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_queue_test . c : <number> <url> syntax error osal / src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> <url> syntax error osal / src / unit - tests / osfile - test / ut_osfile_dirio_test . c : <number> <url> syntax error osal / src / unit - tests / osfile - test / ut_osfile_fileio_test . c : <number> <url> syntax error osal / src / unit - tests / osfilesys - test / ut_osfilesys_diskio_test . c : <number> <url> syntax error osal / src / unit - tests / osloader - test / ut_osloader_module_test . c : <number> <url> syntax error osal / src / unit - tests / osloader - test / ut_osloader_symtable_test . c : <number> <url> syntax error osal / src / unit - tests / osnetwork - test / ut_osnetwork_misc_test . c : <number> <url> syntax error osal / src / unit - tests / osprintf - test / ut_osprintf_misc . c : <number> <url> sprintf format string requires <number> parameter but only <number> are given . osal / src / unit - tests / osprintf - test / ut_osprintf_misc . c : <number> <url> snprintf format string requires <number> parameter but only <number> are given . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' varg ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ap ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / osprintf - test / ut_osprintf_offset . c : <number> <url> va_list ' ptr ' used before va_start ( ) was called . osal / src / unit - tests / ostimer - test / ut_ostimer_timerio_test . c : <number> <url> syntax error <section> <number> . cppcheck - - force . <number> . see warning <section> hardware <number> . <number> <number> . cppcheck <number> , cfe <number> . <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , fix misc . doxygen warning <section> fix # <number> , fix misc . doxygen warning <section> steps taken to test the contribution : <number> . make users guide <number> . verify warning is gone <section> - hardware - ubuntu <number> - doxygen <date> , rc - <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings <section> coverage test updates ( more coverage and works for vxworks ) timer bug fixes sem - speed - test functional test fix for vxworks <section> - cfs dev server - os : ubuntu <number> - versions : bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : avoid possible deadlock of timer callback <section> fix issue # <number> , avoids timer callback deadlock if actual tick_time is consistently bigger than the configured iinterval_time . <section> modify <code> to choose an interval that is not a multiple of the system clock tick , such that it will be rounded up to the next tick by the implementation . verify that evenually , two callbacks are generated in a single time tick , such that the long - term average of callbacks over time is consistent with the configured interval_time . confirm that callbacks continue normally until the application is stopped , as expected . <section> callbacks no longer cease once the "" overrun "" condition occurs ( callbacks behind by >= <number> full interval time ) confirm consistent behavior on <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , and vxworks <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit ( <allcaps> posix </allcaps> / simulation ) <allcaps> rtems </allcaps> <number> pc686 <allcaps> bsp </allcaps> running in <allcaps> qemu </allcaps> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct interval time computations <section> fixes issue # <number> , corrects the time intervals returned by the sigwait ( ) routines for all three operating systems ( <allcaps> posix </allcaps> , <allcaps> rtems </allcaps> , vxworks ) . <section> testing is focused on the operation of the <code> example program and variations thereof . verified that all callbacks from all timers correlate with the configured "" start_time "" and "" interval_time "" parameters passed to the os_timerset ( ) configuration . verified <allcaps> cfe </allcaps> still boots and runs ok . ( stops <allcaps> flywheel </allcaps> as normal based on 1 hz tick ) <section> no changes to applications / <allcaps> cfe </allcaps> . the <code> example program now runs and passes consistently on all platforms . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> bit ( simulation ) <allcaps> rtems </allcaps> <number> pc686 <allcaps> bsp </allcaps> running in <allcaps> qemu </allcaps> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct format code in debug message <section> fixes issue # <number> just adds a typecast to avoid the warning <section> build code on i686 - rtems4 . <number> platform , with - wall - werror and os_debug_printf option enabled . <section> observe no more warning about the format mismatch . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> bit ( build host ) using i686 - rtems4 . <number> cross toolchain <section> joseph hickey , vantage systems , inc ."
"fix # <number> : use 4 k stack for sem - speed - test tasks <section> fix issue # <number> use a nonzero stack size for this test . <section> build and execute "" sem - speed - test "" on the mpc750 vxworks platform . <section> test now runs and passes reliably with no odd / inconsistent behaviors <section> mpc750 vxworks <number> <section> joseph hickey , vantage systems , inc ."
"correct error checking for taskspawn <section> fixes # <number> , corrects the error check after taskspawn in the vxworks implementation . the test for failure of taskspawn should be for the value of <allcaps> error </allcaps> , not <number> , per the vxworks <allcaps> api </allcaps> documentation . found when implementing the unit test improvements in # <number> . this issue is generally only reproducible in ut where taskspawn can be made to fail . in normal <allcaps> fsw </allcaps> / runtime use , the taskspawn call is not likely to fail , and this issue cannot be seen . <section> build <allcaps> osal </allcaps> coverage tests ( see # <number> ) and confirm passage of all tests . <section> all unit tests pass , fixes a failure in one test due to this incorrect error test . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"improve coverage on <allcaps> osal </allcaps> unit tests <section> fixes issue # <number> , improving coverage of shared and vxworks modules in the <allcaps> osal </allcaps> coverage tests . <section> <number> . build coverage using : <code> <number> . make and execute all unit tests for shared and vxworks implementations . <number> . run "" lcov "" to collect results : <code> <number> . examine coverage results ( use genhtml to convert to html format ) : <code> <section> code coverage is substantially improved . all non - deprecated lines are visited . before change : <code> after change : <code> <section> ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> bit <section> this fixes one very minor <allcaps> fsw </allcaps> code issue found while running ut . the return value of the vxworks "" taskspawn "" is documented to be <code> , not zero , in the event of failure . the <allcaps> fsw </allcaps> was testing the wrong value here in one instance . the only non - covered lines of <allcaps> fsw </allcaps> code are in <number> deprecated directory functions . <section> joseph hickey , vantage systems , inc ."
"fix # <number> : rename "" vxworks - ng "" and "" posix - ng "" coverage tests rename to "" vxworks "" and "" posix "" , respectively , to match the actual implementation names . the build scripts rely on the name being the same and will fail if different . fixes issue # <number> <section> build coverage test for vxworks using cmake command : <code> followed by "" make "" as usual . <section> the build completes successfully . <section> ubuntu <number> . <number> <number> - bit <section> this only fixes the specific issue of the name mismatches and subsequent build failure . there are a couple other issue tickets about coverage testing which this does not address . these will be addressed in other commits / pull requests . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> <section> covers the following pull requests : - # <number> - unit test warnings ( merged to rc branch ) - # <number> - os_timerset return os_error on <number> - # <number> - os_timerset <allcaps> api </allcaps> update - # <number> - function description block updates ( merged to rc branch ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> only functional change is os_timerset returns os_error on <number> , see pull requests for full details <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"wrap os_taskregister in omit_deprecated define comments suggest this function is obsolete , wrap in <hashtag> if def </hashtag> so code can easily be checked for dependence ."
scrub and remove depreciated elements common_types . h - boolean typedef - software_big_bit_order define - software_little_bit_order define and likely others .
resolve klocwork issues found in <number> . 1 a see attachment
"os_api_init in the <allcaps> bsp </allcaps> from # <number> comments : <allcaps> ccb </allcaps> had quite a lot of discussion around this , and i think the concensus was that in the long term , the responsibility for initializing <allcaps> osal </allcaps> moves into bsps , and we allow all <allcaps> osal </allcaps> entry points to assume that os_api_init has been called , rather than having it be a runtime check . should also update the related unit tests ."
"semaphore apis do not allow for desired signals to be handled from the original reporter : "" the call to os_interruptsafelock ( ) blocks all signals in order to force mutual exclusion with signal handlers . however , it is often the case that the semaphore we are waiting on is given inside a signal handler , which now is never executed because the signals are blocked . this results in deadlock . """
"os_moduleload should copy the module before loading . many os ' s will allow you to modify / overwrite a shared library and any running executables that have loaded that library will be immediately affected ( likely causing a crash . ) clearly missions will want to upload updates to modules and not have them affect the running cfe . a simple solution is to copy the module library file to a temporary file . yes this will increase the storage space required , so a <hashtag> define </hashtag> switch to enable this behavior should be used to ensure folks know this is going to happen ( or they risk crashing the cfe if they upload a module file directly over the existing module file . ) ( note that file locking mechanisms are unreliable in many os ' s . )"
"pc - linux test results for <allcaps> osal </allcaps> <number> . <number> ( in response to cfs <allcaps> ccb ai </allcaps> <number> ) . this ticket holds the test results for <allcaps> osal </allcaps> <number> . <number> ( <number> . <number> with # <number> changes applied ) . results of interest : * ran the functional tests and unit tests twice , once for the default mqueue implementation , and once for the socket implementation . * the only difference between them was the expected queue depth semantics problem with sockets , resulting in one expected unit test failure ( see # <number> discussion ) . execution notes of interest : * executed on x86_64 machine , - m32 edit in osal - config . mak required . * encountered # <number> , and required a manual edit before testing . * there was a minor build problem with the osloader unit test (x 8 6 _64 test files were built , instead of the requested <number> - bit item under test ) . a re - build using a makefile in the osloader - test was required . (# <number> ) without this the osloader unit tests failed on this x86_64 platform . there were differences ( improvements ) in these unit test results compared to the <allcaps> osal </allcaps> <number> . <number> unit test results in the tarball . the released results had more failures , whereas these current tests had none . could be a packaging problem ? details : * ut_oscore : all tests now passing ( was <number> failures ) , only one is now not - applicable ( was <number> ) , overall several formerly - failing and n / a tests were not executed ( quick look : not found in unit test source code either , so looks intentional ? ) . * ut_osfile : all tests now pass ( was <number> test setup failure ) * ut_osfilesys : all tests pass * ut_osloader & ut_osnetwork : all tests pass , identical results as <number> . <number> files * ut_ostimer : all tests now pass ( was <number> failure ) attached files : * delivered <allcaps> osal </allcaps> <number> . <number> test results from the tarball ( for comparison ) * mqueue test results for this version * socket test results for this version * test notes * script used to execute the tests filed under # <number> ."
"add <allcaps> api </allcaps> to read tick counter from timebase object the "" timebase "" <allcaps> osal api </allcaps> ( already merged ) should include the ability to read the internal counter value . this can cover the same use - cases that the old trac # <number> was targeting , without the pitfalls that were brought up with that solution ."
"utlist can use malloc ( <number> ) and memcpy of <number> size data it ' s ok for memcpy to use <number> byte data , but the behavior of malloc with <number> - byte data is inconsistent across platforms . this is not a required fix , however some static code analyzers might complain . ( the size of the malloc is dependent on data passed into it . ) [ changeset : 9 3 b15ea ] ready for <allcaps> ccb </allcaps> review"
stack_size parameter should be checked for reasonable value in os_taskcreate vxworks implementation os_taskcreate calls vxworks ' s taskspawn ( ) and passes the passed stack_size parameter to it . vxworks does not appear to check this for a reasonable value . the <allcaps> osal </allcaps> should do that and then reject an unreasonable value ( < 4 k or something ) with an error code .
"ut assert library has uninitialized "" uttestdatabase "" global variable the "" uttestdatabase "" global , which is used as the primary node to the list of tests to run , is not initialized to a known state . this mostly works anyway due to the fact that most systems will zero out their <allcaps> bss </allcaps> segment automatically while loading an exe , however some systems do not do this . we should have an "" init "" function for ut assert that can be called during test setup , that can ensure that all globals are put to a known state ."
cleanup relative paths used in makefiles several of the <allcaps> osal </allcaps> makefiles use relative paths i . e . include . <repeated> / . <repeated> / osal - config . mak . use of relative paths is prone to error and requires users to maintain a pre - defined directory structure that is hidden and not clearly documented . relative paths should be replaced with environment variables to allow flexibility in mission / project directory trees .
"ostimer os_timerset may fail when testing on a vm from time to time , i observe the os_timerset test in ostimer failing when being tested in the virtual machine environment used for bamboo testing for the simple reason that the vm itself is not actually a "" real time "" process . it might be useful to work out a way to perform this test that allows for the "" squishiness "" of the vm envinroment , without giving up the tightness of the test for real targets ."
"repeated assignments without using the value ( unit test edition ) cppcheck messages : { { { src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / tests / mutex - test / mutex - test . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . src / unit - tests / oscore - test / ut_oscore_task_test . c : <number> : performance : variable ' res ' is reassigned a value before the old one has been used . ( <number> more lines . <repeated> ) } } } there are two lines indicating sources outside testing , a separate bug has been filed as we may put more priority on fixing those lines than on globally smashing this bug in the test code . recommended fix methods , <allcaps> pick one </allcaps> : <number> . actually check the status variables to see if an error was returned <number> . put a <code> cast on the function call instead of storing the data that is not actually ever going to be looked at . this advertises to maintainers and to the compiler and to static analysis that we are purposefully ignoring the return value of the function ."
"cppcheck a vxworks build i need to go through the somewhat manual ( for now ) process of grinding out some cppcheck results for "" development "" osal on our lab machine that has vxworks capability ."
"overwriting unused values in variables as reported by cppcheck performance applied to the "" ic - gll - jsc - merge "" branch : variable % is reassigned a value before the old one has been used . this message is present in <number> files : { { { osal / src / os / vxworks6 / osapi . c osal / src / os / vxworks6 / osnetwork . c osal / src / tests / mutex - test / mutex - test . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_binsem . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_queues . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_tasks . c osal / src / unit - tests - coverage / osapi - test / osapi_testcase_time_int . c osal / src / unit - tests - coverage / osfileapi - test / osfileapi_testcase . c osal / src / unit - tests - coverage / osfilesys - test / osfilesys_testcase . c osal / src / unit - tests - coverage / osloader - test / osloader_testcase . c osal / src / unit - tests - coverage / ostimer - test / ostimer_testcase . c osal / src / unit - tests / oscore - test / ut_oscore_binsem_test . c osal / src / unit - tests / oscore - test / ut_oscore_countsem_test . c osal / src / unit - tests / oscore - test / ut_oscore_mutex_test . c osal / src / unit - tests / oscore - test / ut_oscore_queue_test . c osal / src / unit - tests / oscore - test / ut_oscore_task_test . c osal / src / unit - tests / osfile - test / ut_osfile_dirio_test . c } } } need to examine the fingered bits of code , see if any of them need fixing , and figure out how to get cppcheck to be happy ."
"make compiles with - - std =c 9 9 work <allcaps> osal </allcaps> has historically attempted to be strict <allcaps> ansi </allcaps> c90 , with obvious exceptions for cases where the code needed to use a facility that did not yet exist . compile with - - std =c 9 0 if you want to see these . the default compilation we do now does not specify that the code should be strictly conformant to any standard , so what we get in practice is <allcaps> gcc </allcaps> ' s c90 with extensions . turning up all the warnings using { { { gcc - w - wall - wextra - pedantic } } } will include a large number of very useful static code analysis checks , but will warn about the use of c99 facilities that we want to use . what i propose to do is to run a set of trial builds where the build script adjusts the compiler flags , on the fly ( no commits ) , to be : { { { gcc - - std =c 9 9 - o3 - g - w - wall - wextra - pedantic } } } this asks <allcaps> gcc </allcaps> to do as thorough a job as it can do to report any of our code that deviates from <code> . our code does require use of facilities not specified in c99 , and these facilities should be enabled , where necessary , by the use of the appropriate option feature macros . i anticipate that this will only require certain specific source files to have an annotation ( before the <code> lines ) that they are to be considered to contain <code> or <code> standard sources at a specific level of those standards . see also <allcaps> cfe </allcaps> ticket [ cfs_cfe : <number> ]"
"update <allcaps> rtems </allcaps> os_intattachhandler for the <allcaps> ppc </allcaps> ( <allcaps> gsfc </allcaps> # <number> ) <allcaps> atlas </allcaps> uses the <allcaps> osal </allcaps> with <allcaps> rtems </allcaps> on the rad750 , and had to use a different <allcaps> rtems api </allcaps> to attach interrupts . need to research this and either : a : incorporate the <allcaps> atlas </allcaps> code as - is , or b : try to update the function to use the new code for all architectures the <allcaps> atlas </allcaps> code : <code>"
"bogus usage of strncpy in unit tests there are several places in <allcaps> osal </allcaps> where the buffer overflow protection feature of the <code> function is used incorrectly , in a way that causes it to not protect against buffer overflow . correct usage is to pass the size of the destination area as the third argument , so strncpy ( ) will stop before trying to write past the end of the destination storage . incorrect usage observed is passing the length of the <allcaps> source </allcaps> string as the limiting size . the resulting behavior is : - call strlen ( ) to get length of source data . - call strncpy ( ) to copy the string - strncpy ( ) copies bytes until it sees <allcaps> nul </allcaps> or copies n bytes . - in this case , it will always copy all data , and stop before the <allcaps> nul </allcaps> . the upshot of this is <code> always copies the whole source string and never writes a terminating <allcaps> nul </allcaps> . better usage would be to present the destination buffer size as the limiting size in the 3 rd argument ( yes , <code> stops writing after writing the <allcaps> nul </allcaps> ) ."
<number> - <number> - <number> integration candidate this ticket will collect branches to be merged and tested based on the <number> - <number> - <number> <allcaps> ccb </allcaps> . further details will be added in comments .
"document stand - alone build using cmake <section> unable to replicate old make functionality with cmake in a stand - alone <allcaps> osal </allcaps> repo <section> document how to build , execute coverage tests , execute functional tests , and report coverage using cmake ( or if the capability does not exist , add it ) . <section> update build / * <section> n / a <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"stand - alone posix - ng coverage test fails to build <section> posix - ng coverage tests fail to make <section> steps to reproduce the behavior : from a clean directory with base_dir =( your cfs base directory ) <code> builds up to making ut_posix - ng_osapi with the following error : <code> <section> clean build , and execute / pass with make test <section> did not investigate <section> - cfs development server ( vm ) - os : linux <number> . <number> - <number> - generic - versions : rc - <number> . <number> bundle <section> n / a <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> : update function description blocks across <allcaps> osal </allcaps> <section> fix # <number> update inline block comments in function / file headers across all of <allcaps> osal </allcaps> and ensure consistency with the code itself . - all documentation covering the specific details , inputs / outputs and return values should be on the function _declaration_ , not the definition . - the definition should also contain a block comment for visual distinction in the source file , but should be brief and refer back to the prototype / declaration for detail . any detail information that was indicated only with the definition is moved to the declaration . - add doxygen tags / markup to external / public <allcaps> api </allcaps> block comments and expand the descriptions of these functions where needed . - add block comments to the internal <allcaps> api </allcaps> prototypes , but _not_ as doxygen tags / markup . note these functions are internal use , not part of the public <allcaps> api </allcaps> , and are not necessarily intended to be stable across <allcaps> osal </allcaps> releases like the public <allcaps> api </allcaps> is . - removed stray prototypes for functions where there was no actual definition / implementation . <section> : all changes are primarily confined to comments , except where unused / unimplemented prototypes were removed . <section> rebuilt <allcaps> cfe </allcaps> / <allcaps> osal </allcaps> per default config , with unit test enabled . confirm build as successful and unit tests execute . <section> no impact to behavior <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update documentations for os_timerset <section> update timerset and timerdelete <allcaps> api </allcaps> documentations . <section> none <section> none <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update os_timerset to return os_error <section> update os_timerset to return os_error when both parameters are zero . fix # <number> <section> steps taken to test the contribution : <number> . build steps <number> . modify sample app to make os_timerset <allcaps> api </allcaps> call with both parameters as zero <number> . verify return . <section> - <allcaps> api </allcaps> change : os_timerset <section> - hardware - os : ubuntu <date> - cfs <number> , groundsystem <number> . <number> , <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"<allcaps> osal </allcaps> headers define a shared memory <allcaps> api </allcaps> that is not actually implemented anywhere <section> the <code> header defines several prototypes e . g . <code> . however , these functions are not implemented anywhere , and are not used by <allcaps> cfe </allcaps> nor <allcaps> cfs </allcaps> apps . <section> n / a - this is unused code . <section> the headers should not include these prototypes if they are not implemented and there is no plan or requirement to implement them . <section> <code> <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> unit test warnings <section> fixes # <number> - remove unused variable - add local function prototype where missing - qualify all pointers to string literals as <code> <section> rebuild <allcaps> osal </allcaps> per default configuration with unit tests enabled re - ran all unit tests and confirm passage <section> no warnings generated when using ` - wall - werror - std =c 9 9 - pedantic - wwrite - strings - wstrict - prototypes ' <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"many compiler warnings in unit tests when using strict compiler flags <section> for historical backward - compatibility reasons <allcaps> ansi c </allcaps> defines string literals as <code> type , but these strings are typically put into an <code> section on modern processors / linkers , and this section is usually write - protected . if code actually attempts to modify this value , it will generate a segmentation fault and crash . building with <code> causes the compiler to treat string literals as <code> instead , thereby generating a warning if passed or assigned to a non - const pointer value . <section> configure with <code> and observe many warnings generated in the unit test code . <section> the build should be free of warnings , such that <code> can be enabled by default . <section> ubuntu <number> ( <number> - bit ) <section> joseph hickey , vantage systems , inc ."
"release candidate <number> merge to master <section> bulk merge to <number> and version update <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> , updated to latest cfe / <allcaps> osal </allcaps> / <allcaps> psp </allcaps> rc branches and setup / built via standard instructions <number> . ran cfe and observed version update <code> <section> major behavior changes will be documented in the <allcaps> vdd </allcaps> upon release ( no major / requirements updates ) - last gen build no longer included - refactored shared code - numerous bug fixes and improvements ( no significant <allcaps> api </allcaps> changes ) <section> - cfs development server - ubuntu <number> . <number> , <number> . <number> - <number> - generic , x64 - <number> . <number> bundle with this update <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added automated build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <number> . verified that each unit test runs and passes <section> - auto build will be performed whenever new code is pushed to github - unit tests will be executed <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"rtems timer can not be disabled i think rtems os_timerset ( ) not satisfy it ' s description in <allcaps> api </allcaps> document image2018 - <number> - 1 _17 - <number> - <number> <img> <url> in <allcaps> posix api </allcaps> , call os_timerset ( ) with "" start_msec = <number> "" causes timer stop but rtems just ignore that parameter i hope to change <allcaps> osal </allcaps> rtems api code to if ( start_time > <number> ) { os_usecstoticks ( start_time , & timeout ) ; status = rtems_timer_fire_after ( os_timer_table [ timer_id ] . host_timerid , timeout , os_timersignalhandler , ( void <wink> timer_id ); if ( status ! = rtems_successful ) { return ( os_timer_err_internal ) ; } } else { * * status = rtems_timer_cancel ( os_timer_table [ timer_id ] . host_timerid ) ; if ( status ! = rtems_successful ) { return ( os_timer_err_internal ) ; }* * }"
"binary semaphore can not be set <number> when it create <url> i think this statement has a problem . if i input semaphore with initial value <number> , this statement ignores input value <number> and make it <number> is there any other intention that i missed ? if not i recommend to fix statement if ( sem_initial_value < <number> ) > > > if ( sem_initial_value <= <number> )"
added missing gitignore rules just adding gitignore rules to prevent the dirty git status when project is built : <code>
"os_queueget bugfix when user uses os_queueget with timeout paramater , then always timeot fails even if actual data aquired"
"pull request partial deadlock fix the <allcaps> osal </allcaps> api uses a global lock to perform some operations using mutex , semaphores , queues and so . this leads to a possible deadlock in the program due the following situation . let "" i "" be the timer interrupt ( sig63 ) : <code> there are some possible solutions to avoid this problem . one is to never use any <allcaps> osal </allcaps> primitives on the interrupt context , which quite limit the library . other would be block all signals during the global lock and let them be pending . this approach may introduce poor performance . other would be find out how to remove these global locks . another could be use safe locks on interrupt handler . this patch implements the blocking signals solution because it is the best trade - off of the current solutions ."
use stdint as common type bases
avoid division by zero in posix targets the tick duration in microseconds may be calculated to zero depending on the processor clock speed . maybe another solution could be using bogomips for calculating the tick duration or even querying sysfs ( i . e . / sys / devices / system / cpu / cpu0 / cpufreq / cpuinfo_max_freq ) . both have drawbacks and in some case zero will be get as a result . also bogomips has recently change and now it can be specified at build time .
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove unnecessary characters from memory dump event testing performed * * build & run + unit tests . <section> increases the number of bytes that can be dumped in the event message string dramatically ( by around double , depending on the value that is set for <code> ) . <section> <user>"
fix # <number> : revert merge of pr # <number> . fixes # <number> . <section> reverts # <number> . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"revert pr # <number> the changes included in pr # <number> introduce bugs . we will revert the pr for this release , then revisit it following release . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , moved command validation out of command functions fixes # <number> , validate command before calling the command function instead of after . <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"apps should check / verify msg <allcaps> before </allcaps> calling handler copy of <url> the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : case sample_app_noop_cc : if ( sample_app_verifycmdlength ( & sbbufptr - > msg , sizeof ( sample_app_noopcmd_t ) ) ) { sample_app_noop ( ( sample_app_noopcmd_t <wink> sbbufptr ) ; } this is different from mm , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove redundant use of "" dummy "" in test code testing performed * * github ci actions all passing successfully ( incl . unit tests etc . ) <section> no change to behavior . test code is simpler and cleaner when redundant qualifiers are removed . <section> avi weiss <user>"
"remove redundant use of "" dummy "" in test code expected behavior * * simplify test code by removing redundant qualifiers . <section> avi weiss <user>"
null termination of strings - static analysis audit mm_dump . c : mm_dumpineventcmd - function should be updated to ensure <allcaps> null </allcaps> termination of eventstring . <section> function should be updated to ensure <allcaps> null </allcaps> termination of eventstring . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , <number> - bit align cmd / tlm structures adds padding to cmd & tlm data structures for <number> - bit alignment . <section> updated ground database file ( s ) and ran build verification tests against both <number> & <number> bit systems . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
cmd / tlm structures not <number> - bit aligned <section> mm command and telemetry data structures are not <number> - bit aligned . <section> <number> - bit align the data structures <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> the make and lcov tests were successfully executed on these code changes with the werror flag <url> commented out . <url> is a separate piece of work that addresses the outstanding compile errors . <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
new cppcheck errors : ' [ unreadvariable ] ' and ' [ unusedvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch mm source code . <section> cppcheck should run without errors . <section> avi <user>
"fix # <number> , add mm_segmentbreak ( ) to mm_fillmem ( ) testing performed * * ci run + build & unit tests still passing successfully . <section> removes this source of potential <allcaps> cpu </allcaps> hogging . <section> avi weiss <user>"
"fix # <number> , remove unnecessary characters from memory dump event testing performed * * build & run + unit tests . <section> increases the number of bytes that can be dumped in the event message string dramatically ( by around double , depending on the value that is set for <code> ) . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , move memory types to enums fix # <number> , created enum mm_memtype_t for memory types <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . v testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in mm that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , initialize return code to false fix # <number> , initialize return codes and remove return statements from the end of void functions <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments testing performed n / a expected behavior changes no impact to behavior system ( s ) tested on n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , requirements cleanup and add mm2000 . <number> - fix # <number> <section> na <section> none , requirements updates only ( cleanup and add missing ) <section> na <section> needs careful review . <repeated> just submitting the changes to start the process <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale mm3400 and mm3500 requirements rationale are empty : <url> <section> fill in <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove stray terminators <url> <url> <section> remove <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"clarify incomplete or unclear requirements for commands some requirements are unclear or derive their meaning from the parent requirement <section> in general , rewrite <allcaps> all </allcaps> requirements in <allcaps> ears </allcaps> format . <section> fix a small subset of requirements , specifically | number | new text | | - - - | - - - | | mm2000 | when mm receives a poke command , mm shall write the command - specified number of bits of data to the command - specified <allcaps> ram </allcaps> address . | mm2000 . <number> | when mm writes data to <allcaps> ram </allcaps> , mm shall generate an event message containing the following data : < br / > <number> . address written ; < br / > <number> . length of data written ; < br / > <number> . value of the data written | | * <allcaps> new </allcaps> * <section> | when mm receives a poke command , if the data size is not <number> , <number> , or <number> bits , mm shall reject the command . | | mm2002 | when mm receives a peek command , mm shall read the command - specified number of bits of data from the command - specified <allcaps> ram </allcaps> address and generate an event message containing the following data : < br / > <number> . address read ; < br / > <number> . length of data read ; < br / > <number> . value of the data read | mm2003 | when mm receives a “ write with interrupts disabled ” command , mm shall write up to a compile - time - specified number of bytes to the command - specified <allcaps> ram </allcaps> memory address with interrupts disabled . | | mm2003 . <number> | when mm receives a “ write with interrupts disabled ” command , mm shall verify that the command - specified <allcaps> crc </allcaps> matches the computed <allcaps> crc </allcaps> of the data . | | mm2003 . <number> | when mm receives a “ write with interrupts disabled ” command , if the command - specified <allcaps> crc </allcaps> fails validation , mm shall reject the command . | | mm2004 | when mm receives a “ dump to event ” command , mm shall read the command - specified number of consecutive bytes from the command - specified <allcaps> ram </allcaps> memory address and generate an event message containing the data . | | mm2004 . <number> | when mm receives a “ dump to event ” command , if the number of bytes exceeds the maximum event message size then the command shall be rejected . | | mm2100 . <number> | when mm receives a “ load from file ” command , if the <allcaps> crc </allcaps> contained in the command - specified file fails validation , mm shall reject the command . | <section> none <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>"
"fix # <number> , remove cfe_psp_memset and cfe_psp_memcpy use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use %p for printing addresses , resolves truncation - fix # <number> <section> built and ran unit tests , passed <section> no longer truncates addresses in event messages <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit ( w / app additions ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict strict cppcheck style warning - fix # <number> <section> ci <section> none , just squashes strict cppcheck warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , explictly size md dwell table unit test string - fix # <number> <section> ci <section> fixes build error identified in issue <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , combine multiple unnecessary <code> / <code> variables testing performed * * github ci actions all passing successfully . <section> no change to functional behavior . code is simplified - improving future maintainability . <section> avi weiss <user>"
"multiple unnecessary <code> / <code> variables can be combined code snips * * example : <url> the result of <code> is just assigned to <code> anyway , so they can be combined without any change to the functional behavior . <section> simplify code by removing unnecessary <code> / <code> variables . <section> avi weiss <user>"
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"combine consecutive , mutually - exclusive status checks code snips * * <url> <url> <section> combine into an <code> / <code> - no need to do <number> evaluations . <section> avi weiss <user>"
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
md <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"fix # <number> , remove unintentionally repeated identical assert testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . coverage unchanged : <code> <section> test code cleaner without unintentional ( and redundant ) duplicate assert . <section> avi weiss <user>"
identical assert repeated twice ( unintentionally ) code snips * * <url> <section> removing unintentionally repeated test will make cleaner test code . <section> avi weiss <user>
"md dwell table tests string error while compiling the latest version of md with unit tests enabled , my build environment gave me the following error : <code> <section> the bug relates to this line and a few others with the same variable used for testing md signatures . it seems as though the compiler does not like that <code> is implicitly a <number> byte string as opposed to a <number> byte string , which is what the function <code> expects <url> for now , simply explicitly using the size of the array in the variable definition seems to work successfully . <code> after changing to this locally wherever it appeared , my build works fine ."
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove initializations causing cppcheck errors testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . cppcheck now passes without error again . <section> avi <user>"
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch md source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , add enum to remove magic number error codes from getdwelldata ( ) testing performed * * github ci actions ( incl . build + run , md unit tests ) all passing successfully . <section> no change in logic . removes magic number error codes , making error types easier to identify . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in md that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments testing performed n / a expected behavior changes no impact to behavior system ( s ) tested on n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , remove unreachable code - fix # <number> removed unreachable code . <section> ci <section> none <section> ci <section> not eventually the command processing will likely be replaced w / <allcaps> api </allcaps> calls and generic support , so just doing minimal fixes here for coverage . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update code coverage for md_app_tests . c fix # <number> updated unit tests for md_app_tests . c for more coverage . <section> <number> . lcov - - capture - - rc lcov_branch_coverage = <number> - - directory build - - output - file coverage_test . info <number> . lcov - - rc lcov_branch_coverage = <number> - - add - tracefile coverage_base . info - - add - tracefile coverage_test . info - - output - file coverage_total . info <number> . genhtml coverage_total . info - - branch - coverage - - output - directory lcov <section> no impact to behavior <section> os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"uncovered lines / branches - fix # <number> : found instances of branches that can never be reached by unit tests . <section> functions with statements that can never be reached : md_app . c : md_execrequest can not hit default case since command codes are already verified by <code> <url> md_app . c : md_searchcmdhndlrtbl can not reach this else statement because the message type can not be anything other than <code> or <code> <url> md_dwell_tbl . c : md_tablevalidationfunc <url> <section> <percent> coverage <section> see above <section> ci <section> none <section> haven carlson , <allcaps> nasa </allcaps>"
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> steps taken to test the contribution : ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add missing requirements rationale - fix # <number> <section> na - requirements rationale updates only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , gave md_tbl_val_null_ptr_err_eid unique id a clear and concise description of what the contribution is . changed the id of md_tbl_val_null_ptr_err_eid to <number> to be unique . fix # <number> <section> steps taken to test the contribution : <number> . push change <number> . check unit test output to confirm the event ' s new id <section> no impact to behavior <section> browser <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> , resolve ut uninit var static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"md is unable to dwell on application - private symbols md is unable to get application symbols , due to changes in cfe to make application symbols private : <url> <section> using os_modulesymbollookup should be an option to peek / telemeter app - private symbols <section> leave as - is ; implementation of os_modulesymbollookup is the same as os_symbollookup on vxworks anyways , so it would appear this would only affect linux . <section> <url> <section> john pham , northrop grumman"
"fix # <number> , resolve strict cppcheck style warnings - fix # <number> <section> ci <section> none , just squashes strict cppcheck warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"static analysis issues relative to flight code handful of static analysis issues in the "" red "" identified ( non - style issues ) . need to resolve these . filter : - file : elf - file : ut - file : cfe - file : os - file : cf_ - file : _lab_app . c ! ( significance : style ) should resolve and / or disposition the higher ranked ones at minimum . note license restricts publishing issues . imported from <allcaps> gsfccfs </allcaps> - <number>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable <section> other coverage failures : failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
incorrect unit tests are in this repository the unit tests in this repository are not the same as the tests on sourceforge and do not work correctly .
"ic : caelum - rc4 + dev54 * combines <kiss> cfe v7 . <number> - rc4 + dev356 osal v6 . <number> - rc4 + dev223 <section> *cfe* - nasa / cfe # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"header guards for c + + applications to call <allcaps> cfe </allcaps> , <allcaps> osal </allcaps> , <allcaps> psp </allcaps> wrap all public headers in <allcaps> cfe </allcaps> , <allcaps> osal </allcaps> , and <allcaps> psp </allcaps> in hedaer guards that allow inclusion from c + + translation units : <code> <section> the alternative is to wrap the <code> in the calling apps with the header guards . <section> - <url> - <url> - <url> - <url> <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"fast - tracked cfe pull request nasa / cfe # <number> , nasa / cfe # <number> , nasa / cfe # <number> : resolves nasa / cfe # <number> , nasa / cfe # <number> . reverts nasa / cfe # <number> setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . for a user that has customized cfe_msgids . h , this will get conflicting values . if / when users have migrated to module - specific msgid files , this will be ok , but for now this can break things . fixes nasa / cfe # <number> , nasa / cfe # <number> <section> build with cfe_mission_time_cfg_default_utc = = true build using override of <code> ( only ) . <section> build and test succeeds no conflicting msgids if user has overridden <code> but not <code> <section> debian <section> <user>"
"fast - tracked cfe pull request : resolves cfe # <number> . this allows the script to pick up the file if it was named simply "" cfe_msgids . h "" or "" cfe_platform_cfg . h "" , rather than insisting it be named with a platform - specific prefix fixes nasa / cfe # <number> <section> build and run with stakeholder configuration <section> a file named <code> is picked up by the build system , as expected . <section> debian <section> <user>"
fast - tracked cfe pull request : resolves cfe # <number> . reverts cfe # <number> - fixes cfe # <number> <section> n / a <section> # <number> is removed . <section> n / a <section> dylan z . baker - <allcaps> nasa gsfc </allcaps>
"ic : caelum - rc4 + dev53 * combines <kiss> cfe v7 . <number> - rc4 + dev342 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"fix # <number> , increase wait time in test workflow increase the wait time required to call a test ' frozen ' . this will prevent tests from erroneously being called ' frozen ' and allow the tests to complete successfully . <repeated> fixes issue # <number> <section> executed tests to ensure each tests completes in the allotted time . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
github workflow does not allow enough time for all functional tests to run build - cfs - deprecated . yml and build - cfs . yml workflows need to be updated to prevent functional tests from exiting prematurely . the current wait time of <number> seconds is not enough time to allow all of the tests to run successfully . <section> execute the functional tests via the workflow <section> tests complete successfully . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"section <number> of userguide . pdf has duplicate entries . very minor issue , there is a duplication of entries in <number> of the cfe - userguide . pdf page <number> . i only mention it as i thought there was a difference in the entries and spent a few minutes trying to understand it . screen <img>"
"ic : caelum - rc4 + dev52 * combines <kiss> cfe v7 . <number> - rc4 + dev334 osal v6 . <number> - rc4 + dev217 <section> *cfs* - # <number> - # <number> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *osal* - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"ic : caelum - rc4 + dev51 * combines <kiss> cfe v7 . <number> - rc4 + dev318 sch_lab v2 . <number> - rc4 + dev57 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> *sch_lab* - nasa / sch_lab # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"ic : caelum - rc4 + dev50 * combines <kiss> cfe v7 . <number> - rc4 + dev312 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"do not know how to set cfe_system_pspname on darwin system trying to build on macos , the build fails as no darwin support . <section> steps to reproduce the behavior : try building on a macos platform . <section> portable i would take as any platform . <section> if applicable , add references to the software . <section> mac pro ( <number> ) intel xenon processor macos <number> . <number> <section> ex0atmospheric <user> - mac - pro cfs % make <allcaps> simulation </allcaps> = native prep mkdir - p "" build "" ( cd "" build "" & & cmake - dcmake_install_prefix <annoyed> exe - dcmake_build_type = debug "" / users / ex0atmospheric / projects / cfs / cfe "" ) - - omit_deprecated = false : deprecated elements included in build - - search path for modules : apps ; libs ; psp / fsw / modules ; cfe / modules - - module ' core_api ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / core_api - - module ' core_private ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / core_private - - module ' ci_lab ' found at / users / ex0atmospheric / projects / cfs / apps / ci_lab - - module ' to_lab ' found at / users / ex0atmospheric / projects / cfs / apps / to_lab - - module ' sch_lab ' found at / users / ex0atmospheric / projects / cfs / apps / sch_lab - - module ' cfe_assert ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / cfe_assert - - module ' sample_app ' found at / users / ex0atmospheric / projects / cfs / apps / sample_app - - module ' sample_lib ' found at / users / ex0atmospheric / projects / cfs / libs / sample_lib - - module ' es ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / es - - module ' evs ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / evs - - module ' fs ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / fs - - module ' sb ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / sb - - module ' tbl ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / tbl - - module ' time ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / time - - module ' osal ' found at / users / ex0atmospheric / projects / cfs / osal - - module ' psp ' found at / users / ex0atmospheric / projects / cfs / psp - - module ' msg ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / msg - - module ' sbr ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / sbr - - module ' resourceid ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / resourceid - - module ' config ' found at / users / ex0atmospheric / projects / cfs / cfe / modules / config - - osal_system_bsptype not defined , no <allcaps> osal </allcaps> implementation will be compiled - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / core_api / config / default_cfe_mission_cfg . h for mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / sample_defs / sample_perfids . h for perfids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / core_api / config / default_cfe_core_api_interface_cfg . h for cfe_core_api_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_mission_cfg . h for cfe_es_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_interface_cfg . h for cfe_es_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_extern_typedefs . h for cfe_es_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_fcncodes . h for cfe_es_fcncodes . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_msgdefs . h for cfe_es_msgdefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_msg . h for cfe_es_msg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_msgstruct . h for cfe_es_msgstruct . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / es / config / default_cfe_es_topicids . h for cfe_es_topicids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_mission_cfg . h for cfe_evs_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_interface_cfg . h for cfe_evs_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_extern_typedefs . h for cfe_evs_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_fcncodes . h for cfe_evs_fcncodes . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_msgdefs . h for cfe_evs_msgdefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_msg . h for cfe_evs_msg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_msgstruct . h for cfe_evs_msgstruct . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / evs / config / default_cfe_evs_topicids . h for cfe_evs_topicids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / fs / config / default_cfe_fs_mission_cfg . h for cfe_fs_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / fs / config / default_cfe_fs_interface_cfg . h for cfe_fs_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / fs / config / default_cfe_fs_filedef . h for cfe_fs_filedef . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / fs / config / default_cfe_fs_extern_typedefs . h for cfe_fs_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_mission_cfg . h for cfe_sb_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_interface_cfg . h for cfe_sb_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_extern_typedefs . h for cfe_sb_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_fcncodes . h for cfe_sb_fcncodes . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_msgdefs . h for cfe_sb_msgdefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_msg . h for cfe_sb_msg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_msgstruct . h for cfe_sb_msgstruct . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / sb / config / default_cfe_sb_topicids . h for cfe_sb_topicids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_mission_cfg . h for cfe_tbl_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_interface_cfg . h for cfe_tbl_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_extern_typedefs . h for cfe_tbl_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_fcncodes . h for cfe_tbl_fcncodes . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_msgdefs . h for cfe_tbl_msgdefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_msg . h for cfe_tbl_msg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_msgstruct . h for cfe_tbl_msgstruct . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / tbl / config / default_cfe_tbl_topicids . h for cfe_tbl_topicids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_mission_cfg . h for cfe_time_mission_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_interface_cfg . h for cfe_time_interface_cfg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_extern_typedefs . h for cfe_time_extern_typedefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_fcncodes . h for cfe_time_fcncodes . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_msgdefs . h for cfe_time_msgdefs . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_msg . h for cfe_time_msg . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_msgstruct . h for cfe_time_msgstruct . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / time / config / default_cfe_time_topicids . h for cfe_time_topicids . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / msg / option_inc / default_cfe_msg_hdr_pri . h for cfe_msg_hdr . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / msg / option_inc / default_cfe_msg_sechdr . h for cfe_msg_sechdr . h - - using file : / users / ex0atmospheric / projects / cfs / cfe / modules / resourceid / option_inc / cfe_resourceid_simple . h for cfe_resourceid_typedef . h - - configuring for system arch : native / default_cpu1 - - omit_deprecated = false : deprecated elements included in build cmake error at cmake / arch_build . cmake : <number> ( message ) : do not know how to set cfe_system_pspname on darwin system call stack ( most recent call first ) : cmakelists . txt : <number> ( prepare ) - - configuring incomplete , errors occurred ! cmake error at cmake / mission_build . cmake : <number> ( message ) : failed to configure native_default_cpu1 call stack ( most recent call first ) : cmakelists . txt : <number> ( process_arch ) - - configuring incomplete , errors occurred ! make : * * * [ prep ] error <number> ex0atmospheric <user> - mac - pro cfs % <section> full name and company / organization if applicable"
"ic : caelum - rc4 + dev49 * combines <kiss> cfe v7 . <number> - rc4 + dev304 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev48 * combines <kiss> cfe v7 . <number> - rc4 + dev287 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"ic : caelum - rc4 + dev47 * combines <kiss> cfe v7 . <number> - rc4 + dev276 osal v6 . <number> - rc4 + dev213 <allcaps> psp </allcaps> v1 . <number> - rc4 + dev76 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *osal* - nasa / osal # <number> * <allcaps> psp </allcaps> * - nasa / <allcaps> psp </allcaps> # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"ic : caelum - rc4 + dev46 * combines <kiss> cfe v7 . <number> - rc4 + dev268 sch_lab v2 . <number> - rc4 + dev53 to_lab v2 . <number> - rc4 + dev45 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *sch_lab* - nasa / sch_lab # <number> *to_lab* - nasa / to_lab # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev45 * combines <kiss> <allcaps> psp </allcaps> v1 . <number> - rc4 + dev71 ci_lab v2 . <number> - rc4 + dev43 sample_app v1 . <number> - rc4 + dev39 sch_lab v2 . <number> - rc4 + dev49 to_lab v2 . <number> - rc4 + dev41 <section> * <allcaps> psp </allcaps> * - nasa / <allcaps> psp </allcaps> # <number> *ci_lab* - nasa / ci_lab # <number> *sample_app* - nasa / sample_app # <number> *sch_lab* - nasa / sch_lab # <number> *to_lab* - nasa / to_lab # <number> co - authored by : joseph hickey < <email> > <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
build doc run session <number> <number> - <number> - <time> . <number> ? <code>
"ic : caelum - rc4 + dev44 * combines <kiss> cfe v7 . <number> - rc4 + dev260 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> co - authored by : joseph hickey < <email> > <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"revisit "" format - check "" workflow - is it needed ? the cfs <allcaps> ccb </allcaps> should revisit the cost / benefit of enforcing the "" format - check "" workflow on every push / pull . the original idea was that it would keep the white space formatting consistent , but in practice there are a lot of nuisances that result from this : - perpetually changing the alignment of variable names ( in declarations ) and the equal sign ( in groups of assignments ) causes extra merge conflicts . this is because a single added variable or assignment might change a group of lines rather than just the single line that added it . if another change is made in parallel nearby that causes lines to be grouped that were not grouped before , this is now a merge conflict , whereas without the formatting change it would be a trivial auto merge . - changes to the tool ( outside our control ) cause changes to the expected formatting of lines . for example clang - format - <number> , which is what the workflow was originally based on , formats slightly differently than clang - format - <number> and clang - format - <number> do , and there is no way ( via config file ) to get an identical output from the newer versions . clang - format - <number> is no longer installable in the most recent "" <allcaps> lts </allcaps> "" distros - this means that as developer transition to newer dev environments , we will not be able to reproduce the expected formatting easily . - the ultimate objective is to make source code most readable for humans , but the tool does not know context , and sometimes "" strict adherence "" to a set of rules yields a _less_ readable result than what a human would write . a prime example is when a table initializer is grouped into logical rows and columns based on its context . for examples of this , see the "" cfe_tbl_cmdhandlertbl "" from an old version of <allcaps> cfe </allcaps> , before clang - format enforcement : <url> compared to the same table in the current version after clang - format messes with the column alignments , start and end braces , etc : <url> other examples include the es object table and any event registration table , where what was originally a logically aligned table became all disorganized . - lastly , we have a few instances of what was a perfectly "" compliant "" source ( see <url> suddenly starts being non - compliant ( see <url> note that the file that failed here ( fm_child_tests . c ) did _not_ change between these two runs . something else changed , but its the same version of clang - format and the same . clang - format file from what i can tell . <section> tools should be a help , not a hinderance . keeping up with clang - format nuisance errors might not be the best use of developer time ? <section> provided inline <section> ubuntu , debian <section> joseph hickey , vantage systems , inc ."
"ic : caelum - rc4 + dev43 * combines <kiss> osal v6 . <number> - rc4 + dev209 cfe v7 . <number> - rc4 + dev154 <section> *osal* - nasa / osal # <number> *cfe* - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev42 <section> *cfs* - # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , do not use - - force option on sarif conversion removes use of <code> option , which appears to have been removed in a recent update ( <number> . <number> , dropped on <number> - <number> - <number> ) . this option was only to overwrite an existing file but that should not be needed in a workflow that runs in a clean environment like this . <section> run workflows <section> no longer errors on this option . <section> github workflow <section> joseph hickey , vantage systems , inc ."
"<allcaps> osal </allcaps> workflow "" static analysis "" fails to convert cppcheck results to <allcaps> sarif </allcaps> * [x ] i performed a cursory search to see if the bug report is relevant , not redundant , nor in conflict with other tickets . * x] i reviewed the [ contributing guide <url> . <section> when running the * static analysis * workflow on a clone of the <allcaps> osal </allcaps> repository , the workflow fails at the step * convert cppcheck results to <allcaps> sarif </allcaps> * since about <number> - <number> - <number> evening <allcaps> met </allcaps> . one day before i successfully executed the same workflow without any error . the error is : ~ ~ ~ run npx "" <user> / sarif - multitool "" convert "" cppcheck_err . xml "" - - tool "" cppcheck "" - - output "" cppcheck_err . sarif "" - - force npx "" <user> / sarif - multitool "" convert "" cppcheck_err . xml "" - - tool "" cppcheck "" - - output "" cppcheck_err . sarif "" - - force shell : / usr / bin / bash - - noprofile - - norc - e - o pipefail { <number> } env : cppcheck_opts : - - project <annoyed> home / runner / work / osal / osal / build / compile_commands . json <allcaps> sarif </allcaps> multitool <number> . <number> © microsoft corporation . all rights reserved . <allcaps> error </allcaps> ( s ) : option ' force ' is unknown . [ . <repeated> ] ~ ~ ~ i am new to github workflows . therefore , this could easily be caused by a mistake on my side . yet , at the first glance the error messages does not look like i am guilty . on the other hand , i cannot imagine someone removed the <code> option from a tool overnight . maybe you can hint me towards my mistake . i am not sure whether the links below will work for you : * this was a successful execution of the workflow <number> - <number> - <number> ( already with <code> flag ) <url> * this is a failure of a re - run from today ( <number> - <number> - <number> ) <url> <section> steps to reproduce the behavior : <number> . create a clone of the <allcaps> osal </allcaps> repository , in the *actions* tab enable workflows , in the *settings* tab → open *actions* ( in the left column ) → *general* → in * workflow permissions * → tick * read write permission * → *save* <number> . in the *actions* tab , click on the * static analysis * workflow , from * run workflow * select * branch : main * , then click on * run workflow * <number> . wait till the new workflow appears in the list and terminates execution ( takes about one minute ) <number> . click on the workflow entry in the list ( the new workflow will have a red bubble in front of it ) <number> . in the box *annotations* click on * run static analysis * <number> . a black scrolling widget with the workflow steps and their output will appear . <number> . scroll up to the place with the red bubble on the left side , titled * convert cppcheck results to <allcaps> sarif </allcaps> * <number> . see the above error message just below of it <section> the * static analysis * workflow should execute without errors in the steps which convert the results in other formats . <section> - / - <section> github , clone of <allcaps> osal </allcaps> repository <section> - / - <section> frank kühndel – embedded - brains gmbh"
"ic : caelum - rc4 + dev41 * combines <kiss> osal v6 . <number> - rc4 + dev205 <section> *osal* - nasa / osal # <number> - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev40 * combines <kiss> osal v6 . <number> - rc4 + dev199 tblcrctool v1 . <number> - rc4 + dev28 <section> *osal* - nasa / osal # <number> *tblcrctool* - nasa / tblcrctool # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev39 * combines <kiss> cfe v7 . <number> - rc4 + dev250 osal v6 . <number> - rc4 + dev195 <section> *cfe* - nasa / cfe # <number> *osal* - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"ic : caelum - rc4 + dev38 * combines <kiss> osal v6 . <number> - rc4 + dev191 <section> *osal* - nasa / osal # <number> - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"cfs caelum release currently , the latest caelum appears to be release candidate <number> . are there any plans to wrap up the final release someday ?"
"ic : caelum - rc4 + dev37 * combines <kiss> osal v6 . <number> - rc4 + dev184 <section> *osal* - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev36 * combines <kiss> cfe v7 . <number> - rc4 + dev246 <section> *cfe* - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"update format check workflow to newer clang - format version the format check workflow is currently running on ubuntu <number> , which in turn includes clang - format version <number> by default . versions of clang - format up through <number> have a bug / limitation where the <code> setting is not implemented . the cfs format config has this set as "" right "" : <url> however , in version <number> this was fixed , and it now honors this setting . as such , if a user has a newer version , they will get format discrepancies when trying to submit a pr . this is the case when using ubuntu <number> as it includes version <number> by default . for an example , see any struct that contains a pointer , such as : <code> now needs to be : <code> due to the <code> now taking effect . unfortunately , setting <code> does not replicate the version <number> format either , it produces this instead : <code> sadly it seems there is no backward - compatible option to replicate the version <number> format with version <number> ( or at least none that i could find ) . furthermore , it is not possible to install version <number> in ubuntu <number> either . <section> eventually , we will have to upgrade to a newer version of clang - format , and deal with these discrepancies . as a transition , version <number> is easily installable on ubuntu <number> via the packages offered from <code> ( official upstream for clang ) . recommendation would be to change the format - check workflow to run version <number> instead of version <number> , and update the code accordingly for all of the whitespace differences it produces similar to the above example . this can be done by simply bumping the <code> to be ubuntu <number> instead of <number> , and changing nothing else ( note that this needs to happen eventually anyway , since <code> is now <number> on github , and <number> will be deprecated at some point , although this may be a while yet ) . <section> in the interim , it is possible to install clang - format version <number> on both ubuntu <number> and <number> , which seems to produce the same format as v10 did ( at least with cfs config file ) . but this is not the default version in either , and only defers the issue , because v12 depends on a version of python that is no longer available in <number> or newer and thus becomes non - installable in anything newer . so this does not resolve the incompatibility , it only adds setup complexity while delaying the eventuality of having to deal with the whitespace changes . <section> joseph hickey , vantage systems , inc ."
"ic : caelum - rc4 + dev35 * combines <kiss> cfs - groundsystem v3 . <number> - rc4 + dev43 <section> * cfs - groundsystem * - nasa / cfs - groundsystem # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"cfs draco release hello , we are stating a project based on the cfs framework for my company . we noticed that the latest official release is <allcaps> cfe </allcaps> <number> , and since then only "" release candidates "" have been released . the latest is draco - rc3 ( for <number> ) , and we would like to use this version as our baseline to start our development . the questions are : - will draco become an official release later on ? if not , is there a plan for the next official release ? - is there any reasons why since <allcaps> cfe </allcaps> <number> only release candidates have been published ? all the documentation seems adequate ( requirements , traceabilities , unit tests and code coverage results , release notes ) for each cfs core and app components , and draco - rc3 seems fully validated . we simply wanted to confirm this point before we go ahead in using draco . many thanks in advance , guillaume"
"ic : caelum - rc4 + dev34 * combines <kiss> psp v1 . <number> - rc4 + dev167 osal v6 . <number> - rc4 + dev179 <section> *psp* - nasa / psp # <number> - nasa / psp # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"question about apache - <number> in space excerpt from the apache - <number> license : . <repeated> each contributor hereby grants to you a perpetual , worldwide . <repeated> copyright license . <repeated> a perpetual , worldwide . <repeated> patent license . <repeated> the copyright and patent grants are restricted : <section> . a satellite around earth is arguably not included by that definition . or is it ? what about software on the moon or on mars ? is apache - <number> licensed software legally usable in space ?"
"mm : provide and use symbol name in the memory manager dump file <section> found in testing for <allcaps> pace </allcaps> mission the memory manager file header has space for the symbol name . this should be populated whenever a symbol is used for a memory dump - otherwise the source of the file data may not be understood . it is also needed if the file is to be used for loading data by symbol . when the symbol name is present , the data has to be loaded using the address for the symbol plus the offset present in the load file . <section> <number> . issue a mm dump - to - file command using a valid <allcaps> fsw </allcaps> symbol and a non - zero offset <number> . downlink and examine the file . verify the mm header contains the correct symbol , offset and appropriate data . <number> . if the items in ( <number> ) are present , issue a mm load file command and verify that the data is correctly reloaded to the specified memory location . <section> no symbol name will be present in the mm header . <section> the <allcaps> pace fsw </allcaps> team has corrected this in their build <number> . <number> - so should be able to provide code . <section> <allcaps> pace dleon </allcaps> processor os : vxworks <number> versions cfe <date> mm <number> . <number> <section> none <section> michael lambertson goddard space flight center code <number> / vantage systems , inc ."
"ic : caelum - rc4 + dev33 * combines <kiss> cfe v7 . <number> - rc4 + dev242 to_lab v2 . <number> - rc4 + dev35 <section> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *to_lab* - nasa / to_lab # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"fix # <number> , remove <allcaps> readme </allcaps> link to empty fs_lib repository expected behavior changes * * none <section> avi weiss <user>"
remove link to empty repository ( fs_lib ) code snips * * image <img> image <img> <section> avi weiss <user>
"ic : caelum - rc4 + dev32 * combines <kiss> cfe v7 . <number> - rc4 + dev233 <section> *cfe* - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev31 * combines <kiss> osal v6 . <number> - rc4 + dev173 cfe v7 . <number> - rc4 + dev229 <section> *cfs* - # <number> - # <number> - # <number> - # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"fix # <number> , add compatibility for <allcaps> cfs </allcaps> app doc build explicitly pre - build the "" osal_public_api_headerlist "" target which will fix documenation workflows that have not been updated to include this dependency . fixes # <number> <section> build documentation <section> <allcaps> cfs </allcaps> app doc builds should now all work again , until they can be updated properly <section> github hosted runner <section> this is gated by a boolean to make it easier to run app builds <allcaps> without </allcaps> this , in order to test the workflow after putting in the real fix . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , show stderr output on doc build workflow tee the stderr output to the console , so if the "" build documentation "" step fails in this workflow , the errors will be visible in the log . without this , the errors are hidden in a file that is never shown nor uploaded so it cannot be seen what went wrong . fixes # <number> <section> build documentation <section> if an error occurs , the error will be visible in the workflow run log . <section> github hosted runner <section> this also makes a minor change to setting the applist to simplify the script and also make it a bit more robust ( this does not need to update an existing line , it can just set the value , and thus does not depend on the line already being there to begin with ) . <section> joseph hickey , vantage systems , inc ."
"patch documentation build for <allcaps> osal api </allcaps> file most <allcaps> cfs </allcaps> app documentation builds now depend on a file produced by the <allcaps> osal </allcaps> documentation build , but there is not ( yet ) a dependency encoded into the cmakelists . txt file to ensure this gets produced before attempting the doc build . <section> the correct solution is to add a dependency for the doc build into cmakelist . txt to each app that does have this dependency . in the meantime , the failing workflow can be worked around by first forcing build of the <allcaps> osal api </allcaps> doxyfile . <section> this would be just a short term patch to make the workflows run . should be removed once the <allcaps> cfs </allcaps> apps are fixed . <section> joseph hickey , vantage systems , inc ."
"documentation build does not show errors when it fails when using the workflow in <code> , if the "" build document "" step fails , then the job stops there . however , the stderr output was redirected to a file , which is not uploaded as an artifact until the next step . therefore , it is not possible to see what actually failed by looking at the log , because the information is in a file that is never displayed nor uploaded . <section> show the stderr output on the console so it can be seen even if artifacts are not uploaded . <section> adjusting the redirection should solve this . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update action versions to v3 update cache , checkout , and upload - artifact actions from v2 to v3 . should be a drop - in replacement and removes a warning about node . js <number> deprecation . fixes # <number> <section> run all github workflows <section> no more warnings about node . js <number> deprecation <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"warning about node . js <number> deprecation in github actions github produces a warning about node . js <number> being obsolete with every workflow run . it has been fixed upstream , but <allcaps> cfs </allcaps> uses the old version . this can be fixed by updating the version of the action from v2 to v3 . <section> run any of the reusable github workflows that use the "" v2 "" actions . <section> should not use deprecated versions of actions <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"ic : caelum - rc4 + dev30 * combines <kiss> osal v6 . <number> - rc4 + dev165 cfe v7 . <number> - rc4 + dev218 sample_lib v1 . <number> - rc4 + dev32 <section> *osal* - nasa / osal # <number> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *sample_lib* - nasa / sample_lib # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"ic : caelum - rc4 + dev29 * combines <kiss> osal v6 . <number> - rc4 + dev161 <section> *cfs* - # <number> - # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"translate static analysis workflow error locations into hyperlinks when the static analysis workflow fails , it is still somewhat tedious to navigate to the location where the error is and view the code . the <allcaps> sarif </allcaps> results can be navigated , but one must go to the "" security "" tab , and search for the pr by number , to view a list that has links to code . it is somewhat tedious and there are several clicks . <section> provide more direct linkage between the "" summary "" screen of the workflow run and the source code . - turn the "" location "" column in the table into a hyperlink to the source code ( should be easy ) - provide a direct link to the "" code scanning alerts "" page that is associated with this pr , if the workflow was from a pull request . both of these would be time - savers when checking results . <section> joseph hickey , vantage systems , inc ."
"ic : caelum - rc4 + dev28 * combines <kiss> cfe v7 . <number> - rc4 + dev205 osal v6 . <number> - rc4 + dev151 cfs - groundsystem v3 . <number> - rc4 + dev39 <section> *cfs* - # <number> *cfe* - nasa / cfe # <number> *osal* - nasa / osal # <number> * cfs - groundsystem * - nasa / cfs - groundsystem # <number> - nasa / cfs - groundsystem # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"fix # <number> , disable codeql av rule <number> fixes # <number> <section> tested on fork <section> codeql will not scan for av rule <number> <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"disable codeql av rule <number> related to <url> do not need the rule as unions are used judiciously . <section> remove av rule <number> <section> keep as is . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , rework static - analysis workflow updates the static analysis workflow : - make it work with the latest ubuntu and cppcheck - allow callers to pass in a project configuration to get "" real "" macro definitions and include paths - streamlined - only generate <allcaps> xml </allcaps> outputs , then use <allcaps> xslt </allcaps> to convert that to text , rather than running the tool twice . - streamlined - merge the two <allcaps> xml </allcaps> outputs into one , before converting to sarif and uploading - streamlined - call the sarif conversion tool directly , rather than going through a 3 rd party action . fixes # <number> <section> update <allcaps> osal </allcaps> static analysis to point to this updated reusable workflow instead of the current one ( nasa / cfs main ) and check results . <section> more complete / thorough results , while being a simpler workflow overall <section> github workflow runner ( ubuntu image ) <section> this uses the updated baseline , and the cppcheck tool reports more errors than the old version did . so repos that referred to this workflow in the past may have new errors now . <section> joseph hickey , vantage systems , inc ."
"ic : caelum - rc4 + dev27 * combines <kiss> cfe v7 . <number> - rc4 + dev201 osal v6 . <number> - rc4 + dev147 <section> *cfs* - # <number> - # <number> *cfe* - nasa / cfe # <number> *osal* - nasa / osal # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"how the space data link security ( <allcaps> sdls </allcaps> ) protocol is implemented in cfs ? hi , i am trying to understand the cfs structure . but i am not still clear how the <allcaps> sdls </allcaps> protocol is implemented in this project . if you can tell me the components or modules or files where this protocol is implemented and how it is enforced that will give me a better idea ."
"fix # <number> , adds <allcaps> ccb </allcaps> agenda generation workflow - fixes # <number> <section> test on fork : <url> <number> ) navigate to "" update wiki "" action ( <url> <number> ) click "" run workflow "" drop - down on right - hand side of screen <number> ) for "" use workflow from "" , select "" ccbagenda "" branch . <number> ) click green button "" run workflow "" <number> . ) navigate to "" update wiki "" action and observe newly created "" ccb - agenda "" artifact . <section> user can use this workflow to update the nasa / cfs wiki page with a new <allcaps> ccb </allcaps> agenda markdown file , and other updates to the wiki page ' s _sidebar . md and home . md files . the workflow can be ran any day of the week and appropriately handle correct date stamping . the <allcaps> ccb </allcaps> agenda markdown file generated with this workflow is ordered from top to bottom of authors with pull requests totaling least additions / deletions to most . a user manually runs this workflow from the actions tab of nasa / cfs . <section> forked cfs wiki : <url> <section> n / a <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> justin figueroa , vantage systems"
"ic : caelum - rc4 + dev26 * combines <kiss> cfe v7 . <number> - rc4 + dev197 osal v7 . <number> - rc4 + dev143 psp v1 . <number> - rc4 + dev61 elf2cfetbl v3 . <number> - rc4 + dev30 sch_lab v2 . <number> - rc4 + dev45 <section> *cfs* - # <number> *cfe* - nasa / cfe # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> *psp* - nasa / <allcaps> psp </allcaps> # <number> - nasa / <allcaps> psp </allcaps> # <number> *sch_lab* - nasa / sch_lab # <number> *elf2cfetbl* - nasa / elf2cfetbl # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"fix # <number> , remove obsolete lgtm config file - fix # <number> <section> ci <section> none <section> ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove obsolete lgtm config file no longer using <allcaps> lgtm </allcaps> , replaced by codeql / github scanning . <section> remove obsolete . lgtm . yml file <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add category to cppcheck workflow fixes # <number> <section> made changes to cfs fork and test on <allcaps> psp </allcaps> fork . image <img> <section> same behavior . added category so second <allcaps> sarif </allcaps> file upload does not fail . <section> workflow may fail due to ubuntu being out of date . github will now throw brownouts for out of date ubuntu versions . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"static analysis failing on second <allcaps> sarif </allcaps> upload the cppcheck or static analysis workflow fails when reaching the upload of the second sarif file . this is because if you try to upload multiple <allcaps> sarif </allcaps> files for the same tool and category in a single github actions workflow run , the misconfiguration is detected and the run will fail . <section> upload two <allcaps> sarif </allcaps> files in one commit . <section> documentation : <url> to fix this issue , the workflow should use different ids , categories , or tool names . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"ic : caelum - rc4 + dev25 * combines <kiss> osal v6 . <number> - rc4 + dev120 <section> *cfs* - # <number> - # <number> *cfe* - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> *osal* - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> *sample_app* - nasa / sample_app # <number> - nasa / sample_app # <number> *sch_lab* - nasa / sch_lab # <number> *tblcrctool* - nasa / tblcrctool # <number> *to_lab* - nasa / to_lab # <number> - nasa / to_lab # <number> - nasa / to_lab # <number> *ci_lab* - nasa / ci_lab # <number> - nasa / ci_lab # <number> *sample_lib* - nasa / sample_lib # <number> - nasa / sample_lib # <number> * cfs - groundsystem * - nasa / cfs - groundsystem # <number> - nasa / cfs - groundsystem # <number> *elf2cfetbl* - nasa / elf2cfetbl # <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev24 * combines <kiss> osal v6 . <number> - rc4 + dev120 <section> - nasa / osal # <number> , do not set file permissions on ut assert outputs <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"ic : caelum - rc4 + dev23 <section> *cfs* - # <number> , addresses invalid codeql language option *cfe* - nasa / cfe # <number> , fixes issue # <number> - propagate cmake_export_compile_commands variable - nasa / cfe # <number> , remove codeql paths ignore - nasa / cfe # <number> , duplicated logic in cfe_sb_broadcastbuffertoroute - nasa / cfe # <number> , remove ' return ; ' from last line of void functions . - nasa / cfe # <number> , remove unnecessary parentheses around return values . *osal* - nasa / osal # <number> , use fstat and fchmod for <allcaps> toctou </allcaps> bug - nasa / osal # <number> , remove ' return ; ' from last line of void functions . - nasa / osal # <number> , remove unnecessary parentheses around return values . *sample_app* - nasa / sample_app # <number> , misaligned comments - nasa / sample_app # <number> , remove unnecessary parentheses around return values . - nasa / sample_app # <number> , remove ' return ; ' from last line of void functions . *sch_lab* - nasa / sch_lab # <number> , remove unnecessary parentheses around return values . *tblcrctool* - nasa / tblcrctool # <number> , remove unnecessary parentheses around return values . *ci_lab* - nasa / ci_lab # <number> , remove unnecessary parentheses around return values . - nasa / ci_lab # <number> , remove ' return ; ' from last line of void functions . *sample_lib* - nasa / sample_lib # <number> , remove unnecessary parentheses around return values . * cfs - groundsystem * - nasa / cfs - groundsystem # <number> , remove ' return ; ' from last line of void functions . <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"unable to fetch documentation archives resolve install <allcaps> pdf </allcaps> generation dependencies job in build - deploy - doc . yml . the cfs documentation and guides workflows are failing due to the job . <section> same behavior . <section> <code> <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , broken links in docs fixes # <number> corrects a few broken links in the contributing guide . also cleaned up a few other links for consistency . <section> tested the links - working now . <section> links will work . <section> chrome browser . <section> <user>"
broken links in docs just noticed a few broken links when perusing <allcaps> contributing </allcaps> . md and <allcaps> security </allcaps> . md - seems like some links were broken in the reorganization of the last commit 0 e597817b785bbc7fd84c8c08c41b40bc2aedcd1 e . g . <url> <section> links ( internal + external ) should work correctly to improve usability . <section> n / a <section> <user>
"fix # <number> , addresses invalid codeql language option fixes # <number> . codeql will no longer throw an error regarding valid language input options . <section> none . <section> codeql will no longer throw an error regarding valid language input options . <section> n / a <section> <user>"
"fix # <number> , addresses invalid codeql language option fixes # <number> fixes # <number> . codeql will no longer throw an error regarding valid language input options . <section> none . <section> codeql will no longer throw an error regarding valid language input options . <section> n / a <section> <user>"
"ic : caelum - rc4 + dev22 <section> - nasa / cfe # <number> , resolve doxygen <date> latex make errors <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"fix # <number> , resolve codeql paths ignore issues fixes # <number> <section> tested on arielsadams / cfs fork on the test - paths - ignore branch . as seen in the picture , there is no issues thrown for paths ignore . image <img> <section> no behavior change . <section> allows cfs and its submodules to be consistent and all ignore documentation files . currently , only a few repos ignore these files . repos like cfe needs to remove paths ignore from the codeql workflow if approved . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"benchmarking of cfs message queue <allcaps> afaik </allcaps> , on linux , cfs uses <allcaps> posix </allcaps> message queue <url> for doing <allcaps> ipc </allcaps> . i am wondering whether there exist a benchmarking tool for the cfs - flavored message queue . thanks !"
"resolve codeql paths ignore issues the codeql workflow throws issues for using paths ignore in the codeql - analysis . yml <url> file . <section> use zbazztian / filter - sarif <user> in the codeql - reusable . yml file to avoid these issues . i tested this on fork and it does not throw issues . <section> keep as is to allow each submodule to specify which files to ignore . if we want to keep the files to ignore consistent for each submodule / repo , then filter - sarif should be used to reduce redundancy . <section> files that are ignored in cfs and cfe : - ' * */ * . md ' - ' * */ * . txt ' - ' * */ * . dox ' submodules like osal , psp , and sc do not ignore any files . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , update codeql upload sarif to v2 fixes # <number> <section> none <section> no warning outputted for codeql being outdated in the workflow <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"propagate cmake_export_compile_commands setting to subprocess in mission_build . cmake when building cfe alongside of other apps the setting for the cmake variable ` <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> ` . <section> this is the simplelest and least disruptive to the existing build process . alternatives would be to use externalproject or add_custom_command / add_custom_target which would probably play nicer than the execute_process , but they would also need to pass the same flag in this manor . <section> n / a <section> andrew liounis , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update codeql upload sarif to v2 still getting warnings in codeql workflow that codeql action v1 will be deprecated on <date> . need to update github / codeql - action / upload - sarif to version <number> . <section> update upload sarif to version <number> . <section> keep as is . <section> none . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"ic : caelum - rc4 + dev21 <section> - nasa / osal # <number> , condition variable <allcaps> api </allcaps> for <allcaps> osal </allcaps> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , remove <allcaps> lgtm </allcaps> from documents fixes # <number> <section> n / a <section> no impact to behavior . removes mention of <allcaps> lgtm </allcaps> in documentation . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"automate generation of <allcaps> ccb </allcaps> agenda reduce time spent on manually creating <allcaps> ccb </allcaps> agenda . <section> create a new workflow that uses the workflow_dispatch event . the workflow should identify prs and their issues that have the label <allcaps> ccb </allcaps> ready . the document should list the author , pr title , link to pr , and the pr linked issue title . this file should be uploaded to the wiki . <section> keep as is . <section> will most likely need to create new action . possible actions that may be used : <number> . <url> - outputs pr title and link based on label . does not work across multiple repos . <number> . <url> - outputs pr author , pr title , and link . works for any repo / multiple repos . does not pull based on labels . <number> . <url> - outputs pr author , pr title , pr link , and issue based on label . creates <allcaps> csv </allcaps> file . needs to convert to a markdown file for wiki repo . github repo wiki is actually a repo with named reponame . wiki . <section> ariel adams , <allcaps> mcsg </allcaps> tech ."
"remove <allcaps> lgtm </allcaps> from documents <allcaps> lgtm </allcaps> is no longer used as a testing method for cfs . <section> remove the mention of <allcaps> lgtm </allcaps> in documents such as <allcaps> security </allcaps> . md and <allcaps> readme </allcaps> . md . <section> keep as is . <section> <allcaps> lgtm </allcaps> will be shut down in december of <number> . <section> ariel adams , <allcaps> mcsg </allcaps> tech ."
"register the cf configuration table as dump - only <section> this is based on testing for the <allcaps> pace </allcaps> mission . in cf_app . c function cf_checkfortblrequests blocks attempts to do updates to the configuration table . however , the configuration table is registered as cfe_tbl_opt_load_dump in cf_tableinit . an operator can execute load , validate and activate cmds as normally expected for a loadable table , but the activation request results in a load attempt that must be aborted . seems it would make more sense to register it as cfe_tbl_opt_dump_only aside from blocking the update attempt , this cf_checkfortblrequests function appears to be in place in case "" gnd may be trying to get the checksum of the table "" - then it executes the table validation function . but the table checksum can be obtained by using the tbl . tlm_reg command . <section> steps to reproduce the behavior : <number> . dump the cf configuration table to ram <number> . load , validate and activate the table using the dumped file . <number> . you should see these messages at the end : <allcaps> info dleon </allcaps> cfe_tbl <number> : cf validation successful for inactive ' cf . configtable ' <allcaps> error dleon cf </allcaps> <number> : cf config tbl cannot be updated ! load attempt must be aborted ! <section> since the cf configuration table shows up in the table registry as "" <allcaps> false </allcaps> "" for the <allcaps> dump only </allcaps> flag , i expected it could be loaded . <section> in cf_app . c , function cf_tableinit /* register the cf config table */ status = cfe_tbl_register ( & cf_appdata . configtablehandle , cf_config_table_name , sizeof ( cf_config_table_t ) , cfe_tbl_opt_sngl_buffer | cfe_tbl_opt_load_dump , cf_validatecfconfigtable ) ; function cf_checkfortblrequests /* if gnd is trying to do a tbl load */ else if ( status = = cfe_tbl_info_update_pending ) { cfe_evs_sendevent ( cf_tbl_ld_attempt_eid , cfe_evs_error , "" cf config tbl cannot be updated ! load attempt must be aborted ! "" ); } <section> - <allcaps> pace dleon </allcaps> processor - os : vxworks <number> - versions - - cfe <date> - - cf <number> . <number> <section> none <section> michael lambertson goddard space flight center code <number> / vantage systems , inc ."
"ic : caelum - rc4 + dev20 <section> - # <number> , remove rules in codeql coding standard <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , remove rules in codeql coding standard fixes # <number> . removes <allcaps> jpl </allcaps> rules <number> , <number> , <number> , and <number> . <section> tested on fork <section> codeql workflow should no longer fail . results for the coding standard job will be uploaded . <section> on the forked repo , when testing , there were <number> results for cfs . <section> ariel adams , <allcaps> mcsg </allcaps> technologies"
"remove rules in codeql coding standard the codeql ( coding standard ) workflow fails because there are too many results to be uploaded . <section> remove the rules that produce the most results until we resolve or dismiss the other results . <section> if we want to show results for all coding standard rules , then we will need multiple matrixes . there can be one for all <allcaps> misra </allcaps> rules and <allcaps> jpl </allcaps> rules except <number> , <number> , and <number> . <allcaps> jpl </allcaps> rules <number> , <number> , and <number> would have their own job / matrix . <section> <allcaps> jpl </allcaps> rules <number> , <number> , and <number> each have over <number> results which is the most results allowed to be displayed in the code scanning alerts page . it seems like the most results allowed to be uploaded is <number> . without rules <number> , <number> , and <number> , the results are uploaded , however , <number> rules are ignored ( <url> therefore , <allcaps> jpl </allcaps> <number> ( <number> results ) would also need to be ignored or have its own matrix to view all the results . <allcaps> jpl </allcaps> <number> , <number> , and <number> , when combined , exceed that <number> limit ( <url> <section> ariel adams , <allcaps> mcsg </allcaps> technologies"
"fix # <number> , updated ubuntu version in ci workflows fix # <number> , update os versions in github workflows <section> check workflow results after pushing <section> no impact to behavior <section> browser <section> haven carlson - <allcaps> nasa </allcaps>"
update os versions in ci workflows update os versions from ubuntu <number> to ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>
"ic : caelum - rc4 + dev19 * combines <kiss> cfe v7 . <number> - rc4 + dev167 <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , allow for nasa # <number> rather than # <number> in title . gitlab changes messages from fix # <number> to fix nasa # <number> , this relaxes the commit message check . <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"consider adding a git hook to check for invalid commit messages see title , on pull requests the commit message is reworded form <hashtag> z <elongated> </hashtag> to nasa <hashtag> z <elongated> </hashtag> <section> steps to reproduce the behavior : <number> . go to ' . <repeated> ' <number> . click on ' . <repeated> ' <number> . scroll down to ' . <repeated> ' <number> . see error <section> a clear and concise description of what you expected to happen . <section> if applicable , add references to the software . <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] <section> add any other context about the problem here . <section> full name and company / organization if applicable"
"ic : caelum - rc4 + dev18 <section> - # <number> , adds lcov to archived results <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , adds lcov to archived results - fixes # <number> <section> tested on forked nasa / cs commit using the github workflow changes from this pull request : <url> <section> the code coverage report ( index . html ) is accessible from the github workflow call . <section> - ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"ic : caelum - rc4 + dev17 * combines <kiss> cfe v7 . <number> - rc4 + dev163 <section> - nasa / cfe # <number> , increase event burst credit to not squelch at startup in ci - nasa / cfe # <number> , grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev16 * combines <kiss> psp v1 . <number> - rc4 + dev47 <section> - nasa / psp # <number> , correct <allcaps> psp </allcaps> module ids and lookups <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"ic : caelum - rc4 + dev15 * combines <kiss> cfe v7 . <number> - rc4 + dev157 osal v6 . <number> - rc4 + dev103 *includes* - nasa / cfe # <number> , use correct loop var in add_cfe_app_dependency - nasa / cfe # <number> , automatic suppression of flooding events - nasa / cfe # <number> , remove stray <allcaps> todo </allcaps> in ut - nasa / osal # <number> , remove stray terminators - nasa / osal # <number> , add <allcaps> rtems </allcaps> timebase callback wrapper <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"ic : caelum - rc4 + dev14 * combines <kiss> osal v6 . <number> - rc4 + dev97 *includes* - # <number> , default ci to bash to apply pipefail - nasa / osal # <number> , ensure address alignment of <allcaps> tcb </allcaps> for vxworks <number> <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , default ci to bash to apply pipefail - fix # <number> without the bash pipefail option return codes can get masked missing failures . specifically seen in the unit test reusable workflow where ctest returns were masked . by forcing the default shell as bash , github applies the pipefail option . <section> ci also tested from cf with <url> ( pointing to this branch ) to confirm the failed ctest causes the ci to fail . <section> any failure in a pipeline will fail the ci step <section> ci <section> originally seen in cf <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
unit test ci not failing when tests fail <url> the test failed but the unit test ci reported as passed . <section> failed test needs to fail ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"ic : caelum - rc4 + dev13 * combines <kiss> cfe v7 . <number> - rc4 + dev145 psp v1 . <number> - rc4 + dev43 * remove commented out code * - nasa / cfe # <number> , remove commented out code - nasa / psp # <number> , remove commented out code <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"cfs bundle integration candidate : caelum - rc4 + dev12 <section> osal v6 . <number> - rc4 + dev93 ci_lab v2 . <number> - rc4 + dev22 to_lab v2 . <number> - rc4 + dev24 sch_lab v2 . <number> - rc4 + dev31 * includes <kiss> - <url> set <allcaps> osal </allcaps> loader unit test number of modules to osal_config_max_modules * update minimum cmake version * - <url> update minimum required cmake version - <url> update cmake_minimum_required - <url> update cmake_minimum_required - <url> update cmake_minimum_required <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"fix # <number> , remove cmake_minimum_required in tools the tools cmakelists . txt file just adds the subdirectories , it has no logic . the old version being referenced here triggers a deprecation warning , so just remove it . fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"remove unneeded "" cmake_minimum_required "" in tools dir the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> remove this line here , it is not needed <section> there is no need to specify a minimum version for this , it only adds the subdirectories which each have their own minimum ( if specified ) . otherwise it inherits the parent build minimum , which is fine . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove travisci config file fixes # <number> <section> n / a <section> travisci will no longer be triggered or used . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , upgrade codeql action to v2 fixes # <number> <section> tested on fork : <url> <section> no expected behavior changes . avoids using deprecated action and brownouts : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"referer to nasa / cfe # <number> * x] i reviewed the [ contributing guide <url> . * [x ] i performed a cursory search to see if the bug report is relevant , not redundant , nor in conflict with other tickets . - > referer to nasa / cfs # <number>"
"fix # <number> , commit and format check does not execute when pr title format fails fixes nasa / cfs # <number> with continue - on - error solution . a clear and concise description of what the contribution is . - fixes nasa / cfs # <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - the action continues even if title format check failes <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> personal"
"upgrade codeql action to v2 the current codeql workflow will be deprecated by the end of <number> > codeql / analysis ( coding - standard ) codeql action v1 will be deprecated on <date> . please upgrade to v2 . for more information , see <url> <section> upgrade codeql workflow to use v2 of codeql action <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , display cppcheck in code scanning alerts dashboard fixes # <number> <section> tested on fork - static analysis : <url> tested on fork - static analysis misra : <url> <section> users can view results from cppcheck in the code scanning alerts . removed cat command that displays errors . output of cppcheck file is now . xml instead of . txt to be able to convert to . sarif . example of cppcheck in code scanning alerts : image <img> <section> number of alerts are not provided . created a forum to investigate this : <url> not sure if this is due to the repository being a forked repo . <section> ariel adams , <allcaps> asrc </allcaps> federal"
remove tracisci config file the file is no longer maintained but its presence in the repository still triggers travisci runs . as we continue to upgrade our ci pipelines this outdated file might result in misleading results . <section> remove the . travis . yml file <section> none <section> all of the travis ci functionality has been migrated to github actions . config files are stored in . github / workflows . <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>
"fix # <number> , rename tool for codeql results fixes # <number> <section> tested on fork here : <url> tested renaming <allcaps> sarif </allcaps> file here : <url> <section> users can filter between coding standard results and security results for codeql by tool in code scanning alerts . the codeql sarif file , by default , is named cpp . sarif . the default file is renamed to codeql - ${{ matrix . scan - type } } . sarif so when users download the artifacts from cppcheck and codeql , they are not confusing one for the other . image <img> downside is that the number of alerts are not shown . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"add lcov to archive results in unit - test - coverage . yml the lcov - code coverage report - coverage_total . info is missing from the archived results . add coverage_total . info to <url> <section> the lcov - code coverage report ( index . html ) is accessible from each github workflow call . <section> opening the lcov - code coverage report ( the index . html file ) over ssh ( <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"rename tool for codeql results there is not a way to differentiate the coding standard results between the security results for codeql in the code scanning results . the two configuration file results are combined together in the code scanning results . <section> edit the tool name in the coding standard and security sarif files . this will allow users to select to view either the coding standard codeql results or the security codeql results . <section> none . <section> is possible and tested : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : caelum - rc4 + dev11 <section> cfe v7 . <number> - rc4 + dev143 osal osal v6 . <number> - rc4 + dev87 psp v1 . <number> - rc4 + dev ci_lab v2 . <number> - rc4 + dev22 to_lab v2 . <number> - rc4 + dev21 sample_app v1 . <number> - rc4 + dev21 * includes <kiss> - <url> endian macro mask before shift to avoid shift overflow warning - <url> add macro for initializing command header * add statustostring <allcaps> api </allcaps> * - <url> add os_statustostring <allcaps> api </allcaps> - <url> add cfe_psp_statustostring and cfe_psp_status_c - <url> add cfe_es_statustostring and cfe_status_c * remove registration of empty <allcaps> evs </allcaps> filters * - <url> remove registration of empty <allcaps> evs </allcaps> filters - <url> remove registration of empty <allcaps> evs </allcaps> filters - <url> remove registration of empty event filters <section> bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"fix # <number> , force remove old submodule directory in codeql workflow fix # <number> , force remove old submodule directory in codeql workflow <section> steps taken to test the contribution : <number> . update codeql - build . yml in another repo to use this workflow <number> . push changes to the repo <number> . verify codeql workflow ran <section> no impact to behavior <section> browser <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"update <allcaps> cla </allcaps> information have new clas given the change in <url> with the combined <allcaps> cla </allcaps> , <section> - [ ] update the instructions in each app ' s contributing . md - [ ] delete old <allcaps> cla </allcaps> pdfs - [ ] update pr and issue templates as needed <section> none <section> none <section> gerardo e . cruz - ortiz"
update <allcaps> cla </allcaps> information
"commit format - check job does not run on push triggers when a new commit is pushed the commit format checker job in the format - check workflow does not run *unless* the commit is part of a pull request . <section> create new branch push commit with non - standard message to remote observe "" commit check "" job skip <section> pull request format check is skipped commit format check executes <section> <url> the <code> statement should apply to the pr check step instead of the whole job <section> github actions . see screenshot for example commit - format - check skip . png <img> <section> none <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>"
"commit and format check does not execute when pr title format fails <section> when running against a pull request , if the prs title fails the format check , the workflow skips the commit message check . <section> workflow checks both pr and commit titles regardless of failures <section> - separate into parallel jobs . - use a "" keep going on failure "" flag for the step ( not sure if this is an option ) <section> see <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"cfs bundle integration candidate : caleum - rc4 + dev10 combines * cfe v7 . <number> - rc4 + dev136 * ( nasa / cfe # <number> ) - nasa / cfe # <number> , resolve static analysis warnings - nasa / cfe # <number> , cfe_users_guide . pdf <number> * osal v6 . <number> - rc4 + dev83 * ( nasa / osal # <number> ) - nasa / osal # <number> , resolve static analysis warnings - nasa / osal # <number> , add rtems <number> support * psp v1 . <number> - rc4 + dev38 * ( nasa / <allcaps> psp </allcaps> # <number> ) - nasa / <allcaps> psp </allcaps> # <number> , resolve uninit var static analysis warning * elf2cfetbl v3 . <number> - rc4 + dev24 * ( nasa / elf2cfetbl # <number> ) - nasa / elf2cfetbl # <number> , resolve uninit var static analysis warnings * sch_lab v2 . <number> - rc4 + dev29 * ( nasa / sch_lab # <number> ) - nasa / sch_lab # <number> , resolve uninit var static analysis warnings <section> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> format check workflow failure expected for integration candidates codeql workflow failure expected given known limitation on number of alerts <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> skliper paulober acudmore"
"fix # <number> , add <allcaps> cla </allcaps> for cfs apps - fix # <number> - adds new pdfs for cfs apache <number> licensed applications . - renames framework pdfs for clarity - updates table of content - rearranged and edited some sections for clarity <section> visually inspected links in fork and in pr template <section> - no impact to behavior <section> firefox browser <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"disable codeql and cppcheck workflow runs for cfs bundle the codeql and static analysis workflows should are already checked at the submodule level . furthermore , the github security scanning dashboard does not work well with <allcaps> sarif </allcaps> files that point to files from submodule so running the codeql workflow with each commit or pr does not help . <section> remove pull request and push triggers from codeql and cppcheck workflows . keep them as "" workflow dispatch "" in case someone wants to run the analysis on the bundle . <section> a ) keep as is . b ) completely remove workflows <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"force remove directory in codeql - reusable . yml in codeql - reusable . yml , it should force remove a directory on line <number> so the script can continue if the directory does not exist . <section> <number> . push to branch to run codeql <number> . observe failed run if directory did not exist <section> if a directory does not exist before removing it , the script should continue <section> <code> should be <code> codeql - reusable . yml <url> <section> browser <section> none <section> full name and company / organization if applicable"
"fix # <number> , adds whitespaces a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"cfs integration candidate : caelum - rc4 + dev9 *combines* nasa / osal # <number> nasa / cfe # <number> nasa / <allcaps> psp </allcaps> # <number> *including* <section> nasa / cfe # <number> , adds truncation warning suppression flags nasa / cfe # <number> , doc deploy from local workflow on main - branch push nasa / cfe # <number> , add support for fractional seconds in epoch nasa / cfe # <number> , remove redundant word in app developers guide nasa / cfe # <number> , ut updates for alternate time configuration * * <allcaps> rtems </allcaps> <number> support nasa / cfe # <number> , update rtems toolchain files nasa / osal # <number> , add os - impl - no - select . c for <allcaps> rtems </allcaps> nasa / psp # <number> , update <allcaps> rtems </allcaps> cmake platform file <section> nasa / psp # <number> , add cpu affinity example <section> nasa / <allcaps> psp </allcaps> # <number> nasa / osal # <number> nasa / sample_lib # <number> nasa / sample_app # <number> nasa / sch_lab # <number> nasa / ci_lab # <number> nasa / to_lab # <number> nasa / elf2cfetbl # <number> nasa / tblcrctool # <number> nasa / cfs - groundsystem # <number> <section> see prs <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> none <section> <user> <user> <user> <user> - brandenburg - metecs <user> <user>"
"fix # <number> , adds check commit message job in format check a clear and concise description of what the contribution is . - fixes # <number> <section> tested on fork : <url> <section> commit messages not following any of the below conventions will fail the [ format - check . yml ] ( <url> * <code> * <code> * <code> * <code> * <code> <section> ubuntu <number> <section> the regex for <code> is defined as a string of <number> or more alphanumeric characters . the regex for <code> is defined as a string of <number> or more numeric characters . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"use cpp as codeql language the codeql - reusable . yml workflow uses c as the language , which is not a valid option . it should be cpp instead . <section> use cpp as the codeql language . <section> <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> # <number> , ci document deployment fixes - fix # <number> - fix # <number> now always running for main branch actions ( will deploy on fork if you push main ) . also rejecting attempts to deploy and use the cache at the same time since i can not figure out how to make that work ( password fails on deploy ) . <section> tested w / a push of main to my fork at <url> note that branch also contains updates to deploy locally to avoid the password issue . <section> deploy on push to main <section> ci <section> only caller impact is for cfe that tried to use the cache and reusable deploy . cf and cfs workflows not impacted . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"document deployment reusable workflow fails deploy step see <url> for use of the deployment step from cfe <section> fix , it ' s likely just missing secret that needs to be passed in by the caller <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"docs not deployed when pr is merged to main the skip duplicates check catches the "" same content "" from pull requests and thus is not being triggered by a push to main . <section> see workflow runs related to ic : caelum - rc4 + dev8 . <url> push to main , skipped due to run in pr # <number> < <url> <section> always run the documentation job on a push to main . <section> skip the "" check - for - duplicates "" step in pushes to main branch . <section> github actions <section> n / a <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"cfs bundle integration candidate : caelum - rc4 + dev8 pr # <number> - fix # <number> - fix # <number> , use reusable doc workflow to add mission - doc pdf deploy pr # <number> - fix # <number> , cleanup shared static analysis workflow pr # <number> - fix # <number> , update contributor license agreements <section> * <allcaps> psp </allcaps> * nasa / <allcaps> psp </allcaps> # <number> , apply latest contributor license agreement links nasa / <allcaps> psp </allcaps> # <number> , - fixinput to static analysis workflow *osal* nasa / osal # <number> , apply latest contributor license agreement links *cfe* nasa / cfe # <number> , only increment sb internalerrorcounter on errors nasa / cfe # <number> , improve es unit test coverage nasa / cfe # <number> , add config module to coverage enforcemnt nasa / cfe # <number> , use reusable documentation generation workflow nasa / cfe # <number> , remove contributor license agreement <section> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> skliper chillfig"
"fix # <number> , add build and run app reusable workflow - fix # <number> <section> passed ci with modified workflow ( pointed to skliper merge branch ) here : <url> <section> none , ci only <section> ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add reusable unit test and coverage verification workflow - fix # <number> <section> ci from cf ( w / modified repo / path ) : <url> <section> none <section> ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add reusable workflow for application unit test and coverage enforcement there ' s a common recipe for unit testing and coverage enforcement for the <allcaps> gsfc </allcaps> apps that are draco dev cycle compatible , but they do not currently have a workflow implemented . <section> add a reusable workflow at the cfs level to keep things consistent and avoid logic duplication . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add reusable workflow for application build and run within bundle there ' s a common recipe for building and running <allcaps> gsfc </allcaps> apps within the bundle that are draco dev cycle compatible , but they do not currently have a workflow implemented . <section> add a reusable workflow at the cfs level to keep things consistent and avoid logic duplication . <section> could set it up to handle a list of apps , but might get complicated with startup message verification . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cleanup shared static analysis workflow - fix # <number> removes leading <code> before directory list and removes matrix ( slight re - ordering of tests ) <section> ci <section> works on directory lists , just one flow where strict only runs on non - empty <code> <section> ci <section> impacts nasa / <allcaps> psp </allcaps> # <number> and nasa / cf # <number> <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"static analysis workflow matrix and strict directory handling not working as intended the leading <code> is not consistently applied ( better to remove ) and the non - strict / strict matrix does not really work right . <url> example : <code> as used in <allcaps> osal </allcaps> becomes <code> which then misses the leading dir the matrix runs all the steps in two workflows where only the upload is conditional . it still does both checks . <repeated> really the checks are very fast so no need to split ( already in separate steps so easy to see what fails ) . <section> remove matrix , remove leading <code> on strict directory list <section> none <section> will impact psp strict check nasa / <allcaps> psp </allcaps> # <number> . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update contributor license agreements - fix # <number> <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"add mission doc generation and no - warning enforcement to ci mission documentation has been cleaned up , should build with no warnings but not enforced so easy to "" rot "" <section> add mission documentation generation , build , no - warning enforcement , and upload to gh_pages in ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfs integration candidate : caelum - rc4 + dev7 <section> nasa / cfe # <number> , v7 . <number> - rc4 + dev94 nasa / osal # <number> , v6 . <number> - rc4 + dev66 nasa / psp # <number> , v1 . <number> - rc4 + dev21 nasa / ci_lab # <number> , v2 . <number> - rc4 + dev17 nasa / sample_app # <number> , v1 . <number> - rc4 + dev16 nasa / sample_lib # <number> , v1 . <number> - rc4 + dev16 nasa / to_lab # <number> , v2 . <number> - rc4 + dev16 nasa / sch_lab # <number> , v2 . <number> - rc4 + dev23 nasa / elf2cfetbl # <number> , v3 . <number> - rc4 + dev18 nasa / tblcrctool # <number> , v1 . <number> - rc4 + dev14 nasa / cfs - groundsystem # <number> , v3 . <number> - rc4 + dev19 <section> nasa / cfe # <number> , resolve build failure for time cfg source nasa / osal # <number> , avoid calling memchr ( ) with unknown size buffer nasa / osal # <number> , hotfix ic : caleum - rc4 + dev6 * standardize version information * nasa / cfe # <number> nasa / osal # <number> nasa / psp # <number> nasa / sample_app # <number> nasa / sample_lib # <number> nasa / ci_lab # <number> nasa / to_lab # <number> nasa / sch_lab # <number> nasa / elf2cfetbl # <number> nasa / tblcrctool # <number> nasa / cfs - groundsystem # <number> * update copyright headers * nasa / cfe # <number> nasa / osal # <number> nasa / psp # <number> nasa / sample_app # <number> nasa / sample_lib # <number> nasa / ci_lab # <number> nasa / to_lab # <number> nasa / sch_lab # <number> nasa / elf2cfetbl # <number> nasa / tblcrctool # <number> nasa / cfs - groundsystem # <number> <section> <url> codeql workflow failure is being examined <section> see prs <section> ubuntu <allcaps> rtems </allcaps> centos <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"cfs integration candidate : caelum - rc4 + dev6 combines <url> v7 . <number> - rc4 + dev87 <url> v6 . <number> - rc4 + dev54 - nasa / osal # <number> , implement os_modulegetinfo_impl for <allcaps> rtems </allcaps> doxygen changes : - nasa / osal # <number> , expose osal common config - nasa / cfe # <number> , resolve <allcaps> osal </allcaps> doxygen refs with osal - common config pr # <number> - fix # <number> , update doc workflow <allcaps> osal </allcaps> directory <section> cfs bundle checks <url> cfe checks <url> osal checks <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <number> . <repeated> <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> skliper chillfig"
"fix # <number> , update doc workflow <allcaps> osal </allcaps> directory - fix # <number> <section> pushed test branch to fork with dependencies , doc workflow passed : <url> <section> doc workflow works with dependency updates <section> ci <section> nasa / osal # <number> and nasa / cfe # <number> <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfs bundle integration candidate : caelum - rc4 + dev5 refactor doxygen and remove mainpage - nasa / cfe # <number> - nasa / osal # <number> <section> see submodule prs cfs checks < <url> cfe checks < <url> osal checks < <url> <section> documentation changes only . see submodule prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"cfs integration candidate : caelum - rc4 + dev4 # <number> <section> - <url> v7 . <number> - rc4 + dev80 - <url> v6 . <number> - rc4 + dev42 - <url> v1 . <number> - rc4 + dev14 *apps* - ci_lab v2 . <number> - rc4 + dev10 - sample_app v1 . <number> - rc4 + dev9 - sch_lab v2 . <number> - rc4 + dev16 - to_lab v2 . <number> - rc4 + dev9 *libs* - sample_lib v1 . <number> - rc4 + dev9 *tools* - cfs - groundsystem v3 . <number> - rc4 + dev12 - elf2cfetbl v3 . <number> - rc4 + dev11 - tblcrctool v1 . <number> - rc4 + dev7 <section> - <url> add cfe_es_createchildtask default handler - <url> resolve ut uninitialized variable warnings - <url> add ut_assert to doxygen and fix warnings - <url> protect if os_fdgetinfo called on socket - <url> missing sb include for v2 msgid - <url> resolve doxygen doc warnings and enforce in ci * apply header guard standard * - <url> - <url> - <url> - <url> - <url> - <url> - <url> * remove explicit filename doxygen comments * - <url> - <url> - <url> - <url> - <url> - <url> <section> cfs bundle checks < <url> <section> see submodules <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jphickey skliper"
"display cppcheck results in github code scanning dashboard a clear and concise description of what the problem is . ex . i am always frustrated when [ . <repeated> ] <section> convert cppcheck ' s plist output to <allcaps> sarif </allcaps> using <url> use the codeql - upload action to upload <allcaps> sarif </allcaps> file to codescanning <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfs bundle integration candidate : caelum + dev3 pr # <number> - fix # <number> , git error in codeql analyze action also includes : * cfe v7 . <number> - rc4 + dev70 * nasa / cfe # <number> , improve cfe_sb_isvalidmsgid handler nasa / cfe # <number> , update codeql workflow nasa / cfe # <number> , replace cfe_sb_valuetomsgid ( <number> ) with cfe_sb_invalid_msg_id * osal v6 . <number> - rc4 + dev32 * nasa / osal # <number> , typesafe definition of osal_id_t * sample_app v1 . <number> - rc4 + dev9 * nasa / sample_app # <number> , use preferred ut patterns <section> cfs bundle checks < <url> cfe checks < <url> note that codeql workflow will fail until nasa / cfs # <number> is merged into main branch . see passing test in that pr . <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> see also <url> <section> none <section> <user> <user> <user>"
"fix # <number> , git error in codeql analyze action fix # <number> - adds new component - path input parameter - use git clone instead of checkout <user> for the cfs - bundle - use symlink to map calling repo workspace to expected cfs bundle directory location - repurpose tests input to be a boolean tied to "" enable_unit_tests "" flag - enable "" code snippets "" option to codeql analyze action - archives sarif files from analysis output - removes code duplication by using a matrix build for security and coding standard analyses - alphabetizes workflow inputs and order based on "" required "" flag <section> called codeql analysis action in bundle repo <url> called fork implementation from cfe repo . see actions run in nasa / cfe # <number> , < <url> < img width = "" <number> "" alt = "" codeql - cfefix - <number> "" src = "" <url> <section> - codeql action executes successfully . - sarif files are stored as a run artifact - unit test code is scanned < img width = "" <number> "" alt = "" codeql - cfefix - <number> - utalerts "" src = "" <url> <section> - github actions , ubuntu <number> <section> will break current codeql implementation in cfs components . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"reusable codeql workflow fails after "" upload "" stage codeql workflow fails in the code ql analyze step , specifically right after the "" upload "" stage . see failed run in <allcaps> psp </allcaps> repository <url> <section> run latest codeql workflow in any cfs component repo : - psp - osal - cfe - apps - tools <section> passing workflow run <section> n / a <section> - github actions , ubuntu <number> <section> none"
"cfs integration candidate : caelum + dev2 combines nasa / cfe # <number> , cfe v7 . <number> - rc4 + dev60 nasa / osal # <number> , osal v6 . <number> - rc4 + dev29 nasa / sch_lab # <number> , sch_lab v2 . <number> - rc4 + dev13 includes * cfe <kiss> nasa / cfe # <number> , add cfe_es_appinfo_t element documentation nasa / cfe # <number> , add fs functional test nasa / cfe # <number> , fix mismatched foreach in cmake function nasa / cfe # <number> , improved code highlighting in cfe application developers guide nasa / cfe # <number> , cfe_fs_parseinputfilenameex avoid uninit var nasa / cfe # <number> , fix array length calculation for perf structs nasa / cfe # <number> , limit <allcaps> sbr ut </allcaps> loops nasa / cfe # <number> , initialize blockdata in <allcaps> es ut </allcaps> nasa / cfe # <number> , fix osal_id_t type conversion in es_ut . c * osal <kiss> nasa / osal # <number> , search global and local symbol tables nasa / osal # <number> , add missing space to utassert_stub_count nasa / osal # <number> , add uint8 and uint16 equivalents for utassert_uint32_ <comparison> macros nasa / osal # <number> , correct warnings on gcc11 nasa / osal # <number> , set output in os_stat handler nasa / osal # <number> , reuse codeql , static analysis , format check *psp* nasa / <allcaps> psp </allcaps> # <number> , reuse codeql , static analysis , and format check *apps* nasa / sch_lab # <number> , add option to configure base tick rate nasa / sample_lib # <number> , reuse codeql , static analysis , and format check nasa / sample_app # <number> , reuse codeql , static analysis , and format check nasa / ci_lab # <number> , reuse codeql , static analysis , and format check nasa / to_lab # <number> , reuse codeql , static analysis , and format check *tools* nasa / cfs - groundsystem # <number> , reuse codeql , static analysis , and format check nasa / elf2cfetbl # <number> , reuse codeql , static analysis , and format check nasa / tblcrctool # <number> , reuse codeql , static analysis , and format check <section> cfs bundle checks < <url> <section> see prs <section> - ubuntu <number> - <allcaps> rtems </allcaps> <section> none <section> <user> <user> <user> <user> <user> <user>"
"fix # <number> , add check duplicate for build , test , and run fixes # <number> <section> tested on fork : <url> <section> skip workflows on push if workflows are triggered on both push and pull request . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"duplicate build , test , and run on push and pr the build , test , and run workflows do not correctly use the check for duplicates action . the workflows run on both push and pull request . the workflows should skip when triggered by push if it is also triggered by a pull request at the same time . <section> add if : ${{ needs . checks - for - duplicates . outputs . should_skip ! = ' true ' } } <section> keep as is . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , use new cfs container registry for <allcaps> rtems </allcaps> workflows fixes # <number> <section> performed on fork and this pr rtems4 . <number> : <url> rtems5 : <url> <section> no impact to behavior <section> ariel adams , <allcaps> asrc </allcaps> federal"
"use cfs <allcaps> rtems </allcaps> containers currently , the rtems workflows uses an old intern ' s containers . to update or change the containers , it should be stored in repository owned by cfs rather than a specific user . <section> the behavior will not change . the only changes are the locations of the containers . <section> <url> <section> new repo : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : caelum + dev1 pr # <number> - fix # <number> , reuse codeql , static analysis , format check pr # <number> - fix # <number> pr # <number> - fix # <number> also combines : * core : * - nasa / cfe # <number> , cfe v7 . <number> - rc4 + dev39 - nasa / osal # <number> , osal v6 . <number> - rc4 + dev15 - nasa / psp # <number> , psp v1 . <number> - rc4 + dev6 * lab apps : * - nasa / ci_lab # <number> , ci_lab v2 . <number> - rc4 + dev4 - nasa / sch_lab # <number> , sch_lab v2 . <number> - rc4 + dev6 - nasa / to_lab # <number> , to_lab v2 . <number> - rc4 + dev4 - nasa / sample_app # <number> , sample_app <number> . <number> - rc4 + dev4 * lab libs : * - nasa / sample_lib # <number> , sample_lib v1 . <number> - rc4 + dev3 * tools : * - nasa / cfs - groundsystem # <number> , cfs - groundsystem v3 . <number> - rc4 + dev7 - nasa / elf2cfetbl # <number> , elf2cfetbl v3 . <number> - rc4 + dev4 - nasa / tblcrctool # <number> , tblcrctool v1 . <number> - rc4 + dev2 * includes <kiss> nasa / cfe # <number> , use cfe time clock state enum t in cmd / tlm and handling nasa / cfe # <number> , <allcaps> evs </allcaps> functional test add for different eventtypes nasa / cfe # <number> , patch for recursive event loop nasa / cfe # <number> , cfe_es_memaddoff structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t nasa / cfe # <number> , avoid aliasing warnings nasa / cfe # <number> , message id type improvements nasa / cfe # <number> , cfe_sb_valuetomsgid / msgidtovalue wrappers nasa / cfe # <number> , use cfe_time_clockstate_enum_t in cmd / tlm and handling nasa / cfe # <number> , consolidate repeated <allcaps> msg </allcaps> stub setup in sb_ut nasa / cfe # <number> , return type conversions in cfe_es_gettaskname nasa / cfe # <number> , better message type pointer conversion nasa / cfe # <number> , replacing hardcoded message limit in <allcaps> time </allcaps> services nasa / cfe # <number> , use macro in cfe_resourceid_isdefined nasa / cfe # <number> , checking against isnewoffset only nasa / osal # <number> , add duplicate check to local unit test nasa / osal # <number> , rename os_xxxtime to os_xxxlocaltime in comments nasa / osal # <number> , fix vxworks intlib stub aliasing issue nasa / osal # <number> , recognize ifdef __cplusplus nasa / osal # <number> , remove extern in stub prototypes nasa / osal # <number> , add typedef for <allcaps> osal </allcaps> status codes nasa / psp # <number> , sleep before exit when printing nasa / psp # <number> , check the address in <allcaps> psp </allcaps> get segment stubs nasa / elf2cfetbl # <number> , check get_sh_entsize ( sectionheader ) value nasa / cfs - groundsystem # <number> , free address info for leak nasa / sch_lab # <number> , use separate address variable nasa / sch_lab # <number> , use cfe_msg_ptr conversion macro nasa / sample_app # <number> , use cfe_msg_ptr conversion macro nasa / ci_lab # <number> , use cfe_msg_ptr conversion macro nasa / to_lab # <number> , use cfe_msg_ptr conversion macro <section> cfs bundle checks < <url> <section> see prs <section> rtems <number> <allcaps> rtems </allcaps> <number> ubuntu <number> <section> none <section> <user> <user> <user> <user> <user> <user> <user> <user>"
"fix # <number> , reuse codeql , static analysis , format check fixes # <number> <section> tested on forked repos . <allcaps> osal </allcaps> static analysis reuse : <url> - runs bundle and strict osal cfs static analysis reuse : <url> <allcaps> osal </allcaps> codeql reuse cfe build : <url> <allcaps> osal </allcaps> codeql reuse <allcaps> osal </allcaps> default : <url> cfs codeql reuse : <url> <allcaps> osal </allcaps> format check reuse : <url> cfs format check : <url> <section> cfs will hold the workflows for codeql , static analysis , and format check . these workflows will be called by all subrepos to use . cfs has to call on codeql and static analysis for the workflows to work . format check does not need to be reused in cfs since there are no inputs . to explain the new workflows , a diagram has been added to the <allcaps> readme </allcaps> . md file . the pr does not show the image in the <allcaps> readme </allcaps> . md file , but the same code and image works in the forked repo : <url> <section> the workflows calling the original actions will not work until it is integrated in main because of this code . <code> documentation : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"revert "" fix # <number> , reuse codeql , static analysis , and format check "" reverts nasa / cfs # <number>"
"fix # <number> , reuse codeql , static analysis , and format check invalid <section> tested on forked repos . <allcaps> osal </allcaps> static analysis reuse : <url> - runs bundle and strict osal cfs static analysis reuse : <url> <allcaps> osal </allcaps> codeql reuse cfe build : <url> <allcaps> osal </allcaps> codeql reuse <allcaps> osal </allcaps> default : <url> cfs codeql reuse : <url> <allcaps> osal </allcaps> format check reuse : <url> cfs format check : <url> <section> cfs will hold the workflows for codeql , static analysis , and format check . these workflows will be called by all subrepos to use . cfs has to call on codeql and static analysis for the workflows to work . format check does not need to be reused in cfs since there are no inputs . to explain the new workflows , a diagram has been added to the <allcaps> readme </allcaps> . md file . the pr does not show the image in the <allcaps> readme </allcaps> . md file , but the same code and image works in the forked repo : <url> <section> the workflows calling the original actions will not work until it is integrated in main because of this code . <code> documentation : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"build cfs for raspberry pi <number> i am trying to build cfs for raspberry pi using cross - compiler in ubuntu <number> . i installed gcc - arm - linux - gnueabihf and g + + - arm - linux - gnueabihf , setup cmake toolchain file as follows : <code> and then : <code> there is core - cpu1 in build - raspberry / arm - raspberrypi / default_cpu1 / cpu1 . but on raspberry it crashes with error : <code> what am i doing wrong ?"
"reuse codeql , format checker , and static analysis workflows when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , <allcaps> osal </allcaps> codeql full configuration path fixes # <number> <section> worked on forked repo : <url> <section> <allcaps> osal </allcaps> codeql workflow shall work , no impact to other workflows . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> osal </allcaps> codeql failing cannot find configuration <code> occurs in codeql analysis <allcaps> osal </allcaps> default build . <section> run codeql analysis <allcaps> osal </allcaps> default build <section> change codeql - coding - standard . yml to nasa / cfs / . github / codeql / jpl - misra . qls <user> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , "" main "" branch for cfe and osal submodules <section> fixes # <number> , changes the branch declaration for the cfe and osal submodules to be "" main "" . <section> git submodule init & & git submodule update behave as expected . <section> no impact to behavior . <section> ubuntu <number> . x <section> <email>"
"fix # <number> , add codeql query suites fixes # <number> <section> tested on fork , <url> <section> same results as before , just different way of locating queries . remove <code> codeql is already checked out when using codeql actions . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"codeql query suites codeql was failing due to a database error that lead to discovering the benefits of using query suites instead of calling queries from main . <url> > i would generally recommend using a query suite instead of referencing the queries directly from github / codeql : main , because the query libraries on main are not guaranteed to exactly match the query libraries bundled with the cached copy of codeql on actions . using a query suite in this way ensures you get the queries and libraries straight out of the cached codeql instead . <section> use query suites such as jpl . qls for all queries . <section> keep queries as is . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : <number> - <number> - <number> submodule ics - nasa / cfe # <number> pr # <number> - fix # <number> , add ci status badge in <allcaps> readme </allcaps> pr # <number> - fix # <number> , "" main "" branch for cfe and osal submodules pr # <number> - fix # <number> , updated <allcaps> readme </allcaps> training link pr # <number> - fix # <number> , add codeql query suites includes : nasa / cfe # <number> , grammatical cleanup of requirements nasa / cfe # <number> , build errors when using extended headers <section> cfs bundle checks < <url> cfe checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> none <section>"
test
"cfs bundle integration candidate : <number> - <number> - <number> pr # <number> - fix # <number> , add functional tests step to ci also combines <url> v6 . <number> - rc1 + dev1024 <url> v5 . <number> - rc1 + dev619 <url> v2 . <number> - rc1 + dev53 <url> v1 . <number> - rc1 + dev73 <url> v2 . <number> - rc1 + dev58 <url> v2 . <number> - rc1 + dev46 includes : nasa / cfe # <number> , confirm sb / time reset requirements in coverage test nasa / cfe # <number> , only check base filename in library info functional nasa / cfe # <number> , make invalid buffer length consistent in es task test nasa / cfe # <number> , add static local to function test so data section is nonzero nasa / cfe # <number> , use existing / ram for fs header test nasa / cfe # <number> , add missing inclusions in <allcaps> cfe api </allcaps> headers nasa / cfe # <number> , update name of macros / functions added to "" cfe_assert "" nasa / cfe # <number> , fix mismatch between <allcaps> msg api </allcaps> and test case in "" testmsgid "" functional test nasa / cfe # <number> , single time domain in functional time tests nasa / cfe # <number> , fix broken link in app developers guide nasa / cfe # <number> , fix # <number> , avoid alias warning on some compilers nasa / osal # <number> , fix <allcaps> osal </allcaps> loader test hard fails if size exceeded nasa / osal # <number> , enable symbol api test and <allcaps> mir </allcaps> dump too large nasa / osal # <number> , add bsp - specific configuration flag registry nasa / osal # <number> , add os - specifc socket flag function nasa / ci_lab # <number> , apply cfe_sb_valuetomsgid where required nasa / sample_app # <number> , apply cfe_sb_valuetomsgid where required nasa / sch_lab # <number> , apply cfe_sb_valuetomsgid where required nasa / to_lab # <number> , apply cfe_sb_valuetomsgid where required <section> cfs bundle checks < <url> cfe checks < <url> osal checks < <url> <section> see submodule prs <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> none <section> <user> <user> <user> <user> <user>"
"add spellcheck , commit - format , and labels this workflow intends to automate multiple repository management tasks a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"cfs bundle integration candidate : <number> - <number> - <number> , doc and code typos combines the following documentation prs : - nasa / cfe # <number> - nasa / osal # <number> - nasa / psp # <number> - nasa / ci_lab # <number> - nasa / sample_app # <number> - nasa / sch_lab # <number> - nasa / to_lab # <number> - nasa / sample_lib # <number> - nasa / elf2cfetbl # <number> - nasa / tblcrctool # <number> <section> ci <section> none <section> ubuntu , <allcaps> rtems </allcaps> <section> documentation updates <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> combines nasa / cfe # <number> nasa / <allcaps> psp </allcaps> # <number> nasa / osal # <number> nasa / sch_lab # <number> includes *cfe* nasa / cfe # <number> , update directory diagrams in application developer guide nasa / cfe # <number> , sb code coverage improvements # <number> , improve sb coverage nasa / cfe # <number> , improve es code coverage nasa / cfe # <number> , enforce minimum code coverage nasa / cfe # <number> , support unimplemented features in <allcaps> msg ft </allcaps> * <allcaps> osal </allcaps> * nasa / osal # <number> , regex update in coverage enforcement to match . <number> nasa / osal # <number> , add typecast to memchr call * <allcaps> psp </allcaps> * nasa / psp # <number> , do not override add_psp_module for coverage test nasa / psp # <number> , check that module type is not invalid *sch_lab* nasa / sch_lab # <number> , add cmdcode to sch_lab_table nasa / sch_lab # <number> , fix missing typedef <section> cfs bundle checks < <url> cfe checks < <url> <allcaps> psp </allcaps> checks < <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> ubuntu <allcaps> rtems </allcaps> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"fix # <number> , add functional tests step to ci fixes # <number> <section> tested on fork repo . deprecated build , test , and run : <url> build , test , and run omit_deprecated = true <url> also seen in checks in this pr . <section> build , test , and run workflows runs functional tests . uses cache to reduce build time . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add <allcaps> jpl </allcaps> queries in <allcaps> lgtm </allcaps> fixes # <number> <section> tested in this pr - does not show new queries / alerts in <allcaps> lgtm </allcaps> for pr <section> <allcaps> lgtm </allcaps> uses <allcaps> jpl </allcaps> queries <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : <number> - <number> - <number> <section> nasa / cfe # <number> nasa / osal # <number> nasa / cfs - groundsystem # <number> <section> *cfe* nasa / cfe # <number> , add <allcaps> sb api </allcaps> test cases nasa / cfe # <number> , add <allcaps> es api </allcaps> test cases nasa / cfe # <number> , add <allcaps> tbl api </allcaps> test cases nasa / cfe # <number> , add <allcaps> fs api </allcaps> test cases nasa / cfe # <number> , add time clock test nasa / cfe # <number> , <allcaps> evs </allcaps> coverage test nasa / cfe # <number> , sb test improvements nasa / cfe # <number> , cfe_tbl_modified : test <allcaps> crc </allcaps> , updated flag nasa / cfe # <number> , improve <allcaps> evs </allcaps> code coverage nasa / cfe # <number> , add call to cfe_es_exitchildtask nasa / cfe # <number> , incorrect <allcaps> osal </allcaps> format in users guide reference nasa / cfe # <number> , improve fs coverage nasa / cfe # <number> , improve <allcaps> msg </allcaps> branch coverage nasa / cfe # <number> , improve resource id branch coverage nasa / cfe # <number> , improve <allcaps> sbr </allcaps> branch coverage nasa / cfe # <number> , improve <allcaps> time </allcaps> branch coverage nasa / cfe # <number> , improve <allcaps> tbl </allcaps> code coverage nasa / cfe # <number> , support custom <allcaps> psp </allcaps> directory nasa / cfe # <number> , update time tests to use bitmask check macros nasa / cfe # <number> , remove extra word in comment *osal* nasa / osal # <number> , add bitmask assert macros * cfs - groundsystem * nasa / cfs - groundsystem # <number> , add virtualenv and pipenv . gitignore support nasa / cfs - groundsystem # <number> , fix doc , comment , and message typos <section> cfs bundle checks < <url> cfe checks < <url> <section> see submodule integration candidates <section> ubuntu <allcaps> rtems </allcaps> <section> none <section> <user> <user> <user> <user> <user> - hbr <user> <user> <user>"
"fix # <number> , use correct ref in codeql checkout fix # <number> resolves broken git - checkout branch reference in the codeql coding standard job . <section> local github actions <section> codeql coding standard job works <section> ubuntu ci <section> follow up to nasa # <number>"
"checkout action in bootes . x codeql workflow points at wrong ref when updating the checkout action references we accidentally changed the ref for checking out the codeql repository itself . fix is to simply remove the "" ref "" key from the codeql checkout step in the coding standard job . <section> see < <url> <section> clean run <section> <code> <section> ubuntu ci"
"cfs bundle integration candidate : <number> - <number> - <number> pr # <number> - fixed minor typos in the cfs docs pr # <number> - fix # <number> , add <allcaps> misra </allcaps> addons for cppcheck <section> <url> cfe v6 . <number> - rc1 + dev933 <url> osal v5 . <number> - rc1 + dev594 <section> *osal* nasa / osal # <number> , add test case types similar to na *cfe* nasa / cfe # <number> , add software bus tests nasa / cfe # <number> , separate variable for <allcaps> osal </allcaps> status nasa / cfe # <number> , improve <allcaps> tbl </allcaps> coverage tests nasa / cfe # <number> , clean up message id functional test # <number> , add missing cases for msg id func tests nasa / cfe # <number> , adding coverage tests to cfe <allcaps> time </allcaps> nasa / cfe # <number> , enable strict resource id w / omit_deprecated nasa / cfe # <number> , <allcaps> hotfix ic </allcaps> - <number> , type correction <allcaps> tbl </allcaps> coverage test nasa / cfe # <number> , consolidate msg get / set doxygen group nasa / cfe # <number> , add test for es backgroundwakeup nasa / cfe # <number> , success test for cfe_es_restartapp nasa / cfe # <number> , subscribe to message limit greater than cfe_platform_s … nasa / cfe # <number> , success test for cfe_es_getmempoolstats nasa / cfe # <number> , group <allcaps> msg </allcaps> apis documentation by header type nasa / cfe # <number> , add retroactive <allcaps> cfe </allcaps> status asserts nasa / cfe # <number> , remove unused cfe_tbl_err_bad_app_id nasa / cfe # <number> , correct syslog message in pool create nasa / cfe # <number> , remove unused cfe_es_pool_bounds_error nasa / cfe # <number> , remove unused cfe_tbl_err_file_not_found nasa / cfe # <number> , check error ctr to transmitmsg test nasa / cfe # <number> , end child task requirement remove error code nasa / cfe # <number> , add functional tests for resource misc <section> cfs bundle ci < <url> cfe ci < <url> osal ci < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> none <section> <user> <user> <user> <user> <user> <user> <user> <user>"
"fix # <number> , add <allcaps> misra </allcaps> addons for cppcheck fixes # <number> <section> tested on forked repo : <url> image <img> <section> runs <allcaps> misra </allcaps> rules for bundle , cfe , osal , and psp . has a job for regular "" clean "" cppcheck and misra cppcheck . <section> future work includes : - [x ] running <allcaps> misra </allcaps> rules for the bundle , cfe , osal , and psp . - [x ] showing errors in the check for errors step <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> misra </allcaps> addon for cppcheck static analysis currently the cppcheck static analysis workflow does not include <allcaps> misra </allcaps> addons . adding the <allcaps> misra </allcaps> addons allows for a more thorough static analysis check . <section> using the cppcheck addon for <allcaps> misra </allcaps> , the current workflow has been modified to include the <allcaps> misra </allcaps> addons . <section> alternatives might be a separate <allcaps> misra </allcaps> check workflow , but this way is more consolidated and easier . <section> the cppcheck addon used can be found here : <url> the <allcaps> misra </allcaps> python addon is here : <url> <section> adrian schalk <email> goddard summer intern under ariel adams midshipman , <allcaps> usn </allcaps> , us naval academy"
"cfs - bundle integration candidate : <number> - <number> - <number> *combines* nasa / cfe # <number> , v6 . <number> - rc1 + dev873 *includes* - nasa / cfe # <number> , port "" cfe_utassert_successcheck "" and related macros from coverage test to functional test # <number> , add <allcaps> cfe </allcaps> assert macros to functional test - nasa / cfe # <number> , adds invalid id syslog to for cfe_es_deleteapp and cfe_es_reloadapp and verifies required reporting - nasa / cfe # <number> , check resource id idx is less than max - nasa / cfe # <number> , stop memory leak & add cds size test . - nasa / cfe # <number> , mark read only inputs as const - nasa / cfe # <number> , add es application behavior functional tests - nasa / cfe # <number> , update cfe_es_runloop documentation - nasa / cfe # <number> , add message api functional test - nasa / cfe # <number> , update in / out status and nonnull / nonzero tag - nasa / cfe # <number> , <section> github actions ci <section> see prs <section> ubuntu , <allcaps> rtems </allcaps> ( qemu ) <section> none <section> skliper jphickey"
"fix # <number> , move sample_libs into libraries dir creates a new directory "" libs "" at the cfs bundle level to put libraries in . this will create a little more clarity between applications and libraries fixes # <number> <section> ci ubuntu <section> none , everything should still compile <section> ubuntu <number> <section> might require developers to fixup their local repos once change is merged"
"cfs - bundle integration candidate : <number> - <number> - <number> pr # <number> - fix # <number> , skip deploy job instead of step pr # <number> - fix # <number> , add discussions in the contributing guide <section> - nasa / cfe # <number> , v6 . <number> - rc1 + dev844 - nasa / osal # <number> , v5 . <number> - rc1 + dev590 <section> *cfe* - nasa / cfe # <number> , move global count into test global struct . - nasa / cfe # <number> , add es application control <allcaps> api </allcaps> functional tests - nasa / cfe # <number> , update coverage test to use utassert macros - nasa / cfe # <number> , add table api functional tests - nasa / cfe # <number> , add generic counter <allcaps> api </allcaps> test - nasa / cfe # <number> , add resource <allcaps> id api </allcaps> functional tests - nasa / cfe # <number> , finish es misc <allcaps> api </allcaps> functional test - nasa / cfe # <number> , last char truncated in coverage log output - nasa / cfe # <number> , mistakes in some copyright headers - nasa / cfe # <number> , add misc time api functional test cfe - nasa / cfe # <number> , add functional test for <allcaps> evs </allcaps> reset filters <allcaps> api </allcaps> - nasa / cfe # <number> , replace <allcaps> voidcall </allcaps> assert macro - nasa / cfe # <number> , <allcaps> rtems </allcaps> cfe_ft_global build failure *osal* - nasa / osal # <number> , add absolute branch coverage check <section> cfe checks < <url> cfs checks < <url> osal checks < <url> <section> see prs <section> ci ubuntu <number> <allcaps> rtems </allcaps> <number> ( qemu ) <allcaps> rtems </allcaps> <number> ( qemu ) <section> none <section> <user> <user> <user> <user> <user> <user>"
"fix # <number> , skip deploy job instead of step fix # <number> <section> pushed to fork and check job skip in actions <section> the build documentation workflow ' s deploy - usersguiude and deploy - osalguide <section> are skipped , see <url> <section> github ci <section> none"
"skip documentation deploy job instead of step when not pushing to main the deploy jobs in the documentation workflow run even when the criteria for deployment are not met . this is not a problem since the git push step , which does the actual deployment does not run . however , this does spin up an extra vm that then gets shut down immediately . skipping the job can shave a couple of seconds from the full ci suite . <url> <section> move the if condition up one level from the deploy _step_ to the deploy <section> . <section> leave as is . <section> none <section> full name and company / organization if applicable"
"cfs integration candidate : <number> - <number> - <number> # # describe the contribution # # # combines <url> v5 . <number> - rc1 + dev586 <url> v6 . <number> - rc1 + dev810 # # # includes # # # # cfe nasa / cfe # <number> , add null pointer check to table getaddresses and releaseaddresses nasa / cfe # <number> , explain fs header offset & add offset functional tests . nasa / cfe # <number> , handle fail status in gettypefrommsgid nasa / cfe # <number> , add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> nasa / cfe # <number> , remove sb get last message sender info requirement nasa / cfe # <number> , update uts to use utassert_mir nasa / cfe # <number> , add functional tests cfe message id nasa / cfe # <number> , add time conversion functional test nasa / cfe # <number> , add cast to <allcaps> mir </allcaps> prints # # # # osal nasa / osal # <number> , add utassert_mir macro nasa / osal # <number> , add generic asserts from <allcaps> cfe </allcaps> coverage testing nasa / osal # <number> , add osapi - shell - stubs . c to <allcaps> osal </allcaps> stub library # # testing performed cfs checks < <url> osal < <url> cfe < <url> - cfe failures due to osal dependency , jobs pass in bundle tests and fork - coverage tests < <url> - functional tests < <url> <section> see prs <section> ubuntu ci <section> none <section> <user> <user> <user> <user> <user> <user> <user>"
"fail prs using wrong commit template force users to use the right commit message template to reduce contributors ' time . <section> create new workflow that enforces commit messages to use the format : <code> <section> n / a <section> helpful links : <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add github workflows to bootes . x - redo of pull request # <number> - added workflow directory and codeql files for the bootes build to fixes # <number> . - modified build - documentation . yml and static - analysis . yml to work with bootes build . - modified the workflow <allcaps> readme </allcaps> . md badges to work with bootes . x branch . <section> steps taken to test the contribution : <number> . modified path for the build - documentation . yml build <allcaps> osal </allcaps> guide so it could find the correct directory . documentation workflow run <url> <number> . modified path for the static - analysis . yml cfe strict cppcheck to find the correct directory . static analysis workflow run <url> <section> - with the added workflow and codeql we can test the previous build with github action and codeql semantic code analyzer . <section> - github actions ubuntu - <number> runner <section> frank i . gonzalez soto , <allcaps> gsfc </allcaps> code <number> intern"
test
"cfs integration candidate : <number> - <number> - <number> # # context combines nasa / cfe # <number> , v6 . <number> - rc1 + dev789 nasa / osal # <number> , v5 . <number> - rc1 + dev578 nasa / cfs - groundsystem # <number> , v2 . <number> - rc1 + dev58 # # # tests # # # authors <user> <user> <user> <user> <user> <user> <user> # # description # # # cfs pr # <number> fix # <number> , codeql dependent on successful build # # # submodule prs # # # # cfe nasa / cfe # <number> , correct return code check nasa / cfe # <number> , documentation for fs apis that return <allcaps> osal </allcaps> codes nasa / cfe # <number> , adding coverage tests for cfe_es_apps . c nasa / cfe # <number> , update docs for cfe_fs_backgroundfiledumprequest nasa / cfe # <number> , correct return code mismatches nasa / cfe # <number> , requirements update for caelum nasa / cfe # <number> , add null check to cfe_es_taskid_toindex . nasa / cfe # <number> , scrub command documentation nasa / cfe # <number> , add time arithmetic functional tests nasa / cfe # <number> , add file utility functional tests . nasa / cfe # <number> , add custom epoch support to <allcaps> time ut </allcaps> nasa / cfe # <number> , add cast to <allcaps> mir </allcaps> prints # # # # <allcaps> osal </allcaps> nasa / osal # <number> , add unit test branch coverage # # # # cfs ground system nasa / cfs - groundsystem # <number> , update tlm for es blockstats / memstats and <allcaps> tbl hk </allcaps> nasa / cfs - groundsystem # <number> , * might be referenced before assignment"
"cfs integration candidate : <number> - <number> - <number> # # context # # # combines <url> v6 . <number> - rc1 + dev762 <url> v5 . <number> - rc1 + dev573 # # # tests bundle < <url> cfe < <url> osal < <url> # # # authors <user> <user> <user> <user> # # description # # # includes nasa / cfe # <number> , remove default . dat extension nasa / cfe # <number> , change ci to use test log . nasa / cfe # <number> , update <allcaps> api </allcaps> doxygen list nasa / cfe # <number> , update documentation for cfe_es_getpoolbufinfo nasa / cfe # <number> , cfe_sb_msghdrsize returns size_t nasa / cfe # <number> , improve sb coverage test nasa / cfe # <number> , correct function name in ut_bsp_unlock nasa / osal # <number> , add independent os_rename functional test parameter checks"
"fix # <number> port codeql and workflows into bootes - added workflow directory and codeql files for the bootes build to fixes # <number> . - modified build - documentation . yml and static - analysis . yml to work with bootes build . <section> steps taken to test the contribution : <number> . modified path for the build - documentation . yml build <allcaps> osal </allcaps> guide so it could find the correct directory . documentation workflow run <url> <number> . modified path for the static - analysis . yml cfe strict cppcheck to find the correct directory . static analysis workflow run <url> <section> - with the added workflow and codeql we can test the previous build with github action and codeql semantic code analyzer . <section> - github actions ubuntu - <number> runner <section> frank i . gonzalez soto , <allcaps> gsfc </allcaps> code <number> intern"
"fix # <number> , codeql dependent on a successful build fixes # <number> added workflow_run event as a trigger . <section> tested on fork . triggered on workflow_run . will work once workflow is integrated in main . image <img> <section> if build , test , and run [ omit_deprecated = true ] fails , then codeql will not run . <section> <url> build , test , and run [ omit_deprecated = true ] must be renamed . tried <code> <code> <code> build , test , and run name works . downside is that codeql workflow does not name what triggered the workflow such as the name of the commit . instead it always says the name of the workflow which is codeql analysis . <section> ariel adams , <allcaps> asrc </allcaps> federal"
port codeql and workflows into bootes the current build of bootes lack the codeql semantic code analyzer and github action workflows . <section> add workflows and codeql to the bootes build . <section> none <section> frank i . gonzalez soto - <allcaps> gsfc </allcaps> <number> intern
"add codeql configuration files to <allcaps> lgtm </allcaps> setup for better visualization the setup for . lgtm . yml does not use the coding standard or security configuration files that we are using for github actions . figure out how to reference them in the setup <section> if applicable , add references to the software . <section> lgtm . com <section> <allcaps> lgmt </allcaps> . com uses codeql as its backend . although we already run these analyses on github , <allcaps> lgtm </allcaps> provides a more visual layout and dashboard to the findings report <allcaps> and </allcaps> it is public , which increases transparency to stakeholders . <section> remove . lgtm . yml and stop using that dashboard . figure out how to export sarif files from github runs and have <allcaps> lgtm </allcaps> read them ."
"cfs bundle integration candidate : <number> - <number> - <number> # # testing cfs checks < <url> cfe checks < <url> osal checks < <url> # # authors <user> <user> <user> <user> # # description combines < <url> v6 . <number> - rc1 + dev746 < <url> v5 . <number> - rc1 + dev569 # # # includes : nasa / osal # <number> , timer reconfig tests nasa / cfe # <number> , size unit test table load buffer based on config nasa / cfe # <number> , add sb pipe management functional tests"
"fix # <number> , add <allcaps> rtems </allcaps> build and test workflows add two workflows for building and testing cfs in both <allcaps> rtems </allcaps> <number> and <number> add scripts folder into . github for running all unit tests inside <allcaps> qemu </allcaps> use dockerhub to store docker image containing all <allcaps> qemu </allcaps> and <allcaps> rtems </allcaps> toolchain and dependencies * added two github actions workflows to build and test cfs in <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> . * added two bash scripts which are used in the new workflows to run every unit test in <allcaps> qemu </allcaps> and to generate the logs for the unit tests . * created two docker images which are used in github actions to run the tests without having to install and configure <allcaps> qemu </allcaps> and <allcaps> rtems </allcaps> . * the source dockerfiles are located here ] ( <url> and the images can be found [ here <url> . - fixes # <number> - also fixes the related issue # <number> <section> steps taken to test the contribution : <number> . tested the behavior of the added workflows in github actions . <number> . the latest runs show that not all unit tests are capable of passing in the <allcaps> rtems </allcaps> configuration . <number> . <allcaps> rtems </allcaps> <number> workflow run <url> <number> . <allcaps> rtems </allcaps> <number> workflow run <url> <section> there is no expected behavior change . additions were only made in the . github folder <section> - github actions ubuntu <number> runner <section> <section> the only code contributions are in the . github folder . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"add <allcaps> rtems </allcaps> build and test to ci currently the build , test , and run github actions workflow only tests building and running on native linux . this will not catch any errors that only affect running in <allcaps> rtems </allcaps> or when cross - compiling . <section> add github actions workflow to cross - compile and run unit tests in both <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> using <allcaps> qemu </allcaps> <section> none <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"integration candidate : <number> - <number> - <number> # # context combines : nasa / cfe # <number> , cfe v6 . <number> - rc1 + dev739 nasa / osal # <number> , osal v5 . <number> - rc1 + dev564 # # tests bundle checks < <url> cfe checks < <url> osal checks < <url> # # authors <user> - creator <user> <user> <user> <user> # # description includes nasa / cfe # <number> , change index type to resolve infinite loop warning nasa / cfe # <number> , adding coverage for cfe_es_task . c nasa / cfe # <number> , expand fs header functional tests . nasa / cfe # <number> , complete coverage for cfe_es_start . c and cfe_es_syslog . c nasa / osal # <number> , add range to os_taskdelay checks nasa / osal # <number> , return os_object_id_undefined for root task id on <allcaps> rtems </allcaps> nasa / osal # <number> , increase ut symbol dump size limit nasa / osal # <number> , do not register <allcaps> rtos </allcaps> timer for external sync nasa / osal # <number> , avoid task delete during utprintf nasa / osal # <number> , add osal prefix to network <allcaps> api </allcaps> group nasa / osal # <number> , increase timeout in network - api - test"
"fix # <number> , apply fix for osal guide pdf generation - modified build - documentation . yml to fix # <number> and successfully generate the osal guide pdf in the documentation github actions workflow <section> steps taken to test the contribution : <number> . modified the if statements in build - documentation . yml to force the osal pdf to generate on my forked branch to ensure the fix worked properly . the output of this github actions documentation workflow run is here <url> <number> . the change to the if statements was reverted and a github actions documentation worfklow run without this modification is here <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - changed a single <code> command in build - documentation . yml which should let the subsequent <code> call run properly - no expected behavior should change . this only fixes an issue with the osal guide not being generated by github actions . <section> - github actions ubuntu - <number> runner <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> niall mullane , <allcaps> gsfc </allcaps> code <number> intern"
"github action workflow fails to generate osal guide pdf the github action workflow , documentation and guides , fails to generate the osal pdf guide . it attempts to <code> to an incorrect directory that does not exist . <section> steps to reproduce the behavior : <number> . go to the documentation workflow <url> <number> . modify the if statements on lines <number> , <number> , and <number> to let the steps continue even if not on the main branch <number> . run the documentation and guides workflow <number> . see the error in the osal guide job . here <url> is the error i received on my fork running on the latest integration candidate branch . <section> this github action should generate the expected pdf osal guide . <section> the bug originates from this <url> line in the workflow . <section> niall mullane , <allcaps> gsfc </allcaps> code <number> intern"
"cfs bundle integration candidate : <number> - <number> - <number> # # authors <user> <user> <user> <user> <user> <user> # # description # # # combines : - nasa / cfe # <number> - nasa / osal # <number> - nasa / ci_lab # <number> - nasa / sch_lab # <number> - nasa / sample_app # <number> - nasa / sample_lib # <number> - nasa / to_lab # <number> - nasa / elf2cfetbl # <number> - nasa / tblcrctool # <number> - nasa / cfs - groundsystem # <number> # # # includes - nasa / cfe # <number> , correct path to users guide warning log - nasa / cfe # <number> , add additional test cases for child tasks - nasa / cfe # <number> , add cfe functional tests to ci - nasa / cfe # <number> , rename / clean <allcaps> cfe </allcaps> coverage assert macros - nasa / cfe # <number> , added ut tests for cfe es api - nasa / cfe # <number> , expand <allcaps> cds </allcaps> functional tests . - nasa / cfe # <number> , add test log file - nasa / cfe # <number> , fix # <number> # <number> # <number> , event id updates - nasa / cfe # <number> , scrub all ut_report calls - nasa / osal # <number> , implement missing parameter / retcode test permutations - nasa / cfs - groundsystem # <number> , add test start command script for cmdutil - nasa / tblcrctool # <number> , add printf conversion casts - nasa / tblcrctool # <number> , add printf conversion casts - nasa / cfs - groundsystem # <number> , add test start command script for cmdutil * coding standard * - nasa / cfs - groundsystem # <number> - nasa / elf2cfetbl # <number> - nasa / tblcrctool # <number> - nasa / ci_lab # <number> - nasa / sch_lab # <number> - nasa / sample_app # <number> - nasa / sample_lib # <number> - nasa / to_lab # <number>"
add a bot that automatically posts the current repository hash when issues are created <section> when looking at really old tickets it is hard to know what they refer to <section> bot that automatically gets the current git - sha when an issue is posted . <section> have a section that asks which version of the component the user is reporting the bug against
"cfs bundle integration candidate : <number> - <number> - <number> # # testing cfe <url> osal <url> psp <url> bundle <url> # # authors <user> <user> <user> <user> <user> # # description <section> nasa / cfe # <number> - cfe v6 . <number> - rc1 + dev693 nasa / osal # <number> - osal v5 . <number> - rc1 + dev530 nasa / <allcaps> psp </allcaps> # <number> - psp v1 . <number> - rc1 + dev118 <section> nasa / cfe # <number> , updated fs read / writeheader <allcaps> api </allcaps> return documentation nasa / cfe # <number> , document cfe_es_runloop increment task counter behavior nasa / cfe # <number> , document cfe_tbl_unregister use - case nasa / cfe # <number> , update version description per current design <section> nasa / cfe # <number> , standardize on "" docs "" subdirectory nasa / osal # <number> , rename doc to docs nasa / psp # <number> , rename doc to docs <section> nasa / osal # <number> nasa / psp # <number> <section> nasa / cfe # <number> , provide <allcaps> cfe </allcaps> assert lock / unlock nasa / osal # <number> , add mutex lock around utassert globals <section> nasa / osal # <number> , idmap <allcaps> api </allcaps> nasa / osal # <number> , file <allcaps> api </allcaps> nasa / osal # <number> , filesys <allcaps> api </allcaps> nasa / osal # <number> , socket <allcaps> api </allcaps> nasa / osal # <number> , select <allcaps> api </allcaps> <section> nasa / cfe # <number> , simplify cfe_fs_settimestamp and fix syslog typo nasa / cfe # <number> , removed redundant check / set of cfe_cpu_id_value nasa / cfe # <number> , add time get reference error bit nasa / cfe # <number> , add workflow to build cfe documentation nasa / cfe # <number> , requirements updates nasa / cfe # <number> , es / resourceid documentation cleanup nasa / cfe # <number> , allow multiple sources in add_cfe_coverage_test nasa / cfe # <number> , add es misc functional test nasa / cfe # <number> , add mempool functional tests nasa / cfe # <number> , clean / simplify version header and reporting nasa / cfe # <number> , doxygen cleanup nasa / cfe # <number> , prepend system log messages with function name <section> nasa / osal # <number> , const correct os_selectfdisset nasa / osal # <number> , fix os_select doxygen errors nasa / osal # <number> , add missing os_select param doc nasa / osal # <number> , add workflow to build and verify <allcaps> osal api </allcaps> guide nasa / osal # <number> , add detail design template nasa / osal # <number> , update error codes and documentation nasa / osal # <number> , increase ut object limit for testing"
"make codeql workflow dependent on a succesful build <section> the codeql workflow runs without any knowledge of whether or not cfs can be built this prevents a "" fail - fast "" approach to testing and results in wasted github actions cycles . <section> figure out how to make the codeql workflow not run when the main "" build and test "" job fails . <section> none <section> this might require the workflow or repository "" dispatch "" actions . if successful we can follow this pattern in submodules ."
"cfs bundle integration candidate : <number> - <number> - <number> # # context nasa / cfe # <number> nasa / osal # <number> nasa / sch_lab # <number> # # tests cfs bundle checks < <url> cfe checks < <url> osal checks < <url> sch_lab checks < <url> # # authors <user> <user> <user> <user> <user> # # description includes : nasa / cfe # <number> , update es verify errors to match test nasa / cfe # <number> , resolve mismatched endforeach of cmakelist . txt nasa / cfe # <number> , improve event filter documentation nasa / cfe # <number> , <allcaps> evs </allcaps> / fs documentation cleanup nasa / cfe # <number> , remove shell file subtype and clarify scope nasa / cfe # <number> , simplify file open / truncate logic nasa / cfe # <number> , remove deprecated elements nasa / cfe # <number> , replace header content type magic number nasa / cfe # <number> , remove unused <allcaps> evs </allcaps> logmode defines nasa / cfe # <number> , document cleanup from sb / <allcaps> msg </allcaps> / <allcaps> sbr </allcaps> review , remove unused cfe_sb_no_subscribers nasa / cfe # <number> , add cfe_sb_destinationd tag and use for pointers nasa / cfe # <number> , use cfe_msg_sequencecount_t for seqcnt type nasa / cfe # <number> , document cfe_es_poolcreateex numblocksizes error handling nasa / cfe # <number> , documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> nasa / cfe # <number> , document tblname as app specific nasa / cfe # <number> , use <allcaps> osal </allcaps> script to generate <allcaps> api </allcaps> guide nasa / cfe # <number> , include verify headers to validate config nasa / osal # <number> , include doxygen targets locally nasa / osal # <number> , document os_objectidtoarrayindex as public nasa / osal # <number> , resolve discrepancies between binsem <allcaps> api </allcaps> and unit tests nasa / osal # <number> , add missing clock retcode tests nasa / osal # <number> , resolve discrepancies between common <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between countsem <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between dir <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between module <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between mutex <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between queue <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between task <allcaps> api </allcaps> and unit tests nasa / osal # <number> , resolve discrepancies between timebase <allcaps> api </allcaps> and unit tests nasa / osal # <number> , check misc <allcaps> api </allcaps> return codes nasa / osal # <number> , rename codeql cfe build and add duplicate job nasa / osal # <number> , filter only whole words for keyword match nasa / osal # <number> , update <allcaps> osal </allcaps> config guide link nasa / sch_lab # <number> , exit the main loop if init fails nasa / cfe # <number> , add doxygen aliases for <allcaps> osal </allcaps> parameter / retvals"
"fix # <number> , use full path for queries in codeql fixes # <number> use the full path of queries in codeql so repositories using the cfs configuration files will run codeql . need to be integrated so codeql workflows runs with no errors . <section> tested locally in arielsadams / cfs <user> <section> repositories such as <allcaps> psp </allcaps> will run codeql with no errors . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"use full path for queries in codeql repositories will be using the configuration files in cfs rather than using duplicate configuration files in their own repos . some codeql workflows do not work unless the full path of the queries are used such as <allcaps> psp </allcaps> , <url> <section> use the full path for queries in codeql . for example , instead of . / codeql / cpp / ql / src / jpl_c use github / codeql / cpp / ql / src / jpl_c <user> . some repositories such as cfe does not require the full path . <section> n / a <section> tested this locally . the <allcaps> psp </allcaps> was throwing the error "" the configuration file "" nasa / cfs / . github / codeql / codeql - coding - standard . yml <user> "" is invalid : property "" queries . uses "" is invalid as the local path "" codeql / cpp / ql / src / jpl_c "" does not exist in the repository "" . this error goes away when the full path for the queries are used . <section> ariel adams"
"cfs bundle integration candidate : <number> - <number> - <number> # # testing cfs bundle checks < <url> cfe checks < <url> osal checks < <url> # # description combines : - nasa / cfe # <number> - nasa / osal # <number> includes : - nasa / cfe # <number> , add printf format casts - nasa / cfe # <number> , accept "" <allcaps> null </allcaps> "" as entry point - nasa / cfe # <number> , add capability to generate multiple tables - nasa / cfe # <number> , fixes discrepancies ( return type , parameter names , etc ) between function protoypes and implementation . updates stubs accordingly - nasa / osal # <number> , add count sem timeout test - nasa / osal # <number> , defer cancellation when <allcaps> bsp </allcaps> locked # # authors <user> <user> <user> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , implement coding standard rules in codeql [ continuous - integration ] adds <allcaps> jpl </allcaps> power of <number> rules and some <allcaps> misra </allcaps> rules to codql config guide to implement the updated the coding standard . # # # pr # <number> fix # <number> , add workflow descriptions in <allcaps> contributing </allcaps> . [ docs ] adds short descriptions to each of our workflows . # # # pr # <number> fix # <number> , correct links to community mailing list # # # integration candidate nasa / cfe # <number> nasa / osal # <number> # # # # includes nasa / cfe # <number> , resolve sequence count auto - increment rollover bug nasa / cfe # <number> , correctly format code block section terminator nasa / cfe # <number> , fix typos in developer guide nasa / osal # <number> , show codeql preview nasa / osal # <number> , rename hooks to handlers nasa / osal # <number> , propagate status code in os_rmdir nasa / osal # <number> , rework "" unit - tests "" to use macros nasa / osal # <number> , remove extra newlines in utassert logs nasa / osal # <number> , add test for object id inline functions nasa / osal # <number> , fixed invalid inputs for os_mkdir nasa / osal # <number> , improves config guide documentation # # authors <user> <user> - hbr <user> <user> <user> <user> <user>"
"link to join mailing list is broken the link in the readme file to join the community mailing list results in a "" page not found "" error . <section> beth timmons / <allcaps> nasa gsfc </allcaps>"
"cfs bundle integration candidate : <number> - <number> - <number> # # description integration candidate combines nasa / cfe # <number> , cfe v6 . <number> - rc1 + dev575 nasa / osal # <number> , osal v5 . <number> - rc1 + dev434 # # # includes nasa / cfe # <number> , remove broken travis - ci script nasa / cfe # <number> , generated coverage stubs for <allcaps> cfe </allcaps> core nasa / cfe # <number> , move cfe_fs_runbackgroundfiledump to internal <allcaps> api </allcaps> nasa / cfe # <number> , <allcaps> osal </allcaps> config file simplification nasa / cfe # <number> , removes - - quiet option so files checked go to stdout nasa / osal # <number> , configuration guide updates nasa / osal # <number> , improve documentation of utassert <allcaps> api </allcaps> calls nasa / osal # <number> , update os_taskcreate doc nasa / osal # <number> , enable cppcheck results output nasa / osal # <number> , scrub return values nasa / osal # <number> , add local mutex to <allcaps> bsp </allcaps> console nasa / osal # <number> , do not require nonblock mode # # tests cfs bundle checks < <url> cfe checks < <url> osal checks < <url> # # authors <user> <user>"
"fix # <number> , implement coding standard rules in codeql fix # <number> added <allcaps> jpl </allcaps> rules to configuration guide to follow the coding standard . codeql provides some <allcaps> misra </allcaps> rules scattered in its repository . * cpp / ql / src / jsf / <number> operators / av rule <number> . ql - <allcaps> misra </allcaps> rule <number> - <number> - <number> * cpp / ql / src / jsf / <number> pointers and references / av rule <number> . ql - <allcaps> misra </allcaps> rule <number> - <number> - <number> * cpp / ql / src / jsf / <number> operators / av rule <number> . ql - <allcaps> misra </allcaps> rule <number> - <number> - <number> * cpp / ql / src / jsf / <number> operators / av rule <number> . ql - <allcaps> misra </allcaps> rule <number> - <number> - <number> * cpp / ql / src / jsf / <number> expressions / av rule <number> . ql - <allcaps> misra </allcaps> <number> - <number> - <number> * cpp / ql / src / jsf / <number> unions and bit fields / av rule <number> . ql - <allcaps> misra </allcaps> rule <number> - <number> - <number> <section> tested locally . <allcaps> jpl </allcaps> rules can be seen here : image <img> <section> codeql should scan for violations against <allcaps> jpl </allcaps> rules and a few <allcaps> misra </allcaps> rules . <section> can create a separate workflows . one for the coding standards and another for the security queries . note that users can search through results based on rules , but i believe this can be done one rule at a time . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fixes # <number> , adds instructions on how to view errors from failed workflows and how to view workflow results in both the actions tab and pull requests . adds a list of our workflows and their current status . adds information on where to find and how to configure workflows . # # # integration candidate ( ic : <number> - <number> - <number> ) combines : <url> <url> including : nasa / osal # <number> , utprintx function nasa / osal # <number> , add socket shutdown implementation # # tests osal checks < <url> cfe checks < <url> cfs bundle checks < <url> # # authors <user> <user> <user>"
"implement <allcaps> jpl </allcaps> rules in codeql codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , rename getting started in contributing . md # # # combined ics <url> <url> <url> # # # # includes : nasa / cfe # <number> , memory pool pointer type nasa / cfe # <number> , es child task functional test nasa / cfe # <number> , typo in macro name nasa / cfe # <number> , remove broken <allcaps> builddir </allcaps> reference nasa / cfe # <number> , remove option for "" osal_compatible "" nasa / cfe # <number> , cfe_success constant type nasa / cfe # <number> , remove unused error codes nasa / cfe # <number> , better warning about malformed startup line nasa / cfe # <number> , check status of call to <code> nasa / cfe # <number> , update documentation for <code> nasa / osal # <number> , update documentation for read / write nasa / osal # <number> , add "" handler "" feature to utassert stub <allcaps> api </allcaps> nasa / osal # <number> , adds local makefile and bundle / local unit test actions with coverage verification nasa / osal # <number> , socket accept using incorrect record nasa / osal # <number> , move async console option nasa / sample_lib # <number> , replace direct ref to argptr with macro # # testing bundle < <url> cfe < <url> osal < <url> sample_lib < <url> # # authors <user> <user> <user> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> # # description # # # integration nasa / cfe # <number> nasa / osal # <number> nasa / cfs - groundsystem # <number> # # # continuous integration changes - <allcaps> hotfix </allcaps> , add context check to docs deploy step - <allcaps> hotfix </allcaps> , check for duplicates for all jobs in documentation workflow - pr <url> rename duplicate - job for workflows # # # documentation changes - pr <url> documentation and guides workflow run on all push events - pr <url> add instructions on how to squash and amend commits # # testing bundle tests < <url> cfe checks < <url> osal < <url> cfs - groundsystem < <url> # # authors <user> <user> <user>"
"relationship of cfs <allcaps> cpu </allcaps> number to linux <allcaps> cpu </allcaps> number is there a definite relationship between the cfs <allcaps> cpu </allcaps> number and the number given by the linux <code> command ? i am working from the files in <code> , where the demo purports to run on <allcaps> cpu </allcaps> <number> . it seems to me that this could mean either <allcaps> cpu </allcaps> <number> or <allcaps> cpu </allcaps> <number> , in the linux labelling system , but it is not clear which . when i actually run <code> , however , my cfs instance is running on <allcaps> cpu </allcaps> <number> , i . e . the third <allcaps> cpu </allcaps> . ta , jack"
"flywheeling in timer latency test i have written an app to test timer interrupt handling latency under heavy load . two latencies are calculated , given a timer with period t and tick number j : - the difference between ( <allcaps> met </allcaps> at tick ) and ( <allcaps> met </allcaps> at last tick + t ) - the difference between ( <allcaps> met </allcaps> at tick ) and ( <allcaps> met </allcaps> at first tick ) + (j * t)) for ease of use , the timing process starts when the app starts , but this is problem because the clock seems to be in <allcaps> flywheel </allcaps> mode at init , but the reported mode is <allcaps> invalid </allcaps> . some time after cfs starts up , flywheeling stops , and then i get a jump in the clock , and my measurements jump . i am unsure whether or not it is a bug that the clock mode is <allcaps> invalid </allcaps> , even though the clock is flywheeling . i have tried , as a stop - gap measure , including the time utils header from cfe , and setting the <allcaps> met </allcaps> to ( <number> ) during app init , because from the documentation , i was under the impression that setting the clock would put it in <allcaps> valid </allcaps> mode . can anyone shed some light on this ? i have tried sending to the mailing list , but my emails just disappear - no bounce or anything . i am on the <code> branch . here is the log : <code>"
cfs bundle integration candidate : <number> - <number> - <number> # # description combines < <url> < <url> # # test cfs bundle checks < <url> # # authors <user>
cfs bundle integration candidate : <number> - <number> - <number> # # describe the contribution includes < <url> < <url> < <url> # # tests bundle checks : < <url> # # authors
"fix # <number> , documentation and guides workflow run on all push events fixes # <number> - removed the main branch for push so that the workflow runs on all branches for push and pull requests . - added the duplicate jobs action so that the workflow does not run any duplicate jobs . <section> tested locally <url> <section> - the documentation and guides workflow should run on all push events . for example , when users push code to their forked repos , the documentation and guides workflow should run . - when a user pushes code to a pull request , the workflow should not run duplicate jobs for both push and pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , rename duplicate - job for workflows fixes # <number> rename the duplicate - job job to checks - for - duplicates . <section> users should be able to understand the purpose of this job . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"documentation and guides workflow does not run for all push events <section> the "" documentation and guides "" ci workflow still has the old push - > main branch restriction so it will not run on other branches in forks . <section> create a new branch and push to it . the documentation workflow will not run <section> workflow should run on all branches <section> <code> <section> github ui <section> see # <number> for how to run on all branches without duplicates"
cfs bundle integration candidate : <number> - <number> - <number> # # description includes <url> <url> # # testing performed bundle tests : <url> # # expected behavior changes see submodule pr # # authors <user> <user>
"rename "" duplicate - job "" job on workflows can we name this step "" check - for duplicates "" ? we can open a new issue for this . _originally posted by <user> in <url>"
"rename "" getting started "" section in contributing guide the getting started section probably needs a rename now since it is not really about "" getting started "" anymore . _originally posted by <user> in <url>"
"fix build steps in readme . md <section> the steps in readme are missing the copy sample_defs part <code> <section> delete , refer to another doc , or fix"
codeql
"cfs bundle integration candidate : <number> - <number> - <number> <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . # # describe the contribution includes < <url> < <url> < <url> < <url> < <url> < <url> < <url> # # # other fixes fix # <number> , remove duplicate workflows fix # <number> , add writing high quality code fix # <number> , create changelog github actions workflow # # testing performed bundle checks < <url> # # expected behavior changes see submodule prs # # # pr # <number> all workflows now run on any branch after a push event . this allows all checks to run on forked repositories so users can test their commits before submitting a pull request . adds check for duplicate workflow triggers . # # # pr # <number> add "" writing high quality code "" section to contributing guide that references style guide and naming conventions . # # # pr # <number> adds a new manually - triggered workflow to generate a changelog # # authors <user> <user> <user> <user> <user> <user>"
<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . # # describe the contribution adds nasa / osal # <number> that was missing from ic : <number> - <number> - <number> # # testing performed bundle tests < <url> osal tests < <url> # # expected behavior changes see nasa / osal # <number> # # authors <user>
"fix # <number> , remove duplicate workflows <section> fix # <number> removed the main branch in the static analysis , deprecated build , run , and test , and omit deprecated workflows for push . all four workflows , codeql , static analysis , deprecated build , run , and test , and omit deprecated uses a github action to skip any duplication workflows . <section> tested on my forked repository <url> . created a pull request and pushed changes to test . <section> the static analysis , deprecated build , run , and test , and omit deprecated workflows now run on all branches when code is pushed . the codeql workflow already allowed this . the changes allow the workflows to run on all branches when users are wanting to test their commits on their forked repos . the github action used skips push workflows , instead of pull request workflows , and does not cause these skips to fail the checks . so , there should be no duplicate github actions workflows . <section> references : <url> <url> travis ci still runs for all push and pull requests and there are duplicate runs for this tool when tested on the forked repo pull request . <section> ariel adams , <allcaps> asrc </allcaps> federal"
cfs bundle integration candidate : <number> - <number> - <number> # # describe the contribution includes < <url> < <url> < <url> < <url> < <url> < <url> # # testing see checks tab < <url> see submodule integration candidates # # expected behavior changes see submodule integration candidates <section> <user> <user> <user> <user> <user> <user>
cfs bundle integration candidate : <number> - <number> - <number> <section> <url> <url> <url> ( no version bump ) <url> ( no version bump ) <section> ci <section> see related pr ' s <section> ci <section> none <section> <user>
"<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> <section> adds version bumps and readme updates to : - nasa / ci_lab # <number> - nasa / to_lab # <number> points to respective "" main "" branches after ic : <number> - <number> - <number> merge : - nasa / cfe # <number> - nasa / psp # <number>"
cfs bundle integration candidate : <number> - <number> - <number> <section> <url> <url> <url> <url> <url> <url> <url> <url> <url> <url> <url> <section> ci <section> see related pr ' s <section> ci <section> none <section> <user> <user> <user>
"cfs bundle integration candidate : <number> - <number> - <number> <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"ic <number> - submodule updates <section> dummy pull request to trigger actions , real pr to follow additional merges . we need to make ci run on all branch pushes ( so it can be analyzed in a fork . <repeated> ) <section> ci <section> see real pr <section> ci <section> na <section> see real pr"
community space for q & a and support continuing the discussion about questions and support started in # <number> .
"cfs bundle integration candidate : <number> - <number> - <number> <section> fix # <number> , create contributing . md fix # <number> , add testing tools to the security policy combines <url> <url> <url> <section> see < <url> <section> pr # <number> - adds a contribution guide pr # <number> - updates security . md to include details on our testing policy and approaches also see submodule integration candidates and - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / cfe # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / osal # <number> - nasa / elf2cfetbl # <number> <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
highlight community contributors <section> we do not have a way of publicly recognizing our contributors from the community <section> add a contributors or community section to readme . md with people ' s github icon <section> - use <url> - use <url> - use <url> - have a list on the wiki with github handles
"versioning reporting across components # # follow up to discussion in nasa / osal # <number> and in <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> here ' s my view of the situation so far . # # # problem : <number> . developers and users need to know what "" version "" they are running . <number> . developers and users need to know what the "" latest stable "" version was <number> . we are aiming to conform to semantic versioning which assigns meaning for the first three numbers in a version . <number> . there are multiple places and mechanisms to get the "" version state "" : - hk telemetry - plain text source files - <allcaps> evs </allcaps> response to noop - <allcaps> evs </allcaps> message upon startup <number> . the current "" full version state "" is in the form of <allcaps> major </allcaps> . <allcaps> minor </allcaps> . <allcaps> patch </allcaps> + devbuildnum each of these mechanisms should "" report "" a minimal set of * non - contradictory , self - evident * information . # # # solution approaches for reporting the version state during *development* these are not mutually exclusive , i foresee landing in some sort of combination between them . <number> . keep the <code> number to <code> <number> . make the <code> number <code> <number> . make all numbers the same value ie . <code> *or* <code> <number> . add full version string to hk telemetry <number> . add a hash or checksum to hk telemetry that encodes the version information contained in the <number> . educate and document the version numbering <number> . use a git - based approach <number> . remove version reporting from hk telem # # # constraints <number> . hk telem should be kept small given that it is sent regularly <number> . "" <number> "" indicator for development has been accepted practice internally and in other software ( see <allcaps> rtems </allcaps> version numbering <url>"
cfs bundle integration candidate : <number> - <number> - <number> <section> combines nasa / osal # <number> nasa / cfe # <number> nasa / cfs - groundsystem # <number> <section> see < <url> <section> see submodule prs <section> ubuntu <number> <section> none <section> <user> <user> <user>
"check that commit messages adhere to standard using the continuous integration workflow <section> community contributors are not familiar with our <code> convention for commit messages . <section> adding an extra step or job to "" format check "" workflow <section> add a pre - commit hook on git <section> none <section> <user>"
"<allcaps> evs </allcaps> port1 <number> / <number> / cfe_es <number> : es_proccontrolreq : unknown state ( <number> ) application <allcaps> imu </allcaps> . hi , i am working on an <allcaps> imu </allcaps> application that connects and logs <allcaps> imu </allcaps> data . i have a function <code> that initializes the sensor and returns cfe_success if initialization succeeds and - <number> otherwise . if the return value is - <number> , the app will exit . i am trying to run the app when the sensor is physically disconnected to make sure i get the correct behavior , but i am getting this error message : <code> here is my appmain : ` <code> /* start performance log entry */ / / cfe_es_perflogentry ( imu_main_task_perf_id ) ; /* perform application initializations */ if ( imu_initapp ( ) ! = cfe_success ) { g_imu_appdata . uirunstatus = cfe_es_app_exit ; goto imu_appmain_exit_tag ; } else if ( imu_initsensor ( ) ! = cfe_success ) / / returns <number> on success and - <number> <hashtag> otherwise </hashtag> { g_imu_appdata . uirunstatus = cfe_es_app_exit ; goto imu_appmain_exit_tag ; } else { /* do not perform performance monitoring on startup sync */ cfe_es_perflogexit ( imu_main_task_perf_id ) ; cfe_es_waitforstartupsync ( imu_timeout_msec ) ; cfe_es_perflogentry ( imu_main_task_perf_id ) ; } istatus = cfe_es_createchildtask ( & taskid , "" <allcaps> imu </allcaps> child task "" , imu_childtask , imu_child_task_stack_ptr , imu_child_task_stack_size , imu_child_task_prio , <number> ); if ( istatus ! = cfe_success ) { g_imu_appdata . uirunstatus = cfe_es_app_error ; cfe_es_writetosyslog ( "" <allcaps> imu </allcaps> - failed to create child task \ n "" ); goto imu_appmain_exit_tag ; } /* application main loop */ while ( cfe_es_runloop ( & g_imu_appdata . uirunstatus ) = = <allcaps> true </allcaps> ) { cfe_es_perflogexit ( imu_main_task_perf_id ) ; istatus = imu_rcvmsg ( cfe_sb_poll ) ; } /* stop performance log entry */ cfe_es_perflogexit ( imu_main_task_perf_id ) ; <code> any help ? thanks !"
"fix # <number> , apply codeql to every branch <section> fix # <number> removed main branch on push and pull - request . added a timeout . removed cfs running . <section> codeql should run on every branch of cfs and timeout . cfs should not run , only build , since codeql does not require cfs to run for analysis . <section> ci <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , deploy documentation from github action <section> fix # <number> - generates and deploys documentation from github action <section> ran it on fork ( with branch adjusted ) and worked as expected . same behavior as old travis deploy workflow <section> document deployment is back ! <section> ci / github <section> could do the pandoc conversion from pdf to ghm ( github markdown ) , but pdf works fine for me <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add nasa / cfe # <number> <section> include updates to cfe add github actions ci <section> <section> <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"cfs bundle integration candidate : <number> - <number> - <number> <section> combines nasa / cfe # <number> nasa / osal # <number> nasa / psp # <number> nasa / to_lab # <number> nasa / tblcrctool # <number> <section> see < <url> <section> see submodule prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user> <user>"
"fix # <number> , add main branch to pull . request for codeql <section> fix # <number> , add main branch to pull . request for codeql workflow <section> fix codeql warning errors <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove debug build in codeql <section> fix # <number> . remove the debug build in the codeql workflow . <section> the codeql workflow should only have the release build . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"add main branch to pull . request for codeql workflow <section> the codeql workflow has two duplicate warnings as provided below . > <number> issue was detected with this workflow : please make sure that every branch in on . pull_request is also in on . push so that code scanning can compare pull requests against the state of the base branch . <section> the main branch should be added to pull . request . <section> ariel adams , <allcaps> asrc </allcaps> federal"
cfs bundle integration candidate : <number> - <number> - <number> <section> combines : - <url> - <url> - <url> - <url> - <url> - <url> - <url> - <url> - <url> - <url> - <url> <section> see < <url> <section> see submodule prs <section> ubuntu <number> <section> none <section> <user> <user> <user> <user>
cfs caelum
"add github actions codeql workflow <section> the lgtm continuous integration checks do not always seem to run correctly . <section> this will apply the same technology , codeql , but using github actions workflows and unify our different ci systems . <section> keep using <allcaps> lgtm </allcaps> and figure out why we get so many "" no code changes detected "" messages . <section> we can expand our codeql checks with ode standards and style checks once we update our code style and standard . <section> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> <section> combines - < <url> - < <url> - < <url> <section> see < <url> <section> see submodule prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
cfs bundle integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> combines - nasa / cfe # <number> - nasa / osal # <number> - nasa / psp # <number> <section> see <url> <section> pr # <number> pr # <number> see submodule prs for codebase changes <section> ubuntu <number> <section> add any other context about the contribution here . <section> <user> <user> <user> <user>
"fix # <number> and # <number> , add static code analysis and pull request trigger to ci workflow <section> fix # <number> fix # <number> <section> succesfully ran in fork . also see pull - request trigger working at <url> <section> new workflow "" static analysis "" runs cpp check on the bundle and also stricter checks on cfe , osal , and psp based on the old travis . yml setups . <section> ubuntu <number> <section> none"
"fix # <number> , update doc generation action error check <section> fix # <number> warning file is moved in build usersguide step . updated from checking the old file location to checking the moved file . <section> pushed to fork and observed the doc warnings are reported in actions . <section> actually reports when warnings are generated <section> - hardware : ci <section> actual fixes to the warnings will be in respective repos <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , codeql action workflow <section> fix # <number> implemented codeql action as a workflow to automatically detect common vulnerabilities and coding errors . <section> results should be displayed in the security tab under code scanning alerts . the workflow is triggered when code is pushed to any branch in a repository and during pull request events . image <img> <section> for more information visit : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfs bundle integration candidate : <number> - <number> - <number> <section> integration candidate <number> - <number> - <number> <allcaps> and </allcaps> <number> - <number> - <number> combines - < <url> - < <url> - < <url> <section> see < <url> <section> see submodule integration candidate prs <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> <section> includes <url> <url> <url> <url> <url> <url> <url> <section> <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user> <user>"
"fix # <number> , migrate ci to github actions <section> fix # <number> , add a github actions workflow . <repeated> add a github actions workflow to replace our travis ci create three separate workflows based on the . travis . yml file the build - cfs and build - cfs - deprecated workflows differ only by the omit_deprecated flag status . the build - documentation workflow only builds the doxygen docs . see examples : < <url> <section> ran with current integration candidate <section> tests run on pull requests and new branches . <section> ubuntu <number> <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"cfs integration candidate : <number> - <number> - <number> <section> combines < <url> < <url> < <url> < <url> < <url> < <url> < <url> <section> see events for "" github actions test "" at <url> <section> <section> ubuntu <number> <section> none <section> <user> <user> <user> <user>"
"cfs bundle integration candidate : <number> - <number> - <number> <section> includes <url> <url> <url> <url> <url> <section> bundle ci on astrogeco ' s fork : <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user> <user>"
"integration candidate : <number> - <number> - <number> <section> combines <url> <url> <url> <url> <url> <section> see framework - bundle ci : < <url> <section> see bundled prs <section> ubuntu ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user> <user>"
"integration candidate <number> - <number> - <number> <section> includes < <url> <section> see < <url> <section> see submodule prs <section> ubuntu <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user> <user>"
"integration candidate : <number> - <number> - <number> <section> combines <url> <url> <url> <section> see <url> <section> see submodule prs <section> ubuntu ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"bootes rc - <number> integration <section> combines <url> <url> <section> built and ran locally built in ci , <url> <section> <allcaps> osal </allcaps> and cfe revision version number now reports <number> in housekeeping telemetry for development builds . <section> built and ran on docker container . <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
"integration candidate <number> - <number> - <number> <section> combines <url> <url> <url> <url> <url> <section> bundle ci - <url> <section> see submodule prs <section> ubuntu ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> <user>"
integration candidate : <number> - <number> - <number> <section> includes <url> <url> <section> bundle build : <url> <section> see submodule prs <section> travis ci <section> none <section> none <section> <user> <user> <user>
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : <url> <section> bundle ci - <section> see prs . <section> ubuntu - ci <section> none . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : <url> <url> <section> bundle ci - <url> <section> see prs <section> ubuntu - ci <section> none . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : <url> <url> <url> <url> <url> <section> bundle ci - <url> <section> see prs <section> ubuntu - ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : <url> <url> <url> <section> bundle ci - <url> <section> see prs <section> ubuntu - ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . chris knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : <url> <url> <url> <section> bundle ci - <url> <section> see prs . <section> ubuntu - ci <section> none . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . chris knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> integration candidate includes : nasa / cfe # <number> nasa / osal # <number> nasa / psp # <number> nasa / to_lab # <number> nasa / sch_lab # <number> nasa / sample_app # <number> nasa / cfs - groundsystem # <number> nasa / elf2cfetbl # <number> <section> bundle ci - <url> <section> see prs <section> ubuntu - ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . chris knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fuzz testing <section> fuzz testing inputs invalid or random data to discover coding errors and security loopholes . helps identifies improper input validation ( <allcaps> cwe </allcaps> - <number> ) , buffer copy without checking size of input ( <allcaps> cwe </allcaps> - <number> ) , and information exposure ( <allcaps> cwe </allcaps> - <number> ) <section> once research is complete , implement testing . according to <user> , research is in progress currently . <section> resources : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"stress testing <section> stress testing analyzes the system under extremely heavy load conditions and has several benefits . testing helps identify initialization problems and resource clean up errors . it also will verify the stability and reliability of the system and makes sure that the system recovers after failure . another benefit is that it checks whether the system will work under the abnormal conditions . testing ensures that appropriate error messages will display when the system is under stress . it verifies that unexpected failures do not cause security issues . testing also verifies whether the system has saved the data before crashing . <section> implement stress testing at some point . research applicable software for stress testing . <section> list of possible software solutions for stress testing : jmeter , load runner , stress tester , neo load <section> resources : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"integration candidate <number> - <number> - <number> <section> integration candidate includes <url> <url> <url> <url> <section> bundle ci - <url> <section> see prs <section> ci ubuntu <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> nasa / cfe # <number> <url> <section> bundle ci build - < <url> <section> see submodule prs <section> ubuntu - travis ci <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"it would be nice to be able to build with clang rather than gcc i added a target file called target - llvm . cmake for clang and clang + + ( from llvm <number> ) , the relevant lines being : <code> but alas after <code> followed by <code> i get <code>"
removed . github from previous submodules <section> removes . github folder from . / osal and . / psp directories <section> regular build and run steps <section> no impact on behaviour <section> build and runs on ubuntu : bionic ( <number> ) in a vm
"prep for cfs bootes - rc1 , add versioning changes from ci_lab and tblcrctool <section> update submodules nasa / ci_lab # <number> nasa / tblcrctool # <number> add <code> files to <code> <section> bundle build ci <url> <section> ci_lab and tblcrc tool now use the development version reports <section> ubuntu on travis ci augmented <allcaps> gcc </allcaps> docker image <url> <section> none <section> see submodule prs <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> combines : nasa / sample_app # <number> nasa / sample_lib # <number> nasa / sch_lab # <number> nasa / to_lab # <number> nasa / cfe # <number> nasa / psp # <number> nasa / cfs - groundsystem # <number> <section> bundle ci - <url> <section> see submodule prs <section> ubuntu <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> lgtm </allcaps> exclude generated files <section> fix # <number> - exclude generated ui_ * python files from <allcaps> lgtm </allcaps> analysis ( 2 nd try , # <number> did not work ) <section> submit yml script on <allcaps> lgtm </allcaps> and it still functioned , but does not provide enough information to tell if the exclusion worked . requires an actual <allcaps> lgtm </allcaps> run . <section> exclude ui * . py files from issue reporting <section> n / a <section> # <number> was the first attempt , did not work . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"pthread_attr_setstacksize error when running initial build i have been playing around with cfs , having gotten it working by cloning this repository . after a couple of days of it working , i started getting the error below when running the software . i tried to start over with a new clone of this repo , but the same error message arises . i presume that it has something to do with my system settings , but i do not know what . any guidance would be much appreciated ! <code> <details> <summary> the full details with all commands and outputs can be found here . </summary> <code> </details> <section> - virtualbox <number> running linux mint <number> , kernel : linux <number> . <number> - <number> - generic , architecture : x86 - <number>"
"integration candidate : <number> - <number> - <number> <section> combines <url> <url> <url> <url> <url> <section> bundle ci - <url> <section> see submodule prs . minor change to <code> so that <code> inside cfe is currectly tracked in git - aware text editors <section> ubuntu ci <section> none <section> see prs <section> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . christopher knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> yasir khan , emergent space technologies , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> combines <url> <url> <url> also , fix # <number> <section> bundle ci - <url> <section> pr # <number> - added the references ( links ) to the cfe and <allcaps> osal </allcaps> user guides from the gh - pages branch . pr # <number> - update pyqt reference in docs see submodules prs for more details <section> ubuntu : bionic <section> none <section> n / a <section> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> evan fitzgerald , canadian space agency [ docs only ] gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> combines cfe pr # <number> <url> <allcaps> osal pr </allcaps> # <number> <url> <allcaps> psp pr </allcaps> # <number> <url> sample_ap pr # <number> <url> to_lab pr # <number> <url> <section> bundle ci - <section> see submodule prs <section> ubuntu : bionic <section> none <section> none <section> joseph hickey , vantage systems , inc . christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"try running against coverity <section> not enough static analysis warnings to keep interns busy . <section> try coverity , trade against <allcaps> lgtm </allcaps> ( or use both ) . <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> from conversation on cfs - community email list ."
"dockerized end - to - end tests ( proof of concept ) # describe the contribution a tool to perform dockerized end - to - end tests of cfs . this tool simulates network - based interactions between containerized cfs executables and a pseudo - ground system software acting as a test runner . ( general context : <url> # # quick overview the tool makes a containerized cfs executable ( <code> service ) and a test runner ( <code> service ) interact . the following screen captures illustrate this mechanism by comparing a passing test with a failing one . < img width = "" <number> "" alt = "" overview "" src = "" <url> <number> . <code> service : the test runner <number> . <code> service : the system under test ( i . e . a containerized cfs executable ) <number> . zero exit code ( the test passed ) <number> . error voluntarily triggered for demonstration purposes : here , the <code> command does not emit the expected event <number> . non - zero exit code ( the test failed ) # # quick start # # # requirements * docker <number> or higher * docker compose compatible with compose file format <number> or higher # # # usage from the cfs top - level directory , run the following command : <code> when executed for the first time , this command builds the cfs with the options set in <code> ( by default : ubuntu <number> , unit tests disabled , simulation native , debug build , and deprecated omitted ) as well as a pseudo - ground system software that attempts to enable the telemetry and , if successful , runs a simple assertion . the default build - time options can be found ( and , if needed , modified ) in <code> ( lines <number> - <number> <sad> <code> for more details , please refer to the <code> file located in <code> subdirectory . # # goal the purpose of this working proof of concept is to demonstrate the potential as well as the limitations of using docker to perform end - to - end tests . this approach has several advantages . first , it aims at enabling the future incorporation of end - to - end tests in the continuous integration process , automatically ensuring that the executable is working as expected in the scope of these tests . in this regard , it should be noted that travis can run docker compose commands ( see : < <url> second , it allows for more granular control of the testing environment by pinning the operating systems and the required dependencies to a specific version . therefore , it makes the tests highly reproducible . it follows that the versions of the packages are explicitly specified in all cfs dockerfiles . for instance ( <code> , lines <number> - <number> <sad> <code> third , it facilitates the compilation of cfs executables using different combinations of built - time options . in other words , it potentially permits the automatic generation of matrixed cfs executables . # # limitations the purpose of this pull request , which introduces a working proof of concept , is not per se to provide a _complete_ end - to - end testing solution . as a consequence , this tool is not yet integrated into the existing travis configuration , and the test runner performs a simple assertion . this contribution is also limited by the technical characteristics of docker . in particular : * broadly speaking , docker does not natively and / or straightforwardly support "" non - standard "" operating systems ( e . g . <allcaps> rtos </allcaps> ) . that explains why , for instance ( and unfortunately ) , vxworks is presently not supported by this solution . alternative or complementary approaches will be needed to extend automated end - to - end to other platforms . * unit tests systematically fail when the cfs images are being built ( see below , * additional context <wink> . this is one of the reasons why they are disabled by default . it should also be noted that an alpine image is included ( <code> ) but is currently not operational , mainly because of the following error : <code> ( see : < <url> i have decided to keep it because it is conceivable that it becomes operational in the future . # testing performed in the context of this proof of context , a simple flow is tested by the <code> test runner ( <code> <sad> * try to enable the telemetry * if the telemetry cannot be enabled , the test fails * otherwise , send a <code> command ( for the <allcaps> sample </allcaps> app ) packet to the cfs * if a <code> event appears in the telemetry message sent by the cfs , the test passes * otherwise , the test fails # expected behavior changes this contribution does not modify the existing code . therefore , no behavior changes are expected . # system ( s ) tested on # # hosts <section> * ubuntu <number> * virtualbox <number> * docker <number> . <number> * docker - compose <number> . <number> <section> * imac retina 4 k , <number> * macos <number> . <number> * docker <number> . <number> * docker - compose <number> . <number> # # docker * alpine <number> ( currently not operational ) * centos <number> * ubuntu <number> , and <number> # additional context # # components the tool consists of : * multiple dockerfiles ( one for each version of an operating system ) to compile and run the cfs * a dockerfile to build and run a pseudo - <allcaps> gsw </allcaps> container to test the cfs executable files * a <code> file to make them interact . this docker compose file makes reference to two services : <code> ( the system under test ) and <code> ( the test runner ) . <section> the cfs dockerfiles have a multistage structure . the first stage builds the <code> executable file . the second one corresponds to the runtime environment for this executable . <section> the pseudo - <allcaps> gsw </allcaps> is a python program , running in its own container , that , at this stage , performs a simple assertion and returns a zero ( success ) or non - zero ( failure ) exit code . it is a proof of concept which , obviously , and if the present proposal is accepted , will have to be reworked and replaced by a more robust test runner . <section> <code> and <code> services are interacting on their own internal network managed by docker compose ( <code> , lines <number> - <number> <sad> <code> their ips are dynamic . in order for <code> to get <code> ip as well as its own , it uses the names of the corresponding docker compose services , benefiting therefore from the docker <allcaps> dns </allcaps> lookup feature ( <code> , lines <number> and <number> <sad> <code> # # unit tests failures as evoked above , the unit tests fail during the building stage ( i . e . at compile - time , but not at runtime ) . this is due to a docker limitation vis à vis <allcaps> posix </allcaps> message queues that is explainable by the fact that docker disables , among other things , the <code> linux capability . when a cfs image is being built with unit tests enabled , the unit tests that fail are <code> ( <code> , <code> , <code> and <code> ) as well as <code> . there are four possible approaches to overcome this issue : <number> . disable unit tests at build time . in the context of continuous integration testing , that would make sense as the unit tests would continue to be performed in a preliminary and separate job . <number> . allow unit tests to fail at build time . <number> . modify the unit tests to make them fully compatible with docker . not necessarily desirable as it would affect the characteristics of the system under test . <number> . run unit tests at runtime . indeed , the solution requires the docker containers to run with capability <code> ( it should be noted that <code> would have the same effect but with a more extensive scope ) ( <code> , lines <number> - <number> <sad> <code> such an approach would however blur the line between unit testing and end - to - end testing . for this reason , i would mostly recommend against it . # # suggestions for future improvements * a more complete and robust test runner * travis integration * a solution to generate matrixed cfs executables and compare their respective test results # third party code none # contributor info - all information <allcaps> required </allcaps> for consideration of pull request guillaume lethuillier personal , individual <allcaps> cla </allcaps> submitted"
"integration candidate : <number> - <number> - <number> <section> fix # <number> and combines <number> . <url> <number> . <url> <number> . <url> <number> . <url> <number> . <url> <number> . <url> <number> . <url> <section> <url> <section> see submodule pull requests pr # <number> - lgtm analysis ignores <code> files from cfs - groundsystem <section> ubuntu : bionic <section> none <section> pr # <number> - leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> see submodules for other contributors"
"update lgtm . yml to exclude ui files <section> the auto - generated <code> files created by <code> should not be analyzed by lgtm <section> do not have lgtm analysis include files starting with <code> <section> this is specifically related to nasa / cfs - groundsystem # <number> <section> leor bleier , <allcaps> nasa gsfc </allcaps> \ code <number>"
"integration candidate : <number> - <number> - <number> <section> combines : <number> . nasa / psp # <number> <number> . nasa / osal # <number> <number> . nasa / cfs - groundsystem # <number> <number> . <url> <number> . <url> <number> . <url> <number> . <url> <number> . <url> and fix # <number> <section> bundle ci - <url> <section> see prs for submodules above pr # <number> <section> ubuntu : bionic <section> see prs <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> see prs for other contributors"
"integration candidate <number> - <number> - <number> <section> combines : nasa / cfe # <number> nasa / osal # <number> nasa / to_lab # <number> nasa / cfs - groundsystem # <number> also : fix # <number> <section> bundle ci - <url> <section> see integration candidate prs in submodule repositories pr # <number> - adds <allcaps> git sha </allcaps> ' s to travis log <section> bundle ci - ubuntu : bionic <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"command line arguments not working <section> command line arguments are not being parsed . <section> steps to reproduce the behavior : <number> . compile cfs <number> . run . / core - cpu1 - - help <section> display help information <section> the issue seems to be here <url> . according to the man pages , getopts and getopt_long both require argc and argv passed on without modifications . <section> - hardware : x86 - os : ubuntu <allcaps> lts </allcaps> <number> - versions : - cfe <date> ( 9 5 f34d2 ) , - <allcaps> osal </allcaps> <date> ( c2bcebb ) , - <allcaps> psp </allcaps> <date> ( 3 7 ee8eb ) <section> <allcaps> nasa larc </allcaps>"
integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> integration candidate combining - cfe pr # <number> <url> - osal pr # <number> <url> - <allcaps> psp pr </allcaps> # <number> <url> - ci_lab pr # <number> <url> - sch_lab pr # <number> <url> - sample_app pr # <number> <url> - to_lab pr # <number> <url> - elf2cfetbl pr # <number> <url> - cfs - groundsystem pr # <number> <url> <section> see prs bundle ci - <url> <section> see prs <section> bundle ci <section>
"move travis ci script into a . sh file <section> the current travis setup is cumbersome to replicate on a local system . this collects all the commands and moves them onto a standalone shell file that can be used on multiple systems . <section> tested on ci <section> same behavior as current ci <section> travis ci <section> this can benefit from a containerized build system using docker . might address some of the desires in # <number> in the future it might make sense to separate these into subscripts with "" build - exec "" , "" unit - test "" , and "" build - doc "" or something like that . though there is a balance between this approach and using makefiles <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : fast track <section> combines the following fast track pull requests osal : <url> cfe : <url> <section> see prs bundle ci - <url> <section> see osal pr and cfe pr <section> bundle ci - ubuntu : bionic <section> joseph hickey , vantage systems , inc ."
"move cppcheck from . travis . yml to makefile . sample it would be convenient to be able to run cppcheck in our checked out repo ' s without having to fish it out of the . travis . yml - - what about moving it from . travis . yml to makefile . sample and then having . travis . yml just call "" make cppcheck "" ? for that matter might be useful to add make rules to "" apt install "" the required packages . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> combines <url> <url> <url> <url> <url> <section> see prs bundle ci - <url> <section> ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> yasir khan , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> stanislav pankevich , <allcaps> pts </allcaps> gmbh joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> integration candidate <number> - <number> - <number> combines - <url> - <url> - <url> - <url> - <url> <section> bundle ci - <url> <section> see prs <section> bundle ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> chris d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . stanislav pankevich , <allcaps> pts </allcaps> gmbh marek glijer , self gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> integration candidate - <number> - <number> - <number> updates the bundle ' s submodules for : <url> <url> <url> <section> see prs bundle ci - <url> <section> see prs <section> bundle ci - ubuntu : bionic <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc . david archuleta jr . , self gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> integration candidate integrates : <number> . cfe <date> - <url> <number> . osal <date> - <url> <number> . psp <number> . <number> - <url> <number> . cfs - groundsystem <number> . <number> - <url> <section> bundle ci - <url> <section> see prs <section> bundle ci - ubuntu : bionic <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> integration candidate <number> - <number> - <number> , incorporates changes to sample_app , cfe , and <allcaps> osal </allcaps> fix # <number> , # <number> , and # <number> , <section> pr # <number> bundle ci <section> see related integration candidate prs nasa / osal # <number> nasa / osal # <number> nasa / cfe # <number> updates to bundle ci : - deploy documentation , - config warnings - removes permissive mode hack - adds enforce of no doxygen warnings for osal and users guide <section> bundle ci - ubuntu : bionic <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> and # <number> <section> see prs bundle ci <section> pr # <number> pr # <number> <section> ci ubuntu : bionic <section> anh van , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
integration candidate <number> <section> integrated prs : <url> <url> <section> default ci testing along with extended testing from pr # <number> <section> see cfe and <allcaps> psp </allcaps> prs above <section> ci ubuntu : bionic <section> gerardo e . cruz - ortiz - <allcaps> nasa gsfc </allcaps>
"fix # <number> , update lgtm file <section> update lgtm file to include python <section> <number> ) go to <url> <number> ) go to log tab <number> ) click on "" test analysis configuration "" <number> ) paste new lgtm file <number> ) click "" try build "" <number> ) verify both c and python code was extracted and analyze <section> anh van , <allcaps> nasa </allcaps> goddard"
ic - <number> <section> integration candidate <number> fixes # <number> see pr # <number> <section> see pr # <number> <section> <allcaps> readme </allcaps> . md is now updated to reflect upgrade to python3 . <section> ci <section> see pr # <number> <section> daniel knutsen - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"ic <number> <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"cfe <allcaps> api </allcaps> documentation . <repeated> there are several places across various websites and documents that allude to the cfe <allcaps> api </allcaps> documentation , but i can not seem to find it anywhere . does that actually exist ? if so , could you point me to where that is ? the application developer ' s guide is in the git repository , but i am specifically talking about the <allcaps> api </allcaps> documentation for cfe ."
"ic - <number> # # describe the contribution updated all branches to ic - <number> : sample_app - <url> to_lab - <url> sch_lab - <url> osal - <url> psp - <url> cfe - <url> # # testing performed <code> see <url> # # expected behavior changes see related pull requests # # system ( s ) tested on ci testing only # # additional context n / a # # code contibutions the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . # # contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> wsl </allcaps> support hello : i cloned and built using the <allcaps> readme </allcaps> instructions ( both permissive and non - permissive , and launched with / without sudo ) and i get the os_api_init error on startup . i am running the ubuntu distro on windows subsystem for linux . surely that ' s the root cause . no urgent need to get it running , just wondered if this deployment is something on the roadmap for future support . if more specific troubleshooting is desired , let me know how to gather the information and i will get it for you ."
"integration candidate <number> # # describe the contribution updated all branches to ic - <number> : cfe - <url> # # testing performed <code> # # expected behavior changes cfe - <url> # # system ( s ) tested on ci testing only # # additional context n / a # # code contibutions the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . # # contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fixes <number> , updates instructions from python2 - - > <number> describe the contribution fix # <number> , updates <allcaps> readme </allcaps> file to reflect upgrade from python <number> - - > <number> in groundsystem . py scripts . steps taken to test the contribution : launched groundsystem . py tool using the updated instruction . expected behavior changes : <allcaps> readme </allcaps> . md is now updated to reflect upgrade to python3 . system ( s ) tested on : oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info : dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> updated all branches to ic - <number> <section> <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> see submodules <section> - ci testing only <section> n / a <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> update to ic - <number> merge # <number> fix # <number> <section> <number> . checked out this ic branch <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"issue # <number> , add badge to readme <section> add alert badge for lgtm . <section> steps taken to test the contribution : <number> . tested against dummy repository . needs to verify when real one is created . full name and company / organization / center of all contributors ( "" personal "" if individual work ) anh van , <allcaps> nasa </allcaps> goddard - project : <allcaps> cfs </allcaps> framework"
"issue # <number> , add lgtm file <section> add . lgtm . yml file <section> steps taken to test the contribution : <number> . run on lgtm against copy of cfs <section> anh van , <allcaps> nasa </allcaps> goddard - project : <allcaps> cfs </allcaps> framework"
"lgtm issue <section> sch_lab_app . c <code> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , update travis . yml file <section> update travis . yml for stricter cppcheck for flight software . <section> <number> . run scripts with <code> <number> . verify cppcheck runs . <section> - hardware - ubuntu <number> - cfe <number> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) anh van , <allcaps> nasa </allcaps> goddard - <allcaps> cfe </allcaps> framework"
"update travis to include for stricter cppcheck for fsw <section> update travis file for stricter cppcheck psp / fsw , osal / src / bsp , osal / src / os , fsw / cfe - core / src <section> anh van , <allcaps> nasa </allcaps> goddard"
"integration candidate <number> <section> enforces ci failure for cppcheck error <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) note also ran this ci prior to osal update and confirmed cppcheck error caused ci failure . <section> no functional changes . see modules for changes ( warning cleanup , etc ) . <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"os_api_init failure i cloned this cfs repository with all its submodules , followed the instructions in the <allcaps> readme </allcaps> for compilation . i get the following error when running the executable ( core - cpu1 ) . cfe_psp : default reset type = po cfe_psp : default reset subtype = <number> cfe_psp : default <allcaps> cpu id </allcaps> = <number> cfe_psp : default spacecraft id = <number> cfe_psp : default <allcaps> cpu </allcaps> name : cpu1 cfe_psp : starting the cfe with a <allcaps> power on </allcaps> reset . cfe_psp : os_api_init ( ) failure i am working on a linux workstation running ubuntu <number> . any insight would be helpful ."
"incorrect sync with submodule github repos <section> unless i am using git incorrectly , the submodule versions being pulled in do not match the commit histories in their respective github projects . <section> <number> ) clone cfs bundle and initialize the submodules <number> ) compare the submodule git logs from the specific github repos with the git logs in the submodule directories under the cfs bundle . i notice that the cfs bundle is not pulling in the latest commits from the submodules . <section> submodule cfe "" git log "" commit history should match the github commit history in github / nasa / cfe , but it does not . <section> n / a <section> - workstation - os : linux fedora <number> - versions : latest github pull of cfs bundle <section> the url config in the cfe submodule points to the correct github repo but its local commit history does not match what is shown on github <section> rp - astrobotic tech"
"need a <allcaps> contributing </allcaps> . md <section> github repositories are suggested to have a <allcaps> contributing </allcaps> . md document which describes best practices for developers wishing to contribute to the main release . <section> develop a <allcaps> contributing </allcaps> . md document with simple stuff like "" follow the coding style guidelines "" , run unit tests prior to a pull request , etc . <section> likely will need to incorporate or reference existing documentation . could also use the wiki capabilities of dropbox . <section> add any other context about the feature request here . <section> chris knight , <allcaps> nasa </allcaps> ames research center ."
"update bundle to <number> baseline <section> includes changes to cfe and elf2cfetbl submodules reviewed and approved at <number> - <number> - <number> <allcaps> ccb </allcaps> . <section> build code using default config / steps outlined in <allcaps> readme </allcaps> execute <allcaps> cfe </allcaps> core and issue various commands using cmdutil execute all unit tests and confirm passage . <section> see relevant pull requests on components : nasa / cfe # <number> nasa / elf2cfetbl # <number> <section> ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> <section> update all submodules to ic - <number> branches added (# <number> ) and cleaned travis - ci <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> travis - ci now runs on pushes see submodules for their changes <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : this bundle <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added auto buld capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"created automated build capabilities using travis - ci <section> added auto build capabilities using travis - ci <section> steps taken to test the contribution : <number> . travis - ci will auto execute when new code is pushed to github <number> . a basic build will be performed <section> a clear and concise description of how this contribution will change behavior and level of impact . - an automatic build will be done when new code is pushed to github <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed as a part of "" task_3015 """
drop gen_msgids from cfs framewok scope <section> gen_msgids has not been maintained and a current user has not been identified . modern projects utilize other toolchains / schemes for managing apids . <section> remove gen_msgids from the cfs framework bundle . <section> none <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>
"release candidate <number> . <number> <section> bundle update to release candidate <number> . <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . sent tlm_enable command , verified hk packet reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - see submodules for behavior changes based on respective updates - will roll up into a version description document upon release <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> this is the release candidate for testing . documentation and other updates still required , but <allcaps> fsw </allcaps> changes will be limited to major bug fixes if found . <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"reintroduce gen_app_code tool hi , i cannot find the gen_app_code tool , although it is mentioned in the official <allcaps> cfs </allcaps> - <number> . how can i effectively create an app now ? regards , nick"
"use appid instead of perfid ? currently apps define their perfid when using the performance logging framework , but there ' s no mechanism currently to ensure that the perfid is unique to that application and could result in confused perf logs . one option would be to use the appid generated when the application is registered ( but will need to be reported somehow so that a performance analysis tool can crosswalk from runtime - generated perfid ' s to the applications . )"
"<allcaps> psp </allcaps> location and cmakelists just upgrading some cfs mods we make in the lab with the software bus to this cfs build , but i have been running into some new pathing issues . notably , in case anyone else gets hung up on it , i have some cmake fail to finds : <section> _get_filename_component ( mission_source_dir "" ${ cmake_source_dir } / cfs / cfe "" <allcaps> absolute </allcaps> ) _ <section> _include_directories ( ${ mission_source_dir } / psp / fsw / shared ) _ <section>"
"cmake reports that gcc is broken there was an issue using cmake to perform any type of build operation ( clean , prep , make , etc ) , it kept reporting that there was something wrong with gcc . the issue was that the following was missing from / cfe / cmakelists . txt : <allcaps> include </allcaps> ( cmakeforcecompiler ) cmake_force_c_compiler ( gcc <allcaps> gnu </allcaps> ) cmake_force_cxx_compiler ( g + + <allcaps> gnu </allcaps> ) including these lines at the top of file fixed my issue . i am running centos <date> - <number> . <number> . el6 . x86_64"
"core - linux sample build fails to start i have tried running the cfe core - linux sample build in fresh vms of centos <number> , ubuntu <number> , and ubuntu <number> , and am getting the same error each time i try to run core - linux . bin : <code> i get a few warnings when running make , but they do not seem to be a problem : <code> there are no * . tbl files , which is causing the first couple warnings , and . / exe / cf / apps / cfe_es_startup . scr exists , so that seems to be fine as well . i have tried this with the <number> . 0 a release and building from master and see the same boot error ."
"fix # <number> , refactor <code> and <code> to remove multiple returns testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> no change to function logic / behavior other than removing the early returns . <section> avi weiss <user>"
multiple returns in <code> and <code> can be refactored out expected behavior * * refactor to a single exit point . <section> avi weiss <user>
"fix # <number> , add packetnotfoundctr to hk appdata / tlm testing performed * * github ci actions all passing successfully . <section> additional information tracking number of times packet not found available in tlm packets now . <section> avi weiss <user>"
"hk missing cfe_es_perflogentry ( hk_appmain_perf_id ) calls after cfe_sb_receivebuffer in hk_appmain looks like hk is missing a couple of <code> calls after the <code> in <code> . <section> code inspection <section> every time the app wakes up , it should have an <code> call . every time the app wakes is about to block , it should have an <code> call . <section> <code> <section> - hardware : any - os : any - versions : i am looking at the draco rc4 release , but it looks like this is hk v2 . <number> <section> add any other context about the problem here . <section> keegan moore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
hk <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"split "" platform_cfg "" into external and internal components currently , all configurable items for the app are contained in a single <code> header file . this contains macro definitions that affect both the internal operation of the application ( such as operational limits ) as well as the external interface in <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> and table files . <section> split this header into two components , one that contains only public items ( i . e . those that affect <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> / table definitions ) and one that contains private / internal items that are only used within the local application code and do not affect the interface . <section> mainly a scoping concern , separate files for separate scopes . these files could also be generated in the future , but scope still needs to be consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use separate dispatcher for messages isolate the message verification and dispatch from the general message processing . functions in the "" cmds "" file now strictly handle the command content , and do not get involved in general validation . the "" custom "" code isolation is also in a separate dispatcher . there is a separate issue to address this . fixes # <number> <section> build and run hk in <allcaps> cfe </allcaps> and run all tests <section> no change in actual implementation , splits up source files into smaller units only <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use payload structure puts the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> content in a member struct called "" payload "" . this makes it consistent with other <allcaps> cfe </allcaps> modules and provides a predictably named member for determining the position of non - header content . fixes # <number> <section> build and run all tests , sanity check app in <allcaps> cfe </allcaps> <section> none . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use generated stubs separate the global variables into separate stub source units , then re - run the stub generator for all internal apis . the committed result here is the exact output of the tool , unmodified . this eases future maintenance , when an internal <allcaps> api </allcaps> changes one just needs to re - run the stub generator tool to update it fixes # <number> <section> build and run all tests . ( affects ut only ) <section> stubs easier to maintain going forward . no changes in behavior . <section> debian <section> joseph hickey , vantage systems , inc ."
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from hk , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove use of ' dummy ' in test code testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . simplifies test code . <section> avi weiss <user>"
"remove redundant use of "" dummy "" in test code code snips * * <url> <url> <section> simplifies test code . <section> avi weiss <user>"
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe_msg_ptr macro this includes various naming convention updates to match patterns used elsewhere in <allcaps> cfe </allcaps> . fixes # <number> <section> build and run all tests , sanity check <section> no impact to behavior , updates symbol naming patterns to match other modules <section> debian <section> joseph hickey , vantage systems , inc ."
"default inputoffset in hk copy table needs update for new tlm hdr size the default copy table looks at byte offset <number> of the cfe messages . the new tlm secondary header padding for <number> - bit alignment causes the start of data to be at <number> bytes into the packet . <section> steps to reproduce the behavior : <number> . go to ' . <repeated> ' <number> . click on ' . <repeated> ' <number> . scroll down to ' . <repeated> ' <number> . see error <section> a clear and concise description of what you expected to happen . <section> currently : <code> the input offset for each should be <number> , and the output offset should start at <number> ( <number> , <number> , <number> , <number> , <number> ) . <section> - hardware : x64 ( but should work for any ) - os : pc - linux ( but should work for any ) - versions cfe draco rc4 <section> additionally ( optionally ) , the current table reads the first <number> bytes out of each packet . i think it would make more sense to only read the command count and command error count ( the first <number> bytes ) of each packet . if this also gets implemented , remember to update the numbytes accordingly . <section> keegan moore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , correct uninitialized variable in ut corrects an uninitialized variable warning - just <code> the object to zero . fixes # <number> <section> run all unit tests <section> no impact to behavior ( called <allcaps> api </allcaps> did not dereference the pointer , so it did not matter what was in it ) <section> debian bookworm <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully ( excl . cppcheck issues being addressed in <url> <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
variables declared mid - function expected behavior * * all variables should be declared at the top of the function . <section> avi weiss <user>
"fix # <number> , remove initializations causing cppcheck failure testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . cppcheck now passes without error again . <section> avi <user>"
new cppcheck errors : ' [ unreadvariable ] ' to reproduce * * run the current version of cppcheck on the current main branch hk source code . <section> cppcheck should pass without raising any errors . <section> avi <user>
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in hk that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , change hk_inputmid_subscribed to <number> fix # <number> , change macro hk_inputmid_subscribed from 0 xff to <number> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> # <number> , remove todos and minor cleanup - fix # <number> - fix # <number> <section> ci <section> removes stray printf <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
remove ut todos and clean up related tests <url> <section> remove <allcaps> todo </allcaps> and clean <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> - ci - versions : bundle main + this commit + addition of app to build <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> , resolve ut static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict cppcheck warnings - fix # <number> <section> ci <section> none , justs squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"static analysis issues relative to flight code handful of static analysis issues in the "" red "" identified ( non - style issues ) . need to resolve these . filter : - file : elf - file : ut - file : cfe - file : os - file : cf_ - file : _lab_app . c ! ( significance : style ) should resolve and / or disposition the higher ranked ones at minimum . note license restricts publishing issues . imported from <allcaps> gsfccfs </allcaps> - <number>"
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"change hk_undefined_entry to an actual undefined value the current value of hk_undefined_entry in hk_utils . h is <number> , which is a potentially valid entry value . we should consider changing the definition to something that is actually an undefinable value , for example 0 xffff . imported from <allcaps> gsfccfs </allcaps> - <number>"
change hk_inputmid_subscribed to <number> in hk_utils . h suggest setting hk_inputmid_subscribed to <number> instead of 0 xff . finding in code review . imported from <allcaps> gsfccfs </allcaps> - <number>
"add hk_undefined_entry check to hk_verify . h hk_verify . h recommendation : hk_undefined_entry is <hashtag> define </hashtag> to <number> in hk_utils . h . i would consider , since any uninitialized entries in the table will be zeroed out , to put : <hashtag> if </hashtag> hk_undefined_entry ! = <number> <hashtag> error </hashtag> hk_undefined_entry must be set to <number> <hashtag> end if </hashtag> imported from <allcaps> gsfccfs </allcaps> - <number>"
"fix # <number> , move function prototypes to header file testing performed * * github ci actions all passing successfully . local testing with full cfs suite confirms app performance unaffected . <section> no change to behavior . makes the file content more consistent with the rest of cfs . <section> avi weiss <user>"
function prototypes can be moved out of <code> code snips * * <url> <section> consistent content of implementation / header files across cfs . <section> avi weiss <user>
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . local testing with full cfs suite passing all tests and showing not change to coverage . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
to_lab <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"to_lab integration candidate : caelum - rc4 + dev46 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adjust subscription table based on apps present <section> create an inclusion preprocessor macro for each app referred to in the subscription table , and only include that line if the app is present in the current configuration . in particular , do not assume that sample_app will always be there . fixes # <number> <section> build to_lab without sample_app and confirm successful <section> presence of other apps is not assumed / hardcoded in the subscription table <section> debian <section> this should fix workflow errors where apps are built with to_lab but without sample_app . <section> joseph hickey , vantage systems , inc ."
"default / example table assumes presence of other apps <section> the default value for the to_lab subscription table directly refers to <code> and <code> msg ids , assuming these apps will be present . this is fine for a user who is cloning the <url> bundle repo , because it includes these submodules . but in other cases if these other apps are not present , the table fails to build . this issue is now detected at configuration ( cmake ) time , if there is a reference to the include directories of a target that does not exist in this configuration . <section> notably , this change from compile to config time caused an unintended side effect - workflows for the other <allcaps> cfs </allcaps> apps seem to do this - it clones the <allcaps> cfs </allcaps> but modifies the <code> configuration in such a way that it no longer includes the <code> . <section> should not assume / require that <code> will always be part of the config . <section> problematic assumption is here in the table : <url> <section> github workflow ( see <url> <section> this assumption is also true for ci_lab and sch_lab , but these lab apps are still included in the workflow runs , so it does not cause an error at this time . with the way that the <allcaps> cfs </allcaps> app workflow runs , it effectively replaces <code> with the app under test , while leaving the rest of the default bundle config alone , hence why an assumption of <code> being present is more of an issue than the others . <section> joseph hickey , vantage systems , inc ."
"to_lab integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add check for failure of <code> during initialization testing performed * * github ci actions all passing successfully . local tests confirm builds and run fine , and cfs tests all passing . <section> use will be informed of failure of <code> rather than it failing silently . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
no notification of failure of <code> in <code> <section> to_lab currently has no notification of a failure of <code> in <code> <section> <url> <section> add <code> to inform the user of failure to register with <allcaps> evs </allcaps> . <section> avi weiss <user>
"fix # <number> , refactor mutually exclusive logic in if , else if block <section> - fixes # <number> - simplified <code> / <code> block . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . <section> avi weiss <user>"
"refactor mutually exclusive if in to_lab_init ( ) <section> mutually exclusive logic in this <code> , <code> , and also no final <code> clause which i believe is frowned upon in the coding guidelines . <section> <url> <section> refactor into a simpler <code> , <code> block . <section> avi weiss <user>"
"hotfix # <number> , correct errors with whitespace application <section> corrects errors from pr <number> where return and break appear to have been inadvertently removed <section> run all tests <section> fixes regression from previous pr <section> joseph hickey , vantage systems , inc ."
"to_lab integration candidate : caelum - rc4 + dev33 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> to_lab checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adds format changes in to_lab_app . c <section> - fixes # <number> <section> clang <section> passing format check <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage"
"failing format check in to_lab_app . c <section> failing format check workflow <section> view in actions tab : <url> <section> passing format check workflow <section> if applicable , add references to the software . <section> github workflow <section> introduced at c5be117d03594bc72f9d0db14620c2f49aece604 <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> github workflows <section> no expected behavior change . <section> - ubuntu <number> <section> depends on <url> <section> n / a <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , reduce length of string_variable [ ] initializer string testing performed * * github ci actions all passing successfully . <section> no impact on code behavior . <section> avi weiss <user>"
string_variable [ ] initializer - string is too long expected behavior * * <code> alternative would be to just leave it uninitialized . <repeated> <section> avi weiss <user>
"fix # <number> , add version information to <allcaps> noop </allcaps> event testing performed * * run / build and confirmed <allcaps> noop </allcaps> command event reporting as expected . screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> adds version information to <allcaps> noop </allcaps> command to align with the other cfs components / apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) <section> avi weiss <user>"
report version when responding to noop comand to match sample app template expected behavior * * report version info along with <allcaps> noop </allcaps> command as do the other cfs components / apps . <section> <url> <section> avi weiss <user>
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , rename commandcode variable to fcncode testing performed * * standard cfs bundle tests all passed . build / run cfs and test <allcaps> noop </allcaps> and other commands with the groundsystem tool . all working fine . <section> no impact on behavior . improves code clarity and consistency in the lab apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev143 , <allcaps> psp </allcaps> v1 . <number> - rc4 + d sample app v1 . <number> - rc4 + dev35 ci lab app v2 . <number> - rc4 + dev39 to lab v2 . <number> - rc4 + dev31 <section> avi weiss <user>"
recommend using fcncode ( instead of commandcode ) terminology in the code expected behavior * * rename the <code> variable in <code> to <code> to better align with the cfe <allcaps> api </allcaps> . <section> <url> <section> avi weiss <user>
"to_lab integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , remove unused pktsize variable . pr # <number> - fix # <number> , standardize naming of to_lab functions / macros etc . pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> to_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove unused pktsize variable . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"fix # <number> , standardize naming of to_lab functions / macros etc . testing performed * * none so far . <section> no impact on behavior . <section> n / a <section> <user>"
"to_lab integration candidate : caelum - rc4 + dev12 <section> pr # <number> - fix # <number> , update cmake_minimum_required <section> to_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , update cmake_minimum_required <section> fixes the warning that support for old versions will be removed the build does not actually expect such an old version fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> disable warning ? <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove registration of empty <allcaps> evs </allcaps> filters <section> - fix # <number> <section> ci <section> none , just removes empty filter registration <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"to_lab integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> to_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"to_lab integration candidate : caelum + dev1 <section> pr # <number> from jphickey / fix - <number> - messagetype - conv - fix # <number> , use cfe_msg_ptr conversion macro <section> to_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> to_lab codeql reuse : <url> to_lab format check reuse : <url> to_lab static analysis reuse : <url> <section> to_lab will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"workflows overly restrictive run , missing duplicate check , format job name incorrect , remove - - quiet from cppcheck <section> branch restriction unnecessary : <url> branch restriction unnecessary , missing duplicate check , incorrect job name : <url> branch restriction unnecessary , missing duplicate check : <url> remove <code> flag to report files processed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"to_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> cfs bundle checks < <url> to_lab checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . this also corrects another type mismatch / inconsistency regarding to_unused check . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows to_lab to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"typos in documentation , event message , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"fix # <number> , correct typos in . md , comments and event error message <section> - fix # <number> fixed a few minor typos in the _text_ of : - <allcaps> readme </allcaps> . md - <allcaps> security </allcaps> . md . <repeated> and in the _comments_ of : - fsw / src / to_lab_msg . h . <repeated> and in an _event error message_ string of : - fsw / src / to_lab_app . c <section> only automated checks . <section> none ( minor markdown doc , comments changes , and event error string changes that do not interact with any max lengths etc . ) . <section> n / a <section> n / a <section> n / a"
"to_lab integration candidate : <number> - <number> - <number> # # context part of <url> # # authors <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"to_lab integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration # # testing to_lab checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes app registration call , <code> since applications do not need to register themselves . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
<allcaps> hotfix </allcaps> integration candidate : <number> - <number> - <number> <section> bump to v2 . <number> - rc1 + dev41
"fix # <number> , use cfe . h header file <section> replaces individual includes with the all - inclusive "" cfe . h "" header . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> along with reorg in nasa / cfe # <number> <section> fixes dependency on <code> <section> ubuntu <number> <section> required for nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> see pr # <number> <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , remove numeric pipe id from event string <section> remove the numeric pipe id from the event string , which solves the problem when strict types are used and the value is not a simple integer . fixes # <number> <section> build with strict resource id types , confirm printf format specifier mismatch error in # <number> is gone . <section> no more compiler error . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix pipe id printf to be strict type - safe compatible <section> the <code> type is not a simple / plain integer if strict types are enabled . this trips up a printf statement in to_lab here where it tries to print the <code> value : <code> <section> use the <code> macro to get the simple value , and use <code> conversion specifier in printf . <section> joseph hickey , vantage systems , inc ."
"to_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , remove end of function comments fix # <number> , add static analysis and format check fix # <number> , add codeql analysis to workflow <section> see < <url> <section> pr # <number> - removes end - of - function comments in <code> pr # <number> - adds static analysis and code format check to continuous integration workflow . updates workflow status badges in readme pr # <number> - adds codeql analysis to continuous integration workflow <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds to_lab , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"to_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"fix # <number> , remove end of function comments <section> removed end of function comments in to_lab_app . c as per issue # <number> <section> no test as all that was removed was comments and no functional code . <section> no expected behavior changes <section> <section> <section> none <section> todd martin , personal"
"to_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , remove all only from telemetry pipe <section> see < <url> <section> pr # <number> - to remains commandable after a remove all subscriptions command ; the command now only removes all subscriptions to the tlm_pipe <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , remove all only from telemetry pipe <section> fix # <number> - updated remove all to only remove tlm_pipe subscriptions remove all was also removing subscriptions from the command pipe , which leaves to inoperable . the remove all command now just removes all subscriptions to the tlm_pipe <section> native build , sent remove all subscriptions cmd and confirmed , sent to noop multiple times and confirmed receipt <section> to remains commandable after a remove all subscriptions command <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> to should mark empty slots with invalid <allcaps> msgid </allcaps> , and not try to unsubscribe them - # <number> to should remove pktsize from packet add command ( unused ) - # <number> groundsystem add packet command definition needs update ( stream - > msgid , should accept hex msgid , fix contents since they do not map correctly ) - nasa / cfs - groundsystem # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"to_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , implement message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , implement message alignment pattern <section> fix # <number> - replace cfe_sb_rcvmsg with cfe_sb_receivebuffer - use cfe_sb_buffer_t for receiving and casting to command types - use cfe_msg_commandheader_t and cfe_msg_telemetryheader_t in command and telemetry type definitions - use cfe_sb_transmitmsg to copy the command and telemetry into a cfe_sb_buffer_t and send it where needed - avoids need to create send buffers within the app ( or union the packet types with cfe_sb_buffer_t ) - eliminates references to cfe_sb_cmdhdr_t and cfe_sb_tlmhdr_t that formerly enforced alignment since these had potential to change the actual packet sizes - no need to cast to cfe_msg_message_t anywhere since it ' s available in the cfe_sb_buffer_t union - replaced cfe_msg_size_t with size_t <section> bundle ci , unit tests , spot checked cmd / tlm <section> none , applied pattern <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle integration - candidate + nasa / cfe # <number> + this commit <section> depends on nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis <section> bundle ci on astrogeco : <url> <section> pr # <number> - replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> <section> ubuntu ci <section> part of < <url> <section> none <section> <user>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
integration candidate <number> - <number> - <number> <section> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - update the tlmsockid field to be osal_id_t instead of uint32 <section> ubuntu ci <section> part of < <url> <section> none <section> <user>
"fix # <number> , update to to use osal_id_t <section> update the tlmsockid field to be <code> instead of <code> fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> <section> none . <section> ubuntu <number> <section> this makes it consistent with other modules <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds header guard to <code> <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - remove reference to deprecated <code> . <section> ubuntu - ci <section> nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove reference to cfe_es_shell_tlm <section> remove reference to deprecated message id . fixes # <number> <section> build and run , sanity check <allcaps> cfe </allcaps> , confirm <allcaps> to lab </allcaps> loads and runs ok . <section> no longer subscribes to <code> ( to be removed in next <allcaps> cfe </allcaps> ) <section> ubuntu <number> <section> already was inside the <code> conditional compile - just removing entirely . <section> joseph hickey , vantage systems , inc ."
"remove deprecated symbol reference <section> the to_lab app references the cfe_es_shell_tlm which is deprecated and scheduled to be removed in the next release <section> remove this code <section> this is currently within an omit_deprecated conditional block - but in general modules should not refer to deprecated items in other modules at all . this is a prerequisite to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - corrects return value of to_lab_init ( ) to be int32 not int . pr # <number> - fixes bug where an unset address values caused subscriptions to msgid <number> over <number> times . added a to_unused entry at the end of the subscription list and a break in the subscription loop when to_unused found . no more subscriptions on the unused table slots ( no msgid <number> subscriptions ) . pr # <number> - add build number and baseline <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"close # <number> , add build number and baseline to version file <section> close # <number> <section> built bundle and confirmed to_lab reports development version . <section> version report now uses the version string . see excerpt from cfs log : <code> <section> ubuntu docker on mac <allcaps> os x </allcaps> <section> add any other context about the contribution here . <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
fix # <number> - correct return type for to_lab_init ( ) <section> fixes # <number> corrects return value of to_lab_init ( ) to be int32 not int . <section> <email>
"integration candidate : <number> - <number> - <number> <section> fix # <number> - make the to table a proper table <section> bundle ci - <url> <section> pr # <number> - makes the to table ( "" to_lab_subs "" ) into a cfe_tbl - managed table . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> christopher d . knight - <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> <url> <section> pr # <number> - replace references to <code> types with the <code> - provided type . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - configure the maximum depth supported by <allcaps> osal </allcaps> , rather than a hard coded <number> . <section> <section> see prs for additional testing information and detailed changes part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> , # <number> , and # <number> <section> see prs bundle ci - <url> <section> pr # <number> - apply the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . pr # <number> - changes to documentation only ; no code impact pr # <number> - deprecates shell tlm subscription <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use os_max_queue_depth rather than <number> . <section> configure the maximum depth supported by <allcaps> osal </allcaps> , rather than a hard coded <number> . fixes # <number> <section> build with default config . confirm normal operation of to_lab on system with max queue depth set to <number> . <section> none , except on systems where supported queue depth is less than <number> . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"deprecate reference to deprecated output to shell tlm pkt <section> output to shell deprecated from framework , see nasa / cfe # <number> <section> deprecate here . <section> could just remove , trying to play nicely though . <section> nasa / cfe # <number> may add back in telemetry depending on follow - on discussion . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix doxygen warnings <section> doxygen warnings are generated when building the documentation <section> steps to reproduce the behavior : <number> . from cfs / do <code> <number> . observe the warnings generated in <code> <section> no warnings should be generated <section> leor bleier , <allcaps> gsfc </allcaps> \ <number>"
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , and # <number> see pr # <number> for more details . <section> ci testing only <section> # <number> - use <allcaps> osal </allcaps> socket <allcaps> api </allcaps> instead of <allcaps> bsd </allcaps> sockets # <number> - global namespace to isolate variables # <number> - follow cfe naming convention document <section> ubuntu <section> see pr # <number> for more details . <section> <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes # <number> - clean build when omit_deprecated = true system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed # <number> describe the bug build fails on <number> undeclared errors : errors . txt to reproduce make omit_deprecated = true prep ( requires nasa / cfe # <number> ) expected behavior clean build system observed on : cfs dev server <number> os : ubuntu <number> versions : mostly <number> ( + commit above ) reporter info jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"multiple cleanup items for to_lab <section> cleans up multiple aspects of the to_lab implementation . details below . fixes # <number> fixes # <number> fixes # <number> these change sets are submitted as a single pull request , as they have inter - dependencies between them and will trigger conflicts if presented individually . this pull request still contains each fix as an individual commit , so each one can be independently reviewed . for # <number> / commit 1 7 1 8 0 f06 : change to_lab to use the <allcaps> osal </allcaps> socket <allcaps> api </allcaps> rather than calling <allcaps> bsd </allcaps> sockets functions directly . for # <number> / commit d041045 : this creates a to_lab_global namespace to isolate these global variables from other modules and prevent collision for # <number> / commit a66df71 : follow the naming conventions in the <allcaps> cfe </allcaps> naming convention document and follow message processing patterns from other modules <section> build for native for both debug / release builds , with unit tests enabled . confirmed normal operation of to_lab using the python cfs_groundsystem tool to enable telemetry output and verify that telemetry is being received as normal . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"to_lab should put all global variables into a global structure <section> to_lab has several "" bare "" global variables , which are not namespace - qualified . these should all be put into a global structure , similar to the way other modules isolate their global varables . <section> implement a <code> data structure to isolate these values from the global namespace . <section> note that global variables in shared objects are by default put into a "" common "" section which can have weird effects on namespace clashes . this is why it is important to put them into a struct ( which in this case is basically a namespace isolation mechanism ) . <section> joseph hickey , vantage systems inc ."
"to_lab should better follow cmd / tlm patterns in other modules <section> the to_lab implementation currently does not adhere to the command / telemetry processing patterns established in <allcaps> cfe </allcaps> core and other modules . <section> - each command handler should be its own function with its own distinct structure type that is passed in to it - housekeeping should put its payload into a separate sub - structure called "" payload "" - telemetry / command naming conventions documented in <allcaps> cfe </allcaps> should be adhered to <section> part of the reason for some of these patterns is they help future - proof the code and also help avoid issues like # <number> . <section> joseph hickey , vantage systems inc ."
"fails to build on raspbian <section> building to_lab under raspbian ( a debian variant for raspberry pi <allcaps> sbc </allcaps> ' s ) fails due to alignment issues . <code> <section> build on raspbian . <section> no compiler errors . <section> if applicable , add references to the software . <section> raspberry pi zero w <section> add any other context about the problem here . <section> <email>"
"fix # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed <section> fixes # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed <section> nominal build process : - make distclean - make prep - make - make install followed by building with omit_deprecated = true - make distclean - make omit_deprecated = true prep - make - make install confirmed clean build in both cases . <section> clean build when omit_deprecated = true <section> oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> there is a total of three pull requests to address issue_35 : nasa / to_lab nasa / sample_app nasa / sch_lab all three are intended to be delivered together . <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"recommended lgtm issues recommended lgtm issues : to_lab_app . c <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with to_lab included by default and observed : <code> <number> . sent tlm_enable command and observed : <code> <number> . verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - updated performance id but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , change perfid changed to <number> , <number>"
"fix # <number> , to_subsciption_t typo changes in <number> ) to_lab_sub_table . h : line <number> <number> ) to_lab_app . c : line <number> <number> ) to_lab_msh . h : line <number>"
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
"fix # <number> , use valid size when calling cfe_msg_init use the offset of the payload start , which by definition must include at least enough space for the primary header . this ensures that the value will pass any size check enforced in cfe_msg_init . fixes # <number> <section> found and tested as part of the stakeholder software delivery <section> cf sends pdus successfully ( with valid msgid ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unnecessary <code> union testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on logic . code is simplified and clearer . <section> avi weiss <user>"
"fix # <number> , align cf command counter implementation to cfs standard testing performed * * github ci actions all passing successfully ( incl . build + run , unit tests etc . ) . <section> <code> / <code> counters now held directly in the hk packet , instead of through an additional struct member . this pr improves consistency across cfs , and makes future maintenance easier as variables are named and located as expected . <section> avi weiss <user>"
"fix # <number> , remove unnecessary cf_unionargs_payload_t union testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on logic . <section> <user>"
"fix # <number> , revert merge of pr # <number> . fixes # <number> . <section> reverts # <number> . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"revert - fixes # <number> - fixes # <number> <section> cert_testbed / cfe_bvt <code> <section> no integration issues <section> - os : ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , revert merge of pr # <number> . fixes # <number> . <section> reverts # <number> . <section> dylan z . baker - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
move pr # <number> into equuleus - rc2 there were some integrations issues with this pull request . <section> pr # <number> is reverted and a new pull request is created to integrate it into the following release . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>
move pr # <number> into equuleus - rc2 there were some integrations issues with this pull request . <section> pr # <number> is reverted and a new pull request is created to integrate it into the following release . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>
"seg fault when invalid destination filename is invalid cf will seg - fault when uploading a file with an invalid destination filename . cf outputs an <allcaps> evs </allcaps> message that it failed to create the file . it then appears to access a null pointer for a transaction . backtrace : <code> we are using cosmos <number> with the <allcaps> cfdp </allcaps> engine . we are using the <allcaps> send file </allcaps> command . <section> steps to reproduce the behavior : <number> . launch cfs with the cf app running . <number> . use cosmos / <allcaps> cfdp </allcaps> engine to send a file , specify an invalid filename ( to a directory that does not exist , for example ) <number> . see error in cfs output <section> cf should report that an error happened ( which it currently does ) , but not seg - fault <happy> <section> none . <section> - x86_64 pc - os : ubuntu <number> - versions : cfe <number> rc4 , <allcaps> osal </allcaps> v6 . <number> - rc4 , <allcaps> psp </allcaps> v1 . <number> - rc4 for pc - linux . note that we have modified cfe , <allcaps> osal </allcaps> , and the <allcaps> psp </allcaps> , but mostly to run on our target system : a microblaze running petalinux ( upon which we have also observed the seg - fault ) . <section> observed with draco - rc2 and draco - rc4 <section> james marshall , <allcaps> nasa gsfc </allcaps> <number>"
"fix # <number> , update size variables to <code> and <code> typedefs testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . <section> avi weiss <user>"
a few size variables could be updated to <code> or <code> code snips * * <code> should be of <code> type : <url> <code> should be of <code> type : <url> . <repeated> and few others . <section> update where appropriate <section> avi weiss <user>
"receiving entity not handling <allcaps> eof </allcaps> ( cancel ) <allcaps> pdu </allcaps> correctly when <number> entities are transferring a file in reliable mode , if a cancel command is sent to the sender entity , there appears to be something broken with the resulting handshaking with the receiver entity , which ultimately does not allow the sender entity to terminate the transaction gracefully . when the sender receives a cancel command , it issues an <allcaps> eof </allcaps> ( cancel ) <allcaps> pdu </allcaps> to the receiver . upon receiving this <allcaps> eof </allcaps> - <allcaps> pdu </allcaps> , the receiver immediately terminates , without any response to the sender . this results in the sender being stuck in a wait - for - <allcaps> eof </allcaps> - ack state and only terminating when the inactivity timer is reached . <section> steps to reproduce the behavior : <number> . start a file transfer between <number> <allcaps> cfdp </allcaps> entities in reliable mode <number> . send a cancel command to the sender entity <number> . observe that receiver entity immediately terminates the transaction ( whereas per the <allcaps> cfdp </allcaps> specification , it should send an <allcaps> eof </allcaps> - ack , a <allcaps> fin pdu </allcaps> , and waiting for the <allcaps> fin </allcaps> - ack from the sender before terminating ) <number> . observe that the sender entity does not terminate correctly because it continues to wait for the <allcaps> eof </allcaps> - ack from the receiver <section> <number> . file transfer in reliable mode started between <number> entities <number> . cancel command sent to sender entity <number> . sender entity issues a <allcaps> eof </allcaps> ( cancel ) <allcaps> pdu </allcaps> to the receiver entity <number> . receiver entity issues a <allcaps> eof </allcaps> - ack <allcaps> pdu </allcaps> to the sender entity <number> . receiver entity issues a <allcaps> fin pdu </allcaps> to the sender entity <number> . sender entity issues a <allcaps> fin </allcaps> - ack <allcaps> pdu </allcaps> to the receiver entity and terminates <number> . receiver entity terminates upon receiving the <allcaps> fin </allcaps> - ack <section> i believe issue is in the cf_cfdp_r2_substaterecveof function logic in cf_cfdp_r . c . the logic defers sending of the <allcaps> eof </allcaps> - ack until after cf_cfdp_r2_substaterecveof runs to completion : <code> <code> <code> <allcaps> eof </allcaps> ( cancel ) <allcaps> pdu </allcaps> then follows a path that eventually results in a call to cf_cfdp_r2_reset : <code> <code> <code> <code> <code> <code> then within cf_cfdp_r2_reset , the current transaction is already reset and freed . <code> <code> <code> my fix : added an "" else if "" section to cf_cfdp_r2_substaterecveof : <code> <code> <code> <code> <section> - hardware - os : linux ubuntu <number> - versions cf <number> . <number> <section> n / a <section> katie chou"
"fix # <number> , update <code> variables ( <number> , - <number> ) to their defined macros testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change . improves expressiveness . <section> avi weiss <user>"
"magic number <code> variables ( <number> , - <number> ) can be updated to their defined macros expected behavior * * use the more expressive defined macros if they are available . <section> avi weiss <user>"
"fix # <number> , align cf command counter implementation to cfs standard testing performed * * github ci actions all passing successfully ( incl . build + run , unit tests etc . ) . <section> <code> / <code> counters now held directly in the hk packet , instead of through an additional struct member . this pr improves consistency across cfs , and makes future maintenance easier as variables are named and located as expected . <section> avi weiss <user>"
cf command counters format inconsistent with cfs code snips * * <url> <section> align cf command counters to the standard cfs implementation . i . e . <code> <section> avi weiss <user>
"fix # <number> , support polling with no delay - fix # <number> <section> ci and custom distro with zero delay , confirmed faster than <number> second polling <section> supports polling with zero timeout <section> ubuntu <number> <section> project request <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove error event on nominal semaphore timeout - fix # <number> <section> updated unit tests and functionally in prototype code <section> no error event for nominal semaphore timeout ( flow control ) <section> ubuntu <number> <section> - added # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"rework no message buffer error reporting to not spam - related to bug # <number> fix for # <number> only addressed removal of error event on nominal semaphore timeout ( flow control ) . when a message buffer is not available , this error event will flood when <code> is false since every wakeup cf will try to resend the <allcaps> pdu </allcaps> . note <code> is set to false on all non - file data pdus . i did not see any justification for why the code was implemented this way ( no event for file data pdus , events on the rest ) . this is the snip before the fix for # <number> . <url> <section> i think it would be more useful to know it happened and a count of how often . consider adding a counter for both semaphore timeouts and no message buffer available . only send an event on the hk cycle when "" no message buffer "" counter increments , and report both in hk . <section> could just send the event once when the no message buffer available count transitions to non - zero . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , optionally move files when complete most trivial implementation i could think of . just adds entry to the table , if it ' s filled in moves the file instead of delete , falls back to a delete if the mv fails . this moves on every tx complete for all styles . <repeated> good enough for our required use - case but may not work for everyone . if the use case is to support either move or delete , you can set up two channels ( one w / the move dir defined ) . - fix # <number> <section> tested use case in project code . ci ( updated unit tests ) <section> if move_dir is filled it , attempts to move instead of remove ( remove is performed if move fails ) . <section> ubuntu <number> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"seeking help in cross testing this <allcaps> cfdp </allcaps> implementation i am reaching out to seek your help in cross - testing our <allcaps> cfdp </allcaps> implementation for the python version built by us at librecube . as a beginner in c + + and new to the cfs software , i would appreciate any assistance you can provide in setting up a client or server or any tutorial for beginners that you may have available . our team has been working on developing a python - based <allcaps> cfdp </allcaps> implementation , and we would like to ensure that it is compatible with the cfs software . we believe that your expertise in this area would be invaluable in helping us to achieve this goal . specifically , we are seeking assistance in the following areas : <number> . setting up a client and server for <allcaps> cfdp </allcaps> using the cfs software <number> . cross - testing our python - based <allcaps> cfdp </allcaps> implementation with the cfs software <number> . any tutorial or guidance that you can provide for beginners in using the cfs software"
"add option to move files from polling directory instead of delete only way to send a file without deleting is by command which unnecessarily limits design options . intra - app commands is not ideal , but currently the only option if you want to automate sending files without deleting them . also nicer for automated data prioritization algorithms to query the number of files in the polling directory ( assuming just file count resolution is needed ) , vs more complex methods of tracking how much data is actually queued via the individual commands , processing cf tlm or similar . <section> support moving the file from the polling directory instead of always deleting . possibly rework the <code> option to support a <code> if the move directory is defined ( via config ) and available . also useful for commanded cases to just move when done . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update cf_processmsg ( ) comment description testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> none - comment change only . <section> avi weiss <user>"
"fix # <number> , remove use of message storage in cf_appdata global testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , remove ' dummy ' from variable names _resubmission of <url> somehow i tied myself in a few knots trying to squash the merge commit and some clang - format corrections into a single commit . anyway , this new pr is from an updated branch so there should be no merge commits i believe . _ * * removed ( unnecessary ) use of ' dummy ' in several variable names and corresponding function names for completeness - e . g . <code> ) . note <code> left as is due to conflicting type defined with the exact same name as this function . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully ( except cppcheck convert to sarif issue - already documented here : <url> <section> none <section> avi weiss <user>"
"audit cf for cyclomatic complexity compliance checklist ( please check before submitting ) x ] i reviewed the [ contributing guide <url> . x ] i reviewed the [ <allcaps> readme </allcaps> file <url> to see if the feature is in the major future work . [x ] i performed a cursory search to see if the feature request is relevant , not redundant , nor in conflict with other tickets . is your feature request related to a problem ? please describe . <allcaps> nasa </allcaps> guidelines in <allcaps> npr </allcaps> <number> . 2 d recommends maintaining a cyclomatic complexity ( cc ) in software , in particular flight software of <number> or less . cf_cmd . c : cf_cmdwritequeue ( cc of <number> ) and cf_cfdp_r . c : cf_cfdp_r_tick ( cc of <number> ) unnecessarily violate the recommendation of a cyclomatic complexity of <number> or less . describe the solution you ' d like audit cf_cmd . c : cf_cmdwritequeue and cf_cfdp_r . c : cf_cfdp_r_tick to see if functions would benefit from simplification such that they comply with <allcaps> npr </allcaps> <number> . 2 d recommendation . requester info dan knutsen"
"fix # <number> , update out - of - date doxygen text expected behavior changes * * none ( documentation changes only ) . <section> avi weiss <user>"
"fix # <number> , remove ' dummy ' from variable names testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> none <section> avi weiss <user>"
"fix # <number> , remove extraneous assignments to cfe_success testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
extraneous assignments to cfe_success code snips * * <url> <url> <section> remove assignments - unnecessary code . <section> avi weiss <user>
"fix # <number> , clean up cf return codes testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> behavior essentially unchanged . removing positive error return values eases future maintainability . using a defined set of error return macros improves code clarity and makes cf more consistent with cfe and the other cfs apps . synchronizing the return types to <code> simplifies the code , and makes it more type - safe . could consider adding to this pr , or in the future , defining unique error return macros for each unique return type . <section> avi weiss <user>"
"fix # <number> , add option for trailer bytes in <allcaps> cfdp </allcaps> pdus adds an option to insert platform - specific padding at the end of <allcaps> cfdp pdu </allcaps> encapsulation . the padding area may be utilized by the deployment to add arbitrary verification information to the <allcaps> pdu </allcaps> . fixes # <number> <section> build and run all tests run a <allcaps> cfdp </allcaps> file transfer <section> none with default config . new config option allows user to add padding to the end of <allcaps> cfdp </allcaps> pdus for trailer bytes . <section> debian <section> the extra space is added only to the sb encapsulation of <allcaps> cfdp </allcaps> pdus , this is not within the <allcaps> cfdp pdu </allcaps> itself ( that is , the size inside the <allcaps> cfdp pdu </allcaps> does not include these extra bytes , but the size in the <allcaps> cfe sb </allcaps> message that holds the <allcaps> pdu </allcaps> does include it ) . <section> joseph hickey , vantage systems , inc ."
superfluous header <hashtag> includes </hashtag> code snips * * <url> <section> avi weiss <user>
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc <section> quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , update requirements for more concise transaction status code addresses # <number> . updates requirements to support transaction status codes indicating early completion . <section> n / a - documentation update <section> n / a - documentation update <section> ubuntu <number> <section> dylan baker , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , user ' s guide cleanup pushing doxygen update to refactor the cf user ' s guide for <user> <section> build / reviewed updated user ' s guide <section> dan knutsen <allcaps> nasa </allcaps> goddard"
user ' s guide needs rework <section> cf user ' s guide is not in line with the amount of detail provided for the other apps . <section> clean up doxygen + add more detail in regards to how to use the app . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , moves interface definition files to inc a clear and concise description of what the contribution is . - fixes # <number> <section> make install lcov <section> no impact to behavior <section> - os : ubuntu <number> <section> recommend fix of broken workflows as of <url> before considering this pull request . <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , add doc - prebuild dependency the documentation requires some artifacts to be in place , this added dependency ensures they are created before doxygen runs . fixes # <number> <section> run documentation build <section> no missing file if this is the first / only target built ( file will be created due to dependency ) <section> ubuntu <number> <section> requires merging nasa / cfe # <number> and nasa / osal # <number> before this will actually work . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct doxygen parameters corrects the doxygen for some newly added functions where the parameter names did not match . fixes # <number> <section> build documentation <section> no warnings about parameter name mismatches <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"correct parameter names in doxygen the cf header files have some mismatches between the doxygen documentation and the function prototype . <section> build documentation , check warnings <section> should have no warnings <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"missing dependency in documentation build the application documentation build ( doxygen ) depends on having some artifacts from the parent scope already existing , but there is no explicit dependency to enforce this . as a result , the build may fail , as it does in the github workflow . <section> failing in the github documentation workflow <section> should have a dependency on the parent target , so the needed file ( s ) get generated before running doxygen . <section> github hosted runner <section> this is a multi - part problem that requires a coordinate change across multiple repos . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , work around throttle sem creation race adds a retry loop around os_countsemgetidbyname , because if this sem is created by another app there may be some delay until the other app gets to the point where it creates the sem . this works around the race condition . a retry limit is also imposed so cf will not spin here forever . fixes # <number> <section> build and run tests , check file transfers with bp <section> should start up more reliably <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unnecessary cf_unionargs_payload_t union testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on logic . <section> avi weiss <user>"
"fix # <number> , reformat bracketed block fix # <number> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , move ' <allcaps> eid </allcaps> ' to the end of event id names testing performed * * github actions ( build / run + unit tests ) passing successfully . <section> no impact on behavior ( no logic changes ) . the format of cf event ids is now aligned with the rest of the cfs components / apps , improving code consistency . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , update inaccurate event id name testing performed * * only github ci actions . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , move variables declared mid - function to the top testing performed * * just the ci github actions so far . <section> aligns cf with the rest of cfs and the relevant coding guidelines . makes it easier and quicker to identify all variables in a function . <section> <user>"
"fix # <number> , change variable names to be more informative fix # <number> , change single - letter variable names to be more descriptive <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , clean up redundant comments and empty lines testing performed * * none ( only comments and empty lines were amended ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , thereby improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , add more concise transaction status code adds a new concept of "" transaction status "" to replace use of <allcaps> cfdp </allcaps> condition code to indicate the result of a transaction . to aid in transition this is equivalent in numeric value to the defined <allcaps> cfdp cc </allcaps> values but is extended with additional values for other conditions that can occur in the implementation but do not necessarily result in sending a <allcaps> fin </allcaps> / <allcaps> eof pdu </allcaps> . this also adds setting of transaction status for some off - nominal cases where no <allcaps> cfdp cc </allcaps> was set . fixes # <number> <section> build and run all tests , confirm <percent> coverage in unit tests for all new / modified functions run two instances of <allcaps> cfs </allcaps> running cf and perform file transfer between them , both nominal / successful and also intentionally create an error ( filesystem rejection ) . confirm that the generated "" <allcaps> eot </allcaps> "" telemetry message contains the expected code in both cases . <section> for successful file transfers both sender and receiver send "" <number> "" ( <code> ) in the new <code> field of the <allcaps> eot tlm </allcaps> message . for non success both send an appropriate error code in the field . <section> ubuntu <number> <number> - bit <section> the <code> value overlaps with the previous <allcaps> cfdp </allcaps> condition code value , but it is extended with additional values . where overlapping , numeric values for <allcaps> cfdp </allcaps> ccs are kept the same , and the value is the same integer width at the same place , such that the <allcaps> eot </allcaps> message format is not changed and software interpreting the message should not break . however , the software interpreting the <allcaps> eot tlm </allcaps> will need to accept the wider range of possible code values . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , clean up remaining commented - out code testing performed * * none ( comment changes only - no code was modified ) . <section> no impact on behavior . <section> <user>"
"fix # <number> , define special values in cmd processing as enums fix # <number> <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , correct <number> aberrant instances of cf_transaction_t argument name fixes # <number> amended the only <number> aberrant instances of cf_transaction_t objects named ' ti ' , to align them with the other ( several hundred ) instances named ' t ' . <section> none , prior to submission of pull request . <section> no impact on behavior . <section> n / a <section> <user>"
"fix # <number> , correct <number> aberrant instances of cf_transaction_t argument name fixes # <number> amended the only <number> aberrant instances of cf_transaction_t objects named ' ti ' , to align them with the other ( several hundred ) instances named ' t ' . <section> none , prior to pull request submission . <section> no impact on behavior . <section> n / a <section> n / a <section> n / a <section> <user>"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , disable polling directory in default table - fix # <number> <section> ci <section> polling disabled by default , avoids messages about the directory not found <section> ci <section> also improved default table comments <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use utassert_int32_eq to check status using the int32_eq macro avoids type conversion issues in the event that the int32 type is not equivalent to "" int "" . fixes # <number> <section> run all tests <section> no longer has build failure on systems where int32 ! = int <section> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove dynamic memory use in uts - fix # <number> <section> ci <section> squash warnings . <repeated> also more maintainable unit tests ( much simpler ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
unnecessary use of dynamic memory in unit tests dynamic memory used in ut for cf_crc and cf_clist . <section> refactor / simplify . <section> none <section> note this will also fix some static analysis warnings w / the related unit tests . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , use fixed size types in tlm <allcaps> eot </allcaps> packet - fix # <number> <section> ci <section> fixed size types in tlm <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( via stakeholder request )"
"fix # <number> , detect pdu truncation fixes # <number> detects and reports silent truncation of entity id or transaction sequence number fields . pdus with <allcaps> eid </allcaps> / <allcaps> tsn </allcaps> fields that are too big for configured internal storage will be rejected and an event will be issued . <section> updated and ran unit and coverage tests . tested with peer - to - peer cf setup with both correctly configured <allcaps> pdu </allcaps> fields were accepted , and pdus with size mismatches were rejected rather than silently truncated . <section> now if the ground or a peer sends a <allcaps> pdu </allcaps> with either <allcaps> eid </allcaps> or <allcaps> tsn </allcaps> fields that are too big for the storage configured in the cf_platform_cfg . h file , the <allcaps> pdu </allcaps> will be rejected , the error counter will be incremented , and an event message will be issued . before these pdus would be silently accepted , and the error could depend on the data truncation that would occur . <section> - hardware : pc - os : ubuntu <number> - versions : cfs bundle main ( as of <date> ) <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , code <number>"
"fix # <number> , revert requirements whitespace changes from # <number> - fix # <number> <section> ci ( note this is requirements whitespace change only ) <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"revert requirements custom whitespace changes numerous "" custom "" whitespace changes snuck into # <number> <section> revert the custom changes . the csv should be a direct export from the requirements management tool to keep the management process simple ( export / commit vs export / edit / commit ) and helps with version control ( diff between versions reflects actual changes from the requirements cm tool ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , cf chunk unit test cleanup and main code chunk add and gap bug fixes - fix # <number> - fix # <number> <section> ci with "" real "" scenarios implemented ( no longer random number ) <section> fixes both the chunk add and chunk gap logic <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consistent cfe_evs_sendevent handling in ut - fix # <number> <section> ci <section> none , just ut updates / cleanup <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove file dequeue cmd requirements - fix # <number> <section> na <section> none , requirements update only ( command not implemented in <number> . x) <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , updated <allcaps> cfdp </allcaps> class validation fix # <number> , add validation to <code> and <code> to prevent negative <allcaps> cfdp </allcaps> class values . <section> unit testing <section> reject command if <allcaps> cfdp </allcaps> class is negative <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , send packet when transaction resets fix # <number> , when a transaction resets , an information packet is sent <section> unit testing <section> sending a packet of information on a transaction when it is reset . <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"remove dequeue file command requirements , they are not implemented dequeue file is not an implemented command , still listed in requirements cf5022 , cf5022 . <number> <section> remove these requirements <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clarify event text for commands that initiate actions - fix # <number> <section> ci <section> none , text is just more clear <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , base offsets for cf msgids define the cf msgids as an offset from the cfe_platform_cmd_mid_base or cfe_platform_tlm_mid_base , which helps simplify configuration . users should add <allcaps> msg </allcaps> offsets to the global mission config header . fixes # <number> <section> build and run cf app <section> msgids for cf can be more easily customized by setting <allcaps> msg </allcaps> offsets in the global cfe_mission_cfg . h header file , the same way other <allcaps> cfe </allcaps> framework module msgids are set . user does not need to modify this file in place to do so . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"inconsistent use of cfe_evs_sendevent stub forces unnecessary ut complexity since two patterns are used for checking events , it can not be setup by default at startup causing every test that wants to check events to have to set up the data buffer ( using either pattern a or b) : pattern a uses ut_cf_reseteventcapture , ut_cf_checkeventid_impl , ut_cf_capturedeventids , example : <url> pattern b set ' s up a custom buffer : <url> <section> use a single pattern and setup automatically ( like pattern a ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , support dynamic pdu packets fix # <number> in order to support cf peer to peer transactions , this change will allow incoming <allcaps> pdu </allcaps> packets to be either command or telemetry packets . this is handled in the cf_cfdp_sbintf . c file that handles pdus wrapped in <allcaps> ccsds </allcaps> packets . this change required renaming structures : <code> this rename makes it less confusing if cf receives a <allcaps> pdu </allcaps> wrapped in a <allcaps> tlm </allcaps> packet , for example . in this case , it would not make sense to receive a "" send "" type packet . in addition to renaming these structures , the typedefs were moved to cf_cfdp_sbint . h as a step toward decoupling the <allcaps> pdu </allcaps> send and receive from the software bus . by allowing incoming <allcaps> pdu </allcaps> packets to be wrapped in command or telemetry <allcaps> ccsds </allcaps> packets , cf can receive pdus from the ground wrapped in a command packet , or pdus from a cf peer wrapped in a telemetry packet . <section> <number> . built and ran ( updated ) unit tests . <number> . set up a cf peer - to - peer configuration and verified a type <number> tx transaction works from one cf peer to another . tested that the cf peer can receive the pdus as telemetry or command packets . <section> - no impact to normal behavior , but does enable direct peer to peer <allcaps> pdu </allcaps> transactions cf1 ( <allcaps> tlm pdu </allcaps> ) - > cf2 ( <allcaps> tlm pdu </allcaps> ) <section> - pc virtual machine - os : ubuntu <number> - versions : cfs main ( <date> ) <section> alan cudmore / <allcaps> nasa gsfc </allcaps> / code <number>"
"fix # <number> # <number> # <number> , comment cleanup and spelling - fix # <number> - fix # <number> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"ci code coverage failure , missing line / branch for random seed <phone> random value use in unit tests strikes again . <repeated> missed a line / branch for random seed <phone> . <section> remove random behavior for whatever caused this issue . <section> replace all random functions w / hard coded settings for now . eventually extract from code and use values that make sense (# <number> ) . <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , updated value in assert causing test to fail fix # <number> , bug in unit tests wasn ' t multiplying the number of transactions per channel by the number of channels , causing the unit test to not pass . <section> ran unit test <section> all unit tests pass <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"num of transactions in channel should be multiplied by num of channels in unit test in <code> , cf_num_transactions_per_channel is not multiplied by cf_num_channels , causing the assert to fail ( see code snippet below ) <section> run unit tests <section> all unit tests should pass <section> <url> <section> - os : ubuntu <number> - <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , refactored to remove cf_cmdacc ( ) and cf_cmdrej ( ) fix # <number> , remove the cf_cmdacc ( ) and cf_cmdrej ( ) functions <section> ran unit tests <section> or no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , flatten logic in cf_cfdp_initengine ( ) to fix bug fix # <number> , fixed error in code where semaphore name being blank would skip to the end of <code> <section> ran unit tests <section> if the semaphore name is blank , continue with function instead of exiting . <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , pass correct parameter in abandon cmd function fix # <number> , <code> was being passed to <code> instead of <code> <section> ran unit tests <section> when the abandon command is called , it will run <code> <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"incorrect parameter in abandon command in the abandon command code , <code> is being passed <section> abandon should pass <code> instead <section> <url> <section> browser <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , failed commands send error event message fix # <number> , an error event message is sent if a command is not successful <section> ran unit tests <section> behavior change : all commands now send an error event message if unsuccessful <section> os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
remove cf_cmdacc and cf_cmdrej inline functions cf_cmdacc and cf_cmdrej are one - liners so they are mostly unecessary . <section> replace their use and remove the functions . <section> <url> <section> haven carlson - <allcaps> nasa </allcaps>
"fix # <number> , reset file psn and use os_mv for out - of - order <allcaps> rx md </allcaps> processing - fix # <number> switches from os_rename to os_mv which supports "" rename "" across file systems ( via copy / delete ) resets file cached position ( from the file open ) so it gets recalculated correctly <section> ci ( added unit test asserts ) <section> should now handle an out - of - order md , and a tmp dir being on a different filesystem than the final location <section> ci <section> note the functional / <allcaps> ctf </allcaps> test is the full verification of this capability <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove ppt design and <allcaps> vdd </allcaps> docs from codebase - fix # <number> <section> ci - doc change only <section> none , just paperwork change in that these should be provided as assets on release . <section> ci <section> eventually converting to markdown would be good . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , command handling updates a clear and concise description of what the contribution is . fix # <number> , an information event message is sent if a command is successful fix # <number> , remove <code> <section> ran unit tests <section> - behavior change : all commands now send an information event message if successful <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"part # <number> , fix # <number> , document event ids and remove unused - part # <number> added event id documentation - fix # <number> removed unused event ids <section> ci <section> none , just improved documentation and no unused event ids <section> ci <section> note , still working the rest of the documentation <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor goto statements fix # <number> , replaced all instances of <code> <section> ran unit tests <section> no impact to behavior <section> ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> # <number> # <number> # <number> # <number> , coverage improvements unit test updates - fix # <number> - fix # <number> - fix # <number> <allcaps> fsw </allcaps> updates - fix # <number> - fix # <number> <section> ci <section> none , just achieves full coverage <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
implicit default case in cf_writehistoryentrytofile prevents full branch coverage this will show up with the implicit default case uncovered since it ' s unreachable : <url> <section> add the default case explicitly <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"remove unit test context_t elements as overkill for a coverage test there ' s a significant amount of unit test logic dedicated to confirming argument inputs to stub functions that go above and beyond the requirements of a coverage test . this logic is associated with defining and saving * _context_t structures from within stubs . while there is technically nothing wrong with these tests ( they all pass ) , the issue is with technical debt . unless the test is verifying requirements / spec / algorithm document there ' s also the question of what is truth . <section> use functional tests to verify function . remove context checks that do not add value in the coverage test context . <section> leave as is , but whenever maintenance is performed encourage simplification . at minimum we should avoid this pattern in new or updated tests . <section> along the same lines as removing the randomness , these are not intended to be fuzz tests . - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove registration of empty <allcaps> evs </allcaps> filters - fix # <number> <section> ci <section> eliminates cfe_evs_registration filter truncation message and no longer registers empty filters <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , truncate files when created to avoid stale data - fix # <number> <section> ci <section> truncates when creating files ( avoids stale data if previous file was larger ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add mission rev and print in startup and noop events - fix # <number> <section> ci <section> adds mission rev in startup and noop events <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , move timers into channel config and remove cfg telemetry - fix # <number> - fix # <number> <section> ci ( also built and ran unit tests locally ) <section> no longer supports reporting config in tlm , get it via table dump ( better since it contains everything already ) timer and limits are now channel specific configuration items matching requirements , note this will break existing tables <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
update <allcaps> readme </allcaps> . md - fixed typo <code>
"fix # <number> , removed the typo removed the typo in readme . md fixes - # <number> <section> steps taken to test the contribution : <number> . build steps ' corrected the error ' <number> . execution steps ' saved the file ' <section> no impact to behavior <section> - hardware : [ intel corei5 ] - os : [ windows ] - versions : [ <number> ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
"fix # <number> , resolve ut variable coverage results - fix # <number> <section> built and ran unit tests with troublesome seed , got nominal results <section> none , just avoids possible missing coverage in the unit test for cf_chunks_findsmallestsize <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
inconsistent results in coverage test likely related to random number use in unit tests (# <number> failed coverage here : <url> <code> note it passed in the very next run w / no code changes ( was just a requirements update ) <section> remove whatever random test implementation is causing this ( all others eventually to fix # <number> ) <section> none <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> # <number> # <number> # <number> # <number> # <number> , requirements clean - up - fix # <number> - fix # <number> - fix # <number> - fix # <number> ( note issue # <number> still exists ) - fix # <number> - fix # <number> - part # <number> ( just removes duplicate element from requirement , does not fix issue ) also removed old / obsolete requirements spreadsheet <section> na - requirements only <section> none <section> n / a <section> the update for # <number> adds the timers at the channel level , so it ' s related to existing issue # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> <section> <number> . pushed to branch <number> . checked codeql ran successfully <section> no impact to behavior <section> browser <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve buffer overflow in cf_chunks_insertchunk unit test - fix # <number> rewrites problematic cf_chunk_insertchunk tests that occasionally had a buffer overflow due to random number use . <section> build and ran unit tests , confirmed passing . also confirmed no loss in coverage . <section> just fixes random unit test failures on a <number> bit system . <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit ( and app addition ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"file transfer priority level configuration requirement clarification no <section> per requirement cf5030 . <number> , the cf file - transfer priority levels shall be configurable . this functionality is not currently implemented in cf . <section> none <section> none <section> sergio maldonado <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> / arctic slope technical services"
"z modifier not c89 compatible <code> modifier not c89 compatible <code> format specifier is not c89 compatible . event messages utilizing <code> or <code> ( or other <code> ) format specifier will see "" zd "" in event / print message instead of desired numerical value . <section> steps to reproduce the behavior : build and run cfs cf app in c89 compatible but not fully c99 compatible environment . send valid ground cmd but with invalid ground cmd length to cf app . cf will send an event ( <allcaps> error </allcaps> ) with cmd expected length and actual length , however the actual length will just show <code> . you can see this behavior when viewing cf ' s event printout . for example : <code> <section> event message will include numerical value for corresponding cmd length <section> <code> and corresponding unit test <section> - versions : cf v3 . <number> <section> support for <code> modifier introduced in c99 ( c99 adopted as an <allcaps> ansi </allcaps> standard in <date> )"
"fix # <number> , switch to reusable build - run workflow - fix # <number> <section> modified ci ( pointed to skliper / branch for cfs workflow ) : <url> <section> none , ci <section> ci <section> nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
use build and run usable workflow at cfs level local build - run workflow duplicates standard app logic for building and running with cfs <section> use reusable workflow instead <section> none <section> nasa / cfs # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add unit test and coverage workflow - fix # <number> <section> ci w / modified path / repo for reference : <url> <section> none <section> ci <section> nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add unit test and coverage workflow no unit test or coverage verification workflow implemented <section> add <section> none <section> nasa / cfs # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> # <number> , cleanup and add functional requirements csv - fix # <number> - fix # <number> <section> none , doc only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add cf functional requirements csv to repo for easier change history tracking cf requirements hard to track changes during development and reference when supplied as assets . <section> add the requirements directly to the repo in the same format as cfe : <url> <section> endless . but this follows the cfe pattern that has worked well ( csv in repo , doc provided as asset at release ) <section> cleanup listed in # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"additional requirements cleanup based on csv - cf4000 and cf4000 . <number> look identical - not clear what the difference is between cf4003 and cf3005 . <number> ( if a channel has a unique message id , every <allcaps> pdu </allcaps> related to that channel will be associated with that message id , no ? ) - out of family id ' s ( and some missing , only in summary ) : cf5002 . <number> , cf5002 . <number> , cf5002 . <number> - multiple typos : cf1001 "" receieves "" , cf3001 "" the the "" , cf5001 . <number> "" processingall "" "" comand "" , cf5030 "" evels "" , <section> resolve <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add doc build / deploy workflow - fix # <number> <section> ci with forced fork / branch for reuse workflow and forced deploy : <url> <section> doc build with enforcement of no warnings , will deploy to gh - pages on push to main <section> ci <section> depends on nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> - adds strict cppcheck and fixes remaining warnings ( replace codec macros ) - fix # <number> - fix # <number> <section> build / run unit tests , also manually ran strict cppcheck on fsw / <section> none except now enforcing strict cppcheck in ci <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> workflow will fail until # <number> is merged since one of the warnings were fixed there . also will fail until nasa / cfs # <number> is merged based on the directory fix <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> - resolve static analysis warnings - fix # <number> - fix # <number> <section> build / unit test and run static analysis <section> none , just cleaned up about half the static analysis warnings <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> note goto removal issue is still open which would address another significant set of warnings (# <number> ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , move cf_tbldefs . h to src - fix # <number> moves cf_tbldefs . h so that the compiler does not pick up the default platform_inc headers instead of the overridden headers ( if they exist ) at the mission level . the table structure definitions are not configurable at a platfrom level , much like the majority of other applications . <section> build / run unit tests <section> overridden headers at mission level will now be used by cf_tbldefs . h vs the defaults in fsw / platform_inc where the file was formerly co - located . <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"warnings raised when cf_num_channels is set to something other than <number> <url> is not actually changeable ; the initializer at <url> makes assumptions about the channels and their roles <section> set cf_num_channels to <number> and observe compile warning <section> no warnings <section> <section> - hardware : sp0 - s - os : vxworks <number> <section> <section> john n pham , northrop grumman"
"fixes # <number> , add unit test workflow changes enable_unit_test to true , changes ctest_output_on_failure to true , adds repo_name , changes ubuntu - latest to ubuntu - <number> , splits build - run copied and pasted this file from a successful run adds matrix method to ubuntu - <number> and ubuntu - <number> fixes # <number> <section> testing performed on fork : <url> <section> passing workflow <section> ubuntu <number> ubuntu <number> <section> the build release tested on ubuntu <number> catches a format truncation warning in nasa / osal . # <number> <url> documents this issue . passing workflow requires truncation suppression , depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"update and / or document missing coverage <code> <section> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<code> occasionally fails on <number> bit system not clear what the issue is , but random values being used in test . output observed : <code> <section> built on <number> bit system , ran the <code> test repeatedly ( maybe <number> errors in <number> ) ? <section> no failures . <section> <url> <section> - hardware : i5 / wsl - os : ubuntu <number> - versions bundle main + cf main <section> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add unit test workflow missing unit test workflow . <section> add unit test workflow <section> none <section> none <section> justin figueroa - <allcaps> asrc </allcaps> federal
"fix # <number> , apply clang - format - <number> whitespace formatting - fix # <number> <section> whitespace only - ci <section> none , whitespace only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove old license headers - fix # <number> <section> ci , documentation only <section> none , documentation only <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , adds format check and static analysis workflows fixes # <number> <section> tested format check on fork : <url> tested static analysis on fork : <url> <section> passing workflow <section> ubuntu <number> <section> the added format check workflow catches a format check error when it runs its "" error on differences "" step . specifically , the workflow throws errors on the placement of "" \* "" with pointer variables written in the fsw and unit test files . the format check would rather that "" \* "" be on the left side of the whitespace than the right side . <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , update <allcaps> license </allcaps> and copyright headers - fix # <number> <section> documentation only , but built and ran unit tests anyways <code> <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit ( w / <allcaps> gsfc </allcaps> apps added ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , follow include standard - fix # <number> <section> ci and local build / execute of unit tests <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve uninitialized variables in ut - fix # <number> <section> build <number> bit & run unit tests with valgrind <section> no uninitialized variable warnings <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"uninitialized variables in ut when running <number> bit multiple uninitialized variables identified in ut for <number> bit build ( using valgrind ) : <code> <section> resolve <section> none <section> related to # <number> testing , this is just the remaining issues after that change . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , stack smashing in cf_chunk unit test - fix # <number> <section> built / ran <number> bit unit tests <section> no longer stack smashing in ut <section> - hardware : i5 / container - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
cf_chunk unit test stack smashing stack smashing observed when compiling / testing <number> bit ( - m32 ) . issue is with a test not limiting the max count to the size of the array : <url> <section> limit correctly and use an index inbounds . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"unit test hooks should not pass back pointers out of context multiple cases of pointers getting passed back out of context : <url> <url> <url> <url> <url> <url> <url> <url> these could all be stale by the time they are checked . <section> clean up hooks . remove info not needed , anything critical should either check in context or copy the information out . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use lowercase and updated table name in ci - fix # <number> <section> ci <section> ci should pass <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix ci for table name update and follow lower case standard ci broken by table update , also unnecessarily diverges from lowercase pattern <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cf table name and default polling disabled - fix # <number> <section> built and default startup , confirmed table loaded w / no errors ( with cf app name in startup config ) <section> no polling errors reported , works with <allcaps> gsfc </allcaps> app naming patterns <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add build workflow fixes # <number> <section> tested on fork : <url> <section> build cfs with the cf app and run . / core - cpu1 <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , set revision number to <number> <section> per <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> versioning patterns , development software should report itself as revision <number> to avoid confusion with released versions . fixes # <number> <section> build and sanity check cf <section> revision reported as <number> now , example boot event : <allcaps> evs </allcaps> port1 <number> / <number> / cf_app <number> : cf initialized . version <date> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move all bitfields into codec <section> nothing outside of the codec code should need to know about the bitfields in the <allcaps> cfdp </allcaps> protocol definition . everything else uses logical values . this moves all declare_field macros into cf_codec . c and removes cf_field . h . fixes # <number> fixes # <number> <section> build and sanity check cf run all unit tests run some file transfers <section> none , code clean up <section> ubuntu <number> <section> this just puts these definitions on the "" need to know "" basis , by not exposing them outside the only file where they matter . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve coverage on cf_cmdgetsetparam <section> rewrites the unit test on this function in order to get full line coverage . this needs to call the routine with every defined param id to get each case . fixes # <number> <section> build and run all unit tests , confirm coverage <section> none for <allcaps> fsw </allcaps> , unit test coverage improvement <section> ubuntu <number> <section> this also removes a bit of code from <allcaps> fsw </allcaps> that did a no - op for a size that wasn ' t uint32 / uint16 / uint8 . this was unreachable because there are no cases that have such a size , and it would be a software bug if there was . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove throttle sem from default / example config <section> removes the throttle sem name from the example configuration table . unless the user provides another app / library to create this sem , this configuration will not load . with this sem removed then cf should at least be able to start up . fixes # <number> <section> build cf <section> example config will not attempt to use a throttle sem . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reject pdus with large bit set <section> this bit indicates that the <allcaps> pdu </allcaps> has <number> - bit size and offset fields . cf currently does not support large file sizes . it needs to reject these packets as they will corrupt the data because they are not decoded properly ( decode is fixed at <number> bit sizes ) . fixes # <number> <section> build and sanity check cf force sending <allcaps> pdu </allcaps> with bit set , confirm cf rejects the <allcaps> pdu </allcaps> . <section> cf informs the user that it received a <allcaps> pdu </allcaps> that it does not understand . <section> ubuntu <number> <section> cf does not and did not support this feature , the only difference here is that it cf will now properly detect and reject a received <allcaps> pdu </allcaps> with this bit set , and inform the user of that event , instead of attempting to ingest it and doing so wrongly ( likely corrupting data in the process ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cf_purge_queue_cc <section> adds missing enum label to cf_cmds . fixes # <number> <section> issued the command ( code <number> ) from cmdutil and confirmed cf did something . <repeated> <section> none , this command code was already in the dispatch table , so it worked before if cc <number> was manually sent using cmdutil . <section> ubuntu <number> <section> this is just for completeness / correctness of the enum . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , restore call to cf_cfdp_recvnak <section> this call got inadvertently removed with recent change , caught by regression test . this puts it back . fixes # <number> <section> build and sanity check cf execute cf file transfers <section> <allcaps> nak </allcaps> should work properly again <section> ubuntu <number> <section> in my test environment it is difficult to recreate a <allcaps> nak </allcaps> situation . <repeated> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use osal_id_t for <allcaps> osal id </allcaps> , not int32 <section> use the correct typedef for <allcaps> osal id </allcaps> . this also necessitates using the correct conversion macro where use as an integer is intended . fixes # <number> <section> build with <allcaps> osal </allcaps> bleeding edge code , confirm no type conversion errors . <section> none w / caelum <allcaps> osal </allcaps> , as osal_id_t is equivalent to uint32 . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update traverse history / write file <section> - rename the functions to better indicate what they do - do not discard the part of the output that has <allcaps> eid </allcaps> / <allcaps> tsn </allcaps> / cc information - do not pass the return value of snprintf directly to write ( ) , use strlen ( ) - simplify the code fixes # <number> <section> build and unit test cf . run two instances of <allcaps> cfe </allcaps> + cf , execute transfer in both directions and confirm issue cf_write_queue_cc ( <number> ) to write the transaction and history queues to the file confirm contents of the file are correct . <section> the file contains the information it is intended to contain , mainly the <allcaps> seq </allcaps> / <allcaps> dir </allcaps> / <allcaps> peer </allcaps> / cc bits are not omitted . there is also no risk of buffer overruns . here is an example file output , after running two transactions between two nodes ( one rx , one tx ) <code> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"use proper type instead of "" int32 "" for <allcaps> osal </allcaps> ids <section> in some functions , e . g . cf_writequeuedatatofile , cf_writehistoryqueuedatatofile , the <allcaps> osal </allcaps> file descriptor is being passed as an <code> . this is incorrect , but allowed by the backward - compatibility features in <allcaps> osal </allcaps> . in a future version , this will become an error . <section> build <allcaps> osal </allcaps> with type - safe id . implicit conversion of id to / from an integer will fail to compile . <section> use <code> type instead , which is the correct type for an <allcaps> osal id </allcaps> . <section> <url> <url> <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub all printf format codes <section> use the correct printf format code and typecast for printing various values in log messages and events . fixes # <number> <section> build and run tests on <allcaps> rtems </allcaps> and <number> - bit powerpc <section> build succeeds without warnings or errors <section> <allcaps> rtems </allcaps> <number> . <number> on pc686 + <allcaps> qemu </allcaps> yocto / poky linux on <allcaps> ppc </allcaps> <number> + <allcaps> qemu </allcaps> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , consistent "" chunk "" test sizes <section> do not use a random uint16 to size the structure that is allocated on the stack . pick a reasonable size that is not likely to overrun the stack , and use it . this fixes a crash / stack overrun issue when running on <allcaps> rtems </allcaps> . fixes # <number> <section> build and sanity check cf on pc - <allcaps> rtems </allcaps> <section> tests pass <section> <allcaps> rtems </allcaps> <number> . <number> via <allcaps> qemu </allcaps> + pc686 <allcaps> bsp </allcaps> <section> this _only_ fixes the random values that caused a stack overrun / crash . would still recommend fixing other use of random numbers in tests . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , validate input params on txfile and playback cmds <section> the input parameters on txfile and playback commands was not being sufficiently validated before calling the internal routine . fixes # <number> fixes # <number> <section> send in commands with invalid parameters / channel number and confirm it is being rejected with the event . <section> cf no longer segfaults with an out - of - range channel number <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct accept / reject counter increments <section> for commands that rely on cf_tsnchanaction ( ) , this is documented as returning a count of the number of transactions affected . therefore , a return value > <number> means that the operation was successful ( or at least it matched something ) , and a return value <= <number> means failure . - fixes a case where the function did not adhere to its documented return - fixes passing the result to cf_cmdcond ( ) which needs a translation . fixes # <number> <section> build and sanity check cf <section> correct counters being incremented now <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework loop in cf_cfdp_cycletx <section> modifies the loop inside this function to be more conventional , and easier to follow . does not change the logic . fixes # <number> <section> build and sanity check cf , run all tests <section> none , this does not change loop logic <section> ubuntu <number> <section> do not use "" goto "" to jump _inside_ the middle of a loop , just use <code> and break out when the stop condition was reached . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove macros within c code <section> reworks the cf_cmdgetsetparam to be clearer in its implementation , not require the use of endian - specific conditionally - compiled code . fixes # <number> <section> build and sanity test cf app send various get / set param commands ( cc <number> and <number> ) and confirm working as expected <section> none visible externally ( i . e . <allcaps> cmd </allcaps> handling ) but much cleaner internal handling of these values . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , disable the engine in cf_cfdp_disableengine <section> restores setting a global flag which was mistakenly deleted in a previous cleanup . this also adds a unit test check to confirm the global was set false . fixes # <number> <section> build cf and run tests <section> engine gets disabled when cf_cfdp_disableengine is called <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove dependence on <allcaps> endian </allcaps> macro for checksum <section> removes the checksum "" optimization "" for big endian , as it is unlikely to be useful and creates endianness dependencies . fixes # <number> <section> build and sanity check cf <section> none on x86 / little endian ( removes code that was not used ) <allcaps> ppc </allcaps> / big endian will use the same code as x86 , might be a bit slower but its safer and more testable ( because its the same code ) <section> ubuntu <number> <section> the big endian optimization is probably not that useful because it requires that the hw can do misaligned <number> - bit reads . <allcaps> afaik </allcaps> most embedded cpus do not have this capability , and if they can , it might not be all that much faster than reading it byte - by - byte . so even though it looks like a <number> - bit read in c code ( and therefore 4 x fewer loop iterations ) it probably does not have much of a payoff , if one could find a hardware with this capability ( not sure how it was originally tested ) . in the end i do not think its worth trying to test and maintain this "" optimization "" . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , make entity id default to <number> bit <section> entity ids should be larger by default for real - world applicability , as this also restricts what <allcaps> cfdp </allcaps> can receive , not just what it sends . note <allcaps> cfdp </allcaps> will only use the number of bytes required to express the value , so values less than <number> will still only use <number> byte , regardless of this config . this just allows use of larger values . fixes # <number> <section> build and sanity check cf <section> default "" out of the box "" config should support entity id values up to <number> bits . <section> ubuntu <number> <section> this only affects what cf is capable of handling , if running with small ( < <number> ) entity id values , there is no change to the runtime behavior at all ; they will still be <number> bits in practice . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adjust padding in msg structs <section> add explicit spare bytes where the compiler is likely to introduce padding into hte message structures . <allcaps> cfs sb </allcaps> messages should avoid having any implicit padding , whenever possible . fixes # <number> <section> build and run tests , send some commands to sanity check <section> none really , the padding was implicitly in the messages already , this just makes it clear / explicit . <section> ubuntu <number> ( on <number> - bit <allcaps> cpu </allcaps> ) <section> this probably needs <allcaps> cosmos </allcaps> updates as well ( <allcaps> tbd </allcaps> ) <section> joseph hickey , vantage systems , inc ."
"cf msg definitions explicit padding <section> <allcaps> cfs </allcaps> apps should avoid having any implicit ( compiler - induced ) padding in the message structures . where items are likely to be spaced due to compiler alignment requirements , an explicit spare byte ( or bytes ) should be added between them . <section> specifically , the following structures need some padding updates : - in <code> : total size needs to be multiple of uint32 ( + <number> spare bytes at end ) - in <code> : + <number> bytes spare between the "" counters "" ( cf_hkcmdcounters_t , <number> bytes in size ) and the "" channel_hk "" ( cf_hkchannel_data_t , which contains uint64 values , and therefore has <number> - byte alignment ) . - in <code> : total size needs to be a multiple of uint64 ( + <number> more spare bytes at end ) . this currently has <number> spare bytes , which puts the end at offset <number> . this is not a multiple of <number> , needs <number> more to make it <number> . <section> will need <allcaps> cosmos </allcaps> updates , too . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , doxygen updates <section> make sure _all_ functions in cf have a doxygen block on the declaration describing the inputs and outputs and a general summary of what the function does . additionally describe the purpose of structures and structure members where it is not totally obvious from the name . note : this also renames one member , cf_max_chunks , that appears to have been improperly scooped up in a previous batch rename . fixes # <number> <section> build and sanity check cf operation . this does not change any actual <allcaps> fsw </allcaps> or unit test logic . <section> no impact to behavior , this only changes documentation ( aside from the one rename ) <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"incorrect check at the start of cf_chunks_eraserange this only verifies that the "" start "" id is less than the count : <url> it really needs to verify that the end is less than the count too ( because it reads this memory ) . this could also make the count go negative if the end was beyond the count . in theory if the code is operating properly this should never happen , but since some error checking is done , it should at least be correctly done . recommend to make it check that <code> instead ."
"fix # <number> , compile out cf_asserts by default <section> changes cf_assert to be opt - in rather than opt - out , so that under normal verification and validation the asserts will _not_ be included , but they can still be added back during development , if desired . they mainly exist as notes to developers as to what is supposed to be true , once debugged it is impossible to get these conditions , by definition . also removes one channel calculation that was only for assert . note that the same condition is asserted later , so it was redundant anyway . fixes # <number> <section> build and sanity check cf with cf_debug_build set both ways <section> branch coverage on <allcaps> lcov </allcaps> report is much better with asserts compiled out . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> , update identifier names <section> renames all remaining identifiers that did not have an appropriate name per the coding standards . specifically , this is anything that did not start with cf prefix (# <number> ) and anything that ended with an underscore only (# <number> ) . fixes # <number> fixes # <number> <section> build and sanity check cf , run all tests execute test file transfer between two <allcaps> cfe </allcaps> nodes <section> none , internal symbol rename only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reject fd packets with segment_metadata flag set <section> the cf does not currently interpret / use the segment metadata option inside file data pdus . packets with this bit set should be rejected . fixes # <number> <section> build cf and run all tests execute test file transfers between two <allcaps> cfe </allcaps> nodes <section> none , cf does not set this bit on tx , it should never be set on rx . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use proper types for msgid and mid values ensures use of the proper sb - provided types for msgids and msgid values ( aka cfe_sb_msgid_atom_t ) . this ensures that the values are used and converted properly . fixes # <number>"
"some functions / typedefs remaining that do not follow naming convention a previous fix for # <number> did a scrub of the global variables , but there are still several instances of localized identifier names that do not follow the convention . these should also be fixed ( easy search and replace ) . - tick_args_t - container_of - chan_action_fn_t - bool_arg_t - susp_res_arg_t - bool_msg_arg_t - trans_seq_arg_t - trav_arg_t - traverse_all_args_t - priority_arg_t most of these are for local helpers that were previously file - scoped ( static ) but after # <number> have been moved to a header and made non - static for unit testing improvements . so these should now be renamed to follow the convention since they are technically global scope , even if use is still limited to one unit ."
""" count_bytes "" inside cf_cfdp_r2_calccrcchunk is not incremented during loop the cf_cfdp_r2_calccrcchunk function has what appears to be an intent to limit the amount of bytes processed during each call . there is a comparison of a local <code> to the configured <code> here : <url> however , nowhere during this loop is <code> incremented , so it is always <number> , and thus this limit is never reached . found during rework of unit tests on here , branch coverage showed it not possible to get this condition because count_bytes is always <number> ."
set revision number to <number> on main branch to indicate development really we should bake this into process such that it ' s the very first change on the development branch after a release . otherwise tlm will not be unique between official releases and development branch use . <url>
"unit tests including "" . c "" file the cf unit tests are using <code> to wrap a . c file . for example : <url> this practice was determined to violate <allcaps> gsfc </allcaps> coding standards . it is likely done this way such that the test can access "" static "" items in the source file . the preferred way is to simply declare the item in a header file so that unit test can access it more conventionally ."
"fix # <number> , add contributing guide fixes # <number> added contributing guide that directs users to the cfs <allcaps> contributing </allcaps> . md file ."
"fix # <number> , add issue & pr templates fixes # <number> added bug report , feature request , and pull request templates ."
add contributing guide match the cfs repo in terms of documentation to allow the community to easily contribute . add a contributing guide similar to the one found in cfs .
add pr & issue templates match the cfs repo in terms of documentation to allow the community to easily contribute . add a bug report and feature request template .
add build workflow for continuous integration develop a github actions workflow to compile cf with the rest of the framework . will also need to modify sch_lab table to check if cf runs .
"fix # <number> ( plus others ) , separate logical vs . network <allcaps> pdu </allcaps> buffers improves the distinction between <allcaps> pdu </allcaps> data being actively interpreted or created during the <allcaps> pdu </allcaps> receive or transmit process , and the encoded form of that data . cf formerly treated the two as the same , directly referencing the encoded form of the data . this creates many repeated translations . furthermore , it would sometimes write a modified value back to the packet in a partially - decoded form , so it was never clear what was in a given buffer at a given time ( it could be native byte order or network byte order , in the same fields ) . this introduces a "" logical "" buffer which correlates to the <allcaps> cfdp </allcaps> buffer , but is used for all in - work or temporary value storage . all values in the logical buffer are normalized to the native machine , that is they are aligned properly and always in the correct byte order for the host , so they can be used as normal values without any need for translation . when it comes time to transmit data to / from the network , a dedicated encode / decode function is used , to translate the entire content from its native form to the network form , or vice versa . <allcaps> fsw </allcaps> should typically not access the encoded form of data , outside of the codec routines , except under very limited circumstances with good reason ( such as dynamically updating the total_length field in the base header after encode ) . fixes # <number> fixes # <number> fixes # <number> fixes # <number> fixes # <number> fixes # <number> fixes # <number> fixes # <number> also related to # <number> , # <number> , # <number> , # <number> , # <number> - makes progress toward those goals but more work still needed ."
"fix # <number> , handle alt - success code from <allcaps> tbl api </allcaps> the <allcaps> tbl api </allcaps> may return success codes other than cfe_success , such as cfe_tbl_info_updated . from the standpoint of cf_checktables , these should all be considered successful . fixes # <number>"
"fix # <number> , make dispatch tables and functions consistent standardize the dynamic handler functions to two basic types , one that accepts a <allcaps> pdu </allcaps> ( recv ) and one that does not ( send ) . also create several dispatch table types , one based on file directive code , one based on tx sub state , and one based on rx sub state . change the dispatcher functions to use these common types and create new dispatcher functions where there was not a separate function already ( this makes the pattern consistent ) . make all "" receive "" helper functions accept a pointer to the recieved <allcaps> pdu </allcaps> and actually use that pointer to read the data . this substantially reduces reliance on the global and fixes some cases where a pointer was actually passed into a function , but ignored . this takes a significant step toward removing the global entirely , but does not do so yet . fixes # <number> also related to / makes some progress on # <number> and # <number> but does not fix those yet ."
replace custom strnlen implementation with <allcaps> osal </allcaps> version <allcaps> todo </allcaps> in code references replacing this function with an osal version <url> apps should avoid developing custom implementation of utilities especially generic ones like strnlen . see osal implementation below <url>
"fix # <number> , no packing of <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> structs the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> structures are application - defined . as such , they should not need to depend on compiler - specific extensions like packing . note that the definitions ( mostly ) already included explicit spare bytes where padding was likely to be needed , so the "" packed "" attribute was largely unnecessary here , only serving to make the definitions <allcaps> not </allcaps> compilant with c99 . fixes # <number>"
"file receive transactions are not canceled when a fault is detected per requirement cf2002 . <number> , cf should cancel the transaction when a fault is detected . currently when cf detects a fault it will issue an event message an increment the fault counter . however it will continue to retry or closeout the transaction by issuing <allcaps> ack </allcaps> or <allcaps> nak </allcaps> pdus . some of this behavior appears to be consistent with <allcaps> cfdp </allcaps> class <number> handling . either the requirement needs updating or cf should comply and not attempt to continue the transaction when a fault is detected ."
"suspend request faults not detected per requirement cf2002 . <number> , a received suspend request fault should be detected . cf does not appear to detect this request and there is no associated fault counter for verification ."
playback_dir command does not validate parameters per requirements cf3001 . <number> and cf3001 . <number> cf should validate the channel number and class number parameter values . the playback_dir command does not validate the channel number . invalid channel number are accepted and do not result in an incremented invalid counter or issuing an error event . the class number parameter is also not checked . invalid class numbers are accepted as used during transaction processing .
"<allcaps> tx file </allcaps> command causes system failure when engine is disabled when the <allcaps> cfdp </allcaps> engine is disabled and a <allcaps> tx file </allcaps> command is issued with valid or invalid parameter values , the system crashes ."
"configuration table does not contain all required items per requirement cf4000 . <number> , all specified values should be present in the configuration table . currently , only some of the values are present . values not specified in the requirement are also present in the table . for example , the history queue depth and channel name are specified but are not implemented ."
"housekeeping telemetry message does not contain all required values per requirement cf6000 , all specified values should be contained in the housekeeping packet . currently only some of values are present . values that are not specified in the requirement are also present ."
"not all configuration table parameters are validated per requirement cf7001 . <number> , the following values must be validated in the configuration table : a . outgoing file chunk size b . flight and ground entity ids c . message ids d . <allcaps> cfdp </allcaps> class <number> or <number> currently , cf only validates item a . outgoing file chunk size"
"fix # <number> , replace acknack count union using a union for the ack / nak counts is somewhat dangerous because undefined behavior will occur if accessed improperly . in this case there is no need to have separate representations of the counter , they are both limited to the "" unit8 "" range , so use a uint8 . fixes # <number>"
"simplify function names in unit test the function names in the unit test code are absurdly verbose . some of these unit test function names are <number> + characters in length ( exceeding the clang - format line length limit on their own ! ) . this could be considered coding style , but this is so excessive that it warrants pruning them all back - note that for portability , symbol names should ideally be kept under <number> significant characters . this is per <allcaps> iso std </allcaps> c9899 section <number> . <number> - this says that an implementation is only required to recognize <number> significant chars on an external symbol name , or <number> on a local symbol name . the fact that this goes so far beyond the c99 - specified limits is a good reason to fix it . example : <url> descriptive content on what the test is supposed to do belongs in comments , not within the function name itself ."
"odd union for ack / nak counters union is declared here : <url> this counter is then used in the txs2 / rxs2 state data structures . it should not be necessary to create a union between the <code> and <code> types for two reasons : - <code> is not a known / guaranteed range type , and the rollover point of this value is not guaranteed . <allcaps> fsw </allcaps> discourages use of types which do not have fixed range unless for valid reasons ( e . g . interfacing with library code that uses this type ) - <code> is simply the <number> lsbs of the value , there is no need to unionize in order to be able to count both modulo <number> as well as a longer type in short , declaring a union like this has no benefit at all , but only introduces the possibility of accessing it wrong and getting undefined behavior . only downsides , no upside . recommendation is to replace with a normal <code> counter ."
add contributing guide follow example in <url>
"function pointers should be typedef ' ed cf uses function pointers to implement its state machines , but generally do not use a "" typedef "" for this , they are mostly declared inline . for example : <url> <url> not only is this hard to read , it does not facilitate or encourage any sort of uniformity / consistency in the dynamically - called functions . no doubt this is likely a contributor to the fact that some functions take a pointer to the <allcaps> pdu </allcaps> header and some do not ( see # <number> , # <number> ) . recommendation to fix : - determine a common set of arguments that all "" state handler "" functions are likely to need - from initial inspection , this is probably a pointer to the transaction structure , a pointer to the current <allcaps> pdu </allcaps> header , and a generic / opaque argument for any additional data ( this may or may not be needed / used now , but future proofs the calling conventions in case state - specific data becomes needed ) - declare a global - scope function pointer typedef that conforms to that spec ( accepting the standard set of args ) - convert all "" dispatcher "" code to use that typedef . this will not only make the code more readable ( function pointer syntax in c is particularly messy ) but also encourage more uniformity on the arguments and patterns of state handler functions . it will likely help solve the fact that some functions read their packet data from a global , while others read it from a passed - in pointer ( and mixed within the same processing cycle ! ) ."
"function names differing only by trailing underscore cf has a number of cases where function names differ only in a trailing underscore ( s ) , which is likely to violate some coding standards because they look too similar and can be easily confused . an example offender is <code> , <code> , and <code> . these internal helpers with only trailing underscores should be renamed to something more descriptive to make it clear what the intent of the function really is ( e . g . in the example , the double - underscore version seems to be simply a wrapper to initialize the transaction structure . <repeated> seems to have nothing to do with sending files at all , really - just a generic initialization helper ) ."
"task : evaluate unit test items marked "" <allcaps> todo </allcaps> "" a simple search shows the text "" <allcaps> todo </allcaps> "" currently appears <number> times in the cf source code , almost all of which are in unit test . future work items should be tracked in the issue list , not in the source code . - if the intent is to actually do the work item , then there should be a github issue submitted to implement - if it is determined that the work item is not necessary after all , then remove the <allcaps> todo </allcaps> comment ."
"task : run unit tests through valgrind a number of existing prs address unit testing issues where structure objects are created on the stack , and values inside that object are used without any sort of <code> or equivalent call to bring the object into a known / consistent state . while many have been fixed , there are likely to be many more that remain . the "" valgrind "" memcheck tool can be useful in finding these instances , as it will report if a value is read before it is written . it would be helpful to run the unit tests under valgrind memcheck , and submit issues for the problems identified by this tool ."
"remove use of "" dummy "" in variable names"
run through valgrind <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> - <allcaps> approved </allcaps> - run through valgrind _originally posted by <user> in <url> <user> <user>
"fix # <number> , remove use of bitfields in cf bit field behavior is platform - specific , bits are not specified to be in any particular order . furthermore , unions of bitfields are likely undefined behavior . this removes the bitfields and replaces with normal fields . fixes # <number> <allcaps> note </allcaps> : the cost of doing this is slightly larger data size . i checked the size of the structure before and after to quantify this - the "" flags "" structure grew by <number> bytes on my dev system (x 8 6 - <number> , gcc <number> ) . the net result is that the memory footprint of the cf global grows by <number> bytes ( due to <number> transactions in default config ) . however , this is partially mitigated by a slight reduction in code size , of approximately <number> bytes . it probably runs faster too ( although i did not quantify that - not as easy to test ) but the <number> bytes of extra code were obviously being executed every time these flags were read / written , that adds up ."
"clean up commented - out functions in unit test the unit test contains a number of test sequences that are completely disabled / commented out . for example : <url> these serve no value , they are not testing anything , and only serve to clutter the code ( it is not likely to work if un - commented , as it would be un - commented already if it did work ) . without a clear reason why these exist in the code , recommendation is to remove . version control serves the purpose of preserving historical code , if the concern is to keep a historical record of a previous test case ( it does not need to stay in source file ) ."
"fix # <number> , remove unused header "" cf_types . h "" the types defined in this file were not actually used in <allcaps> fsw </allcaps> . this removes the file and the single inclusion of it . fixes # <number> ."
"unused header file "" cf_types . h "" this file exists under <code> and it defines two enumeration types . although the header itself is included in some files , the two enumerated types do not appear to be used anywhere . recommendation is to remove this file ( dead code ) ."
"fix # <number> , naming conventions and style compliance update identifier names across cf source code to match the <allcaps> cfs </allcaps> naming convention . this convention is documented in the <allcaps> cfe </allcaps> framework , see <url> changes are mostly just search / replace . each file will be done separately , to keep the commit size within reason . but these will not likely be easy to merge / split due to the number of lines affected so they need to be maintained as a series . fixes # <number>"
"fix # <number> , remove unused cf_endofheaderptr function unused functions / dead code should not be included in <allcaps> fsw </allcaps> fixes # <number>"
"unused function : cf_endofheaderptr this function is declared here : <url> and defined here : <url> however , it does not appear to be called from anywhere in <allcaps> fsw </allcaps> - only called from unit test . <allcaps> fsw </allcaps> just uses "" cf_headersize "" and uses that value to advance a byte pointer . recommend removal of dead / unused code ."
"support ( or not ) for "" large "" file mode the <allcaps> cfdp </allcaps> specification ( specifically <allcaps> ccsds </allcaps> <number> - b - <number> , table <number> - <number> ) defines a "" large file flag "" bit . when this bit is set in the <allcaps> pdu </allcaps> header , it means that all file sizes and offsets are <number> bits in size , rather than the historical <number> bits . the cf implementation currently does not have this bit defined - the position it resides is defined as <allcaps> reserved </allcaps> in this code - and all file sizes are defined as a fixed <number> bits in the <allcaps> pdu </allcaps> structures , with no provisions to permit use of <number> bit values here . the cf requirements also do not appear to require large file transfer to be supported . however , even if large file is not supported by this implementation of <allcaps> cfdp </allcaps> , for interoperability reasons cf should at least recognize and check for this flag being set , and reject packets for which it is set . due to the fact that this flag changes the size and location of elements that follow , if it is ignored then one runs the risk of misinterpreting packets and triggering undefined behavior , which could corrupt the filesystem ."
"fix # <number> , consistent application target name the application target should not have an "" app "" suffix . note that none of the other <allcaps> cfs </allcaps> apps have a suffix either , so this makes cf consistent with that . also - this removes use of "" aux_source_directory "" - preference is to list the source files . fixes # <number>"
"consolidate repeated unit test setup code into helper functions in the cf unit tests , the "" preconditions "" for each test case are often very similar , but instead of being set up through some sort of helper function , the code is cut - and - pasted . as a result , code to set up for particular preconditions may be repeated dozens of times in the unit test . this incurs a significant maintenance cost when the <allcaps> fsw </allcaps> data structures need to change in any way ( and they will , the <allcaps> fsw </allcaps> is not set in stone and will need to be maintained ) . a small change to <allcaps> fsw </allcaps> can affect many different unit test cases . this would not be a big problem if the setup was in some sort of helper function , but since it is repeated , each affected case must be individually found and fixed . as a result , the time cost of maintaining the unit test is extremely high . to reduce this cost , common sequences of setup ( such as setting up for an input <allcaps> pdu </allcaps> , an output <allcaps> pdu </allcaps> , etc ) should be consolidated into a helper function , so only this function needs to change if the internal <allcaps> fsw </allcaps> structures change ."
"remove use of random numbers in coverage test the objective of a coverage test is to exercise the various paths in the implementation to ensure they do not trigger any undefined behavior . it is not intended to be a "" fuzz test "" - although fuzz testing can be valuable , that is a separate test , typically done using a standard ( non - stub ) build via the public interface , where arbitrary / random input values are expected to be fully scrubbed and handled correctly - not for internal apis that are expected to have more controlled inputs . currently the cf unit tests use lots of random values , and in particular may pass values that are not even within acceptable range , or do not make sense when paired with other inputs ( e . g . a pointer and size where the size is a random value , exceeding the actual size of the object being pointed to ) . this randomness does not really add value to the coverage test objective , if anything it detracts from it by ( possibly ) creating opportunities for test cases to follow different paths through the code under test with each invocation . the unit tests for cf should be scrubbed to remove use of random values , replace with a single / specific value ( s ) that are guaranteed to follow the intended path through the code under test ."
"fix # <number> , resolve uninitialized pointer warning initialize the variables at the beginning of the function . they will be set again in the loop , but this avoids the compiler warning . fixes # <number>"
"fix # <number> , pass actual size of buffer the test must not pass a buffer size larger than the actual buffer , or else it will read beyond the end . fixes # <number>"
"fix # <number> , initialize local variables whenever the value of a local variable not directly set by the test code , make sure to set it to a value so it is never seen as uninitialized . some of these are simply cases where the value is initialized within a loop . several lines of code triggered warnings that a value may be used uninitialized , because the compiler logic might not recognize that the loop must run at least once . in other cases a local buffer structure should be cleared / memset to <number> before being passed along . fixes # <number>"
"fix # <number> , do not use system assert in tests instead of using the system assert call , use utassert_abort ( ) to report critical conditions where continuation is not possible . note due to limitations of the utassert_abort ( ) function , this uses utassert_failed ( ) to report any runtime information , followed by abort with a static / fixed message . fixes # <number>"
"fix # <number> , do not assert when <allcaps> ndebug </allcaps> is set this effectively ignores cf_assert checks in the code when it is compiled with <allcaps> ndebug </allcaps> . none of these checks should be needed after development . in particular , this removes the use of the non - standard "" unlikely "" compiler extension that was used here . fixes # <number>"
"fix # <number> , do not instantiate globals in header file variables declared in headers should only be "" extern "" , otherwise multiple instances will be defined . this moves the instantiation of variables to the most relevant c file . fixes # <number>"
"fix # <number> , aligned buffer for all test commands where ever a unit test is generating a buffer on the stack to send to a command processing function , this typically needs to be represented as a cfe_sb_buffer_t * pointer , which by definition is supposed to be aligned to the worst - possible case , which may be greater than the alignment requirement of the actual command type . to avoid warnings when converting between types , use a union to ensure the stack object meets the alignment requirements for cfe_sb_buffer_t . furthermore , ensure all buffers instantiated on the stack are cleared ( memset to <number> ) before operating on them or passing them to a cf function . fixes # <number>"
"fix # <number> , use proper cfe_sb_pipeid type correct the pipe id assignment in ut to use the resourceid type . this also uses a fixed / consistent value here , rather than a random value . there is no real need to use a random value . fixes # <number>"
"fix # <number> , init data passed as const input any data structure passed to a function by pointer where that pointer is documented as input - only ( const ) should always be initialized . some compilers will warn about this ( even if the called function does not actively dereference the pointer due to other constraints ) . fixes # <number>"
"fix # <number> , # <number> , instantiate properly sized and aligned buffers for unit unit tests that invoke <allcaps> cf pdu </allcaps> processing functions on either input or output , ensure that the locally instantiated "" dummy "" <allcaps> pdu </allcaps> is both sized sufficiently and aligned correctly . this removes quite a bit of questionable casting between the buffer types , and fixes a number of stack - smashing issues . for completeness , this also clears ( memset to <number> ) all instantiated buffers , before setting values in the test . this ensures that the entire message structure has predictable / repeatable content . fixes # <number> fixes # <number>"
"fix # <number> , correct status checks of cfe_sb_receivebuffer check generically for cfe_success , rather than a single error code , since there is more than one error . this also corrects some minor coding standards items in cf_app . c - logic not really changed but improves readability . fixes # <number>"
"fix # <number> , correct allocation size for <allcaps> cfdp pdu </allcaps> the call to cfe_sb_allocatemessagebuffer needs to take into account the size of the extra sb header , not just the cf_max_pdu_size . fixes # <number>"
"fix # <number> , correct declaration of cf_cfdp_playbackdir_ this helper function was declared with fixed - length string arguments but in practice is used with other buffer lengths . these arguments are changed to ( more conventional ) <code> instead . note that other cases where fixed - length string arguments are used are not changed by this commit , since it appears those are always used with a buffer of that length . fixes # <number>"
"fix # <number> , correct declaration of cf_cfdp_playbackdir_ this helper function was declared with fixed - length string arguments but in practice is used with other buffer lengths . these arguments are changed to ( more conventional ) <code> instead . note that other cases where fixed - length string arguments are used are not changed by this commit , since it appears those are always used with a buffer of that length ."
"should not use cfe_sb_getuserdatalength ( may be deprecated in future ) the sb function <code> ( along with the related user data pointer ) are inherently flawed / unreliable , as they do not ( and cannot ) take into account any padding between the cfe_msg cmd / tlm header and the start of the <allcaps> cfdp pdu </allcaps> in the current version of <allcaps> cfe </allcaps> ( caelum ) . in the cf use case , structs are packed such that there really should not be any padding here , but nonetheless , it would still be better to avoid using this function , and just subtract the offset of the <allcaps> pdu </allcaps> . this code is in a better position to do this , because it knows the definition of the actual packet ( <code> or <code> ) and can compute it correctly with this information . sb does not know this , and therefore cannot compute this correctly ."
"cf_checktables does not handle cfe_tbl_info_updated <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf_checktables does not handle cfe_tbl_info_updated _originally submitted by_ : maldonado , sergio e . ( <allcaps> gsfc </allcaps> - <number> ) [ arctic slope technical services , inc . ] on wed <date> <time> <number> _original description_ : the call to <allcaps> cfe </allcaps> \ _tbl \ _manage in cf \ _checktables does not account for the <allcaps> cfe </allcaps> \ _tbl \ _info \ _updated return status , only <allcaps> cfe </allcaps> \ _success . this results in a cf app run error and app shutdown after a new config table is loaded , validated , and activated ."
"cf "" cf_field . h "" macro cleanup <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf "" cf_field . h "" macro cleanup _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : the "" cf \ _field . h "" defines a macro called "" inc \ _subfield "" . <repeated> thankfully this appears to not be used anywhere . recommend removal . the other macros "" <allcaps> field </allcaps> \ _set \ _val "" and "" <allcaps> field </allcaps> \ _get \ _val "" have a couple recommended cleanups : <number> . they are multi - line / complex macros . recommend to convert to inline functions instead - they only operate on "" uint8 "" base values so this should not be a problem . <number> . they are then aliased to a shorthand "" <allcaps> fsv </allcaps> "" and "" <allcaps> fgv </allcaps> "" , respectively . it appears the author simply did not want to write the long names ? is there a real justification for having the same macro / function under two names ? only the shorthand is actually used in the code . recommend to choose one name and use it ."
"cf "" <allcaps> max </allcaps> "" macro in cf_chunk . c should be an inline function <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf "" <allcaps> max </allcaps> "" macro in cf_chunk . c should be an inline function _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : the "" <allcaps> max </allcaps> "" macro in cf \ _chunk . c is often used as an example in c language textbooks of what \ _not \ _ to do because it evaluates its arguments more than once : <hashtag> define </hashtag> <allcaps> max </allcaps> ( a , b ) ( ( ( a ) > ( b ) ) ? ( a ) : ( b ) ) this appears to be only used in two places in the code , neither of which appear to have side effects , but still recommend converting to an inline function to avoid any future issues . worth noting that the arguments are also somewhat non - trivial so unnecessarily evaluating them twice might be a performance hit , even if its not a behavioral / correctness problem ."
"cf odd use of macro in cf_cfdp_r2_calccrcchunk <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf odd use of macro in cf_cfdp_r2_calccrcchunk _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : this function appears to define a local macro inline just to avoid writing the same text a few times over . example : <hashtag> define </hashtag> <allcaps> rxc </allcaps> t - > state \ _data . r . r2 . rx \ _crc \ _calc \ _bytes if ( ! <allcaps> rxc </allcaps> ) { cf \ _crc \ _start ( & t - > crc ) ; } the "" <allcaps> rxc </allcaps> "" is then used in a number of places later as well . normally one would either declare a local pointer to the value , or just simply a local temp variable to hold the value during computation , updating the global at the end of the routine . the major issue with a macro like this is that it is not scoped to this function . the "" <allcaps> rxc </allcaps> "" string remains defined as a macro after this function , and may unexpectedly replace any other occurrence of this symbol later in the file , should it ever appear ."
"cf should use larger cf_entity_id_t type as default <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf should use larger cf_entity_id_t type as default _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : in the default configuration , the cf \ _entity \ _id \ _t is defined as a uint8 . while this is permissible per the spec , it means none of the "" variable size "" features implemented in the code will ever be used , because the size is always <number> . in particular the "" cf \ _getmemcpysize "" function will only ever be called with a size of <number> , which basically skips the loops in here . although the test do call it with a bigger sizes ( <number> ? ! <repeated> ) it does not seem to actually check the intended purpose of this routine , and the tests only appear to be included when <allcaps> endian </allcaps> ==\ _el ."
"cf should not depend on <allcaps> endian </allcaps> macro ( _el / _eb ) <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf should not depend on <allcaps> endian </allcaps> macro ( _el / _eb ) _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : it is fairly trivial to write code that is endian - agnostic , or to check at runtime whether the processor should run these copy loops from high - to - low or low - to - high addresses . for example , in cf \ _memcpytobe : <hashtag> if </hashtag> <allcaps> endian </allcaps> = = \ _el dst + = ( dst \ _size - <number> ); while ( dst \ _size - - ) * dst - - = * src + + ; <hashtag> elif </hashtag> <allcaps> endian </allcaps> = = \ _eb src + = ( src \ _size - dst \ _size ) ; while ( dst \ _size - - ) * dst + + = * src + + ; <hashtag> else </hashtag> this could be replaced by a simple loop with value shifts rather than making assumptions about memory byte ordering . this would be more correct and portable . the problem with any <hashtag> if def </hashtag> blocks is that the disabled half of the block never gets executed or tested during the integration , until its ported to some other platform that requires that other block . there is also no guarantee or check that the el / eb branch actually do the same thing as prescribed , they can diverge ."
"cf has strange loop construct in cf_cfdp_cycletx <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf has strange loop construct in cf_cfdp_cycletx _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : this is even noted in the comment that "" code reviewers will not like this "" . <repeated> which is certainly true . not sure how this made it through review : goto entry \ _jump ; /* code reviewers will not like this */ while ( ! args . ran \ _one & & c - > qs [ cf \ _q \ _pend ] ) { /* did not find anything on <allcaps> txa </allcaps> to run , so pop one off q \ _pend and try again . * keep going until cf \ _q \ _pend is empty or something is run */ transaction \ _t * t = container \ _of ( c - > qs [ cf \ _q \ _pend ] , transaction \ _t , cl \ _node ) ; cf \ _move \ _transaction ( t , cf \ _q \ _txa ) ; /* args is ok , still { c , <number> } */ entry \ _jump : cf \ _clist \ _traverse ( c - > qs [ cf \ _q \ _txa ] , cf \ _cfdp \ _cycletx \ _ , & args ) ; } using a goto like this is somewhat dangerous as it goes from outside to inside a loop . recommend to restructure the loop to use a more typical "" break "" statement ."
"cf printing of fixed - width integers <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf printing of fixed - width integers _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on wed <date> <time> <number> _original description_ : when printing an integer , cf does not use consistent format specifiers and patterns . for example , in the cf \ _checktables function : <allcaps> cfe </allcaps> \ _evs \ _sendevent ( cf \ _eid \ _err \ _init \ _tbl \ _check \ _rel , <allcaps> cfe </allcaps> \ _evs \ _eventtype \ _error , "" cf : error in <allcaps> cfe </allcaps> \ _tbl \ _releaseaddress ( check ) , returned 0x % 0 8 x"", status ) ; "" status "" is an int32 ( actually should be <allcaps> cfe </allcaps> \ _status \ _t , to be pedantic ) but the format code % 0 8 x accepts an unsigned int value . on some platforms ( e . g . <allcaps> rtems </allcaps> ) the "" int32 "" type is implemented as a "" long "" rather than an "" int "" so the implicit conversion from long - > unsigned int will trigger an error / warning . this is a portability problem . whenever fixed - width integers are passed to system library printf - style calls , the caller needs to be explicitly convert the value to the intended type using a cast , e . g . ( unsigned int ) status all printf - style calls ( events , syslog , etc ) should be updated accordingly ."
"cf tests for "" clist "" functions pointers may be used uninitialized warnings <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf tests for "" clist "" functions pointers may be used uninitialized warnings _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : in a number of the functions for the clist tests , the pointers are initialized only inside a for loop , with a random number of iterations . because of this compiler may generate a warning that these may be used uninitialized , as it cannot guarantee that the loop will have set these . although the code does have protection to ensure the loop count is never <number> , the compiler does not always recognize this . best practice is to initialize these pointers anyway - which will end up being a duplicate init , but it will squash the warning . test functions affected are : test \ _cf \ _clist \ _insertfront \ _whennodelistisgreaterthantwonodesandtheypointtocorrectnodesinsertnode test \ _cf \ _clist \ _insertback \ _whennodelistisgreaterthantwonodesandtheypointtocorrectnodesinsertnode test \ _cf \ _clistremove \ _removingheadsetsecondnodetoheadandupdatelastnode test \ _cf \ _clistremove \ _removinglastpointheadandnexttolasttoeachother test \ _cf \ _clistremove \ _removinganynodehasnodesprevandnextpointtoeachother test \ _cf \ _clist \ _insertafter \ _whenanynodesuccess \ _after \ _isinsertedafter \ _start test \ _cf \ _clist \ _traverse \ _whenlistismanynodeserrorin \ _fn \ _call test \ _cf \ _clist \ _traverse \ _whenlistismanynodessuccess"
"cf test reads beyond end of buffer <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf test reads beyond end of buffer _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : inside the "" test \ _cf \ _strnlen \ _when \ _end \ _isnot \ _null \ _returnlengthofgiven \ _s "" function , this calls "" cf \ _strnlen ( ) "" with a size of <number> , where the actual buffer size is only <number> . recommend to call cf \ _strnlen with a size of <number> , which would be correct ."
"cf tests use uninitialized values in buffers <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf tests use uninitialized values in buffers _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : many tests use a local stack buffer and pass a pointer to that buffer to a cf function . however , the tests often do not initialize the stack buffer , so the code under test may end up reading / using an uninitialized value as a result . all cf tests that create a "" dummy "" object on the stack should always at least memset that object to clear it , before calling the cf function , to achieve predictable / consistent behavior . for an example see test \ _cf \ _cfdp \ _findtransactionbysequencenumber \ _donotfindtransaction , in this case the "" expected \ _ptrs "" are initialized to refer to values inside "" dummy \ _c "" when the dummy \ _c object is not initialized ."
"cf test must not instantiate global variables in a header file <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf test must not instantiate global variables in a header file _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : the ' cf \ _test \ _utils . h ' instantiates ( rather than simply declaring ) a number of variables : lines <number> - <number> int32 result ; uint16 eventid ; line <number> : <allcaps> cfe </allcaps> \ _msg \ _setmsgtime \ _context \ _t context \ _cfe \ _msg \ _setmsgtime ; line <number> : <allcaps> cfe </allcaps> \ _msg \ _getmsgid \ _context \ _t context \ _cfe \ _msg \ _getmsgid ; line <number> <allcaps> cfe </allcaps> \ _evs \ _sendevent \ _context \ _t context \ _cfe \ _evs \ _sendevent ; line <number> : <allcaps> cfe </allcaps> \ _msg \ _getsize \ _context \ _t context \ _cfe \ _msg \ _getsize ; line <number> : type \ _of \ _context \ _cf \ _clist \ _traverse \ _t type \ _of \ _context \ _cf \ _clist \ _traverse ; preferably , tests should be designed to not need global state ( pass in the buffers as needed ) . if this is not possible , then for cases where these are actually accessed from multiple source files , the header should only declare the variable as "" extern "" and instantiate in the most appropriate . c file . note for the case of <allcaps> cfe </allcaps> \ _msg \ _getsize - - this does not appear to be accessed from more than one c file so it likely does not even need to be "" extern "" - it can be just scoped to the one file that uses it . the tests fail to link due to this problem , because of the multiple definitions of these variable names ."
"cf command tests need to use union when instantiating objects of type cfe_sb_buffer_t <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf command tests need to use union when instantiating objects of type cfe_sb_buffer_t _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : this is similar in nature to previous issue described in # <number> but in the "" cf \ _cmd \ _tests . c "" file . in this instance , command buffers are instantiated on the stack , but then cast to <code> . the stack variables are not correctly aligned for this cast to be valid , and many compilers will ( correctly ) trigger a warning / error about this . solution is to use a union to ensure alignment , where code like : cf \ _cmd \ _unionargs \ _t dummy \ _msg ; <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t * arg \ _msg = ( <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t <wink> & dummy \ _msg ; needs to become : union { cf \ _cmd \ _unionargs \ _t msg ; <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t buf ; } dummy ; such that & dummy . buf can serve as the pointer to pass to a function accepting a <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t * ."
"cf test incorrect initialization of "" dummy_channel "" pipe id <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf test incorrect initialization of "" dummy_channel "" pipe id _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : these three tests utilize a "" dummy \ _channel "" structure : <number> . test \ _cf \ _cfdp \ _disableengine \ _closesallactivefilesandnoopenplaybackdirectoriesresetsallqueuecountersdeletespipe <number> . test \ _cf \ _cfdp \ _disableengine \ _closesallactivefilesandanyopenplaybackdirectoriesresetsallqueuecountersdeletespipe <number> . test \ _cf \ _cfdp \ _disableengine \ _closesallactivefilesandallopenplaybackdirectoriesresetsallqueuecountersdeletespipe these are calling <code> and assigning that value to to the <code> member of the structure . however on caelum the pipe ids are actually <number> bits like other ids ( not <number> ) and when using strict id types , this assignment will ( correctly ) fail with a compiler error as being invalid . the test needs to be explicit that it is intentionally using an integer as a made - up pipeid and needs to use the conversion macro do to so ."
"cf test passing uninitialized buffer to input - only parameter <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf test passing uninitialized buffer to input - only parameter _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : the test function test \ _cf \ _cfdp \ _copydatatolv \ _failsbecause \ _len \ _iseqto \ _sizeof \ _dest \ _lv \ _data \ _returns \ _neg1 calls ' cf \ _cfdp \ _copydatatolv ' but passes an uninitialized buffer ( arg \ _data ) to the function when this parameter is documented as input only . the test passes because the value happens to be a "" do not - care "" in this case , so it does not affect the outcome / operation , but its bad practice to pass uninitialized data to an input , and also some compilers will generate a warning about this too . interestingly , the call to ' anybufferof \ _uint8 \ _withsize ' which would have initialized this , is commented out . this may be a simple mistake - uncommenting this line will resolve the error ."
"cf - incorrect cast in test functions <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf - incorrect cast in test functions _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : some cf test funtions incorrectly cast the pdu \ _header \ _t as a different type of header , for example inside ' test \ _cf \ _cfdp \ _recvidle \ _checkof \ _pdu \ _hdr \ _flags \ _type \ _returns \ _false \ _but \ _fdh \ _directive \ _code \ _isnot \ _pdu \ _metadata \ _sendeventand \ _increment \ _recv \ _error ' it does this : ( ( pdu \ _file \ _directive \ _header \ _t <wink> & dummy \ _msg . pdu \ _r \ _msg . ph ) - > directive \ _code = any \ _file \ _directive \ _t \ _except ( <allcaps> pdu </allcaps> \ _metadata ) ; the problem here is that the pdu \ _file \ _directive \ _header \ _t should \ _follow \ _ the standard pdu \ _header \ _t ( ph ) , as it is an extension of this header , it does not replace this header . as a result this is not writing the value in the location expected ."
"some cf tests appear to use the buffer from the previous test <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] some cf tests appear to use the buffer from the previous test _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : the following cf test functions do not instantiate their own message buffer , but rather use the value contained in the global <code> : <number> . test \ _cf \ _cfdp \ _r \ _processfd \ _nocrc \ _cached \ _pos \ _noteqto \ _offset \ _and \ _fret \ _noteqto \ _offset \ _sendeventsetandcounterrorreturn \ _neg1 <number> . test \ _cf \ _cfdp \ _r \ _processfd \ _nocrc \ _fret \ _noteqto \ _bytes \ _received \ _value \ _sendeventsetandcounterrorreturn \ _neg1 <number> . test \ _cf \ _cfdp \ _r \ _processfd \ _nocrc \ _cached \ _pos \ _gets \ _bytes \ _received \ _plus \ _offset \ _and \ _data \ _bytes \ _increasesby \ _bytes \ _received \ _return \ _0 <number> . test \ _cf \ _cfdp \ _r \ _processfd \ _nocrc \ _cached \ _pos \ _noteqto \ _offset \ _but \ _fret \ _iseqto \ _offset \ _cached \ _pos \ _gets \ _bytes \ _received \ _plus \ _offset \ _and \ _data \ _bytes \ _increasesby \ _bytes \ _received \ _return \ _0 this pointer likely points at a stack location from the \ _previous \ _ test function ( whatever last set the msg pointer ) . therefore the memory it points to at the time these tests execute is no longer valid . if anything writes to this memory , it will corrupt the local stack and potentially segfault / crash the test ."
"cf unit tests use incorrect dummy buffers <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf unit tests use incorrect dummy buffers _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : the cf unit tests contain an oft - repeated sequence to initialize a message pointer , for example : /* arrange */ pdu \ _r \ _msg \ _t dummy \ _ph ; int local \ _result ; cf \ _appdata . engine . in . msg = ( <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t <wink> & dummy \ _ph ; this sequence is not valid for two reasons : <number> . because the <code> instance is not aligned appropriately to be cast to a <allcaps> cfe </allcaps> \ _sb \ _buffer \ _t * . this invalid cast generates a warning on many compilers . <number> . because the <code> instance does not contain any additional data beyond the pdu \ _header \ _t value . almost all cf calls will read beyond this header , depending on what the function call is , and some will write too . in the case of writing , this results in stack smashing , and the test may segfault / crash . recommendation is to create a union for the message buffer , which can address the alignment problem and also be used to reserve some extra space for data beyond the header that many calls do access . it looks like this was done at one point in the "" pdu \ _t "" type ( in cfdp . h ) but this was commented out . recommend reinstating this and using it in unit tests as it will be more correct ."
"cf_cfdp_playbackdir_ declared with fixed - length array parameters <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf_cfdp_playbackdir_ declared with fixed - length array parameters _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : typically , functions which accept a zero - terminated string are passed a pointer to the string . however , cf \ _cfdp \ _playbackdir \ _ is declared as accepting a fixed - length array buffer , where the length is specified as cf \ _filename \ _max \ _len . for example : cf \ _cfdp \ _playbackdir \ _ ( playback \ _t *p , const char src \ _filename [ cf \ _filename \ _max \ _len ] , const char dst \ _filename [ cf \ _filename \ _max \ _len ] , cfdp \ _class \ _t cfdp \ _class , uint8 keep , uint8 chan , uint8 priority , cf \ _entity \ _id \ _t dest \ _id ) the problem with declaring it this way is that it implies the full length is required , and should \ _only \ _ be called with a fixed - length array of that size . calling it with a shorter buffer , such as cf \ _filename \ _max \ _path , is invalid , even if the buffer is null terminated . in cf , this function is invoked from cf \ _cfdp \ _processpollingdirectories , with a buffer of size cf \ _filename \ _max \ _path - which is not the same size . this results in an error / warning on compilers that check for this type of thing . recommend to change this to a <code>"
"cf code style and coding standards compliance <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf code style and coding standards compliance _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : there are a number of style aspects of the cf source code that should be cleaned up to better comply with <allcaps> gsfc </allcaps> coding standards : - inconsistent indentation / spaces , brace / comment style , lots of lines with trailing whitespace . - inline variable instantiations - variables and other symbols at global scope not properly named recommendations : - make a one - time pass through "" clang - format "" using same rules as applied to <allcaps> cfe </allcaps> framework to clean up whitespace - all local variables should be declared at function start - all global variables should be qualified with the app prefix ( e . g . <code> ) and ideally all application state should be consolidated into a single top - level global variable ( such that it can be memset to zero if / when application restarts ) ."
"cf c99 compliance and use of packed structures <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf c99 compliance and use of packed structures _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : cf currently uses the ' cf \ _pack ` attribute on many of its structure types , which translates to the gcc "" \ _ \ _attribute \ _ \ _ ( ( packed ) ) "" extension , without any provision for other compilers . this is a nonstandard / compiler - specific extension feature and makes the code <allcaps> not </allcaps> c99 - compliant . attempting to build this code with non - gcc compiler will likely fail as a result . application source code should be limited to standard c99 features , and should not rely on vendor - specific extensions ."
"cf_traversehistory string buffer handling <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf_traversehistory string buffer handling _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : this issue was originally reported by iv & v , creating jira issue to track its disposition and resolution . function cf \ _traversehistory ( ) in cf \ _utils . c in the cf app source code , writes some text to the buffer ' linebuf ' on line <number> . this buffer , however , is overwritten on line <number> before it is written to the file descriptor on line <number> . it is questionable whether this was the desired behavior ."
"unreachable code block in check for cf_send_no_msg <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] unreachable code block in check for cf_send_no_msg _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : this issue was originally reported by iv & v , creating jira issue to track its disposition and resolution . the code within the if block in cf \ _cfdp \ _s . c in the cf app source code , namely lines <number> - <number> will never be executed . the if block checks variable ' status ' if it is cf \ _send \ _no \ _msg on line <number> , this variable originates from the return value of cf \ _cfdp \ _sendfd ( ) , which can only return values cf \ _send \ _success and cf \ _send \ _error ."
"unreachable code block in check for cf_send_error <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] unreachable code block in check for cf_send_error _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : this issue was originally reported by iv & v , creating jira issue to track its disposition and resolution . the code within the <allcaps> else if </allcaps> block in cf \ _cfdp \ _s . c in the cf app source code , namely lines <number> - <number> will never be executed . the <allcaps> else if </allcaps> block checks variable ' sret ' if is is cf \ _send \ _error on line <number> , this value originates from the return value of <allcaps> cfdp </allcaps> \ _s \ _sendeof ( ) which can only return values cf \ _send \ _success and cf \ _send \ _no \ _msg ."
"cf use of static_cast without <allcaps> null </allcaps> checks <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf use of static_cast without <allcaps> null </allcaps> checks _originally submitted by_ : hickey , joseph p . ( <allcaps> gsfc </allcaps> - <number> ) [ <allcaps> vantage systems inc </allcaps> ] on tue <date> <time> <number> _original description_ : this issue was originally reported by iv & v , creating jira issue to track its disposition and resolution . there are <number> instances in the <allcaps> cfs cf </allcaps> app source code in which the <allcaps> pdu </allcaps> hedaer pointer ' ph ' can be a <allcaps> null </allcaps> value from a prior function call , and then it is passed into the function <allcaps> static </allcaps> \ _cast ( ) where it is eventually dereferenced without any checks . these calls to <allcaps> static </allcaps> \ _cast ( ) pass ' ph ' to cf \ _headersize ( ) which dereferences the pointer . cf \ _cfdp . c line <number> cf \ _cfdp . c line <number> cf \ _cfdp . c line <number> cf \ _cfdp . c line <number> cf \ _cfdp \ _r . c line <number> cf \ _cfdp \ _s . c line <number> cf \ _cfdp . c line <number>"
"cf method cf_headersize returns an int , but it should be a size_t <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_headersize returns an int , but it should be a size_t _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on mon <date> <time> <number> _original description_ : the cf \ _headersize function determines the header size of the given pdu \ _header \ _t and returns this value . however , it is using an int type as the return , but it should never be able to be negative and it returns a sizeof value . there is no reason for it to be an int return type ; initial unit tests did show that it can technically return values that are far too large and negative values that will crash the app . it should at a minimum be changed to a size \ _t , but recommend something more like a uint8 as the practicality of it returning something larger than <number> is not likely to happen ."
"cf method cf_cfdp_sendmd cannot get negative to return from cf_cfdp_copydatatolv <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_cfdp_sendmd cannot get negative to return from cf_cfdp_copydatatolv _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on wed <date> <time> <number> _original description_ : two times a ret value from cf \ _cfdp \ _copydatatolv is checked to see if it is negative ( < <number> ) and neither call appears to every be able to return a negative value . even the comments in the code allude to this fact : /* should not happen , since filename lengths are checked above */ _ ( link removed ) _ _ ( link removed ) _ if this cannot happen then there is no need for the code to check for it ? unsure how to proceed with this , but it cannot be tested with unit tests ."
"cf method cf_cfdp_receivemessage will always segfault on line <number> <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_cfdp_receivemessage will always segfault on line <number> _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on thu <date> <time> <number> _original description_ : line <number> : + + cf \ _appdata . hk . channel \ _hk [ t - > chan \ _num ] . counters . recv . dropped ; the only path to get into this line runs through an if ( t ) failure , which means t will always be <allcaps> null </allcaps> at this point . if it is changed to just chan \ _num ( a variable defined within the function ) it will not fail . however , it is not known if that is the intent . there is a previous <code> block that redefines the variable t , from a transaction \ _t * to a transaction \ _t , but its scope is only within that <code> block . thus when we reach line <number> , t is the transaction \ _t * type and will always be <allcaps> null </allcaps> . _ ( link removed ) _"
"cf method cf_assert call branches cannot be tested during unit testing <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_assert call branches cannot be tested during unit testing _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on wed <date> <time> <number> _original description_ : calls to cf \ _assert ( ) cannot be stubbed by unit testing . the reasons : <number> . cf \ _assert uses assert which will kill the running process and subsequently the unit test runner when called by code under test . <number> . cf \ _assert can be stubbed a . the stub cannot stop the return to the code under test . b . the value required to cover the branch will cause a segfault upon return - - as the intent of cf \ _assert is to kill the app before it takes cfs with it . c . there is currently no allowable way to have these branches tested during automated runs . d . it is possible to run ad hoc tests to show the assert occurs , but the unit test will stop and not return to the original test code as the automated tests do ."
"cf cf_cfdp_msgoutget method double checks msg for <allcaps> null </allcaps> <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf cf_cfdp_msgoutget method double checks msg for <allcaps> null </allcaps> _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on mon <date> <time> <number> _original description_ : the function cf \ _cfdp \ _msgoutget in cf \ _cfdp . c checks <code> ( line <number> ) as a top if block ; however , it then checks it again as part of the if block <code> ( starting on line <number> < - yep not a typo line <number> and <number> , funny ) , but there is nothing in between that could change it . it would appear that this check in the second <code> is not required ."
"cf method cf_cfdp_msgoutget returns 0x 1 0 when it should be <allcaps> null </allcaps> <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_cfdp_msgoutget returns 0x 1 0 when it should be <allcaps> null </allcaps> _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on fri <date> <time> <number> _original description_ : cf \ _cfdp \ _msgoutget has a path where it will return a 0x 1 0 if the cf \ _appdata . engine . out . msg is <allcaps> null </allcaps> . there are two if blocks after the msg <allcaps> null </allcaps> verification that if neither come back true the assignment on line <number> of cf \ _cfdp . c : <code> will make ret = = 0x 1 0 , not <allcaps> null </allcaps> . the description of the return statement shows that this is not correct : <code>"
"cf method cf_cfdp_sendnak ph value can never be <allcaps> null </allcaps> <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf method cf_cfdp_sendnak ph value can never be <allcaps> null </allcaps> _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on fri <date> <time> <number> _original description_ : the cf \ _cfdp \ _sendnak function receives it ' s header from <code> but even when cf \ _appdata . engine . out . msg = = <allcaps> null </allcaps> , ph is 0x 1 0 . the check if ph is <allcaps> null </allcaps> ( <code> ) will never be able to fire . the check should be changed to see if cf \ _appdata . engine . out . msg is <allcaps> null </allcaps> instead ; this will ensure that if / when it is <allcaps> null </allcaps> a ph value of 0x 1 0 will not be used . note : this is probably not possible in the field , a "" nack "" should never be able to be returned without msg being populated , but in that case there is no reason to verify ph is not <allcaps> null </allcaps> ."
"review use of ' unlikely ' <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] review use of ' unlikely ' _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on fri <date> <time> <number> _original description_ : in cf \ _assert . h the <allcaps> ndebug </allcaps> <hashtag> if def </hashtag> runs in ' <allcaps> buildtype </allcaps> = release ' mode which replaces cf \ _assert with if ( unlikely ( (x ) ) ) cf \ _handleassert ( \ _ \ _file \ _ \ _ , \ _ \ _line \ _ \ _ ) ; this line is incorrect , because the other path uses assert ( x ) however , assert does nothing when true , the unlikely path causes assert when true . this needs updated with ( ! x) also , there are calls to cf \ _assert using "" short - circuit "" boolean statements , these do not "" short - circuit "" because of the unlikely . unlikely is most commonly defined as : \ _ \ _builtin \ _expect ( ! <repeated> (x ) , <number> )"
"cf - <number> having a problem building unit tests with unlikely ( (x ) ) <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf - <number> having a problem building unit tests with unlikely ( (x ) ) _originally submitted by_ : gibson , alan s . ( <allcaps> gsfc </allcaps> - <number> ) on mon <date> <time> <number> _original description_ : when building with <code> and <code> defined i get a <code> error . determine if we need to keep <code> and if so , what needs done to get it to build with the unit tests ."
"cf doxygen documentation needs updates <section> _imported from_ : [ <allcaps> gsfccfs </allcaps> - <number> ] cf doxygen documentation needs updates _originally submitted by_ : timmons , elizabeth j . ( <allcaps> gsfc </allcaps> - <number> ) on wed <date> <time> <number> _original description_ : the cf doxygen documentation is inaccurate for v3 . <number> ."
"fix # <number> , initial pass through the format tool used by <allcaps> cfe </allcaps> framework this commit adjusts all white space in the cf source code to adhere to the rules applied to the other <allcaps> cfe </allcaps> framework components . this affects many lines , but only changes white space in the source files . no functionality changes are included here . fixes # <number>"
"cf source code needs format / whitespace scrub in the cf - <number> . <number> release candidate , the source code files have many formatting discrepancies from the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> recommendations . before continuing development with other fixes , the source should be sent through the "" clang - format "" tool using the same rules as used for the <allcaps> cfe </allcaps> framework . this will establish a baseline for fixing other issues reported by cf users thus far . since this is likely to affect many lines , it must be done as an isolated commit , before any other code changes are done , as it will not be easy to merge / rebase with this type of change ."
<allcaps> summary </allcaps> : update with various fixes for stakeholders this summary commit includes a number of minor updates / fixes from initial users / stakeholders of the cf - <number> . <number> release candidate . this pr is intended to bring the public github repo into sync with the version of cf that has been deployed by some internal users . it includes a number of minor updates from the original cf - <number> open source release .
"compile errors with latest cfs it appears that the changes made in <url> result in cf no longer compiling due to depreciated code being removed . i am working on altering the cf source to get it to compile with these changes , but wanted to ensure that this was not already in progress ."
"length error for little - endian <url> the line above works for big - endian systems , however not consistent with the line below for little - endian systems . <code> calculated and checked below line w . r . t . big - endian , but the same calculation and check done above w . r . t . endianness of system . running the app in a little - endian system results in length error for check <code> after the line above . <url> <section> cf_app . c <hashtag> l 1023 </hashtag> : previous version : <code> next version : <code>"
"null pointer dereference in cf_callbacks . c <url> after the <code> check , the code continues with the check <code> . if <code> is <code> , accessing <code> causes etiher exception or invalid check . ` ` <code> cf_error ) { cf_appdata . hk . chan [ chan ] . successcounter + + ; queueentryptr = cf_findpbnodebytransnum ( chan , cf_pb_activeq , transinfo . trans . number ) ; if ( queueentryptr ! = <allcaps> null </allcaps> ) { queueentryptr - > status = cf_stat_success ; } } if ( queueentryptr - > preserve = = cf_delete_file ) { os_remove ( & transinfo . md . source_file_name [ <number> ]); } ` ` `"
"failures in sending files from cfs and ground software hi , about <number> months ago , i asked the same question , but i did not get any responses . so i am asking the question again . i have been using cf app ' s version <number> . i understand that <allcaps> nasa </allcaps> is going to release an updated version of cf app with major changes sometime next year , but i need to resolve the following issue soon . whenever i tried to send a file ( size of <number> bytes ) from cfs ( version <number> ) to ground software ( cosmos or yamcs ) , i can send only <number> times . here ' s example with sending a small size file ( it has <number> bytes ) <number> times in a row . at the 4 th try , cfs prints out "" started "" , but no "" success "" message after that . <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _1 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans success <number> . 2 4 _1 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _2 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans success <number> . 2 4 _2 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _3 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans success <number> . 2 4 _3 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _4 , src / cf / test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : cf : playback file cmd error , file is already pending or active <annoyed> cf / test . txt * if you try to send a file bigger than <number> bytes or so , this problem can occur at the second or 3 rd try . * when i try to send a file with more than <number> bytes to ground software , it does not work at all . * i experimented with a file that has <number> bytes . cfs was able to send the file to ground software , but with a file with <number> bytes , it could not . also after sending the <number> byte file , cfs can not send another file regardless of the file size . sending a file from ground software to cfs works fine , but cfs can not finish sending a file from cfs to ground software after that . overall , it is hard to predict what cfs would do when it comes to sending a file to ground software . did anyone have the same issue as me ? thanks , harry kim"
"file size limitation when sending files from cfs and ground software whenever i tried to send a file ( size of <number> bytes ) from cfs ( version <number> ) to ground software ( cosmos or yamcs ) , i can send only <number> times . at the 4 th try , cfs prints out "" started "" , but no "" success "" message after that . <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _2 , src / cf / cf_test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans success <number> . 2 4 _2 , src / cf / cf_test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : outgoing trans started <number> . 2 4 _1 , src / cf / cf_test . txt <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : cf : playback file cmd error , file is already pending or active <annoyed> cf / cf_test . txt if you try to send a file bigger than <number> bytes or so , this problem can occur at the second or 3 rd try . also when i try to send a file with more than <number> bytes to ground software , it does not work at all . i experimented with a file that has <number> bytes and cfs was able to finish the job , but with a file with <number> bytes , it could not finish the job . also after sending the <number> byte file , cfs can not send another file regardless of the file size . sending a file from ground software to cfs works fine , but cfs can not finish sending a file from cfs to ground software after that . overall , it is hard to predict what cfs would do when it comes to sending a file to ground software . did anyone have the same issue as me ?"
"sending a text file from cosmos to cfs has failed due to size mismatch . hello , to test if i can send a simple text file from cosmos to cfs , i used a text file that contains one sentence "" this is a test file . "" i had the following error while testing with cf v6 . <number> although i did not have this error with v6 . <number> . <allcaps> evs </allcaps> port1 <number> / <number> / cf <number> : cfdp_engine : file size mismatch - - <number> / <phone> ( eof / received ) ) . this error was from apps / cf / fsw / src / <allcaps> pri </allcaps> / a <elongated> . c line <number> boolean aaa__is_file_size_valid ( <allcaps> machine </allcaps> * m ) { trans_status * mp = & ( m - > publik ) ; /* useful shorthand */ /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */ if ( mp - > received_file_size > m - > eof . file_size ) { e_msg__ ( "" cfdp_engine : file size mismatch - - % lu / % lu "" "" ( eof / received ) ) \ n "" , m - > eof . file_size , mp - > received_file_size ) ; return ( no ) ; } return ( <allcaps> yes </allcaps> ); } any idea why this error occurred ? thanks in advance ."
"cf is incompatible with recent <allcaps> osal api </allcaps> changes the cf_playback . c file calls the os_opendir , os_readdir , and os_closedir functions , which were removed in favor of the os_directoryopen , os_directoryread , and os_directoryclose functions . this is regarding <allcaps> osal </allcaps> <number> . <number> - bv ( git tag ) . i expect to see other issues as i make fixes to pass unit testing . i will post them here ."
"buffer overflow in machine_list . c <code> assume max_concurrent_transactions = <number> on the first iteration of the loop , m_is_this_slot_in_use [ i ] will access array index <number> , on the second pass array index <number> , and on the third pass the out - of - bounds index <number> , causing a buffer overflow . the following simple fix will short - circuit the while loop , preventing the buffer overflow : <code>"
"<allcaps> cfdp </allcaps> setup between two cfs projects hi , i have setup two cfs projects on a linux vm with cf running on each one with ci and to to test file transfer between the two projects as shown below : cfdp_issue_diagram <img> when i try to transfer file / cf / cf . so from one side to the other ( destination file name / cf / cf_sent . so ) i get the following result ( file sent from ppesim - cfs to pdpmep - fsw ) : <allcaps> cfdp </allcaps> file transfer attempt <img> when i change the code at cf_app . c line <number> from : cf_app_c_ln1030_changed <img> to : cf_app_c_ln1030 <img> the received packet ' s length is shown to be correct but the file still does not make it across . if i attempt to run the unchange cf code between the linux vm ( little endian machine ) and a powerpc ( big endian ) i get a segmentation fault ( most likely because the powerpc is running the cfs project as root which i confirmed by running the receiving end of the vm version as sudo and i got a segmentation fault as well ) . to start , is there anything i am missing with setting up two cf applications this way ? or is there any more information you might need me to provide ? thanks , ashraf ."
sample_lib integration candidate : caelum - rc4 + dev30 <section> pr # <number> - pr # <number> . addresses issue # <number> <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>
"fix # <number> , add newline at end of sample_lib . c <section> - fix # <number> - removes a stray swap file <section> ci , also built w / clang and it resolves the warning <section> no clang warning , no impact for gnu compilers <section> ci and w / clang <number> <section> related to : - nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_lib integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , remove redundant comments pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"sample_lib integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in sample_lib that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , codeql workflow name update <section> - fix # <number> <section> ci <section> just fixes workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_lib integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
update build baseline to cfs - caelum - rc4 <section> update baseline to cfs - caleum - rc4 : v1 . <number> - rc4 update mission rev to use 0 xff for development version <section> - sample_lib checks < <url> - cfs bundle checks < <url> <section> none <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> sample_lib codeql reuse : <url> sample_lib format check : <url> sample_lib static analysis reuse : <url> <section> sample_lib will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check , restricting to main push , remove - - quiet <section> missing duplicate check , overly restrictive to main push : <url> also should remove <code> flag so files processed will be listed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"format check workflow missing duplicate check , restricting to main push , job name does not match <section> missing duplicate check , restricting to main , and named wrong : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove codeql workflow pr branch restriction <section> - fix # <number> removes main branch restriction on pull requests . <section> none <section> runs on all pr ' s <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql analysis workflow restricted to pull request main branch <section> overly restrictive on pull requests here : <url> <section> remove branch restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"sample_lib integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeq <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_lib integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , replace direct ref to argptr with macro the ut_hook_getargvaluebyname macro provided by ut assert is the preferred way to get an argument in the current version . reading the pointer directly is not advised as it depends on how the stub was actually implemented , whereas the macro should produce consistent results . hook will continue to work even if stub implementation changes . using macro is more readable , more future proof , and reflects current best practice for ut assert hooks . # # context part of < <url> # # testing sample_lib tests < <url> cfs bundle tests < <url> # # authors <user>"
"fix # <number> , replace direct ref to argptr with macro <section> the ut_hook_getargvaluebyname macro provided by ut assert is the preferred way to get an argument in the current version . reading the pointer directly is not advised as it depends on how the stub was actually implemented , whereas the macro should produce consistent results . fixes # <number> <section> build and run all unit tests , confirm sample_lib test works <section> hook will continue to work even if stub implementation changes . <section> ubuntu <number> <section> using macro is more readable , more future proof , and reflects current best practice for ut assert hooks . <section> joseph hickey , vantage systems , inc ."
"replace direct ref to ut assert structure with macro <section> a test in sample_lib is directly referencing the <code> member inside the <code> object from the hook call . since the time this was initially implemented , the ut assert framework has improved , and now offers a <code> macro get this value . directly referencing the value is not a good design and is likely to break as ut assert continues to evolve . <section> this should be updated to use the preferred macro , <code> , which is more future - proof and reflects current best practice / recommendations for new tests . <section> <url> <section> ubuntu <number> <section> the specific thing pointed to by <code> depends on how the stub was implemented , and the macro abstracts this detail to give a consistent result to the caller . this is why it is important to use the macro . <section> joseph hickey , vantage systems , inc ."
"sample_lib integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , use "" for local includes fix # <number> , added a contributing guide that links to the main cfs contributing guide . # # testing performed see <url> # # expected behavior changes # # # pr # <number> replace <code> with <code> for local includes # # # pr # <number> adds <code> that links to the main cfs contributing guide . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] # # additional context part of <url> # # third party code * * none # # authors <user> <user>"
"fix # <number> , use quotes for local includes <section> fix # <number> - uses <code> for local includes <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
sample_lib integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , simplify build to use wrappers and interface libs <section> use the wrapper functions now provided by <allcaps> cfe </allcaps> to simplify the build recipe and work with interface libraries fixes # <number> <section> build and run <allcaps> cfe </allcaps> unit tests <section> unit test targets are named a little differently when using the wrapper functions , but transparent if running via ctest . the filename is different if running manually though . <section> ubuntu <number> <section> requires nasa / cfe # <number> and must be merged before nasa / cfe # <number> to avoid breaking ut <section> joseph hickey , vantage systems , inc ."
"update build to work with interface libraries <section> as part of nasa / cfe # <number> and pr nasa / cfe # <number> the directory structure of <allcaps> cfe </allcaps> is changing . the sample_lib build script was directly referencing certain <allcaps> cfe </allcaps> paths that will need an update after this merge . <section> utilize additional wrapper functions and interface libraries to facilitate the path change and avoid issues in the future . <section> see also nasa / cfe # <number> to add wrapper functions that will help with the unit test aspect <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sample_lib , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_lib integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"sample_lib integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue <section> see events for "" github actions test "" at < <url> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on nasa / osal # <number> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , standardize to sample_lib_ namespace prefix <section> see framework - bundle ci : <url> <section> pr # <number> - no behavior changes . all identifiers now use the prefix <code> . changes the name of the init function from sample_libinit to sample_lib_init which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , standardize to sample_lib_ namespace prefix <section> replace inconsistent sample_ and sample_lib prefixes , now all identifiers should start with sample_lib_ . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior , but this also changes the name of the init function from <code> to <code> which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu <number> <section> needs to be merged with nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - installs unit test to target directory . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"close # <number> , add build number and baseline to version file <section> close # <number> <section> build with bundle <section> version report now shows development build number <code> <section> ubuntu on docker on <allcaps> osx </allcaps> <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - install unit test as part of cmake recipe . sample lib test runner now shows up in expected install directory pr # <number> - add development build number and baseline to version reporting <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - coverage data <code> includes the sample_lib code <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - no doxygen warnings should be generated <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle testing on ci see <url> <section> see pr # <number> <section> ci ubuntu : bionic <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add logic to sample_lib for ut <section> fix # <number> in order to make a useful library unit test example , the sample_lib itself needs to perform some more interesting work . in particular it needs at least one external function call on which a code path decision is made , such that the example ut code will have more than one code path to demonstrate . additionally , the library should have some internal "" global "" structure ( like real libs would ) that contains its state , that the ut can also test / query . both objectives can be accomplished with a small string buffer that gets populated with a <code> call during init , and printed with the "" process "" command . other minor updates for correctness : - the entry point ( <code> ) is not really a "" private "" function . it is called from es when starting up . as such it should be considered part of the public <allcaps> api </allcaps> . this moves the prototype to the public <allcaps> api </allcaps> and corrects the comments so it is _not_ labeled as a private function . note this is also relevant for unit tests , because the ut will invoke the entry point too . - corrects a missing newline on the os_printf during startup . this was a long - standing pet peeve . <section> built code using <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> confirmed no build issues , execute <allcaps> cfe </allcaps> and confirm that sample_lib starts up as normal . force a call to the "" sample_function ( ) "" <allcaps> api </allcaps> and confirm that the printf now includes the buffer contents , as such : <code> <section> no changes of substance . added display of the buffer contents to the os_printf . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems . inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sample_lib included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
"fix # <number> , cmd and tlm messages use payload sub - structure fix # <number> , adds payload substructure to all command and telemetry messages <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , moved command validation out of command functions fixes # <number> , validate command before calling the command function instead of after . <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , use <code> instead of <code> in tables / tlm / cmd structs testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> exposed structs will no longer change size based on the definition of <code> . <section> avi weiss <user>"
"fix # <number> , remove side - effects and superfluous initializations testing performed * * github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . code will be more readable , clearer and easier to maintain . <section> avi weiss <user>"
"superfluous assignments , side - effects . type updates etc . _and_ * * end up more readable - a couple of types can be updated ( <code> , <code> ) <section> can be <code> : <url> can be <code> : <url> several functions with multiple cs calls that could be made clearer and more compliant with an additional status / result variable . e . g . : <url> <section> clear up where it makes sense . <section> avi weiss <user>"
"fix # <number> , convert integers holding boolean truth values to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . - intent of these variables is more clear - improved type - safety - eases future maintainability <section> avi weiss <user>"
integers representing boolean truth values should be converted to <code> code snips * * <url> <url> <section> integers representing boolean truth values should be converted <code> - this makes the intent clearer and improves maintainability . <section> avi weiss <user>
command code / enum naming convention inconsistencies code snips * * <code> <code> <code> ( should be <code> ) <code> <code> ( should be <code> ) . <repeated> and a couple more . <section> identifiers should conform to the cfs / cfe naming convention with regard to consistent use of underscores to make mnemonics clear and readable . <section> avi weiss <user>
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from cs , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , table processing fixes first check that table name is null - terminated before comparing any strings , then the normal strcmp ( ) can be safely used . this reverses the direction of the inner check loop , so it is reading entries that have been already validated otherwise , rather than reading entries that have not yet been checked at all . fixes # <number> fixes # <number> <section> build and run cs and all tests <section> un - terminated / long table names will be detected as part of validation . importantly , the code no longer invokes <code> on a string that has not been checked for null termination . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , table processing fixes first check that table name is null - terminated before comparing any strings , then the normal strcmp ( ) can be safely used . this reverses the direction of the inner check loop , so it is reading entries that have been already validated otherwise , rather than reading entries that have not yet been checked at all . <section> build and run cs , run all tests . confirm table validation working as expected . <section> un - terminated / long table names will be detected as part of validation . importantly , the code no longer invokes <code> on a string that has not been checked for null termination . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , simplify cs_attempttablereshare testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . function in simplified and more clear , easing future maintenance . <section> avi weiss <user>"
cs_attempttablereshare can be simplified code snips * * <url> <section> simplify function to improve clarity and ease future maintenance . <section> avi weiss <user>
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . single evaluation instead of twice in these if blocks now . <section> avi weiss <user>"
"combine consecutive , mutually - exclusive status checks code snips * * <url> <url> <section> combine into <code> / <code> constructs - clearer and reduces evaluations . <section> avi weiss <user>"
"fix # <number> , update function key in cs_recomputeappchildtask_test_defentryid testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> tests should pass at <percent> <section> avi weiss <user>"
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in cs that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , cs_recomputeappchildtask wrong function key"
"cs_recomputeappchildtask_test_defentryid sets up handler for wrong function key a clear and concise description of what the bug is . the cs_recomputeappchildtask_test_defentryid sets the handler <code> for the function key <code> when it should use the key <code> . the function under test , <code> does not call <code> , but rather cfe_es_getmoduleinfo , which in turn calls <code> . without the handler set for this function , some properties of <code> in the test may not be set and will cause the test to fail on some systems . <section> steps to reproduce the behavior : <number> . build as usual <number> . navigate to unit - tests of cs in build tree ( for me , <code> ) <number> . run <code> <number> . see test errors : <code> <section> the test should pass . <section> if applicable , add references to the software . <url> <section> - cs release tag draco - rc3 - hardware : x86_64 intel - os : centos <number> - versions : cfe draco - rc3 , <allcaps> osal </allcaps> draco - rc3 , <allcaps> psp </allcaps> draco - rc2 <section> add any other context about the problem here . <section> full name and company / organization if applicable isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"fix # <number> , resolve usersguide issues with doxygen <date> - fix # <number> <section> build doc with ubuntu <number> <section> successful doc build <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove empty else condition and stray <allcaps> todo </allcaps> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove stray terminators - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add library support to application checksum computing function . fixes # <number> <section> ci <section> cs_computeapp ( ) will now scrub libraries in addition to apps when computing the checksum . unit test updates ( all in cs_compute_tests . c ) : - separate nominal tests for checking an app vs . library - modified app id name error test to use invalid app and lib id - getmoduleinfo ( ) error test case ( instead of getappinfo ( ) ) <section> ci"
"fix # <number> # <number> , improve code coverage topics separate by commit but submitted together for <percent> coverage - fix # <number> - fix # <number> <section> ci <section> none , just eliminated redundant conditionals <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_psp_memset and cfe_psp_memcpy use - fix # <number> <section> ci <section> none <section> ci ( unit test and build run workflows cover it ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add requirements rationale - fix # <number> <section> na - requirement rationale update only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cs seg faults when using memory definition table ( cs . defmemorytbl ) <section> on a <number> - bit system , cs will intermittently seg fault when it attempts to checksum an address defined by the memory definition table ( cs . defmemorytbl ) . further , when you dump the results table for a given address defined by the memory definition table - the address is byte swapped . <repeated> which i do not believe to be the expected result and may help in de - bugging this issue . <section> steps to reproduce the behavior : <number> . start cfs <number> . load / validate / activate a memory definition table with a non - zero address <number> . observe seg fault when cs attempts to checksum the entry with non - zero starting address . <section> oracle vm virtualbox os : ubuntu - <number> versions : cfs versions : cfe v7 . <number> - rc4 + dev96 , osal v6 . <number> - rc4 + dev66 , psp v1 . <number> - rc1 + dev14 . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , remove implicit padding <section> fix # <number> updated cs_tbledefs . h to correct for implicit padding that gets added when running on a <number> - bit system . also updated default tables provided ( cs_apptbl . c , cs_eepromtbl . c , cs_memorytbl . c , and cs_tablestbl . c ) to remove positional dependency on table elements . <section> steps taken to test the contribution : <number> . started cfs <number> . enabled tlm <number> . dumped each structure <number> . interpreted binary dump data and confirmed expected padding <section> oracle vm virtualbox os : ubuntu - <number> versions : cfs versions : cfe v7 . <number> - rc4 + dev96 , osal v6 . <number> - rc4 + dev66 , psp v1 . <number> - rc1 + dev14 . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"cs has unreachable code and branches cs has several unreachable lines of code and branch conditions . unreachable code and branch in cs_appmain lines <number> - <number> : cs_createrestorestatesfromcds always returns cfe_success . unreachable branch in cs_utils . c : cs_backgroundeeprom line <number> : currententryintable is always cs_max_num_eeprom_table_entries when cs_findenabledeepromentry returns false . unreachable branches in cs_utils . c : cs_handleroutinetableupdates lines <number> , <number> , <number> : errorcode is always cfe_success due to initialization . imported from <allcaps> gsfccfs </allcaps> - <number>"
"create unit test to confirm cs will work on system with different cpuaddr sizes follow on to "" <allcaps> gsfccfs </allcaps> - <number> , replace <number> bit addresses with cpuaddr "" and this comment specifically : <url> basic concept would be to use "" real "" addresses and confirm cs handles them correctly vs just fake numbers . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage lc lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"fix <number> , incorrect data type in uts fix # <number>"
"fix <number> , missing table support fixed # <number>"
"fix <number> , missing table support fixed # <number>"
cmakelists . txt missing table support the cmakelists . txt file does not build the tables . i have attached a file that works . cmakelists . txt <url>
"incorrect data type in unit tests the cs_housekeepingcmd_test_nominal ( ) function in the cs_app_test . c file sets : cs_appdata . recomputeinprogress = <number> ; cs_appdata . oneshotinprogress = <number> ; the associated member attributes in the hk message are uint8 , but the member attribute in the cs_appdata struct is type boolean . this still compiles and passed with older versions of the <allcaps> osal </allcaps> , but with <allcaps> osal </allcaps> <number> . <number> - bv this compiles but fails unit test . i recommend changing assignments from <number> and <number> to both true , and the equality check from <number> and <number> to <number> . when this change is made , cs passes unit testing ."
"fix # <number> , refactor <code> to remove multiple returns testing performed * * github ci actions all passing successfully ( incl . build + run , unit / coverage tests etc . ) . <section> no change to logic / behavior <section> avi weiss <user>"
refactor multiple return statements in <code> code snips * * <url> <section> single entry / exit point . <section> avi weiss <user>
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
lc <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"fix # <number> , split configuration use the "" generate_config_includefile "" for all headers that can come from alternate source ( e . g . generated or mission - supplied ) . fixes # <number> <section> build and run lc in variety of configurations <section> better organization , more modular <section> debian <section> see nasa / hs # <number> for reference - this is basically the same change applied to lc , making it consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use separate dispatcher for messages isolate the message verification and dispatch from the general message processing . functions in the "" cmds "" file now strictly handle the command content , and do not get involved in general validation . fixes # <number> <section> build and run <allcaps> cfe </allcaps> with lc , sanity check operation <section> no impact , just improves source unit organization <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use payload sub - structure put all cmd / tlm message content in a sub - structure named "" payload "" fixes # <number> <section> build and run <allcaps> cfe </allcaps> with lc , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"split "" platform_cfg "" into external and internal components currently , all configurable items for the app are contained in a single <code> header file . this contains macro definitions that affect both the internal operation of the application ( such as operational limits ) as well as the external interface in <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> and table files . <section> split this header into two components , one that contains only public items ( i . e . those that affect <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> / table definitions ) and one that contains private / internal items that are only used within the local application code and do not affect the interface . <section> mainly a scoping concern , separate files for separate scopes . these files could also be generated in the future , but scope still needs to be consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe_msg_ptr macro and other name updates follow naming conventions for cmd / tlm data structures and use provided macros where appropriate . fixes # <number> <section> build and sanity check lc , run all tests <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use generated stubs separate the global variables into separate stub source units , then re - run the stub generator for all internal apis . the committed result here is the exact output of the tool , unmodified . fixes # <number> <section> build and run lc with all tests <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"use generated stubs lc unit testing currently uses a set of stubs for its internal units that are not generated by the tool <section> use the generated stubs directly whenever possible , as this makes future maintenance easier - when an <allcaps> api </allcaps> changes , just re - run the generator tool to update the stubs . <section> this requires some additional separation of items - global variable stubs should be in a separate compilation unit , as the tool does not generate these . <section> joseph hickey , vantage systems , inc ."
"apps should check / verify msg <allcaps> before </allcaps> calling handler this remains an area with coding pattern discrepancies between <allcaps> cfe </allcaps> core and <allcaps> cfs </allcaps> apps , and also different between <allcaps> cfs </allcaps> apps to some degree as well . the <allcaps> cfe </allcaps> core and sample app ( which is supposed to be the example of "" best practice "" ) do validation on the message before calling the handler . for example : <code> this is different from lc , which does a similar check , but done inside each handler , for example : <url> <section> <allcaps> cfs </allcaps> apps should follow the best practices / patterns set forth in the framework code . ( there are reasons for the pattern being recommended practice ) <section> the pattern recommended in the framework ( checking before calling , as done in sample_app ) has several advantages : <number> . each command handler function has a unique type - safe prototype , that cannot be interchanged with another handler without triggering a type mismatch compiler error . <number> . all typecasting / conversions are confined to one place , and it is nearby to the place that the verification is done - which eases maintainability because check and conversion are all in close proximity and any mismatches will be more visible . <number> . it spreads out the cyclomatic complexity . in the non - recommended pattern , there is a case where the length check fails , and the entire handler is essentially skipped . this adds to the cyclomatic complexity of every handler . in the recommended pattern , those checks are done prior to the invocation of the handler , so the handler can focus solely on its intended purpose - doing the command itself . <section> joseph hickey , vantage systems , inc ."
"all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message should put content in a "" payload "" sub - structure to match the patterns used in <allcaps> cfe </allcaps> and other modules , all <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions should put the content ( non - header ) parts into a separate struct called "" payload "" . <section> separate message content into a sub structure called "" payload "" . <section> this is benefit to tooling that can use the presence of this field to identify where the actual content starts ( e . g . something like <code> would work and be correct , as opposed to checking <code> which may not actually reflect where the content starts due to possible compiler - added padding between them ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , combine consecutive , mutually - exclusive status checks testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . single evaluation instead of twice in this if block now . <section> avi weiss <user>"
"combine consecutive , mutually - exclusive status checks code snips * * <url> <section> combine into an <code> / <code> . <section> avi weiss <user>"
"fix # <number> , add break to default case of switch in lc_verifymsglength testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> purely a style / guidelines issue for consistency and future maintenance . no change to logic ( the <code> case would fall through to the bottom and exit the switch block even without a <code> statement ) . guidelines and cfs consistency dictate that all switch cases ( including <code> ) should be terminated by an unconditional <code> statement . <section> avi weiss <user>"
add break ; for switch default case in lc_verifymsglength ( ) code snips * * <url> <section> all switch cases ( including <code> ) should be terminated by an unconditional <code> statement . <section> avi weiss <user>
"add lc_sample_ap_all_mid to use a cmd w / no parameters to process all watchpoints lc_sample_ap_mid is out - of - family with *most* mids for doing simple processing ( like send_hk , etc ) in that it has parameters . this is fine until you try to send it from something like sch_lab which does not support command parameters . <section> add a simple lc_sample_ap_all_mid w / no parameters ( size <number> ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify table defs remove use of compiler extension flag , simplify definition fixes # <number> <section> build and run all tests <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update global symbol names for consistency this is a simple search and replace of nonconformant symbol names . mapping from the old symbol name to the new symbol name is put behind a deprecated compatibility switch fixes # <number> <section> build and run all unit tests <section> none - just a simple symbol rename <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct use of union type use <allcaps> iso c </allcaps> standard value conversion , do not rely on platform - dependent union access . fixes # <number> <section> build and run all tests , confirm <code> call is still working as expected . <section> none <section> debian <section> assigning ( by value ) between signed and unsigned values is defined by <allcaps> iso c </allcaps> and results are specified . in contrast , writing to one union member and reading from another does not have specified results ( although on a twos complement machine with typical implementation it happens to produce the same result . <repeated> ) <section> joseph hickey , vantage systems , inc ."
"improper use of unions in lc_getsizedwpdata the <code> function is not using the <code> union properly . it is writing to one member and then reading from another , different member of the same union . this is "" type punning "" and may not work in an optimized build . the new version of cppcheck reports this issue . <section> run cppcheck workflow to see issue . no known way to actually produce a failure though , as most platforms will behave as the code expects it to , its just not guaranteed to work . <section> should not read from a different union member than was written to . <section> this writes to <code> but then reads from <code> : <url> additionally , many cases write to <code> but only <code> is read here at the end : <url> <section> n / a <section> this code does work as intended but is not necessarily safe / portable across platforms in its current form , particularly when optimization is enabled . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , nan check use c99 standard math . h macros to check for nan and / or infinity . note that in addition to being platform independent , in an optimized build this will likely invoke a much more efficient <allcaps> cpu </allcaps> instruction to do the test as opposed to the bit - masking that was done before . fixes # <number> <section> build and run all tests <section> no impact to behavior . <section> debian <section> c99 provides standardized macros for these nan / infinity checks in <code> <section> joseph hickey , vantage systems , inc ."
"correct naming convention inconsistencies the following identifiers used in lc do not correctly follow the naming conventions for <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> symbols : - <code> : should be <code> , because the camelcase version is <code> , thus "" perm "" and "" off "" are separate words . - <code> : should be <code> , because its used as an enum and the other labels all start with <code> prefix - <code> : should be <code> , for the same reason as lc_action above . - <code> : should be <code> , same reason - <code> : should be <code> <section> rename these symbols for consistency . <section> these name mismatches become relevant when using generated header files . <section> joseph hickey , vantage systems , inc ."
"remove use of compiler extension in lc table file definitions the <code> is a <allcaps> gnu </allcaps> compiler extension flag and such constructs should be avoided in portable code . <section> remove <section> this flag is only in there to avoid a warning due to the use of <code> - but this object should not be static to begin with , then everything works without the use of special flags . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct buffer overflows in ut the default size of the "" eventtext "" string is <number> , but the unit test had hard coded string sizes of <number> chars , which will overflow the buffer . use "" sizeof "" operator to adjust to the actual size of the destination to correct the issue . fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> no more buffer overflow <section> debian bookworm <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace quotes with angle brackets in / inc fixes # <number> - replace quotes with angle brackets in / inc files . <section> <number> . performed build verification testing <number> . ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
replace quotes with angle brackets in <hashtag> include </hashtag> statements within / inc describe the solution you ' d like quotes should be replaced with angle brackets in <hashtag> include </hashtag> statements that reside in the / inc location . this will ensure that the preprocessor selects the files pre - designated to override the default files contained within the open source cfs build release - as opposed to selecting those located in the same directory . requester info dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , make lc_tbl . h public ci <section> dan knutsen <allcaps> nasa </allcaps> goddard"
make lc_tbl . h public lc_tbl . h defines macros used in table generation and should be made public . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , adds fsw / src to app target - fixes # <number> <section> make install <section> successful cert_testbed build <section> - ubuntu <number> <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"add fsw / src to app target cannot build cert_testbed . <code> is needed to build tables , etc . revise cmakelists . txt <section> build in cert_testbed <section> error - free build <section> if applicable , add references to the software . <section> - ubuntu <number> <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , deletes duplicate header files in src - fixes # <number> <section> lcov make install <section> no impact to behavior <section> ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> justin figueroa , vantage systems"
"delete duplicate headers files in src there are duplicate files "" fsw / src / lc_msg . h "" and "" fsw / src / lc_msgdefs . h "" that need to be removed . <section> view fsw directory <section> single file of each <section> if applicable , add references to the software . <section> - ubuntu <number> <section> bug introduced in <url> <section> justin figueroa , vantage systems"
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> make install lcov <section> no expected behavior change . <section> - ubuntu <number> <section> n / a <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , remove stray refs to old event type constants testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , externalize symbols in lc_test_utils . h make the table objects in this header "" extern "" and instantiate them in the c file instead . this solves the duplicate symbol linker errors . fixes # <number> <section> build and run all tests <section> tests will build , link , and execute successfully <section> ubuntu <number> <section> will submit a separate issue to consider adding <code> to the <allcaps> cfs ci </allcaps> workflows , as it masks this issue in ubuntu <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move variables declared mid - function to the top testing performed * * github ci actions all passing successfully . <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
"fix # <number> , convert lc state macros to enums testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . enums improve type - safety and ease debugging . <section> avi <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in lc that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , removed mentions of <allcaps> asist </allcaps> from documentation fix # <number> , removed all mentions of <allcaps> asist </allcaps> from comments <section> n / a <section> no impact to behavior <section> n / a <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> # <number> , code coverage improvements - fix # <number> - fix # <number> <section> ci <section> none , just eliminates redundant conditions <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_psp_memset use for addresses in <allcaps> ram </allcaps> - fix # <number> <section> ci <section> none , just removes unnecessary <allcaps> api </allcaps> dependence <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> # <number> , add requirements rationale and clarify event message limit requirement - fix # <number> - fix # <number> <section> na - requirements updates only <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , added codeql - build . yml <section> * x] i reviewed the [ contributing guide <url> . * [x ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . describe the contribution a clear and concise description of what the contribution is . added codeql to github workflows fix # <number> testing performed pushed to branch checked codeql ran successfully expected behavior changes no impact to behavior system ( s ) tested on browser additional context depends on <url> to run successfully third party code if included , identify any third party code and provide text file of license contributor info - all information <allcaps> required </allcaps> for consideration of pull request full name and company / organization / center of all contributors ( "" personal "" if individual work ) note <allcaps> cla </allcaps> ' s apply to software contributions ."
add codeql to repository use codeql for continuous integration <section> add codeql workflow <section> none <section> add any other context about the feature request here . <section> haven carlson
"fix # <number> # <number> , resolve static analysis warnings - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve strict cppcheck style warnings - fix # <number> <section> ci <section> nothing , just squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fill in missing requirements rationale there ' s a handful of missing requirements rationale . add . imported from <allcaps> gsfccfs </allcaps> - <number>
"resolve static analysis issues relative to unit tests many actual code issues ( uninitialized variables , buffer overruns , etc ) identified via static analysis in the unit tests . all actual "" bugs "" should be resolved . imported from <allcaps> gsfccfs </allcaps> - <number>"
"revisit coverage , update to <percent> code / branch or write issues where unreachable <section> other coverage failures : failure : coverage cs lines <percent> functions <percent> branches <percent> failure : coverage ds lines <percent> functions <percent> branches <percent> failure : coverage fm lines <percent> functions <percent> branches <percent> failure : coverage hs lines <percent> functions <percent> branches <percent> failure : coverage md lines <percent> functions <percent> branches <percent> failure : coverage sc lines <percent> functions <percent> branches <percent> fix where possible , elsewise issues should document all uncovered lines / branches and disposition ( why it ' s ok as - is ) imported from <allcaps> gsfccfs </allcaps> - <number>"
app requirement issues <number> . lc3002 . <number> & lc3002 . <number> - don ’ t see where event filter is able to be specified in action point or watchpoint definition tables . <number> . ds8000 – <allcaps> ds hk </allcaps> packet <number> . fm4000 – <allcaps> fm hk </allcaps> packet <number> . ds3000 - requirement incomplete imported from <allcaps> gsfccfs </allcaps> - <number>
"lc has duplicate conditions leading to untestable branches lc_validatewdt has duplicate conditions in its switch statement for both datatype and operatorid . this leads to branches that cannot be covered by unit testing . imported from <allcaps> gsfccfs </allcaps> - <number> <allcaps> edit </allcaps> : duplicate conditional in push_rpn_data , since the limit is checked before the push and can never be exceeded <url> setting <code> to true when <code> is true makes the checks redundant <url> <url> <url> <section> remove duplicate condions in lc_validatewdt , replace <code> with simple push , do not set <code> when <code> ."
"lc_tableinit has an if / else if without an else clause and its behavior is undefined so at the end of the lc_tableinit function there is an odd branching < pseudo coded here > if ( lc_cds_enabled ) { if ( lc_cds_restored ) { restored event } else if ( lc_cds_updated ) { default event } / / nothing else here ! <repeated> } else { <allcaps> cds </allcaps> disabled event } so , the question is : can we have a scenario where lc_cds_enabled is <allcaps> true </allcaps> , but both lc_cds_restored and lc_cds_updated are <allcaps> false </allcaps> ? and <allcaps> if so </allcaps> : what is the desired behavior here ? <repeated> this is a situation where the lack of an else clause on an "" else if "" most definitively is cause for concern . if that scenario cannot exist , then it would seem an "" else if "" is not required . unfortunately , due to the convoluted nature of this function and those that it calls , it is would be difficult to determine if the above scenario is a possibility . imported from <allcaps> gsfccfs </allcaps> - <number>"
"lc_sbinit casts every status to unsigned int in every event message lc_sbinit is casting the status in every event send to an unsigned int . the cast appears unnecessary , cfe_evs_sendevent takes a variable length of arguments because it does a formatting of the string with the values sent <allcaps> and </allcaps> the format in the send events is % 0 8 x ( print <number> characters in upper case hex ) . imported from <allcaps> gsfccfs </allcaps> - <number>"
"lc does not support double precision watchpoints lc does not currently support defining a watchpoint <url> for a double precision value . doubles are commonly used in <allcaps> gnc </allcaps> applications , and it would be helpful for lc to support monitoring those telemetry points , rather than requiring the upstream app to provide special telemetry for lc to monitor ."
updated version to <number> . <number>
"<allcaps> csv </allcaps> file import failure when trying to import <allcaps> csv </allcaps> files through the command line and <allcaps> gui </allcaps> , the files fail to fully import . the <allcaps> csv </allcaps> files have been created by c_struct_to_csv_conversion , and the issues seem to stem around structs that have arrays as parameters . # # # command line structs in the <allcaps> csv </allcaps> file will import properly up until the first struct to contain an array . once a struct with an array is reached , a table will be created for it but no data will be imported . any structs in the file listed afterwards will not be imported at all . the following examples are errors that have appeared when attempting to import a <allcaps> csv </allcaps> file through the command line : > <allcaps> ccdd </allcaps> : invalid input : invalid characters in table ' cs_tablenamecmd_t ' for column ' array size ' ; characters consistent with input type ' array index ' expected > <allcaps> ccdd </allcaps> : invalid input : index : <number> , size : <number> the command used : <code> # # # <allcaps> gui </allcaps> when attempting to import through the <allcaps> gui </allcaps> , a table is created for each struct . however , with structs containing arrays , all parameters will be imported up to the array itself and any parameters afterwards fail to import . structs without arrays are imported normally . example data for an import : < img width = "" <number> "" alt = "" image "" src = "" <url> actual import : < img width = "" <number> "" alt = "" image "" src = "" <url>"
"error when exporting <allcaps> xtce </allcaps> files from command line when attempting to export <allcaps> xtce </allcaps> files from the command line , the following error occurs : <code> this is the command that generates the above error : <code> this seems to only occur for <allcaps> xtce </allcaps> format , and not when exporting csv or json files . exporting from the <allcaps> gui </allcaps> presents no issues ."
fixed permissions for * nix systems . many of the . java files and various documents had an executable bit set . this update simply resets the permissions to a more appropriate <number> on * nix systems .
"i mistakenly thought this was an update to a codelab , instead of an update to the actual test framework . android devrel does not own this repository , so i am not sure we should be the ones to update it . អ ្ នកប ្ រហ ែ លជ ា ច ូ លច ិ ត ្ ត ស ្ ប ែ ក ន េ ះ ៖ "" ios <number> by nt "" ។ ទ ា ញយកវ ា ន ៅ ទ ី ន េ ះ ៖ <url> ព ី <user> stores uploading - [ ] - <number> - <number> - <number> - <number> . mp4 … @ <code>"
options click <url>
> <url> > <url> start _originally posted by <user> in <url>
"<allcaps> eds </allcaps> format ? this is more of a question than an issue . the <allcaps> eds </allcaps> export appears to refer to the <allcaps> ccsds </allcaps> standard : < datasheet xmlns = "" <url> . <repeated> > but the format does not comply with the current version of the blue book : <allcaps> ccsds </allcaps> <number> - b - <number> <url> most notably , the <namespace> element is not in that spec , and it does not appear to handle packagefile and package elements . i am new to this , so maybe i am using it wrong . i am trying to use <allcaps> ccdd </allcaps> to import / export <allcaps> eds </allcaps> files compatible with : <url> as embedded in : <url> the cfsat project does not have any datasheet <allcaps> eds </allcaps> documents , just packages , and <allcaps> ccdd </allcaps> does not like those files . is there some other tool that is being used to convert <allcaps> ccdd </allcaps> generated <allcaps> xtce </allcaps> or <allcaps> eds </allcaps> file into a cfs build ?"
"export full db and import to new project fails ( <allcaps> csv </allcaps> and <allcaps> json </allcaps> ) <section> version <img> git commit : f58e1f4b6ce12d2d2 version <date> . added back halt dialog . <repeated> <section> if i export a full database in <allcaps> csv </allcaps> or <allcaps> json </allcaps> , i expect to be able to create a new project , import the file , and restore the database to the same state without errors . <section> using <allcaps> csv </allcaps> files , there are errors that result in the new project being different than the original database . using <allcaps> json </allcaps> files , the import fails completely . <section> <number> . create and open a new project <number> . run through the steps in the tutorial ( except the <allcaps> csv </allcaps> table import ) to create a project with macros and structures and commands <number> . export to <allcaps> csv </allcaps> with ' export full database ' and ' single file ' and select all tables . full settings shown below . export <img> step3 . csv <url> <number> . repeat export with <allcaps> json </allcaps> using same settings . tutorial . json . txt <url> <number> . create and open a new project for <allcaps> csv </allcaps> import . <number> . import the <allcaps> csv </allcaps> file generated in step <number> and check ' importing and entire database ' <number> . the following errors are seen : lowerlimit <img> macro <img> <number> . export the full database with the same settings as above to generate files to compare . files are attached . step3 . csv <url> step8 . csv <url> <number> . create and open a new project for <allcaps> json </allcaps> import . <number> . import the <allcaps> json </allcaps> file generated in step <number> and check ' importing and entire database ' <number> . the following error is seen : json <img> <number> . unable to export new <allcaps> json </allcaps> file because no tables are present . <number> . log file is attached <allcaps> ccdd </allcaps> . log <url>"
"cannot import / export <allcaps> eds </allcaps> / <allcaps> xtce </allcaps> hello , i was able to complete the tutorial ( thank you again for the help with # <number> ) and am now trying to interface <allcaps> ccdd </allcaps> with my cfs repository . i first attempted to import a provided <allcaps> eds </allcaps> from the cfs repo , base_types . xml <url> <code> i see the exact same behavior when trying to import <allcaps> xtce </allcaps> as well . trying to export <allcaps> xtce </allcaps> or <allcaps> eds </allcaps> , i do not get any output to logs at all and no indication of a failure . c_headers and <allcaps> csv </allcaps> both work without issue on import / export . i have not tested <allcaps> json </allcaps> import but export works there as well . i did notice that the default schema locations in the preferences - > other tab for both <allcaps> xtce </allcaps> and <allcaps> eds </allcaps> were <number> links so i updated those to live xsd pages which could be part of my issue if i did incorrectly . for reference i used "" <url> as my <allcaps> xtce </allcaps> xsd . i also noticed this is very similar to the behavior seen in # <number> i would greatly apricate any and all help and am happy to assist in whatever way possible ."
"missing primitive data types still working through the provided tutorial . i got to step <number> . <number> , where you have to select a primitive data type for your new variable ; however i do not have any data types available in my tool . going to manage data types also shows no available data types , primitive or otherwise . do we have to create the primitive data types by hand or should they be automatically populated ? if populated , is that something i might have missed during the install or maybe a misplaced environment variable that could be causing this ? any and all help is greatly appreciated . thank you ."
"invalid <allcaps> sql </allcaps> command ; <allcaps> error </allcaps> : syntax error at or near "" <allcaps> oids </allcaps> "" when opening project hello , i am new to <allcaps> ccdd </allcaps> and postgresql in general . working through the provided tutorial i get the following error attempting to open the project in my terminal . <code> digging into logs i see the following complaints as well <code> i am running on a linux vm and have the following versions : - java : <date> - <allcaps> ccdd </allcaps> : <date> ( <date> ) - postgresql : <number> * * * <allcaps> jdbc </allcaps> : postgresql <date> . jre7 after doing some digging it appears that the use of <allcaps> oids </allcaps> was removed in version <number> of postgresql . i will roll back and try again . apologies if this is already documented somewhere ."
"problems exporting and importing <allcaps> xtce </allcaps> hello , first of all , thank you for creating this tool . we are evaluating <allcaps> ccdd </allcaps> in combination with <allcaps> cosmos </allcaps> and <allcaps> nasa </allcaps> cfs . at this point , we are running <allcaps> ccdd </allcaps> from <code> and also we have set up running <allcaps> ccdd </allcaps> from intellij <allcaps> idea </allcaps> ( we can step through the code with a debugger ) . the commit is f1641de . <section> - we take an <allcaps> xtce </allcaps> example from the <code> ( page <number> ) . - we save the <allcaps> xtce </allcaps> content to an . xtce file . - we open the <allcaps> ccdd </allcaps> program and try to import the file via "" data / import data / <allcaps> xtce </allcaps> "" . - we select the file and click ok . - the dialog disappears and then nothing happens in the user interface , nothing is printed to the message log except : > importing table ( s ) from <code> - we see no tables in the <code> the exporting does not work - after we click ok on the export dialog - the dialog box closes and nothing happens ( file is not created , no log message ) . <section> - the steps are the same as in the description above but the manifestation is different : - we are getting an <allcaps> sql </allcaps> error <code> - the file contents seem to be imported even though we cannot say if the imported data is consistent . - - - we are ready to assist you in the investigation of this issue . - - - the stack trace from <allcaps> idea </allcaps> : <code> screenshot from <number> - <number> - <number> <date> <img> <code>"
"table import failed to complete while importing ccsds . h i was trying to import ccsds . h <url> using the <allcaps> ccdd gui </allcaps> application , but the process failed with the following error and exception : parsing error ; cause ' macro name ' cfe_make_big16 ( n ) ' invalid ' macro values or formulae for a variable ' s array size or bit length are converted to <allcaps> ccdd </allcaps> macros . however , the value of these macros is set to "" <number> "" - the user may edit the <allcaps> csv </allcaps> file to update the macro values ( or edit them in <allcaps> ccdd </allcaps> after importing ) . note that the default macro value can lead to import errors if a macro formula used as an array size evaluates to less than <number> ( array size must be >= <number> ) . java . lang . arrayindexoutofboundsexception : <number> at <allcaps> ccdd </allcaps> . ccddfileiohandler . processcsvconversionfile ( ccddfileiohandler . java : <number> ) at <allcaps> ccdd </allcaps> . ccddfileiohandler . preparejsonorcsvimport ( ccddfileiohandler . java : <number> ) at <allcaps> ccdd </allcaps> . ccddfileiohandler <money> . execute ( ccddfileiohandler . java : <number> ) at <allcaps> ccdd </allcaps> . ccddbackgroundcommand <money> . doinbackground ( ccddbackgroundcommand . java : <number> ) at <allcaps> ccdd </allcaps> . ccddbackgroundcommand <money> . doinbackground ( ccddbackgroundcommand . java : <number> ) at javax . swing . swingworker <money> . call ( swingworker . java : <number> ) at java . util . concurrent . futuretask . run ( futuretask . java : <number> ) at javax . swing . swingworker . run ( swingworker . java : <number> ) at java . util . concurrent . threadpoolexecutor . runworker ( threadpoolexecutor . java : <number> ) at java . util . concurrent . threadpoolexecutor $ worker . run ( threadpoolexecutor . java : <number> ) at java . lang . thread . run ( thread . java : <number> ) here ' s where / how the macro is defined : /* macro to convert <number> / <number> bit types from platform "" endianness "" to big endian */ <hashtag> if def </hashtag> software_big_bit_order <hashtag> define </hashtag> cfe_make_big16 ( n ) ( n ) <hashtag> define </hashtag> cfe_make_big32 ( n ) ( n ) <hashtag> else </hashtag> <hashtag> define </hashtag> cfe_make_big16 ( n ) ( ( ( ( n ) < < <number> ) & 0 xff00 ) | ( ( ( n ) > > <number> ) & 0x0 0 ff ) ) <hashtag> define </hashtag> cfe_make_big32 ( n ) ( ( ( ( n ) < < <number> ) & 0 xff000000 ) | ( ( ( n ) < < <number> ) & 0x0 0 ff0000 ) | ( ( ( n ) > > <number> ) & 0x0 0 0 0 ff00 ) | ( ( ( n ) > > <number> ) & 0x0 0 0 0 0 0 ff ) ) <hashtag> end if </hashtag> i am using <allcaps> ccdd </allcaps> version <date> and ccsds . h <url> from cfs bootes rc2"
"cannot export to <allcaps> xtce </allcaps> in <date> when trying to export project data to <allcaps> xtce </allcaps> using release <date> , i get this exception : <code> the exception occurs when accessing <code> on line <number> : if ( exportentiredatabasecb . isselected ( ) ) { if you search through the code you will notice that that variable is only initialized if the dialog type is <allcaps> csv </allcaps> or <allcaps> json </allcaps> : /* check if exporting in <allcaps> csv </allcaps> or <allcaps> json </allcaps> format */ if ( dialogtype = = managerdialogtype . export_csv || dialogtype = = managerdialogtype . export_json ) { . <repeated> lines omitted . <repeated> exportentiredatabasecb = new jcheckbox ( "" export full database "" ); . <repeated> lines omitted . <repeated> } suggest either always initializing this variable , perhaps in the declaration , but only including it in the panel if it is needed , maybe setting it to "" checked "" always if <allcaps> xtce </allcaps> , or always add it to the panel , but pre - check it and disable it if <allcaps> xtce </allcaps> ."
"getstructuretablesbyreferenceorder not returning tables with type "" structure : cmd args ref "" the <code> function from the <code> class no longer seems to return tables where the type is "" structure : cmd args ref "" . you can see this when trying to run the typesheader . js script against a command that include a command args structure . the data type for the command args structure does not appear in the header file output ."
"feature request : toggle expanding of groups / parents so that you can collapse them the "" expand all "" checkbox does it ' s job well . it would be nice if this acted more like a toggle though and would collapse the groups / parents making it easier to navigate to a particular group / parent . so check "" expand all "" to expand all and uncheck it to collapse all . this is just one way to add in the collapse feature using an existing piece of user interface ."
"question about automatic message id assignments sorry , this is not really a bug and more of a question . if this is not the right avenue to ask this , let me know and i will redirect this question to another place . i am a bit confused by the assign ids functionality . after reading the tutorial , it seems like this functionality gets applied to the "" message id "" field . but in reality , this field seems to be the "" telemetry message name & id "" and "" command name & id "" fields . is there a way to provide a group which represents a <allcaps> cfs </allcaps> application , a message id prefix . say i have <number> groups which represent app1 and app2 . i want the message ids for app1 to start with 0x0 9 a and app2 to start with 0x0 aa . is there a way to set prefixes like that for individual groups ? also what about if i have a structure that i do not want to get an assigned message id ? should i just put a # in that field to avoid the automatic assignment ?"
"enum tables are returned by some ccddscriptdataaccesshandler structure table calls the newly added enum tables seem to be included in a couple of the ccddscriptdataaccesshandler calls that return information for structures , specifically the <code> and <code> functions . i tested this out by doing the following : <number> . updating an existing project to use <allcaps> ccdd </allcaps> v2 . <number> <number> . adding a new <allcaps> enum </allcaps> table <number> . replacing a row in a structure table to use the new enum table i created . <number> . running the typesheader . js script that is included in the <allcaps> ccdd </allcaps> scripts folder . i initially get some errors about variables not existing , but after fixing those errors it includes an empty enum as a structure . this script would need to be updated to handle enum tables , but the <code> seems to be returning an enum table along with the other structure tables ."
"ensure a command argument can be added to a command inserting a new row in a command and selecting a command argument will cause an error when storing the changes . this occurs in the function modifyinternalfieldstable when checking the data type column of the table . however , the command table does not have a data type column , and an exception gets thrown . address this specific issue by checking if the data type column exists before trying get the row data . fixes # <number>"
"unanticipated error when storing a command argument on a command # # # description i am getting an error when i am attempting to store a new row of a command with a command argument . this seems to be caused by the code looking for a data type column when there is no data type column for the command type . i initially saw this on an existing project which i had converted over to <allcaps> ccdd </allcaps> v2 , but i have been able to recreate it on a brand new table that uses <allcaps> ccdd </allcaps> v2 . # # # version of software occurs in <allcaps> ccdd </allcaps> v2 or specifically v2 . <number> . # # # exact error message > an unanticipated error occurred ; cause "" index - <number> out of bounds for length <number> "" # # # stacktrace <code> here is a screenshot of the error : error_screenshot <img> # # # steps to reproduce <number> . create a new table of type "" command "" <number> . create a new table of type "" structure : cmd arg ref "" <number> . edit the "" command "" table you just created . <number> . click ins row to add a new row <number> . enter in a command name <number> . enter in a command code <number> . select your cmd arg ref structure from the dropdown on the command argument column . <number> . click the store button <number> . click the okay button <number> . see error"
"basecontainers are ignored on <allcaps> xtce </allcaps> import # description it seems that <code> ' s are ignored with <allcaps> xtce </allcaps> import . # steps to reproduce <number> . attempt to import the <allcaps> xtce </allcaps> provided below <number> . check the "" parents and children "" tables <details> <summary> <b> example <allcaps> xtce </allcaps> ( click to expand ) </b> </summary> <code> </details> <section> foo should extend bar <section> foo does not extend bar # additional info also , if you export foo and bar after importing them , the basecontainer node is no - longer present in the exported <allcaps> xtce </allcaps>"
"wiki <allcaps> ccdd api </allcaps> page broken : x - frame - options trying to view the wiki <allcaps> ccdd api </allcaps> page <url> results in each iframe showing "" raw . githubusercontent . com refused to connect . "" viewing javascript console shows : <code> investigating , it seems this is a common issue for pages that use iframes <url> . if this previously worked , then i suspect github changed their header setting for x - frame - options at some point . to fix this , you would either need to stop using iframes , or find a way to change that header setting . i do not believe the latter is possible since that ' s configured by the github webserver directly ."
"ensure the bat file will work on windows the bat file previously used colons to separate class path arguments , however windows uses semi - colons to separate class path arguments . change the colons to semi - colons to address this issue since bat files were meant to run on windows . also remove some of the arguments since the paths probably do not make sense for a windows machine . additionally , add a sh file to be used to run <allcaps> ccdd </allcaps> on non - windows machines . this commit addresses issue # <number>"
"bat file does not work on windows the . bat file in the root of the project does not work on windows because windows uses semi - colons and not colons to delimit class path arguments . this file is probably meant as an example , but it was causing issues for a few new users who were running this software on windows ."
"project - > new does not create tables project - > new completes successfully and i can see in psql that the database was created but it has no tables : postgres =# \ c test6 you are now connected to database "" test6 "" as user "" postgres "" . test6 =# \ dt did not find any relations . test6 =# when i try to open this project , i get a bunch of errors : <number> | localhost5432 | test7 | tklaus | <date> <time> . <number> | command | <allcaps> select </allcaps> obj_description ( ' public . __tlm_scheduler ' : : regclass , ' pg_class ' ); - - | - - | - - | - - | - - | - - | - - <number> | localhost5432 | test7 | tklaus | <date> <time> . <number> | fail | cannot obtain comment for table ' __tlm_scheduler ' ; cause ' invalid <allcaps> sql </allcaps> command ; <allcaps> error </allcaps> : relation "" public . __tlm_scheduler "" does not exist position : <number> ' <number> | localhost5432 | test7 | tklaus | <date> <time> . <number> | fail | invalid rate parameter ( s ) : using default values instead ; cause ' missing rate value ' it seems that <allcaps> ccdd </allcaps> never creates the schema ?"
"import <allcaps> xtce </allcaps> data error when importing an <allcaps> xtce </allcaps> file that was generated using the xtce_export . js script , i receive the following <allcaps> ccdd </allcaps> error : > an unanticipated error occurred ; cause ' for input string : "" system path "" ' > > error trace : > ccddfieldhandler : getfieldinformationfromdata ( ) line <number> > ccddfileiohandler : importselectedfileintotable ( ) line <number> > ccddtableeditordialog : performaction ( ) line <number> > ccddclassescomponentvalidatecellactionlistener : actionperformed ( ) line <number> <allcaps> ccdd </allcaps> version <date> ubuntu <number> . <number> <allcaps> lts </allcaps> java <number> postgresql <number> the <allcaps> xtce </allcaps> file used : <code>"
"backup cannot be restored on an empty database running <allcaps> ccdd </allcaps> in a docker environment , and was trying to downgrade to an older version , i made a backup before from a postgresql <number> instance , and when the i could not downgrade , i switched back to <number> , tried to restore the attached file , and it failed . test_dbu . zip <url> user = testuser"
"c_struct_to_csv output cannot be imported in <allcaps> ccdd </allcaps> - <number> i have setup <allcaps> ccdd </allcaps> <number> locally on a system here , and am using the struct parser to parse a cfs project . when i try to import the <allcaps> csv </allcaps> files generated in <allcaps> ccdd </allcaps> it fails consistently . i have attached a sample file and the relevant error log . this is running against a postgresql <number> instance . error . log <url> cfs_cs_tables . txt <url> it complains about ' structure '"
"<allcaps> critical </allcaps> : filesystem directory deletion possible i installed <allcaps> ccdd </allcaps> locally on my linux desktop , in order to add <allcaps> tlm </allcaps> / <allcaps> cmd </allcaps> data . then i tried a export it to a file ( it was either <allcaps> json </allcaps> or <allcaps> csv </allcaps> , i do not remember ) and browsed to my home directory . i forgot to add a filename at the end , and started the operation ( my mistake ) . the app started deleting the contents of my home directory . i will work on some fixes once my machine is back operational ."
images image <img>
"[ bug fix ] assign message ids assigning message ids , no matter the structure , does not assign new starting msgids . no error message is given and is assumed to work , but feature does not work ."
modify json export changed the way that the <allcaps> json </allcaps> import and export works . the user now has more options for configuring how to import / export and can even export an entire database to individual files for easier version control .
modify json export the way that <allcaps> json </allcaps> files are imported and exported has been updated . you can now configure how you want to export files and even export an entire database to individual files for easier version control .
[ feature request ] replace existing script associtation flag it would be helpful if there was a command line flag to replace any imported script association configuration
"enumerations cannot be used as data types in structure tables this may be more of a feature request than a bug . it would be nice to have the ability to make reference to enumerations as data types for entries in structure / command tables in <allcaps> ccdd </allcaps> . currently , an error similar to the following occurs if you do so : <allcaps> ccdd </allcaps> : database error : cannot load table ' md_cmdhandlertblrec_t , md_msgtype_t . msgtypes ' ; cause ' table does not exist ' <allcaps> ccdd </allcaps> : script error : cannot execute script ' / home / scripts / createheader . py ' using table ( s ) ' group : cfs_lib + group : ci_lab + group : cs + group : ds + group : fm + group : hk + group : hs + group : io_lib + group : lc + group : md + group : mm + group : sample_app + group : sc + group : <allcaps> sch </allcaps> + group : to_lab ' ; cause ' table ' md_cmdhandlertblrec_t ' ( or one of its children ) failed to load '"
<allcaps> ccdd </allcaps> v2 does not work with java <number> it ' s not currently mentioned in the documentation that java <number> is required for <allcaps> ccdd </allcaps> v2 and newer versions of java will not work . this should be included somewhere in the readme for the project .
"importing <allcaps> xtce </allcaps> issues i am trying to import command and telemetry into <allcaps> ccdd </allcaps> from an <allcaps> xtce </allcaps> file . i have successfully validated the file using the <allcaps> xtce </allcaps> <number> schema ( <allcaps> xtce </allcaps> <number> <url> : <code> this <allcaps> xtce </allcaps> imports with errors : <code> when running <allcaps> ccdd </allcaps> version version <date> : <number> . when abstract is implemented , it returns : * duplicate table ( s ) * ignored the following duplicate table definitioin ( s ) : cfs_cmd ( file : error . xtce ) if both abstract commands in the file include the token then it brings in testargument1 and testargument2 . <number> . when basemetacommand is implemented without an empty ' argumentassignmentlist ' underneath , it returns : * <allcaps> ccdd </allcaps> error * an unanticipated error occurred ; cause ' null ' error trace : ccddxtcehanler : importcommandtable ( ) line <number> ccddxtcehanler : unbuildspacesystems ( ) line <number> ccddxtcehanler : importfromfile ( ) line <number> ccddfileiohandler : importfile ( ) line <number> ccddfileiohandler : execute ( ) line <number> ccddbackgroundcommand : doinbackground ( ) line <number> ccddbackgroundcommand : doinbackground ( ) line <number> the implementation with an empty ' argumentassignmentlist ' underneath ( while working with the import tool ) appears to fail validation when checked against the <allcaps> xtce </allcaps> <number> schema . <number> . when the dynamicvalue is implemented , it returns : * <allcaps> ccdd </allcaps> error * an unanticipated error occurred ; cause ' null ' error trace : ccddxtcehanler : processargumentreference ( ) line <number> ccddxtcehanler : importcommandtable ( ) line <number> ccddxtcehanler : unbuildspacesystems ( ) line <number> ccddfileiohandler : importfromfile ( ) line <number> ccddfileiohandler : importfile ( ) line <number> ccddfileiohandler : execute ( ) line <number> ccddbackgroundcommand : doinbackground ( ) line <number> ccddbackgroundcommand : doinbackground ( ) line <number>"
"importing <allcaps> xtce </allcaps> causes project fields to duplicate # # description when importing <allcaps> xtce </allcaps> that has the <allcaps> xml </allcaps> ancillarydata fields , the project fields are appended regardless of the import options selected . this occurs for every <allcaps> xtce </allcaps> import , so you can very quickly have a ton of duplicate project fields if you import frequently . # # versions affected v1 . <number> v2 . <number> # # steps to reproduce <number> . import an <allcaps> xtce </allcaps> file ( one is provided below ) <number> . navigate to <code> <number> . the project fields are appended even if they are duplicates . # # example <allcaps> xtce </allcaps> <details> <summary> click to expand </summary> <code> </details>"
"<allcaps> ccdd </allcaps> will not start if directory specified by logpath argument does not exist when attempting to start <allcaps> ccdd </allcaps> with the logpath <allcaps> cli </allcaps> argument specifying a directory that does not exist , <allcaps> ccdd </allcaps> with emit the following error and fail to open : <code> i think more user - friendly behavior would be to create the folder if it does not exist ( or perhaps provide a <allcaps> cli </allcaps> argument that tells it to create if missing , if that behavior is undesirable for some set of users ) and only fail if it cannot create that folder . observed on version <date> ."
"<allcaps> xtce </allcaps> import multiplies ending index of array dimensions by <number> # # summary when importing an <allcaps> xtce </allcaps> into <allcaps> ccdd </allcaps> , the <code> of an <code> is multiplied by <number> . # # details <details> <summary> example <allcaps> xtce </allcaps> ( click to expand ) </summary> <code> </details> after importing this example <allcaps> xtce </allcaps> the ui shows the following : image <img> ( the lengths of a and b should be <number> and <number> respectively ) # # other notes * exporting does not multiply , only the importing does . * the provided example file was created within <allcaps> ccdd </allcaps> and then exported to <allcaps> xtce </allcaps> hope this helps !"
"<allcaps> ccdd </allcaps> returns success when failing to parse import file when attempting to import an invalidly - formatted json file , i am getting the following from <allcaps> ccdd </allcaps> : <code> which is expected , however <allcaps> ccdd </allcaps> exits with a return code of <number> ( success ) , which makes it difficult to detect and respond to the error in scripts ."
"file description in <allcaps> json </allcaps> export causes merge conflicts the <allcaps> json </allcaps> file exported by <allcaps> ccdd </allcaps> contains a <code> field which contains a timestamp , username , and project name . the values of these fields tends to change within a distributed development environment and is flagged as a conflict within this file each time it ' s part of a merge ( requiring the developer to manually resolve the differences in the file description , even though they do not affect the contents / import of this file ) . it would be useful if <allcaps> ccdd </allcaps> provided an option ( accessible via at least the <allcaps> cli </allcaps> ) to omit the file description field from the export ."
"all javadoc files modified in recent commits in some recent commits it appears that every javadoc file has changes because the timestamps within them are updated when they are regenerated . this might not be desirable because it makes it harder to identify real changes in the code while examining a particular commit ( ex , commit 1 7 3 7 7 5 acffc has <number> changes files , almost all of which appear to be javadoc timestamp changes ) . it looks like javadoc supports a <code> argument that would omit that timestamp , which should result in only the files containing actual changes containing diffs , making it easier to find real changes in the commits . i found reference to this option here : <url>"
"<allcaps> ccdd </allcaps> exception while unable to open log file i am unable to launch newer versions of <allcaps> ccdd </allcaps> . the following exception is observed on version <date> : <code> logpath argument is the same that i have been using previously and i have confirmed that the folder exists ( and is populated with log files from prior versions ) , so i do not see any reason that it should be unable to create the log file . the exception is the same whether the <code> argument is provided or not , despite the event log window ( referenced in the stack track ) not being present when the <allcaps> gui </allcaps> is not shown . i had upgraded from version <date> and on that version if the path does not exist it will emit <code> but still launch <allcaps> ccdd </allcaps> ."
"non - existent <allcaps> json </allcaps> fields should be default initialized elements of [ ' table definition ' ][* ] [ ' table data ' ] should not be required to contain all fields not detailed as "" required "" when loading <allcaps> json </allcaps> files . for example , if i provide a definition for ' description ' with : <code> if a description is not provided within the <allcaps> json </allcaps> object for ' table data ' this should be parsed as either <allcaps> null </allcaps> ( indicating it wasn ' t provided ) or default initialized ( which if it did not exist in the data , would most likely be it ' s default value anyway ) ."
"project name case - sensitive in delete subcommand <allcaps> ccdd </allcaps> appears to require an all - lowercase version of the project name when using the delete subcommand , as demonstrated below . <code> it looks like <allcaps> ccdd </allcaps> may be expecting the database name , rather than the project name , which appears to always be lowercase . also , the failed command in the sequence above is not reflected in the log file generated from that session . <repeated> i only see command and success entries ."
"version number in export currently it does not appear that <allcaps> ccdd </allcaps> includes the version from which an export was generated in the resulting file . it would be helpful for debugging changes to the export format ( like the ones which changed the ordering with version <date> ) on multiple users setups ( who are on various versions , depending on when they last pulled ) to be able to tell what version the export was derived from . could just be part of the existing file description elements . thanks"
"changing applicability of field deletes all values when changing the applicability of a table field , all values from all existing instances of that field are cleared . this is undesirable and causes unnecessary loss of data . for example , when a field with scope ' all tables ' is changed to ' roots only ' , the field is ( properly ) no longer displayed on child tables but the field is also cleared for all root tables , requiring the user to re - enter the values for the root tables ( whose field has not changed ) . the same happens in the opposite direction . for example , when a field with scope ' roots only ' is changed to ' all tables ' the field is ( properly ) created for all child tables and is blank ( because it previously did not exist ) , however the field is now also blank for all root tables , even though they did not change . observed on <date> ."
"macro definitions cleared when running script from <allcaps> cli </allcaps> when running a script via the <allcaps> cli </allcaps> , i am observing that all macro definitions are cleared . after importing a project which has macro definitions , i am able to run a script ( through the <allcaps> gui </allcaps> ) and generate the artifact without issue . if i close <allcaps> ccdd </allcaps> and re - run that same script via the <allcaps> cli </allcaps> , when i reopen <allcaps> ccdd </allcaps> the macro definitions are no longer present . the clearing appears to take place before the script is run because scripts which depend on those macros will error . so far this has been observed on <allcaps> osx </allcaps> and linux with v1 . <number> . can provide logs if that ' s helpful ."
"table not removed from group on deletion when deleting a table <allcaps> ccdd </allcaps> does not remove the table from any groups of which it was a member , requiring the user to then open the group editor to manually remove it . failing to do so will cause errors ( due to missing tables ) when attempting to use that group with scripts in the future . it would be helpful for <allcaps> ccdd </allcaps> to automatically remove a deleted table from any groups of which it was a part ."
"imported table not matching json file i am seeing an issue where the table definition imported by <allcaps> ccdd </allcaps> does not match the table definition in the json file being imported . the json file was created via export from <allcaps> ccdd </allcaps> . this issue is reproduceable through both the <allcaps> cli </allcaps> and <allcaps> gui </allcaps> . the log files contains no ' fail ' entries and contains a successful import entry at the end . as far as i have noticed , this is only affecting one table hierarchy ( root and children ) in my project right now . i am not sure what details are relevant here , so here ' s a description of the table hierarchy in question : the root table contains several elements , all of which are child tables ( no base datatypes ) . the child tables each have several elements , all of which have descriptions , several of which have units defined , and several of which have enumerations ( defined as macros ) . i see all of these attributes in the exported json file , however when my coworker imports the file , <allcaps> ccdd </allcaps> has only imported the name , data type , and array size of the elements of the each of the tables ( root and children ) . coincidentally the missing fields are ones that i added recently ( which is how this was discovered ) , but i can not find anything about the contents of these fields that would cause this issue . observed on <allcaps> ccdd </allcaps> <date> on windows , ubuntu , and <allcaps> osx </allcaps> ."
"type - dependent fields not disabled in custom table type for an instance of the default structure table type , when a non - integer type is selected for a row , the bit length and enumeration are disabled ( grayed out ) for that row since they are not meaningful for non - integer types . the same behavior is not observed for custom table types with those same conditions , despite using the same input types for each of those columns . <repeated> they continue to accept user input . i am not sure if this is due to the structure / command table types being treated specially or if this is a bug . for consistency , it seems that these input types should behave the same for both default and user - defined table types ."
"<allcaps> ccdd </allcaps> returns <number> ( success ) with database errors when i attempt to connect to a project which is already open , i ( correctly ) get the following error message : <code> however <allcaps> ccdd </allcaps> still exits with exit code <number> ( success ) . it would be helpful if it returned a non - zero exit code so that calling program can handle the error . this is a similar issue to # <number> where it was noted that <allcaps> ccdd </allcaps> ( used to ) return <number> on a password authentication failure ."
"feature request : add table to group during creation it would be helpful if the new table dialog allowed adding the new table to a group during its creation . currently , the process of creating a grouped table requires creating the table ( via <code> ) and then going back into the data menu to access <code> and add the table to a group . this process could be streamlined by having a dropdown menu on the new table dialog which would default to <code> ( current functionality ) but allow the user to select any existing group to automatically add the table to that group ."
"exception while importing when attempting to import via the <allcaps> cli </allcaps> , i am receiving the following exception : <code> the file being imported is successfully imported from the <allcaps> gui </allcaps> . the following are the last couple lines ( out of the ~ <number> lines ) of the log file : <code> this particular sequence of connecting to the database and then running a command occurs successfully ~ <number> times earlier in the log file . <repeated> i am not sure what causes this one to fail . the command being run is : <code> . observed in <date> on ubuntu ."
"no feedback with password authentication issue when <allcaps> ccdd </allcaps> is started without a user specified , the user is prompted for a database username and password . i am attempting to setup a new <allcaps> ccdd </allcaps> machine and am stuck at this prompt ( ie , username and password are entered , click ' okay ' , and prompt reappears ) . i have checked the log and there ' s only one entry ( echoing the arguments <allcaps> ccdd </allcaps> was started with ) , but nothing relating to a login attempt . when i start <allcaps> ccdd </allcaps> with the <code> argument ( set to the user i would enter into the dialog ) and <code> , i get the following error in the log : <code> i suspect that ' s the same issue i am seeing through the <allcaps> gui </allcaps> , but can not tell without additional feedback from <allcaps> ccdd </allcaps> . it would be very helpful if <allcaps> ccdd </allcaps> could provide more information , preferably through a log message ( and a dialog if using the <allcaps> gui </allcaps> ) . observed with <date> on ubuntu ."
"hotkeys in table editing window not responding each button at the bottom of the table editing window and each dropdown menu along the top has a letter underlined , which implies that they are able to be used by hitting that letter as a hotkey . the only place that this works for me is if i have already opened one of the menus at the top ( at which point if i hit one of the selected letters it will execute that command ) . i am unable to open any of the menus ( ex open file by hitting <code> ) nor use any of the buttons along the bottom ( ex , store by hitting <code> ) via hotkey . as far as i can tell , neither case of the letter works nor is it dependent on what i have selected ( ie i am not editing one of the table fields while attempting to use a hotkey ) . hitting ctrl and the letter also does not activate the hotkey . the users guide does not appear to have any info on these hotkeys ( nothing comes up when i search for hotkey or shortcut ) so i am not sure if this is a bug or if i am misunderstanding how to use the hotkeys . observed on <date> on win10 ."
"unable to add table to group when using the ' manage groups ' dialog , i am able to select a table , select a group , and then click the right arrow to move the table into the group and see that its now listed under that group . when i click the store button no database queries show up in the main window but i am able to exit the dialog without a warning about unsaved changes . the next time i open the dialog the table i added is not longer present in the group , indicating its not being stored in the database correctly ."
inconsistent structure table fields my structure table type has a field ' telemetry message name & id ' with applicability ' roots only ' . when i edit the prototype of some of my structure tables i am finding that some of them do not have that field defined . is this supposed to be possible ? my understanding was that all tables of a particular type would have the same columns and fields . edit : observed on <date>
"unable to delete redundant macro definitions i have ended up in a situation where i have duplicate macro definitions ( through the import process , though i am unsure if it may have been my fault ) . i am unable to delete any of the duplicate definitions because the gui says that they are referenced by a table ( which is true ) . it would be helpful if the import process could merge completely identical macro definitions and either prompt or throw an error for different macro definitions with the same name ( to allow the user to sort it out ) . it would also be helpful for the <allcaps> gui </allcaps> to allow deleting macros ( even if they are referenced by a table ) as long as at least one macro with that name still exists . thanks !"
exception when attempting to import file - filename ? observed following exception when attempting to import a file named <code> : <code> observed in <date> on <allcaps> osx </allcaps> .
"bit length field not disabled for command arguments with float datatype when defining a command with an argument with a floating point type ( float , double ) the bit length field remains active and accepts input . this behavior is different than the structure tables which disable the bit length column for rows which use a float type ."
"all tables pseudo - group not available when no other groups defined when no groups have been defined by the user , the ' filter by group ' option is grayed out in windows which allow a selection of tables ( ie , export menu , scripts menu ) . this prevents prevents usage of the all tables pseudo - group . it would be handy to be able to use that group regardless of if the user has defined other groups ."
"feature request : support for longer project fields currently it appears that there ' s a limit of <number> characters on project field widths ( though that appears to be a limit on the displayed entry field , rather than a limit on the size of the contents ) . it would be useful to be able to use longer fields to store project metadata ( for example , an overview of the mission and / or subsystem ) that does not belong in the current <allcaps> ccdd </allcaps> project description field . the content i am looking to store is ~ <number> characters long , which would probably be unreasonable for the <allcaps> gui </allcaps> to support , but something longer than <number> would be useful ."
"installation / configuration on mac one of the machines i am attempting to use <allcaps> ccdd </allcaps> on is a mac ( running <allcaps> osx </allcaps> <number> . <number> ) . we have cloned the <allcaps> ccdd </allcaps> repo and can start <allcaps> ccdd </allcaps> , and have installed postgres , and <allcaps> ccdd </allcaps> can connect to the database . we are unable to create a <allcaps> ccdd </allcaps> project . when we attempt to create a project through the menu option , several commands are issued , shown below : <code> on other systems there ' s a <allcaps> create database </allcaps> command issued after these two , that we are not observing on the mac . <allcaps> ccdd </allcaps> does not seem to issue the command to actually create the database , but also does not error or provide any feedback as to what ' s happening . if you have any mac users , could they provide more detailed installation / configuration directions ? we first tried the postgres installer ( <url> version <number> ) but kept getting the error : <code> we did manually initialize a database ( using initdb ) and create users , but were unable to get <allcaps> ccdd </allcaps> to create a project . we then tried the postgresapp ( <url> ( postgres versions <number> and <number> ) but are observing no errors and the same behavior from <allcaps> ccdd </allcaps> . i am not sure this is a <allcaps> ccdd </allcaps> issue . a postgres issue , or a mac issue , but will be happy to try to isolate it if you can provide some guidance . any guidance would be appreciated . thanks !"
exception when attempting to import via <allcaps> cli i </allcaps> ' m seeing the following exception when i attempt to import via the <code> subcommand . the user i specify with the <code> option does have write privileges and is able to import without issue through the <allcaps> gui </allcaps> . this was observed on <date> <code>
"feature request : export / import group information it would be useful to have the ability to automatically import / export groups into / out of <allcaps> ccdd </allcaps> . i am attempting to setup <allcaps> ccdd </allcaps> such that when a developer checks out a git branch it loads the correct version of the database into <allcaps> ccdd </allcaps> for them . i am using groups to organize sets of tables by application to make it easy to execute scripts on the set of tables describing that application . its currently possible to import table types , input types , data types , tables , and macros but not groups , which means grouping information is lost through an export / import cycle ."
"feature request : create / delete projects from <allcaps> cli </allcaps> it would be useful to have the ability to create and delete projects from the command line interface to facilitate using <allcaps> ccdd </allcaps> as a background database . i am attempting to setup <allcaps> ccdd </allcaps> such that when a developer checks out a git branch it loads the correct version of the database into <allcaps> ccdd </allcaps> for them . currently , if importing tables into an existing project , there ' s no option which allows for deleting tables not found in the imported file . this means that while tables present in the import can be updated ( using ' replaceexisting ' option ) , any tables present in the project ( but not in the import ) will remain in the project after import . i believe the easiest solution for this workflow ( and in terms of implementation ) is to create a new project each time a branch is checked out , which requires the ability to create a project from the <allcaps> cli </allcaps> and preferably a method of deleting them from the <allcaps> cli </allcaps> ."
"exception when attempting to import i am seeing the following exception when attempting to import a json file : image <img> i am observing this on version <date> . the json file was exported by the same version . happy to provide additional information if needed . thanks edit : to clarify , this appears to only occur when importing into the same project from which it was exported . it does import correctly into a new project ."
"export ' all tables ' group from command line i am attempting to use the command line interface to export all the tables in the database . i have listed the export commands i have attempted below . <code> results in : <code> both <code> and <code> result in : <code> since <code> has a space in it , i presume i am supposed to quote the name , but i have not been able to figure out how to correctly specify the command and am unsure if this is user - error or a bug . thanks !"
cannot load project with <allcaps> ccdd </allcaps> <number> . <number> i have been unable to load either projects created with older versions of <allcaps> ccdd </allcaps> nor new projects created with this version . when i attempt to load a project i see a long list of queries ( ~ <number> repetitive sets of queries ) and after ~ <number> - 2 0 sec am presented with : cannot obtain command information : image <img> acknowledging the dialog yields : image <img> after these dialogs <allcaps> ccdd </allcaps> displays the project name as if i am connects but will not allow creation of new tables and attempting to edit existing tables ( of which i would not expect there to be any ) yields an error due to being unable to load table members . image <img> and the log viewer displays : <code> after this i am forced to restart <allcaps> ccdd </allcaps> because all the project options are disabled .
"feature request : command reference / table column reference input type similar to the variable reference input type , it would be helpful to have a command reference input type for which the valid values are the name of an existing command name from a defined command table . this may be more generally handled by an input type which references a particular column in a particular table type ( both defined by the user ) . it would be helpful if the same autofill that works for the variable reference also worked for this input type to prompt the user with the valid options . this command reference would be useful for the definition of <allcaps> rts </allcaps> / <allcaps> ats </allcaps> tables for which its important that the command the user selects already exists in the database . i do not currently have a specific use case for the general table column reference input type , other than as a more general implementation for the use case of the command reference described above ."
"feature request : variable reference validation as described in the issue describing its implementation , the variable reference field turns yellow if the reference is not valid ( ie , if the referenced variable has changed since the field was selected ) , which is useful for identifying invalid fields in the table the user is editing . as far as i am aware , there is currently no way to tell if a change to a structure results in invalid references without opening each table containing a reference and checking for yellow cells . it would be useful to have a reference validator utility ( maybe accessible from the data menu ) which would check all of the variable reference fields in all tables and inform the user if any need to be updated ."
"feature request : numeric input type in would be useful to have an input type which only accepts numeric characters and a single optional period . this is similar to the current floating point input , however the floating point input will add a trailing decimal even if the user does not enter one . this numeric input type should preserve the user ' s input with respect if the decimal exists or not . the following regex describes the requested validation : <code> while this can be achieved via the input type editor , this seems like a generic - enough type that it may be worth including by default . i am looking to use this input type to store literal values of command arguments and variable field , for use in scripts . while it would be ideal to check the value the user entered is consistent with the specified command argument / variable type , i think that ensuring the user enters a numeric value ( and preserving what they entered ) is sufficient for now ."
"clarify <allcaps> ccdd api </allcaps> import in scripts all of the example python scripts shipped with <allcaps> ccdd </allcaps> include the following line at the top of the file : <code> however , the module imported ( ccddscriptdataaccesshandler ) does not appear to be used in any of the scripts . further , the <code> variable appears to be defined by default no matter if the import is used or not . the script shown here : <code> produces the following output : <code> and demonstrates that the variables ccdd and ccdds are created without the need for the import . could you clarify the purpose of the ccddscriptdataaccesshandler import ? additionally , could you provide details on how to import the ccdd variable into other user - provided modules ? some of my scripts have reached a size where it would be preferable to organize them in multiple files , but i have not been able to figure out what i need to import in the support files to have access to the same ccdd variable that the main script gets automatically . it would be much preferable to be able to use something like <code> and be able to use it in any module called by the script than to have the ccdd variable defined implicitly only in the main script . from my ( limited ) knowledge of jython , the above statement would work if accesshandler was a public variable in the ccddscripthandler class and would provide the same ccdd variable as currently defined ."
"unhandled exception using - shutdown argument in <allcaps> ccdd </allcaps> <number> . <number> , i get the following exception when using the - shutdown command with the - execute command . i have not tested all cases , but the exception does not occur if only the execute command is used ( ie , if i allow the <allcaps> gui </allcaps> to remain open after script execution ) , if only the shutdown command is used , or if the shutdown command is used with export . <code>"
"changes to input type definitions do not take effect until reapplied when designing my own input type field for a column with an enumerated value ( ie a set of ' valid selections ) , i noticed that changing the definition of an input field does not seem to take effect until that custom input type is reapplied to the column . steps to reproduce : <number> . define a custom input datatype with values in the valid selections column via the input types editor , store changes <number> . apply that custom input type to a column via the table type editor , store changes <number> . open a table which uses that column , and confirm that the ' valid selections ' are listed in a dropdown menu and are selectable <number> . back in the input types editor , add additional valid selections , store the changes <number> . open same table again , dropdown with valid selections does not appear , input field appears to just be a standard text input which will accept any value <number> . in table type editor , assign that column to any built - in input type , store changes <number> . then , assign column back to custom input type , store changes <number> . while editing table , once again able to again see and select from the valid selections dropdown"
"method to terminate script execution most of the built - in scripts provide some form of error checking in the main program ( ex : checking structure rows exist ) and use the showerrordialog ( ) method to present the error to the user . the flow control in those scripts appear to have been engineered such that showerrordialog is called just before the script exits , however , for complicated scripts there can be error checking which is not easy to structure in this manner ( ex : error checking values of structure columns which are not accessible until much later in the program ) . it would be useful to have a way to cancel / terminate execution of the current script via the <allcaps> api </allcaps> . at least in jython , i have tried using a return statement and sys . exit to terminate the script with no luck . this give script - writers the ability to decide if an error is recoverable and if not just inform the user and terminate the script , rather than having the user sit through and acknowledge any additional errors during the remaining execution ."
"unhandled exception when opening script > execute window when attempting to open script > execute i get the following exception printed to the command line and the execute scripts window appears but only contains the text <code> with none of the normal selection boxes or buttons . script > manage window opens correctly and scripts can be executed from there , so not urgent . please let me know if there ' s additional information i can provide . this was observed on version <date> . <code>"
"feature request : methods to query global structure tables according to the documentation , the getstructuretablenumrows ( ) scripting method is intended to return the number of rows in the structure table . in the built - in scripts this method is used to get the structure rows for the tables passed as arguments to the current script execution . it might be helpful to clarify this in the documentation ( ie , that this methods does not returns the global number of structure rows , just the ones passed to the script ) . it would be helpful to have script methods which are capable of querying the whole database , rather than just the elements passed to the script . this could be achieved either via specialized methods or optional arguments to existing methods . i am prototyping generating cfs hk tables via a custom table type which includes the name / path of the variables ( in the <allcaps> ccdd </allcaps> database ) which should be included in a particular hk - generated packet . using the variable name to retrieve the message id and byte offset via scripts requires access to the rest of the database , which can currently only be achieved by calling the script on every available structure table . global database query methods ( and input validations such as issue # <number> ) enable workflows in which tables refer to other elements in the database ( such as for limit checker and hk tables ) ."
"identifiers in invalid column import error message currently if a file being imported contains an invalid array size specification ( specifically invalid characters , in my case ) an error is issued saying so , however that error message does not contain the location the invalid definition was encountered , making it difficult to track down . it would be useful if the error message contained some identifier ( line number , table name , field name , etc ) to more quickly locate the problem in the file being imported . thanks !"
"feature request : input datatype for existing structure rows it would be useful to have a input data type which validated that the input is a structure row which already exists in the database . the use case is for defining data products which depend on existing definitions ( or properties of those definitions ) in the database , such as : - defining <allcaps> ccdd </allcaps> table types which describe <allcaps> cfs </allcaps> limit checker tables . limit checker tables define the value to be checked in terms of the apid and packet offset , both of which are already available from <allcaps> ccdd </allcaps> given a valid structure row . - defining <allcaps> ccdd </allcaps> table types which describe <allcaps> cfs hk </allcaps> tables . hk tables define the value to place in a new packet by apid and packet offset , similar to above . having the entry field validate the entry is an existing row in the database greatly simplifies the error checking necessary in the scripts to generate these products . as a user - convenience feature , it would also be great if the input field could prompt / autocomplete a user typing the name / path of the mnemonic to make it easier to enter this data . thanks for the consideration ."
"feature request : enumerated value input type it would be useful to have an enumerated input type to constrain user inputs to one of a set of predefined values , preferably via a drop - down menu of options . this would be distinct from the current <code> input type , which is simply validated as an alphanumeric field . i am looking at tracking <allcaps> cfs </allcaps> event messages via a custom table type and need to track the event type ( which is either ' debug ' , ' info ' , ' error ' , or ' critical ' ) . it would be useful to have an input type which could validate the input is one of the items in a list of acceptable values . otherwise , an unacceptable input cannot be caught until a script which depends on that value runs and throw an error . another potential use case may be in defining <allcaps> cfs </allcaps> limit tracker watchpoints where the user must select one of a pre - defined list of operations to be performed ( lessthan , equalto , greaterthan , etc ) by the watchpoint ."
"msgids applied to non - root tables when using the message ids > assign ids menu to apply message ids to structure tables , message ids are applied to all structure tables , not just root tables . this results in child tables being assigned message ids . structure tables ( by default ) have two fields , <code> and <code> . these fields have applicability set to <code> . this setting seems to control whether the data > edit tables editor displays the message id field for editing . it seems like the assign ids menu should respect the root only setting of that field ."
"fields with boolean type not displayed as check box when adding custom columns to the default structure table , the user ' s guide indicates that a check box will be used to represent boolean fields when editing tables . in practice a text field is present to the user which only accepts <code> or <code> . this works , but does not appear to be consistent with the user guide and results in having to handle an additional option ( true , false , or empty ) in script logic . in built - in tables such as the table type editor , the unique and required fields do correctly display as check boxes , so perhaps just user - defined fields are not being formatted ?"
"execute command output path subcommand the scriptoutpath command is provided to control the placement of files created by scripts via the command line interface ( <allcaps> cli </allcaps> ) , which works as intended , however that command also changes the output path for users interacting with <allcaps> ccdd </allcaps> via the <allcaps> gui </allcaps> ( which may not be desirable ) . to support workflows in which <allcaps> ccdd </allcaps> is used both as an editing / development interface ( via the <allcaps> gui </allcaps> ) and as a data producer ( via the <allcaps> cli </allcaps> ) , it would be desirable to be able to set the output of scripts for a particular session , which would not affect later <allcaps> gui </allcaps> users . currently , if scripts are called in between <allcaps> gui </allcaps> sessions the output path may have unexpectedly ( to the <allcaps> gui </allcaps> user ) changed . additionally , the <allcaps> cli </allcaps> supports multiple execute commands , which effectively means that all outputs from a given session must be placed in a single output directory . this may be undesirable if several scripts producing different output are called during a single <allcaps> ccdd </allcaps> command . it would be useful if the execute command took ( an optional ) subcommand allowing the specification of a path which overrides the <allcaps> ccdd </allcaps> global script output path set by setoutpath for a particular execute command . this allows organization of the outputs of multiple script calls and allows <allcaps> cli </allcaps> users to execute <allcaps> ccdd </allcaps> scripts without modifying the state of <allcaps> ccdd </allcaps> , which may be confusing for <allcaps> gui </allcaps> users . this would maintain the current functionality of scriptoutpath command but also support the points above . this also mirrors the functionality of the filepath subcommand of the export command . thanks"
"export does not export macro definitions the current export format ( at least for <allcaps> csv </allcaps> and <allcaps> json </allcaps> ) does not contain a definition of the project macros . the dialog contains an option to substitute macro values for macro names , however this does not preserve the definition of the macro . i am using macros to define and ensure that enumeration values stay in sync . for example , if two packets telemeter the same type of enumeration , its desirable to have a single definition for that enumeration to eliminate the possibility of them accidentally being defined differently . this is achievable via macros ( ie , define a macro containing the definition of the enumeration and then use the macro in the enumeration field of both table rows ) , however the value of the enumeration is not exported unless the substitute option has been checked , in which case the single definition of both enumerations is lost when imported . i think it would be useful to export the definition of the macro if the substitute option is not selected ( so that the user has access to the macro values ) and to import macro definitions if found in the file being imported ."
"methods of inspecting script values at runtime it would be very useful to be able to inspect values within <allcaps> ccdd </allcaps> scripts at runtime , which i do not believe is currently possible . this capability could be utilized for script development / debugging and could also be used for archiving the status / state / results of scripts beyond the success / fail that is currently logged . exposing a method in the scripting <allcaps> api </allcaps> to allow writing a message to the <allcaps> ccdd </allcaps> log file may be one way to provide this capability . its currently possible to write short strings to the showerrordialog / showwarningdialog methods , but dismissing those dialogs requires user interaction and does not appear to result in a log entry . thanks"
"longer stack trace for errors in scripts the error handling for the scripting interface only logs the top of the stack trace , which complicates script debugging . the following are an examples of error messages printed to the log upon encountering an error in a script : <code> <code> in both cases the error is reported as having occurred on line <number> , which ( for this script ) is the top - level parent function in the call stack in which the error occurred . in my case , this is a large helper function which implements the entire algorithm and these errors occurred in two different child functions , which can be complicated to track down . it would be very helpful to log longer / deeper stack traces . thanks"
"execute interprets absolute path as association name for robustness against where the user runs and / or places <allcaps> ccdd </allcaps> on their machine , i ' d like to use absolute paths . when attempting to specify an absolute path to the script file , as shown in the command below : <code> i get the error : <code> at the command line . it appears that it may be parsing the colon in the path as the separator in the script definition . using a relative path to the script ( which does not include a colon ) works as intended ."
"<allcaps> ccdd </allcaps> hangs when running script via - execute the command shown below is intended to run a script on a group to generate outputs . the documentation states that the - execute argument should result in a headless run of the script , however the <allcaps> ccdd </allcaps> gui window pops up unexpectedly . many queries are run and then the output freezes . after several minutes i ended up terminating <allcaps> ccdd </allcaps> due to apparent inactivity . command : <code> running the same database / same user / same script / same group / same paths via the <allcaps> gui </allcaps> completes successfully in several seconds . i also observe this behavior when attempting to call one of the standard scripts , itosrecfile . js . not sure if its relevant / equatable , but starting the gui , running the script , and closing the gui resulted in <number> entries in the log file whereas running the script via the - execute argument results in ~ <number> entries in the log file before it stops updating and i terminate <allcaps> ccdd </allcaps> . i have not closely examined the logs , but that seems to indicate that its doing vastly different things in each case . not sure if its relevant , but when letting the script run until the log stops updating ( after several minutes ) , i notice that the last two entries are always : <code> this was demonstrated on : os : win10 <allcaps> ccdd </allcaps> : <date> <date> java : <number> . 0 _171 ( <number> - bit ) postgresql : <number> <allcaps> jdbc </allcaps> : postgresql <date> . jre7 ( type <number> ) jetty <date> . v20160721"
"java exception when unlocking database when opening <allcaps> ccdd </allcaps> , receive message : <code> in response , i go to the menu and select project > unlock and click the ' unlock ' button . gui does not respond and terminal shows the error message below . restarting <allcaps> ccdd </allcaps> / repeating the process yields the same message . below is an image of the unlock dialog . according to the user guide , the dialog is supposed to list projects which may be unlocked , but mine is not . image <img> this may explain why the dialog validation is failing . system info : os : win10 java : java <number> update <number> ( <number> bit ) postgresql : postgresql <number> <code>"
"possible command import bug ? i am currently integrating a c2 system called <allcaps> cosmos </allcaps> with <allcaps> ccdd </allcaps> for use with cubesats . the telemetry configuration file integration has gone smoothly and is now automated . however , when importing commands into <allcaps> ccdd </allcaps> using <allcaps> csv </allcaps> format i have noticed the arg <number> minimum and arg <number> maximum fields , when given column values , seem to stymie importation . it ' s almost certainly isolated to these two fields as i added a custom "" endianness "" field at the end using the table type editor and this was rendered fine into <allcaps> ccdd </allcaps> whenever i deleted any values for arg <number> minimum and arg <number> maximum . any addition of these values causes the entire table to fail to load . i was wondering if you are aware of any outstanding bug . i cannot attach any example files i have been working with as they may contain classified information , but you can e - mail me at <email> if you wish to speak further about this issue . your name did not have an associated e - mail listed with it in the internal global address book ."
"git - based <allcaps> ccdd </allcaps> workflow - request for import / export commands i am looking at using <allcaps> ccdd </allcaps> for a project which utilizes git as its code ' s cm system . the goal is to use <allcaps> ccdd </allcaps> to generate the interface artifacts ( header files , ground system definitions , icds , etc ) using the <allcaps> ccdd </allcaps> scripting interfaces . by git ' s nature , there may be multiple branches of the code which have different versions of an interface and it may be necessary to generate the interface artifacts for a particular branch . can you suggest how to best utilize <allcaps> ccdd </allcaps> in this scenario ? my understanding is that the import / export when using the <allcaps> json </allcaps> and <allcaps> csv </allcaps> formats is lossless ( ie , its an exact definition of the database ) . my thought is to export the <allcaps> ccdd </allcaps> database and commit that to the git branch it describes . when a developer needs to make an interface change to a particular branch they ' d import the database from that branch into <allcaps> ccdd </allcaps> , make the change , generate their artifacts , and then export the database and commit the new version of the database to their branch . i believe this workflow offers the best of both worlds . <repeated> managing the interface definition with the code that it represents while utilizing <allcaps> ccdd </allcaps> as the editing interface ( to maintain database consistency ) and leveraging it ' s scripting interfaces to generate the required artifacts . i do not currently see a way to automate importing and exporting databases . <repeated> this workflow could be almost entirely automated if the <allcaps> ccdd </allcaps> executable supported an ' import ' and ' export ' command which provided similar functionality to the respective dialogs . is this something that is on the development roadmap ? thanks"
"isstructureshared returns true for structure with only one parent i am not sure if i am misunderstanding the documentation for the isstructureshared method , or if there is a bug with the implementation . the documentation for isstructureshared states : "" determine if the specified structure is referenced by more than one parent structure "" . in my database , i have a structure ' prihdr ' which is a field in ' tlmhdr ' which is a field in multiple other structures . prihdr only has one parent ( tlmhdr ) whereas tlmhdr has many parents , however isstructureshared returns true for both . i also have a structure ' testdata ' which is a field in ' testpkt ' . testpkt has no parents and testdata only has testpkt as a parent . as expected , isstructureshared returns false for both . the current implementation appears to determine if a structure has multiple root tables as ancestors , not multiple parents ( based on the terminology defined in section <number> . <number> ) . it would be helpful to clarify the documentation so that its consistent with the definitions earlier in the guide . my application is that i am attempting to generate a database for <allcaps> cosmos </allcaps> ( <url> for data structures which are utilized within multiple packets , they recommend defining the structure once in a separate file and using render ( <url> to include in where needed in the packet definition . only in the case that a structure has multiple parents is it necessary to create a new file , which i was attempting to use isstructureshared to detect . in this application , its undesirable to detect if a structure has multiple ancestors because it only needs to be placed in a separate file if it has multiple parents . if isstructureshared is not the appropriate method to detect a single parent , could you suggest an alternative method ?"
incorrect documentation for isdatatypeprimitive and isstructureshared the contents of the ' description ' and ' input ( s ) ' columns of the table on page <number> of the users guide appears to be swapped for rows describing the methods isdatatypeprimitive and isstructureshared . the description / input for isstructureshared references datatypes and the description / input for isdatatypeprimitive references structures . appears that swapping the rows would solve the issue . noted in user guide version <date> .
"command - line script execution documentation appears to be inaccurate section <date> of the user guide documents how to execute a script from the command line . documentation states that the argument format of <code> or <code> . argument format appears to actually be <code> or <code> . attempting to run <code> results in <code> . running <code> completes successfully . using a myassociation not in the database results in an error "" unrecognized association name "" . also , documentation states that script path is required if they ’ re not stored in the same location as the <allcaps> ccdd </allcaps> executes , however commands without path succeed for scripts located in the / scripts directory ( did not test with other locations ) . observed on <allcaps> ccdd </allcaps> version "" <date> <date> "" cloned from git on <date> ."
"cannot register database driver hi , i got an error , when i create new project <allcaps> bitse </allcaps> , and then open the project . i attached a screenshot for this . i used postgres95 at this time , but have same error on postgres84 . thanks . os : ubuntu <number> . 0 4 lts 6 4 bit dpkg - l | grep postgres ii postgresql <number> + 1 7 3 ubuntu0 . <number> all object - relational <allcaps> sql </allcaps> database ( supported version ) ii postgresql - <number> <date> - 0 ubuntu0 . <number> amd64 object - relational <allcaps> sql </allcaps> database , version <number> server ii postgresql - client - <number> <date> - 0 ubuntu0 . <number> amd64 front - end programs for postgresql <number> ii postgresql - client - common 1 7 3 ubuntu0 . <number> all manager for multiple postgresql client versions ii postgresql - common 1 7 3 ubuntu0 . <number> all postgresql database - cluster manager ii postgresql - contrib - <number> <date> - 0 ubuntu0 . <number> amd64 additional facilities for postgresql <number> - <number> - <number> <number> <number> <number> <img>"
"table creation error hello , i installed <allcaps> ccdd </allcaps> on ubuntu <number> 6 4 bit , postgresql <number> . when i open my project first , there is an error message . localhost : <number> |-| - | <date> <time> . <number> | fail | cannot load table members ; cause ' <allcaps> error </allcaps> : function get_table_members_by_index ( ) does not exist hint : no function matches the given name and argument types . you might need to add explicit type casts . position : <number> ' i attached an error screen . <number> - <number> - <number> <number> <number> <number> <img>"
"database name i am trying to implement a feature on the ccdd_viewer <allcaps> gui </allcaps> that displays what database each user is logged into alongside what user name each user is "" signed in as "" . i do not see any ' meta ' project data that i can pull from the <allcaps> ccdd </allcaps> tool ' s web server <allcaps> api </allcaps> . would it be possible to add an <allcaps> api </allcaps> call that will allow me to pull the project details such as "" aa2 "" so that i can display it on the viewer ' s <allcaps> gui </allcaps> ? thanks !"
license file can you please add a license file to the root of the repo when you get a chance ? thanks .
<allcaps> gui </allcaps> for <allcaps> ccdd </allcaps> in <allcaps> js i </allcaps> will be working at <allcaps> jsc </allcaps> and the instructions i was sent regarding my assignment is to develop a <allcaps> gui </allcaps> in javascript for a command & data dictionary . i am interested in learning as much as possible about this project and would like to get involved sooner than later . is this the same <allcaps> ccdd </allcaps> referred to in my assignment ? what would be a good way to get started ? what tasks or issues can i help you work on now ? thanks and i look forward to working with you .
update <allcaps> ccsds </allcaps> <number> <allcaps> url </allcaps> in macros . dox
fix nasa # <number> eci not compatible with caelum
fix <number> not compatible bootes rc2
fix <number> github actions main . yaml is not uniform
"github actions main . yaml is not uniform main . yaml borrows from cfs ' s yaml file which outlines the steps more explicitly , should update the other steps to match ."
"fix <number> add clang format and clang format gihub action copied clang - format from cfs , ran clang - format on all . c and . h files , then implemented format check github action from cfs"
"add clang - format and clang - format github action clone cfs ' s clang - format file to <allcaps> eci </allcaps> , make sure all of <allcaps> eci </allcaps> is formatted , and then implement a github actions format check based off of cfe ' s format check here <url>"
fix <number> update ci pipeline to use github actions
"<allcaps> eci </allcaps> is not compatible with cfs version caelum <allcaps> eci </allcaps> needs to be updated to work with cfs caelum . will need to update cfe api calls , ect ."
"init commit for fix <number> first go at fix <number> to make the spg4 example more noisy , have not tested it yet by deliberately triggering the time to go outside the epoch range ."
"<allcaps> eci </allcaps> is not compatible with cfs version bootes - rc2 ( cfs <number> - rc2 ) cfs tag bootes - rc2 ( cfs version <number> , release candidate <number> ? ) , or earlier , removes the boolean type , renames event type level constants , and removes <allcaps> ccsds </allcaps> parsing utilities . the current version of the <allcaps> eci </allcaps> needs to be updated to be compatible with these changes . the immediate files that i have identified as requiring changes are : fsw / src / eci_app . c fsw / src / eci_app . h faultrep / app_faultrep . c faultrep / app_faultrep_priv . h i have not evaluated the unit test files to determine if they are also affected ."
"changed the behavior of non - eci_cmd_mid messages this change aims to remove the failure condition on messages with a value command message id ( 0x 1 xxx ) . the limitations that <allcaps> eci </allcaps> was putting on messages registered with the msgrcv array does not allow for multiple commands and this change will add the ability to create any number of commands with their appropriate command structure . the previous implmenation of the <allcaps> eci </allcaps> commanding basically did one check to see wether or not the command had a function code between eci_func_code_start and eci_func_code_end but then passed the message into the receive message function . by directly passing the message with a command function code into the rcv_msg function , the only check we lose is if that command has a function code within the range . all other checks for length and queue buffer size are still tested within this function . this commit also removes the test that enforces that expects an error to be sent when receiving a command message that is not eci_cmd_mid ."
reorganize includes in eci_app . c to simplify includes for users * reorganize includes which do not depend on <code> earlier so that values are available are defined for <code> * added include of <code> to <code> so that users only need include <code> * clarified comments about include order closes # <number>
segmentation fault i am getting a seg fault when running my app ( cnt_app ) in core - linux . bin . any assistance in tracing this back to the origin would be appreciated . image <img>
testing fixes the ci pipeline / cmake build now properly collects the submodules for the pinned commit of cfs rather than continuing to use master ' s submodules .
pages this was the feature branch off doxy that added github pages support .
main page updates
refined the doxygen documentation this provides the documentation for non - developer usability such as tutorials and information on the interface file . <allcaps> tldr </allcaps> : - added main page for docs - added an eci_interface . h line - by - line explanation - added documentation for all the optional and required macros for <allcaps> eci </allcaps> - added a tutorial on how to build and run the sample apps . this section also talks about how to install an <allcaps> eci </allcaps> app into a non - fresh <allcaps> cfs </allcaps> .
"<allcaps> eci </allcaps> should only subscribe to the eci_tbl_manage_mid if tables are defined since both state and parameter tables are optional , it should make sense that eci_tbl_manage_mid should also be optional . currently , even if there are no tables defined , <allcaps> eci </allcaps> will subscribe to the table management message id ."
"implement counters for status reporting flags some users have expressed the desire for the <allcaps> eci </allcaps> to telemeter a counter of how many times each status flag has tripped , for better insight into how often the flag is set over the current flag value and the latched flag which the <allcaps> eci </allcaps> provides now ."
update <allcaps> eci </allcaps> to be compatible with cfe <number> <allcaps> eci </allcaps> has been <number> compatible for a while now but we have decided to allow <allcaps> eci </allcaps> to work with <number> ( using the make system ) and <number> ( using cmake ) rather than make a separate <number> release . since the <allcaps> nasa pace </allcaps> project uses cfe <number> and <allcaps> eci </allcaps> it makes sense that they should still be able to benefit from newer features in <allcaps> eci </allcaps> . changes : * added basic doxygen documentation to <allcaps> eci </allcaps> source code * added files needed for cmake build system to example apps to support <allcaps> cfe </allcaps> <number> * updated ci pipeline to build example apps under both <allcaps> cfe </allcaps> <number> and <number> * updated <allcaps> mid </allcaps> ' s in example apps to resolve collision with <allcaps> cfs </allcaps> default apps * fixed <allcaps> mid </allcaps> ' s in example apps so that they are consistent with the cmd / tlm header in packet
integrate with <number> this commit merges the code in the master branch with the cfe <number> to make both compatible .
fixed example apps based on <number> changes . after preparing the <allcaps> eci </allcaps> for cfe <number> we noticed a few issues with the example apps . we have taken some of the changes and altered them in a way that works in cfe <number> . these changes have been verified by hand to compile and run in the cfs environment . closes # <number> closes # <number>
fixed the <allcaps> mid </allcaps> collision in sgp4 and simple app . close # <number>
"remove unused files from the cfe <number> branch while converting to cfe <number> , we did not prune the unused files from cfe <number> . this removal would include the makefile in each of the example directories and bash scripts inside the ci directory ."
"adding missing default table and fix segfault in <number> version of sample app also , i think the changes relating to the sample app will need to be propagated to the cfe <number> version ( in master ) . can you submit a pr towards master ? _originally posted by <user> in <url>"
"cfe <number> : add a cmakelists file for building the <allcaps> eci </allcaps> source there is a duplication of effort when compiling the <allcaps> eci </allcaps> source files with a project . so far both the simple app and sgp4 prop examples both require some steps to include the <allcaps> eci </allcaps> source to compile the app . it would be nice , for build simplicity , to include a cmakelists in the <allcaps> eci </allcaps> repository that given a list of source files will compile external code along side <allcaps> eci </allcaps> . this system could be used to remove the need for each app to specify the directories of <allcaps> eci </allcaps> ' s source which was a source of duplicate code ."
"fix <allcaps> mid </allcaps> collision with sgp4prop example and cfe_time the sgp4 propagator example uses 0x 1 8 0 5 as it ' s house keeping message id but this is the <allcaps> mid </allcaps> assigned to cfe_time_cmd_mid . to prevent future collisions with the cfe - core , we should switch all the message id ' s in our examples to something like 0x[ <number> | <number> ] aa [ x] to prevent accidentally assigning to another <allcaps> mid </allcaps> ."
"update the repository target for cfe <number> since the cfe <number> branch of <allcaps> eci </allcaps> was pointing to an experimental branch in the nasa / cfe repository and cfe has pushed cfe - <number> into master , the <allcaps> eci </allcaps> <number> branch should update the links for cfe <number> . the main repository to build the entire cfe <number> has been removed from the cfe repository and has been moved to <url>"
changed <allcaps> eci </allcaps> ' s table path prefix changed the <allcaps> eci </allcaps> path prefix to match the changes made to the cmake build system in cfe <number> . close # <number>
"clarify the installation and building of the example apps in a pre - made system please specify where and what exactly to run the shell scripts contained with <allcaps> eci </allcaps> for cfs <number> . specifically to get it to work in nos3 . a step - by - step guide on how to install and an <allcaps> eci </allcaps> example app would be very useful , mentioning specifically what directories different files have to be located and run in . for example like this under the setup and build and run secions of cfs on github , located here <url>"
"the table path prefix needs to be updated for cfe <number> in the course of organizing the build for <number> , the param_tbl_path_prefix value was changed from "" / ram / "" to "" / cf / tables "" for some separation between the shared objects and the flight software tables . the arch - build . cmake file in cfe <number> does not allow for the ability to specify the output sub - directory of shared objects or tables and places everything into the target directory . the default directory of cfe <number> is "" / cf / "" which the <number> compatible version of <allcaps> eci </allcaps> should match ."
baseline testing branch as master initial commit to master branch
added support for sphinx + hawkmoth c autodocs set up the sphinx framework and integrated the hawkmoth extension . also included a quick example .
added support for sphinx + hawkmoth c autodoc this pr adds the basic framework for sphinx auto - doc with hawkmoth as well as a quick example comment for sb_init ( ) .
inconsistently named <allcaps> eci </allcaps> macros some macros <allcaps> eci </allcaps> defines do not follow the naming convention ( starting with <code> ) and should be standardized . known offenders are the event types ( which start with <code> ) and hk and table - related mids ( which start with <code> ) .
"<allcaps> pdf </allcaps> and markdown documentation ? hi there , any chance that the <allcaps> pdf </allcaps> and eventually a markdown version of the documentation be made available ? thanks ."
"fix # <number> , move cmds and utils into separate files <section> - fixes # <number> - moves the command and utility functions into their own separate source files . <section> github ci actions all passing successfully . local testing confirms <percent> of cfs suite tests passing ( incl . sample app tests ) and coverage unaffected . prior to changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> after changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior . the sample app now more closely matches the recommended structure / style for cfs apps . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"sample_app integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run tests , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , zero out global data structure during initialization <section> - fixes # <number> - added a <code> to zero out the global data structure at the beginning of the app ' s initialization . <section> github ci actions passing successfully and local test confirms all tests passing and no change to coverage due to these changes . <section> no change to behavior . the entire struct is now assured to start out initialized to zero . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add test for missing branch in sample_app_process ( ) testing performed * * github ci actions all passing successfully . tested locally confirming extra branch covered now , increasing branch coverage slightly ( from <number> / <number> to <number> / <number> branches ) and line cover to <percent> . prior : image <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> with these changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> tests now cover an additional branch . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"missing test for one branch in sample_app_process ( ) <section> the tests for <code> are missing one of the branches - specifically , the branch where the call to <code> fails . <section> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> tests should cover this branch - easy fix to add failing path . <section> avi weiss <user>"
"fix # <number> , refactor sample_app_init / process to remove multiple returns testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally - coverage level unchanged by this pr ( testing still misses <number> branches in sample_app as per the main branch ) . <section> behavior unchanged - failures during these <number> functions will fail subsequent checks of <code> and fall through to the exit point at the end of the function to return the relevant error code . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"refactor sample_app_init and sample_app_process to remove multiple returns <section> <code> and <code> use multiple returns to manage control flow . <section> the sample app should exhibit / encourage best practice ( according to the cfs ) , of which multiple returns does not comply . given that it is unnecessary in this case , would be worth refactoring to the recommended pattern with a single exit point from the function . <section> avi weiss <user>"
"fix # <number> , update add_cfe_tables app_name parameter <section> - fixes # <number> - corrects first parameter of <code> cmake function . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . confirmed locally with start - up test and ground - system commands . <section> no change to behavior with current implementation . <section> avi weiss <user>"
"fix # <number> , remove component - specific cfe header <hashtag> includes </hashtag> <section> - fixes # <number> - removes the component - specific cfe headers which are pulled in by the all - inclusive <code> . <section> tested with local cfs build + run , confirmed successful start - up . <section> none . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main of the cfs bundle . <section> avi weiss <user>"
"component - specific cfe headers not required ( all are pulled in by cfe . h ) <section> the component - specific cfe header files ( <code> , <code> etc . ) are all already pulled by the all - inclusive <code> . <section> remove unnecessary header <code> ' s . <section> <url> <section> avi weiss <user>"
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> github workflows <section> no expected behavior change . <section> - ubuntu <number> <section> depends on <url> <section> n / a <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , align use of table / tbl mnemonics testing performed * * github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , add check for success of cfe_tbl_load ( ) during initialization testing performed * * tested using same steps as <user> used in raising the issue ( start cfs without the sample app table file present in the / cf directory ) . confirmed action of new code as per screenshot below : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> sample app will exit during initialization if return value of <code> is not <code> . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 sample app v1 . <number> - rc4 + dev35 <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events testing performed * * only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
inconsistent event id naming expected behavior * * apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>
"fix # <number> , rename commandcode variable to fcncode testing performed * * standard cfs bundle tests all passed . build / run cfs and test <allcaps> noop </allcaps> and other commands with the groundsystem tool . all working fine . <section> no impact on behavior . improves code clarity and consistency in the lab apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev143 , <allcaps> psp </allcaps> v1 . <number> - rc4 + d sample app v1 . <number> - rc4 + dev35 ci lab app v2 . <number> - rc4 + dev39 to lab v2 . <number> - rc4 + dev31 <section> avi weiss <user>"
"sample_app integration candidate : caelum - rc4 + dev25 <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> <section> - pr # <number> , remove redundant comments - pr # <number> , create <allcaps> changelog </allcaps> . md <section> cfs bundle checks <url> sample_app checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"sample_app integration candidate : caelum - rc4 + dev23 <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> <section> - pr # <number> , misaligned comments - pr # <number> , remove unnecessary parentheses around return values . - pr # <number> , remove ' return ; ' from last line of void functions . <section> cfs bundle checks <url> sample_app checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . testing performed * * none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions describe the solution you ' d like * * remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in sample_app that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , misaligned comments fixes # <number> - minor comment formatting issues . <section> none <section> no impact on behavior . <section> n / a <section> <user>"
"minor comment formatting issue noticed some minor comment formatting issues - trival stuff , but i did not want to ignore it for no reason . apparently introduced in re - org of commit ade058c3ca500e1779d5dda23772c9b5edaec268 it ' s just a few out of place closing comment slashes : <url> <section> align comments for improved readability and consistency . <section> n / a <section> <user>"
"fix # <number> , remove registration of empty event filters <section> - fix # <number> <section> ci <section> none , just removes registration of empty filters <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_app integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> standardize version information <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use preferred ut patterns <section> - fix # <number> <section> build / run unit tests , passed <section> slight change to ut output <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> also updated ut guide in cfs / unit testing / files ( not public ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_app integration candidate : caelum - rc4 + dev1 <section> pr nasa # <number> from jphickey / fix - <number> - messagetype - conv - fix nasa # <number> , use cfe_msg_ptr conversion macro <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> sample_app codeql reuse : <url> sample_app format check reuse : <url> sample_app static analysis reuse : <url> <section> sample_app will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"workflows overly restrictive run , missing duplicate check , format job name incorrect , remove - - quiet from cppcheck <section> branch restriction unnecessary : <url> branch restriction unnecessary , missing duplicate check , incorrect job name : <url> branch restriction unnecessary , missing duplicate check : <url> remove <code> flag to report files processed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sample_app integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> cfs bundle checks < <url> sample_app checks < <url> <section> see pr <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows sample_app to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> created for # <number>"
"fix # <number> , correct typos in documentation , print statements , and comments <section> - fix # <number> fixed a few minor typos in the _text_ of : - <allcaps> readme </allcaps> . md - <allcaps> security </allcaps> . md . <repeated> and in the _comments_ of : - unit - test / cmakelists . txt . <repeated> and in an _assert error message_ string of : - unit - test / coveragetest / coveragetest_sample_app . c <section> only automated checks . <section> none ( minor markdown doc , comments changes , and assert error string changes that do not interact with any max lengths etc . ) . <section> n / a <section> n / a <section> n / a"
"sample_app integration candidate : <number> - <number> - <number> # # context part of < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"first parameter to <code> should be app name <section> the <code> function is declared as follows in arch_build . cmake : <code> the first parameter was intended to be the application name that the table is associated with , but historically any string was accepted since the string just served to make a unique target name . <section> sample_app always passes the string <code> here . <section> should pass <code> as first argument . <section> <url> <section> ubuntu <section> no major issue with the _current_ build system , but will may become an issue if / when nasa / cfe # <number> is implemented , and may also become an issue if directory - scope include directories are removed . <section> joseph hickey , vantage systems , inc ."
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_app integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration fix # <number> , scrub header guards <section> sample_app checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes app registration call , <code> since applications do not need to register themselves . # # # pr # <number> apply standard header guard on all header files by removing leading underscore . convert file - scope block comments to doxygen format . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , add timeout to sb receive <section> apps should not pend forever on software bus receive , because they should also periodically check <code> even if no commands were received . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm sample_app runs correctly <section> sample app will check cfe_es_runloop ( ) ( and therefore respond to a request from es ) even if it does not get any message on the software bus . <section> ubuntu <number> <section> as a "" best practice "" all apps should do something like this , instead of pending forever . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub header guards <section> use a consistent header guard on all sample app header files . also convert file - scope block comments to doxygen format . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none , just changes comments and ifdef guard strings <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sample_app integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , convert from < > to "" for local includes fix # <number> , added a contributing guide that links to the main cfs contributing guide . fix # <number> , add context to the values for msgids # # testing performed see < <url> # # expected behavior changes # # # pr # <number> replaces <code> with <code> in local includes # # # pr # <number> adds <code> that links to the main cfs contributing guide . # # # pr # <number> adds a description for the requirements of command and telemetry message ids to explain why the msg ids have those requirements in documentation . # # additional context part of < <url> # # third party code none # # authors <user> <user> <user>"
"fix # <number> , use quotes for local includes <section> fix # <number> - convert from <code> to <code> for local includes <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add context to the values for msgids <section> fixes # <number> add description for the requirements of command and telemetry message ids <section> no impact to behavior <section> ubuntu <number> <section> part of nasa / cfe # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
explain msg id values <section> message id ' s seem like they can be anything but in the sample app cmd and tlm need to be formatted to 0x 1 8 xx and 0x0 8 xx . <section> add some info to better explain why the msg ids have those requirements . <section> part of <url> <section> alex campbell <allcaps> gsfc </allcaps>
sample_app integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , simplify build to use wrappers and interface libs <section> use the wrapper functions now provided by <allcaps> cfe </allcaps> to simplify the build recipe and work with interface libraries fixes # <number> <section> build and run <allcaps> cfe </allcaps> unit tests <section> unit test targets are named a little differently when using the wrapper functions , but transparent if running via ctest . the filename is different if running manually though . <section> ubuntu <number> <section> requires nasa / cfe # <number> and must be merged before nasa / cfe # <number> to avoid breaking ut <section> joseph hickey , vantage systems , inc ."
"update build to work with interface libraries <section> as part of nasa / cfe # <number> and pr nasa / cfe # <number> the directory structure of <allcaps> cfe </allcaps> is changing . the sample_app build script was directly referencing certain <allcaps> cfe </allcaps> paths that will need an update after this merge . <section> utilize additional wrapper functions and interface libraries to facilitate the path change and avoid issues in the future . <section> see also nasa / cfe # <number> to add wrapper functions that will help with the unit test aspect <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sample_app , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , correct cfe_tbl_getaddress return code check fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities pr # <number> - resolves bug where success code was reported as an error for <code> . pr # <number> - rename <code> as <code> given change from < <url> <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user>"
removed comments .
"fix # <number> , correct cfe_tbl_getaddress return code check <section> fix # <number> - only status < cfe_success is an error since cfe_tbl_getaddress has multiple "" success "" codes <section> built , ran , sent sample app process command to confirm it works <section> resolves bug where success code was reported as an error <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> dependant on nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
change ut_clearforcefail to ut_cleardefaultreturnvalue <section> ut_clearforcefail was refactored to ut_cleardefaultreturnvalue for nasa / osal # <number> . it needs to have its name changed here as well . <section> part of nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , apply message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue <section> see events for "" github actions test "" at <url> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , remove non - portable os_pack <section> fix # <number> - removes os_pack ( not portable ) <section> did not confirm offsets , but checked size before and after and there was no change ( <number> ) . cfs - groundsystem does not display the message , but passed unit tests and ran a few commands through the system . <section> no impact , but removes undesirable pattern <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> will update other patterns to match # <number> in a separate commit / pr . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis fix # <number> , remove non - portable os_pack <section> bundle ci on astrogeco : <url> <section> pr # <number> - replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> pr # <number> - no impact , removes undesirable pattern use of <code> <section> <section> part of <url> <section> none <section> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on nasa / osal # <number> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , standardize to sample_app_ namespace prefix <section> see framework - bundle ci : < <url> <section> pr # <number> - no behavior changes . all identifiers now use the prefix <code> . changes the name of the main function from sample_appmain to sample_app_main which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu ci <section> <url> <section> none <section> <user>"
"fix # <number> , standardize to sample_app_ namespace prefix <section> replace inconsistent sample_ and sample_app name prefixes , now all identifers should start with sample_app_ . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior , but this also changes the name of the main function from sample_appmain to sample_app_main which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu <number> <section> noticed a bug in the process of this name change - the <code> field was hardcoded at <number> bytes , and this change ( adding <number> chars ) made the name too long , which overran the buffer . furthermore it was set with <code> , not <code> - so it clobbered the next field . this has also been fixed in this pr - changed to use <code> and <code> . this also requires a corresponding update in sample_lib as well as <allcaps> cfe </allcaps> startup script to fix the entry point names . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - unit test <allcaps> mid </allcaps> string format now 3 2 bit pr # <number> - installs unit test to target directory pr # <number> - checks only format string in ut event test <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - applies standard coding style . pr # <number> - removes test code call of cfe_sb_initmsg and sets the <allcaps> api </allcaps> / stub buffers directly . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , apply style <section> fix # <number> - applies standard coding style ran <code> <section> ci only , whitespace . <section> none <section> ci <section> redoing <url> which was accidentally merged and fixing to avoid conflicts <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , apply style <section> fix # <number> - applies standard coding style <section> ci only , whitespace . <section> none <section> ci <section> redoing <url> which was accidentally merged <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample tests should not use cfe_sb_initmsg stub to initialize a message <section> cfe_sb_initmsg is used in coveragetest_sample_app . c to initialize a message so that the cfe_sb_sendmsg stub has a valid message to use . this is not proper form . a unit test should not be calling a stub to provide this setup . stubs are to be used by production code in place of the actual calls in order for a unit test to isolate the code under test , they should not be used as utility functions for the unit tests . <section> see code snips . <section> provide a ut_assert utility that has the functionality to create a cfs message for use by a unit test . <section> <url> <section> <allcaps> rhel </allcaps> <number> <section> this is related to a cfe issue . if the cfe_sb_sendmsg stub worked as described in there , most situations where this is used would not even be required ( just verifying the message pointer instead of the actual message itself ) . <url> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"close # <number> , add build number and baseline <section> close # <number> <section> built bundle and confirmed sample_app reports development version . <section> version report now uses the version string . see excerpt from cfs log : <code> <section> ubuntu docker on mac <allcaps> os x </allcaps> <section> add any other context about the contribution here . <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - install unit test as part of cmake recipe . sample app test runner now shows up in expected install directory pr # <number> - add build number and baseline to version report <section> ubuntu ci <section> part of nasa / cfs # <number> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"coverage tests are actually coverage + functional tests <section> the current "" coverage "" tests are much like the unit tests in other cfs repositories , where stubs are configured to cause errors and the return values and events are checked . this is , in my opinion , intermixing functional and coverage testing . changing the type of event generated for an error condition will not affect coverage , but will require changing the unit test code which would fail , given that it was expecting the previous error condition . for example , instead of : <code> it could be written more simply as : <code> no need to check return or events . <section> one option would be to keep it as it is , but i suggest renaming it back to ( more ambiguous ) unit tests . or split the code into true coverage tests ( which would exercise every path ) and functional tests ( which would focus on nominal operation and significant error handling ) . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> - move the table to fsw / tables and renames "" sample_table "" to "" sample_app_table "" . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"add reference to skeleton_app in sample_app <allcaps> readme </allcaps> <section> the sample_app <allcaps> readme </allcaps> should have a reference to the skeleton_app . <section> add the reference . <section> n / a <section> n / a <section> jandlyn bentley , <allcaps> nasa gsfc </allcaps>"
"test command message should use cfe_sb_cmdhdr_t <section> testmsg uses cfe_sb_msg_t , where it should use cfe_sb_cmdhdr_t for a zero parameter command <section> switch to cfe_sb_cmdhdr_t <section> none <section> allows the changes being worked in nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> <url> <section> pr # <number> - test cases now compare an expected event string with a string derived from the spec string and arguments that were output by the unit under test . pr # <number> - replace references to <code> types with the <code> - provided type . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> fix # <number> , fix # <number> , fix # <number> <section> see prs bundle ci - <url> <section> pr # <number> - applies the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . pr # <number> - no more format conversion error in <allcaps> rtems </allcaps> build <section> see prs <section> part of nasa / cfs # <number> <section> elizabeth timmons , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"sample_defs / tables source files will not compile without table header file include <section> if we want to put all tables source files in global * _defs directory in a tables dir inside * _defs they need to be able to access * _table . h which would be in the respective app ' s src directory . <section> steps to reproduce the behavior : <number> . create directory in sample_defs called "" tables "" <number> . move sample_table . c into sample_defs / tables directory <number> . build cfs ( make <allcaps> simulation </allcaps> = native prep , make ) <number> . build will fail because sample_table . c can not find sample_table . h <section> need to be able to provide includes to sample_defs / tables . as a "" hack "" i add a "" include_directories ( fsw / src ) "" in cmakelists . txt in apps / sample_app which allows sample_table . c to compile from sample_defs / tables . <section> - linux ubuntu <number> <allcaps> lts </allcaps> - native linux cfs build - versions cfe <date> , <allcaps> osal </allcaps> <date> , <allcaps> psp </allcaps> <date> <section> joe mahoney - <allcaps> lta </allcaps> research"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> bundle ci - <url> <section> pr # <number> - coverage data from <code> includes the sample_app code <section> see prs ci - ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , incorrect conversion specifier <section> corrects a format mismatch warning on some platforms . fixes # <number> <section> build for i686 - rtems4 . <number> and confirm warning is fixed <section> no impact to behavior <section> i686 - rtems4 . <number> cross build <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor to implement command and utility functions in separate files <section> addresses ticket # <number> . specifically adds new sample_app_cmds . c / . h and sample_app_utils . c / . h files , moves functions out of sample_app . c into the new cmds and utils files . updates unit tests . this change makes sample_app a better reference application - structure more closely matches other apps . <section> steps taken to test the contribution : <number> . app compiles <number> . app unit tests complete successfully <section> no change to sample app behavior . minor changes to unit test behavior ( more test cases ) . <section> - hardware : pc - os : ubuntu <number> - versions : cfe <date> <section> add any other context about the contribution here . <section> n / a <section> elizabeth timmons / <allcaps> nasa </allcaps>"
"unit tests need to link with ut_coverage_compile_flags / ut_coverage_link_flags <section> nasa / osal # <number> cleans up the compiler flag management , and as part of this it exports two variables , ut_coverage_compile_flags and ut_coverage_link_flags , rather than a single ut_c_flags value . <section> the unit tests need to use these variables , not ut_c_flags . <section> needs to be included with the nasa / osal # <number> merge . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
integration candidate <number> - <number> - <number> <section> fixes # <number> <section> see pr # <number> bundle ci - pass <url> <section> add cfe_tbl_releaseaddress after access of table data <section> bundle ci - ubuntu : bionic <section> anh van - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix for # <number> - skeleton version of sample_app <section> this is the skeleton version of the sample_app , i developed this as a "" pull request "" for comparison purposes . i am * <allcaps> not </allcaps> * asking that this be pulled into the mainline as - is , either i can create a new app repository for "" skeleton_app "" or i can put all of this into a subfolder or branch in github . com / nasa / sample_app . <section> built and ran . does nothing but loads and reports loaded in log . <section> provides a simplified version of sample_app without the event registration and without the table or sample_lib integration . <section> debian linux vm <section> also wondering if i should pull the perfmon code , as this is not *required* for an app . <section> none <section> <email>"
"integration candidate <number> - <number> - <number> <section> fix # <number> and # <number> <section> see pr # <number> and # <number> bundle ci , see <url> <section> pr # <number> , adds a complete example unit test to the sample application . pr # <number> , sample_table . c is no longer included within the link of sample_app . so . <section> ci ubuntu : bionic <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , release table address <section> fix issue # <number> , release table after use . <section> steps taken to test the contribution : <number> . build <number> . run <allcaps> cfs </allcaps> <number> . run groundsystem <number> . send "" process_app_process_cc "" <number> . verify output / everything works <section> - ubuntu <number> - groundsystem <number> . <number> . 0 a , cfs <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"ic <number> <section> integration candidate <number> fixes # <number> and # <number> see pr # <number> for more details <section> ci and raspbian <section> # <number> - builds in raspbian os # <number> - consistent naming conventions <section> <section> see pr # <number> for more details <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes # <number> - clean build when omit_deprecated = true system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"general <allcaps> sample </allcaps> app cleanup <section> fixes # <number> fixes # <number> applies a consistent naming convention for all symbols in <allcaps> sample </allcaps> app to be consistent with the published <allcaps> cfe </allcaps> naming convention and other <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> modules . <section> build code with <code> and confirm that code builds without error or warnings . also build on raspberry pi and confirm the cast align warnings are gone . execute <allcaps> cfe </allcaps> and confirm nominal operation - all apps load and respond to basic commands as expected . <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit raspberry pi 3 b + <section> this single pull requests addresses multiple issues because they cannot be parallelized without introducing conflicts ( the latter depends on the former ) . the fixes are kept as separate commits for review purposes . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not use aux_source_directory in sample build script <section> fix # <number> do not use <code> in the build script , but rather list out each file explicitly . in particular this avoids incorrectly including the <code> file in the app build . <section> build software with <code> and confirm that <code> is no longer included within the link of <code> . execute <allcaps> cfe </allcaps> and confirm basic normal operation <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"consistent naming in <allcaps> sample app </allcaps> <section> to adhere to the patterns established in other modules , the <allcaps> sample </allcaps> app should employ a consistent pattern to its local variables and functions . there is currently a mixture of different styles . <section> - all global scope items should start with <code> ( not <code> or otherwise ) - all runtime data should be inside a global struct ( already is for the most part ) - members of the global struct do _not_ use the <code> prefix ( name is already qualified / namespace protected ) . - command handling functions should match the name of the command <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed describe the contribution fixes # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed testing performed nominal build process : make distclean make prep make make install followed by building with omit_deprecated = true make distclean make omit_deprecated = true prep make make install confirmed clean build in both cases . expected behavior changes clean build when omit_deprecated = true system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> additional context there is a total of three pull requests to address issue_35 : nasa / to_lab nasa / sample_app nasa / sch_lab all three are intended to be delivered together . contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"avoid compile warnings due to printf format <section> fix # <number> when using printf - style format conversions one must generally cast the argument to the intended type , as it does not happen implicitly with variable - argument functions . in particular the existing code worked on the default ( native ) build but generated warnings when building on <allcaps> rtems </allcaps> for a <number> - bit x86 target . <section> build for i686 <allcaps> rtems </allcaps> and x86 - <number> ( native ) and ensure no warnings on either platform <section> none . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit build machine , and i686 - rtems4 . <number> cross target . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> : check return of cfe_tbl_getaddress <section> fix # <number> . the code must not dereference the pointer unless the call returned cfe_success , otherwise the pointer is not valid . <section> execute <allcaps> cfe </allcaps> under simulation , send processcc command and ensure no change to nominal behavior <section> no change in the nominal case , where the command operates normally and the table address is valid . the sample_processcc function now does not dereference the table pointer in case the cfe_tbl_getaddress function fails , which is confirmed in the unit test . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"reverse command and error counts <section> fix # <number> telemetry values were being copied to the telemetry packet backwards . trivial fix . <section> build code using <allcaps> simulation </allcaps> = native and default config . send a command to sample_app and verify that the command counter , not the error counter , has incremented in the telemetry packet . <section> the command and error counters are correct , not reversed <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"invoke sample_function as part of process command <section> fix # <number> adds a call to the <code> provided by sample_lib as part of the example command processing . this is to demonstrate two things : - for <allcaps> fsw </allcaps> , it shows that runtime linking is working as expected , not just for functions provided in the core / base ( e . g . <allcaps> cfe </allcaps> , <allcaps> osal </allcaps> , <allcaps> psp </allcaps> ) but also for dynamically loaded libraries - for unit test , it provides a use - case for linking with stubs provided by an external library <section> build with enable_unit_tests = <allcaps> true </allcaps> , both with <allcaps> simulation </allcaps> = native and for a <number> - bit raspberry pi target . execute <allcaps> cfe </allcaps> code , and confirm that everything starts normally . sample_lib is loaded first , and sample_app is loaded next and no runtime linking issues are reported . log snippet : <code> send the "" process_cc <code> ` <code> ` ` <section> the process_cc command now makes a call into the sample library . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , how to guide for setting up cmake for coverage - test <section> how to guide for minimum needed to setup cmake for coverage - test <section> steps taken to test the contribution : <number> . create cmakelists . <number> . cmake . <number> . make <number> . make test <number> . test ran with assert successfully <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
""" how to "" guide for setting up cmake for coverage test <section> guide for minimum setup needed for coverage test . <section> anh van , <allcaps> nasa </allcaps> goddard"
"integration candidate <number> <section> fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes , removed duplicate table definition . <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> : add table header file <section> fixes # <number> <section> steps taken to test the contribution : <number> . nominal checkout and build of bundle with this change <number> . ran code and sent sample app process command code to verify table worked <code> <section> - no impact to behavior <section> - hardware : cfs dev server ( vm ) - os : ubuntu <number> - versions : master bundle w / this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"simplify table path in cmakelist . txt <section> fsw / src is ignored in : <url> <section> remove path , since it implies a specific file , when the build system actually searches the * _defs first for a matching file . <section> none <section> see the guide in elf2cfetbl <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> covers the following changes : - # <number> - match dev guide , add table and <allcaps> crc </allcaps> ( <allcaps> fasttracked </allcaps> ) - <allcaps> hotfix </allcaps> : add table to cmakelists . txt <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> now uses cfe table services and reports <allcaps> crc </allcaps> <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"fix # <number> , update to dev guide , add table , add <allcaps> crc </allcaps> output <section> updated to dev . guide , added sample table , added <allcaps> crc </allcaps> output <section> steps taken to test the contribution : <number> . build <number> . send ground command <number> . verify results <code> output from tblcrctool : <code> <section> no impact to behavior <section> - hardware - os : ubuntu <date> - versions <allcaps> cfs </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update sample app to developer guide <section> updated sample app to follow developer ' s guide . added sample table . <section> <number> . build cfs <number> . run groundsystems <number> . verify <number> commands : <code> <section> no impact to behavior <section> - hardware - os : ubuntu <date> - cfe <number> , groundsystem <number> . 0 9 a <section> anh van . <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sample_app included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - performance id updated but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags removed <allcaps> mks </allcaps> flag for sample_app"
"update the <allcaps> sch </allcaps> codebase to a more recent cfs revision ( <date> ) hello , we learned that the <allcaps> sch </allcaps> codebase had not been updated since <date> , so we updated it to have it at least compile with our customized cfs build system . we hope that this work will help someone like us to get to a working <allcaps> sch </allcaps> faster . if there was any interest in integrating this work , we would be happy to resolve any issues with this patch . before doing any integration , we would highly recommend setting up clang format for <allcaps> sch </allcaps> , using the <code> from the parent cfs repository . with the formatting in place , it would be much easier to work with the needed diffs . this contribution is made on behalf of reflex aerospace gmbh ( berlin ) where i am employed as a software engineer . - - - this changeset contains <percent> + fixes that are needed to have this <allcaps> sch </allcaps> working against the more recent cfs setup as of <date> . the cfs revision that this is compiled against : 1 9 2 f2ea3061bfe722b8ed1d72b7adecbf36d4f6e <url> known issues : - the changeset contains minor formatting issues but i am deciding to ignore them because the <allcaps> sch </allcaps> itself needs to be clang formatted and i did not find an existing . clang - format in the repository . - this changeset does not touch anything related to setting up the table files in the cmake build system . there are other patches that are attempting to fix those issues : <url> - we are still reworking the <allcaps> sch </allcaps> codebase to fit our needs , so it may be that a few lines were missed and they will not compile ."
update <allcaps> sch </allcaps> to be compatible with latest <allcaps> cfe </allcaps> current <allcaps> sch </allcaps> will not build with lastest cfe draco - rc4 <url> release
"fix # <number> , moves interface definition files to inc - fixes # <number> <section> no testing performed . <section> no expected behavior change . <section> - ubuntu <number> <section> <url> remains unaddressed ? <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"implement requirement sch9001 requirement sch9001 is not implemented . <section> upon any initialization , the <allcaps> sch </allcaps> application shall inhibit processing of the schedule definition table until the cfe indicates that all of the applications have started . <section> sch_customearlyinit and sch_customlateinit does not inhibit the processing of <allcaps> sdt </allcaps> until cfe apps started . sch_appmain calls on sch_appinit that intializates cfe events , software bus , etc . but i do not see where it inhibits the processing of <allcaps> sdt </allcaps> . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implement requirements sch2006 and sch2007 requirements sch2006 and sch2007 are not implemented . <section> sch2006 : upon receipt of a <allcaps> sdt </allcaps> load , <allcaps> sch </allcaps> shall validate the entries of the table and if any entry is invalid , the table is declared invalid and rejected . sch2006 . <number> : <allcaps> sch </allcaps> shall identify any "" unused "" <allcaps> sdt </allcaps> entry that contains data other than "" unused "" as invalid sch2006 . <number> : <allcaps> sch </allcaps> shall identify any "" enabled "" or "" disabled "" <allcaps> sdt </allcaps> entry that contains a frequency of zero as invalid sch2006 . <number> : <allcaps> sch </allcaps> shall identify any "" enabled "" or "" disabled "" <allcaps> sdt </allcaps> entry that contains a frequency offset greater than the entry ' s specified frequency as invalid . sch2006 . <number> : <allcaps> sch </allcaps> shall identify any "" enabled "" or "" disabled "" <allcaps> sdt </allcaps> entry that contains a message index of zero or greater than the maximum number of messages in the message definition table as invalid . sch2006 . <number> : <allcaps> sch </allcaps> shall identify any "" enabled "" or "" disabled "" <allcaps> sdt </allcaps> entry that contains an undefined activity type as invalid . sch2007 : upon receipt of a message definition table load , <allcaps> sch </allcaps> shall validate the entries of the table and if any table entry is invalid , reject the table sch2007 . <number> : <allcaps> sch </allcaps> shall identify any "" unused "" <allcaps> mdt </allcaps> entry that contains data other than "" unused "" as invalid sch2007 . <number> : <allcaps> sch </allcaps> shall identify any <allcaps> mdt </allcaps> entry that has a message definition with a message id that is greater than <mission_defined> maximum message id as invalid sch2007 . <number> : <allcaps> sch </allcaps> shall identify any <allcaps> mdt </allcaps> entry that has a message definition with a message id that is less than <mission_defined> minimum message id as invalid sch2007 . <number> : <allcaps> sch </allcaps> shall identify any <allcaps> mdt </allcaps> entry that has a message length greater than <platform_defined> maximum message length as invalid sch2007 . <number> : <allcaps> sch </allcaps> shall identify any <allcaps> mdt </allcaps> entry that has a message length that is an odd number of bytes as invalid <section> it looks as though this requirement is being met in sch_acquirepointers - it ' s handling table loads through table services during the housekeeping cycle , not through an explicit command . the sub - requirements are not being met . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implemented requirement sch2003 requirement sch2003 is not implemented . <section> <allcaps> sch </allcaps> shall identify the spacecraft major frame signal as "" noisy "" when two major frame signals occur consecutively that are separated from the previous major frame signal by less than < platform_defined , <number> > milliseconds ( running fast ) and / or greater than < platform_defined , <number> > milliseconds ( running slow ) <section> only condition found was : "" if we are <allcaps> not </allcaps> synchronized to the <allcaps> met </allcaps> ( i . e . - the minor frame timer has an acceptable resolution ) , then the major frame signal should only occur in the last slot of the schedule table . if we <allcaps> are </allcaps> synchronized to the <allcaps> met </allcaps> ( i . e . - the minor frame timer is not as good as we would like ) , then the major frame signal should occur within a window of slots at the end of the table . "" <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implement requirement sch2001 requirement sch2001 is not implemented . <section> the schedule definition table shall schedule activities with a minimum minor frame resolution of < platform_defined , <number> > milliseconds and a major frame resolution of < platform_defined , <number> > second . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implement requirements sch3003 and sch3003 . <number> requirements sch3003 and sch3003 . <number> are not implemented . <section> sch3003 : <allcaps> sch </allcaps> shall allow the user to combine one or more groups of activities in the schedule definition table into one or more multi - groups . sch3003 . <number> : <allcaps> sch </allcaps> shall support a maximum of <number> multi - groups . <section> should be implemented by sch_enablegroupcmd in sch_cmds . c . this allows a group to be enabled , but does not allow users to combine groups . groups are also not limited . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implement requirements sch3000 and sch3000 . <number> requirements sch3000 and sch3000 . <number> are not implemented . <section> sch3000 : <allcaps> sch </allcaps> shall associate each activity with a single group and zero to <number> multi - groups . sch3000 . <number> : <allcaps> sch </allcaps> shall support a maximum of <number> groups <section> should be implemented in sch_validatescheduledata , but is not . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"implement requirement sch2000 requirement sch2000 is not implemented . <section> upon receipt of a major frame signal , <allcaps> sch </allcaps> shall start processing the scheduler definition table ( <allcaps> sdt </allcaps> ) which contains the defined activities . <section> the <allcaps> sch </allcaps> timing test scenario document from <allcaps> jira </allcaps> states : _still need to figure out how to control the major frame signal . waiting to hear back from alan cudmore . _ <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . testing performed * * none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"sch_def_schtbl . tbl not generated at all hello , i am trying to run the aquila release of cfs . i have installed the following : cfe <number> . <number> , cfs_ci - <number> , cfs_io_lib - <number> , cfs_to - <number> , osal - <number> . <number> , <allcaps> psp </allcaps> - <number> . <number> , <allcaps> sch </allcaps> - <number> . <number> , cfs - groundsystem - <number> . <number> - rc1 <section> when i build the software the sch_def_schtbl . tbl and the to_config . tbl time are not loading . image <img> <section> > i have looked at issue # <number> (# <number> <url> . in that solution the assumption is that the files are being generated but placed in the cf folder . in my case there are no . tbl files being generated at all . > i have looked through the hidden cf folder located in [ . <repeated> ] build / exe / cpu <x> folder and the only item that appear is the cfe_es_startup . scr ci . so , io_lib . so , sample_app . so , sample_lib . so , sch . so , to . so . > i have tried using the elf2cfetbl tool to build the * . tbl files but it does not seem to work . i followed the instructions in the <allcaps> readme </allcaps> . txt file and the system is still unable to find the tool in the tools folder i may also have an issue with seeing the correct error call outs . i am unsure of what to try next ."
"port to caelum hey <user> , once again you are the only one i can think to contact . <repeated> i have started porting this to caelum for usage at my work , space machines company . so far i have just done macro / type swaps and fixed up some sb message casting in accordance with the changes outlined here at opensatkit <url> . things are compiling and running at the moment . i wanted to start having a look at unit tests so i can be confident that things work instead of just not knowing they do not . i am not sure where to start . this app seems to have a different test harness structure than the other apps . can you or anybody over there comment on this ? i am happy to submit a pr to this repo , so any changes are public - facing , and your workload is potentially lessened ."
"clarifications <number> . in <code> ( from sch_def_schtbl . c <url> ? <number> . can the order of entries in <code> be rearranged without affecting the results of the scheduler app ? <number> . despite being commented out , is there a particular reason for putting entries with different messageindex out of order and spaced out by several sch_unused entries ? for example , the following lines of code are seperated by many sch_unused entries and appear out of order by messageindex <code> has a messageindex of <number> and appears on line <number> <url> <code> has a messageindex of <number> and appears on line <number> <url> <code> has a messageindex of <number> and appears on line <number> <url> <number> . <code> appears <number> times in the file . is there a reason for this ? <number> . is there any significance to separating entries into slots of <number> ( or slots at all ) in the layout of the array ? is this simply a matter of styling or is there a concept of slots in the code too ? if so , what is the point of that ?"
"issues with installing the scheduler application hello all ! i am trying to install a fully functional scheduler application , according to exercise <number> in the presentation <url> when i trying to build , errors occur : in file included from ~ / cfs / apps / sch / fsw / src / sch_api . c : <number> : <number> : ~ / cfs / apps / sch / fsw / public_inc / sch_api . h : <number> : <number> : error : unknown type name ‘ boolean ’ ; did you mean ‘ bool ’ ? boolean sch_getprocessingstate ( void ) ; . <repeated> after trying to fix the types to bool , many other errors appear . please , can anyone suggest how to properly integrate the scheduler application into the cfs system ? ( the lab scheduler worked well . ) ubuntu <number> cfs installed from core flight system - <allcaps> bundle </allcaps> ( <url> igor"
"plans for update hi , i have been experimenting with post <number> cfs ( commit 6 aeca23a57a4808fc278f33033ccb0e51746e732 ) . when compiling <allcaps> sch </allcaps> , i get errors regarding features which appear to be deprecated . for example , use of <code> , <code> , <code> and so on . i have tried building with <code> , but this makes no difference . are there plans to update the application ? many thanks , jack white"
"unit tests use the incorrect data type for hk testing the sch_housekeepingcmd_test ( ) function in the sch_cmds_test . c file sets : sch_appdata . ignoremajorframe = <number> ; sch_appdata . unexpectedmajorframe = <number> ; but both variables are data type "" boolean "" . this still compiles and passed with older versions of the <allcaps> osal </allcaps> , but with <allcaps> osal </allcaps> <number> . <number> - bv this compiles but fails unit test . i recommend changing the <number> and <number> to true . when this change is made , <allcaps> sch </allcaps> passes unit testing ."
"sch_def_schtbl . tbl not being defined <allcaps> sch </allcaps> app fails on cfs startup as it is unable to open file . errors : error ( rc =0 xcc00002c ) loading <allcaps> sdt </allcaps> with / cf / apps / sch_def_schtbl . tbl the app is loaded and created fine , but exits when it is unable to load this table . i have tried using commits from other errors but none seem to be working . new to cfs , any help is appreciated ."
closes # <number> . register tables and include sch_msgdefs
"fails to build / register tables with cmake build the tables used by <allcaps> sch </allcaps> are not registered in the cmake build , which means they can not be overridden in the defs directory . the build also fails due to sch_msgdefs . h not being in an included directory . using with cfe version <date>"
"recommendation is to change scheduletable from <number> dim array to <number> dim array the current format of the array in fsw / tables / sch_defsch . c : sch_scheduleentry_t sch_defaultscheduletable [ sch_table_entries ] is a one dimensional array slots*entries <censored> . it is processed by sch_processnextslot as basically a 2 d array : slotindex = sch_appdata . nextslotnumber * sch_entries_per_slot ; nextentry = & sch_appdata . scheduletable [ slotindex ] ; by making a slight change in the definition of the table - <allcaps> not </allcaps> the code , the compiler will be much more helpful in - discovering issues where not enough or too many entries are defined per slot , causing an action to move into the backwards or forwards to the wrong slot - increase readability - file can be shorter , because the compiler will set ( <allcaps> afaik </allcaps> ) the undefined entries to <number> anyway this does not require a change in the code , except for the code generator ( which i have some idea ' s for but not yet done ) sch_def_schtbl . c . gz <url> <section> maurice smulders , geneva technologies inc"
"updates to <allcaps> sch </allcaps> message table approach . abstracted <allcaps> ccsds </allcaps> header info from the generic message component . allows <allcaps> ccsds </allcaps> v1 and v2 compatibility . also , allows changes to <allcaps> ccsds </allcaps> v2 bit configurations without a table source file change ."
test issue ( this is just a test )
the unit tests in this repository are incorrect the unit tests in this repository are different from the tests in sourceforge and do not work .
