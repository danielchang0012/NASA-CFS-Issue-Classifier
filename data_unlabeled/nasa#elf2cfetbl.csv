text
"inconsistent prototype in elf2cfetbl . c : outputdatatotargetfile <section> the function <code> in <code> is prototyped on line <number> with a <code> argument list but defined on line <number> with an empty argument list . this causes the compilation to error out if the compiler and its flags are sufficiently strict . <code> the fix is to change the line <number> argument list to <code> <section> by inspection : e . g . this description here <url> > according to the c standard , subclause <number> . <number> , paragraph <number> [ <allcaps> iso </allcaps> / <allcaps> iec </allcaps> <number> <time> <number> <url> ] , > > an identifier list declares only the identifiers of the parameters of the function . an empty list in a function declarator that is part of a definition of that function specifies that the function has no parameters . the empty list in a function declarator that is not part of a definition of that function specifies that no information about the number or types of the parameters is supplied . > subclause <number> . <number> states that > > the use of function declarators with empty parentheses ( not prototype - format parameter type declarators ) is an obsolescent feature . > consequently , functions that accept no arguments should explicitly declare a void parameter in their parameter list . this holds true in both the declaration and definition sections ( which should match ) . > this is caught and rejected by sufficiently - strict ( with flags ) compilers . one example is the current apple mac clang compiler <code> with flags including <code> . admittedly , the mac is not a cfs supported system , but <code> is a pretty standard compiler , and eventually you can expect <code> to complain as well . <section> - macbook pro ( intel ) - os : macos ventura <number> . <number> - versions : clang version <number> . <number>"
"fix # <number> , update references to cfe_fs_header_t time members <section> - fixes # <number> - references to the <code> file create time members are updated to go through to the <code> substruct . <section> github codeql tasks failing to build because this goes along with updates to cfe : <url> local testing confirms all working together successfully when both changes implemented together . <percent> of tests passing and net coverage unaffected . screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
references to time members in cfe_fs_header_t should be converted to cfe_time_systime_t <section> cfe pr <url> converts all remaining seconds / subseconds time struct members to use <code> that were not already doing so . elf2cfetbl requires some updates as it references one of them directly ( for cfe fs ) in a few locations . <section> <url> <section> needs to be updated to reference the time members through the <code> sub - struct . <section> avi weiss <user>
"fix # <number> , move variables declared mid - function to the top <section> - fixes # <number> - a couple stray variables that were declared mid - function were moved to the top of their respective functions . <section> github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
variables declared mid - function <section> a couple of stray cases of variables declared mid - function left here . copy of <url> <section> all variables should be declared at the top of the function . <section> avi weiss <user>
"fix # <number> , check return value of stat ( ) <section> - fixes # <number> - adds a check for the return value of <code> in case of error return , and prints an error message . - does not return <code> , as the <code> may well have been successful , and following this there is only an informational message ( about the file permissions ) . <section> github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> no impact on behavior . adds error message for an ( unlikely ) error return from <code> . <section> avi weiss <user>"
"fix # <number> , check return from chmod <section> - fixes # <number> - adds check for <code> value from <code> . - this pr adds a <code> return , but could also leave this out , as the updated permissions are reported after chmod as well . <section> github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> in cases of error ( non - zero ) <code> from <code> the error info will be printed and early return with <allcaps> failed </allcaps> will occur . <section> avi weiss <user>"
"fix # <number> , add checks for all return values from fseek ( ) <section> - fixes # <number> - adds checks for the return from <code> in <number> locations where this was absent . note : in these cases , an error return from <code> seems extremely unlikely ( unless the input data is corrupted somehow ) so these checks are mostly just to squash the warnings . <section> github ci actions ( incl . codeql build etc . ) all passing successfully excl . codeql - security for apparently pre - existing issues that are being flagged now . <section> in cases of error ( non - zero ) return from <code> the error info will be printed and early return with <code> will occur . <section> avi weiss <user>"
"fix # <number> , redo symbolnames malloc to remove out - of - bounds write <section> - fixes # <number> - removes <code> loop and uses <code> for <code> rather than <code> variable . <section> just github ci actions so far . <section> logic stays the same , but the possibility of an out - of - bounds write is removed . <section> avi weiss <user>"
"elf2cfetbl integration candidate : caelum - rc4 + dev26 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> elf2cfetbl checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"elf2cfetbl integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> elf2cfetbl checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , remove c + + - style comments <section> fixes # <number> c + + - style comments have been changed to c - style comments . <section> none ( comment changes only ) . <section> no impact on behavior . <section> <user>"
"remove c + + - style comments <section> a couple of c + + - style comments remain in the elf2cfetbl code . <section> only c - style comments (/* . <repeated> */) will remain , aligning with the cfs coding style / standard . <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md <section> fixes # <number> <section> none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"poorly documented file <section> poorly documented large function <section> same behavior . better documentation for future users / developers . either document functions or remove empty comment blocks . <section> one function example out of many : <url> <section> caught by codeql - security queries . several functions have empty comment blocks where documentation should go . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"cmake script refers to obsolete path <section> the cmake build script for elf2cfetbl is outdated and refers to a <allcaps> cfe </allcaps> path that no longer exist in the <allcaps> cfe </allcaps> bundle . <url> <section> at a minimum , the incorrect path should be removed a better approach altogether would be to use an interface library that refers to the <allcaps> osal api </allcaps> <section> does not really break anything because nonexistent paths are typically ignored by <allcaps> gcc </allcaps> ( although that may not be the case with some other compilers ) <section> joseph hickey , vantage systems , inc ."
"replacing sprintf with snprintf to avoid overflow . <section> replaced sprintf ( ) with snprintf ( ) to avoid overflow <section> ctest <section> protect against overflow by setting the buffer to n + <number> of the char string [ <number> ] to avoid overflow that may occur . <section> - hardware : pc , raspberry pi - os : ubuntu <number> <allcaps> lts </allcaps> , windows <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> awf wiswasi - california state university , fullerton"
"elf2cfetbl integration candidate : caelum - rc4 + dev10 <section> pr # <number> - fix # <number> , resolve uninit var static analysis warnings <section> elf2cfetbl checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> none <section> skliper"
"fix # <number> , resolve uninit var static analysis warnings <section> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"elf2cfetbl integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> elf2cfetbl checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool contains potentially null pointers that are de - referenced in function this issue was observed in iv & v ' s analysis of the roman space telescope ' s <allcaps> wfi </allcaps> instrument <allcaps> icdh fsw </allcaps> build <number> software release . see attachment for code reference . cfs tims . pdf <url> <allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool contains potentially null pointers that are de - referenced in function allocatesymbols <allcaps> ivv </allcaps> severity : <number> issue category : code issue type : incorrect code count : <number> description : there are <number> instances where pointers are checked for null and then later de - referenced by function allocatesymbols in file elf2cfetbl . c [ ref . <number> ] , regardless of whether they are valid : <number> . pointer ' symbolnames ' , of type elf_sym , is checked for <allcaps> null </allcaps> on line <number> , and is dereferenced on line <number> . <number> . pointer ' symbolptrs ' , of type elf_sym , is checked for <allcaps> null </allcaps> on line <number> , and is dereferenced on line <number> . if either pointer is null , a local variable , status , of type int32 , is set to <allcaps> failed </allcaps> . however , the status is not checked prior to de - referencing the pointers . null pointers should not be de - referenced as doing so will result in application exit or other unpredictable or undesired behavior . recommended actions : recommend only de - referencing pointers , symbolptrs and symbolnames , when status is set to <allcaps> success </allcaps> . impact : de - referencing a null pointer , in this case , will create an inconvenience for operators , crew or other projects ' personnel since the function , which is part of ground software , will crash and exit . options"
"<allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool “ elf2cfetbl ” experiences a buffer overflow when the section header description exceeds <number> characters this issue was observed in iv & v ' s analysis of the roman space telescope ' s <allcaps> wfi </allcaps> instrument <allcaps> icdh fsw </allcaps> build <number> software release . see attachment for code reference . cfs tims . pdf <url> this was veing tracked in the <allcaps> wfi fsw </allcaps> jira system under : <url> <allcaps> rst </allcaps> - <allcaps> ivv </allcaps> - <number> : <allcaps> icdh </allcaps> build <number> : cfs tool “ elf2cfetbl ” experiences a buffer overflow when the section header description exceeds <number> characters <allcaps> ivv </allcaps> severity : <number> issue category : code issue type : incorrect code count : <number> description : when reading the section header using the function getsectionheader ( ) on line <number> of file elf2cfetbl . c [ ref . <number> ] , the array of “ verbosestr ” , which is of size <number> , will experience a buffer overflow when “ i ” , the iteration integer used in the while loop on the same line , exceeds the value of <number> . this can occur because the maximum characters allowed for the section header is <number> as defined by the macro max_section_hdr_name_len on line <number> in the same file . on line <number> , “ verbosestr ” is expected to have length max_section_hdr_name_len - <number> , which is <number> . so , if the “ srcfiledesc ” points to a section header with longer than <number> characters , on line <number> , the iterator "" i "" will exceed <number> . note : the elf2cfetbl utility is a ground tool that provides a method of converting an object file containing the desired contents of a cfe application ' s table image into a binary file that is compatible with the cfe table services for loading the image . recommended actions : declare the “ verbosestr ” in function getsectionheader ( ) to be an array of characters for at least max_section_hdr_name_len , <number> . impact : a buffer overflow can result in unpredictable / undesired behavior during the execution of the elf2cfetbl utility . with the current code , the user would need to change the section header description to be shorter than <number> characters and re - run the elf2cfetbl tool if the header were greater than <number> characters long . this creates inconvenience for operators or other project personnel ."
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"elf2cfetbl integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> , check get_sh_entsize ( sectionheader ) value <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> elf2cfetbl codeql reuse : <url> elf2cfetbl format check reuse : <url> elf2cfetbl static analysis reuse : <url> <section> elf2cfetbl will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> # <number> , remove workflow branch restrictions , add duplicate check , remove - - quiet <section> - fix # <number> - fix # <number> remove workflow branch restrictions , add duplicate check , remove - - quiet <section> ci <section> - no longer restricts branches - skips duplicate runs - now reports cppcheck analyzed file list <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <user>"
remove static analysis workflow cppcheck - - quiet flag <section> analyzed files not reported : <url> <section> remove flag <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , check get_sh_entsize ( sectionheader ) value <section> fixes # <number> <section> github actions <section> checks the value of get_sh_entsize ( sectionheader ) to ensure numsymbols does not divide by <number> . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , out - of - bounds write for verbosestr <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"out - of - bounds write for verbosestr <section> bad while loop causing out - of - bounds write <section> fix while loop <section> <url> <section> coverity : <url> <section> checking i < 6 0 ul implies that i is <number> on the false branch . overrunning array verbosestr of <number> bytes at byte offset <number> using index i ( which evaluates to <number> ) . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> toctou </allcaps> bug for chmod <section> calling function chmod that uses dstfilename after a check function . this can cause a time - of - check , time - of - use race condition <section> use fchmod as seen in os_filechmod_impl . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"truncated stdio return value <section> there are <allcaps> api </allcaps> usage errors with fgetc . <section> check <allcaps> eof </allcaps> then cast value . <section> <url> <url> <url> <url> <section> coverity : <url> <section> assigning the return value of fgetc to char abyte truncates its value . assigning the return value of fgetc to char verbosestr [ i ] truncates its value . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of stat <section> calling stat ( dstfilename , & dststat ) without checking return value . this library function may fail and return an error code . <section> check the return value of stat <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of chmod <section> calling chmod ( dstfilename , dststat . st_mode & 0 xffffffc0u ) without checking return value . this library function may fail and return an error code . <section> check the return value of chmod . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"check return value of fseek <section> the return value of fseek is not checked which may cause an unexpected failure . <section> check the return value for fseek in elf2cfetbl . c . <section> <url> <url> <url> <url> <section> identified by coverity : <url> possible solution : <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"remove workflow branch restrictions , add duplicate check , fix format check name <section> the format check and static analysis workflows only run on pushes to main or on pull requests so community users will not get the alerts on their forks . the codeql workflow may run on pull requests to branches other than <code> <section> fork repo , commit new branch : format check and static analysis workflows are not triggered . <section> all workflows run on fork branches , even those without pull requests . <section> <url> <url> <url> <section> github <section> should also add check - for - duplicates job to workflows after relaing the branch requirement on the push trigger <section> full name and company / organization if applicable"
"fix # <number> , correct comment and event message typos <section> fixed various minor text typos in comments and event message strings . - fix # <number> <section> only automated checks . <section> none ( minor comments and event message strings that do not interact with any max lengths etc . ) . code execution is unaffected . <section> n / a <section> n / a <section> n / a"
"elf2cfetbl integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
integration candidate : <number> - <number> - <number> <section> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user>
"elf2cfetbl integration candidate : <number> - <number> - <number> <section> fix # <number> , fix comment stlye <section> see < <url> <section> pr # <number> - changes cpp - styled comments to c - style to meet coding standard <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , fix comment stlye <section> fixes # <number> change the comment style <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds elf2cfetbl , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"elf2cfetbl integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation , add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - restricts destination file permissions pr # <number> - squash int comparison warning pr # <number> - replace ctime ( which generates <allcaps> lgtm </allcaps> warning ) with ctime_r pr # <number> - deconflicts global / local parameters <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"file created without restricting permissions <section> allows anyone to open and write the file , dstfiledesc . <section> must set user permissions to file . <section> <url> <section> <url> <section> previously mentioned in ticket # <number> references : - <url> - <url> - <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"resolve # <number> , add baseline and build number to version . h <section> resolve # <number> resolve # <number> <section> bundle built using docker gcc + cmake image . <section> version reporting now uses the version numbers defined in <code> and reports build number . < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> pm "" src = "" <url> <section> ubuntu <section> none <section> if included , identify any third party code and provide text file of license <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> resolve # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - adds a null to the end of srcfilename and dstfilename when using strncpy . pr # <number> - support <allcaps> elf </allcaps> files that have all strings , including <allcaps> elf </allcaps> section names , in one single "" . strtab "" section in the <allcaps> elf </allcaps> file . pr # <number> - version reporting now uses the version numbers defined in <code> and reports build number . <section> ubuntu - ci <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
fix # <number> - null terminates src / dst filenames <section> adds a null to the end of srcfilename and dstfilename when using strncpy . <section> <email>
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - no string termination warnings in gcc9 . pr # <number> - fix typos <section> see prs bundle ci <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . pierre grimaud , self"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> see pr bundle ci - <url> <section> pr # <number> - builds for vxworks w / <number> - bit host <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"<allcaps> rfc </allcaps> : bin2cfetbl . py tool ( <allcaps> elf </allcaps> and mach - o support ) <section> this work complements the work i did for <allcaps> cfs </allcaps> / <allcaps> osal </allcaps> in <url> in order to run <allcaps> cfs </allcaps> on macos the <code> tool has to be updated to support mach - o . this work is based on the following comment by <user> : > when i said there is no requirement to use this specific tool , you will need to somehow generate appropriate binary . tbl files for your target if you want to use apps that load runtime tables . the format is pretty simple ( c struct encapsulated with a fs + <allcaps> tbl </allcaps> header ) so its not hard to hack out a python script to create these files , there is just no python tool already written <allcaps> afaik </allcaps> . i have decided to rewrite the tool in python and made it to support both <allcaps> elf </allcaps> and mach - o files . i would like to get feedback about the approach : if the direction is approved i would to complete the implementation and add all missing test cases . this is a small plan of what is done and what still has to be done : - [x ] reading mach - o <number> - bit and writing <code> file ( little endian binaries ) - [x ] reading <allcaps> elf </allcaps> <number> - bit and writing <code> file ( little endian binaries ) - [x ] integration tests using <allcaps> llvm </allcaps> integrated tester ( <allcaps> lit </allcaps> ) - [x ] integration of the python tool and integration tests into cmake tree - [ ] supporting reading command - line arguments as supported by current <code> - [ ] big endian binaries - [ ] <number> - bit binaries - [ ] supporting more output of what the current <code> does ( example : <code> ) - [ ] add more test fixtures . for now i am only using <code> and <code> which are built by <allcaps> cfs </allcaps> by default . <section> <code> run the <code> cmake target . the <allcaps> lit </allcaps> tests should pass . <section> - i have tried to preserve existing behavior <number> to <number> . the only difference i am seeing is in what gets printed . - i consider my implementation cleaner and easier to follow . - current c implementation uses global variables a lot and that makes the code harder to follow . i have tried to package all functions in such a way that the reasoning would be easier to follow . <section> - hardware : macbook pro - os : macos mojave <number> . <number> - versions : the latest master branch of this repository . <section> none . <section> - <code> , apache license version <number> - <code> , apache license v2 . <number> with <allcaps> llvm </allcaps> exceptions <url> - <code> , apache license version <number> <section> stanislav pankevich . personal . the individual <allcaps> cla </allcaps> has been signed and sent to the <allcaps> gsfc </allcaps> - softwarerelease ."
"possible world - writable file creation , <allcaps> lgtm </allcaps> warning <section> <allcaps> lgtm </allcaps> warning : a file may be created here with mode <number> , which would make it world - writable . <url> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard * <allcaps> edit </allcaps> * - removed warnings covered by other issues ( split ) * <allcaps> edit </allcaps> * - updated per latest warning"
"fix # <number> , path_max not defined with - std =c 9 9 <section> fixes # <number> <section> steps taken to test the contribution : <number> . built with - std =c 9 9 defined , elf2cfetbl now builds <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
path_max not defined if - std =c 9 9 set <section> make with - std =c 9 9 gives the following error <code> <section> steps to reproduce the behavior : <number> . add_definitions ( - wall - wstrict - prototypes - std =c 9 9 - pedantic ) to mission_build . cmake prepare function <number> . make prep <number> . make <section> clean build <section> n / a <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate <number> - <number> - <number> <section> integration candidate for pull requests approved at <number> - <number> - <number> <allcaps> ccb </allcaps> covers the following pull requests : # <number> - add guide on creating table files # <number> - add validation for rtncode and update bracket to standard # <number> - init dstfile and srcfile to <allcaps> null </allcaps> , validate dstfile and srcfile # <number> - use path_max instead of os_max_file_name # <number> - clean up elf2cfetbl build logic <section> build code for native host ( <allcaps> simulation </allcaps> = native ) with unit test enabled execute <allcaps> cfe </allcaps> core , issued various test commands from cmdutil execute all unit tests and confirm passage . <section> none <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> na <section> joseph hickey , vantage systems , inc ."
"fix # <number> : clean up elf2cfetbl build logic remove the now - unnecessary inclusion of <allcaps> cfe tbl </allcaps> internal definitions . all logic in this tool is based on public include files only . <allcaps> cfe </allcaps> ensures that the header sizes are always a multiple of <number> bytes , so the logic to selectively byte - align is unnecessary . <allcaps> cfe </allcaps> now requires this to be <number> - byte aligned . clean up all hacks in the cmake recipe , the build is now much more straightforward when internal headers are not being used . <section> fixes issue # <number> , cleans up the build process for this tool . _important_ - this depends on nasa / cfe # <number> and cannot be merged / tested prior to this being merged . this can only be cleaned up on this side once it is ensured that the internal cfe_tbl definitions are no longer required here . note this also removes the <code> option to the tool , as nasa / cfe # <number> now guarantees this to be <number> - byte aligned through the use of compile - time checks . it is not possible for this option to do anything , and the code that implemented this option was depending on a symbol that was no longer available , so it was easiest and cleanest to just prune it out . <section> rebuild code with sample table definitions . table is built successfully . <section> no impact to behavior <section> ubuntu <number> . <number> , <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , use path_max instead of os_max_file_name <section> fix # <number> , used path_max instead of os_max_file_name . <section> steps taken to test the contribution : <number> . build <number> . create sample_table . tbl file using elf2cfetbl . used full path to trigger warning : <number> . verify warning and that tbl file is still created . <code> <number> . used sample_table . tbl file and verify it still work in cfs . <section> - hardware - <date> - cfe <number> . <number> , elf2cfetbl <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , init dstfile and srcfile to <allcaps> null </allcaps> , validate dstfile and srcfil … <section> fix # <number> , initialize dstfile and srcfile to <allcaps> null </allcaps> . validate before closing . <section> <number> . build <number> . execute with d <elongated> <number> . forced return status of allocatesectionheader ( ) to - <number> <number> . verify that git dstfiledesc was <allcaps> null </allcaps> and did not cause program to crash . <section> no impact to behavior <section> - hardware - ubuntu <date> - cfe <number> , elf2cfetbl <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , add validation for rtncode and update bracket to standard <section> fix # <number> . resolve warning with flags - wall - std =c 9 9 - pedantic - wstrict - prototypes - wwrite - strings <section> steps taken to test the contribution : <number> . build <number> . verify warning does not appear <number> . execute elf2cfetbl against table object <number> . verify * . tbl is generated <number> . execute again with <allcaps> d <elongated> </allcaps> <number> . force rtncode = - <number> <number> . verify * . tbl is generated <section> no impact to behavior <section> - hardware - ubuntu <date> - elf2cfetbl version <number> . <number> , cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> covers the following pull requests : - # <number> - string format mismatch warning ( <allcaps> fasttracked </allcaps> ) - # <number> - remove classic build support ( <allcaps> fasttracked </allcaps> ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> none <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"issue # <number> , delete for_build and top makefile <section> delete for_build and makefile . <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix long string mismatch <section> fix # <number> , fix mismatch in printf . used cppcheck with options - - enable = performance , portability , warning - - std =c 9 9 - - std = posix - - inconclusive - j <number> <section> <number> . run cppcheck with options - - enable = performance , portability , warning - - std =c 9 9 - - std = posix - - inconclusive - j <number> <number> . verify warning is gone <number> . build <number> . verify elf2cfetbl still compile and pass table . o through <section> no impact to behavior <section> - hardware - ubuntu <number> - cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , add guide on creating table files <section> fix # <number> , add guide on creating table file using elf2cfetbl <section> steps taken to test the contribution : <number> . create a table file using elf2cfetbl <section> no impact to behavior <section> - hardware - os : ubuntu <date> - elf2cfetbl version <number> . 0 a <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> <section> steps taken to test the contribution : <number> . checked out <url> master and followed setup instructions <number> . checked out ic - <number> <number> . followed standard build instructions ( no cmdutil build warnings observed ) <section> - no impact to behavior from this change , just replaced deprecated dependencies <section> - server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle release candidate <number> with this branch <section> none <section> jacob hageman / <allcaps> nasa </allcaps> <section> <allcaps> cla </allcaps> on file"
"remove use of <allcaps> osal </allcaps> boolean type migrate away from using the <allcaps> osal </allcaps> boolean typedef , prefer to use the c99 <code> type going forward . existing refs to this typedef should be fixed ."
# <number> replace deprecated defines fixes issue # <number> built with unit tests enabled on linux after fix ( with the <allcaps> omit deprecated </allcaps> defined ) .
"invalid pointer casts ( byteswap ) originated by glimes ( <number> on babelfish ) : cppcheck has a very useful warning about invalid pointer casts which is triggered by the a call to byteswap . we could patch this with a double - cast . <repeated> or we could fix it , by having byteswap take a ( void <wink> pointer parameter . but fixing it is a good idea , so future cppcheck messages about this condition are more useful ."
