text
"[ question ] comparison of use cases of <allcaps> sch </allcaps> x sch_lab <section> - as far as i understood , the open issue <url> has no target date to be reached . how close is <allcaps> sch </allcaps> to being <allcaps> cfe </allcaps> draco - rc4 compliant ? - could you explain the differences in approach between <allcaps> sch </allcaps> and sch_lab ? - can the features of sch_lab fully comply with the capabilities of <allcaps> sch </allcaps> <number> . <number> ? - is sch_lab a test or mockup app ? i mean , is it not supposed to be production compliant and only used for simulation purposes ? - is the <allcaps> sch </allcaps> app required for draco - rc4 operation ? i mean , is sch_lab the only one supposed to be working with draco - rc4 ? <section> i would like a clear and objective description of the use - cases and usability of both apps , including guidance on when to use one over the other or if both are needed ."
"sch_lab integration candidate : caelum - rc4 + dev51 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add support for cmds w / args <section> adds support for commands w / args . fixes issue # <number> <section> tested lc sample action point command via build verification scripts . <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - os : [ e . g . ubuntu <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , convert <code> return codes and variables to <code> testing performed * * github ci actions all passing successfully . local testing with full cfs suite passing all tests and showing not change to coverage . <section> no change to behavior . <code> is more expressive and improves consistency with cfe / cfs . <section> avi weiss <user>"
sch_lab <code> return codes and variables should be converted to <code> expected behavior * * use the more expressive <code> and improve consistency with cfs . <section> avi weiss <user>
"sch_lab integration candidate : caelum - rc4 + dev46 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adjust table based on apps present <section> create an inclusion preprocessor macro for each app referred to in the subscription table , and only include that line if the app is present in the current configuration . in particular , do not assume that sample_app will always be there . fixes # <number> <section> build sch_lab without sample_app and confirm successful <section> presence of other apps is not assumed / hardcoded in the table <section> debian <section> this should fix workflow errors where apps are built with sch_lab but without sample_app . <section> joseph hickey , vantage systems , inc ."
"default / example table assumes presence of other apps <section> the default value for the sch_lab table directly refers to <code> msg id , assuming this these app will be present . this is fine for a user who is cloning the <url> bundle repo , because it includes all submodules . but in other cases if sample_app is not present , the table fails to build . this issue is now detected at configuration ( cmake ) time , if there is a reference to the include directories of a target that does not exist in this configuration . <section> notably , this change from compile to config time caused an unintended side effect - workflows for the other <allcaps> cfs </allcaps> apps seem to do this - it clones the <allcaps> cfs </allcaps> but modifies the <code> configuration in such a way that it no longer includes the <code> . <section> should not assume / require that <code> will always be part of the config . <section> problematic assumption is here in the table : <url> <section> github workflow ( see <url> <section> same issue in to_lab , see nasa / to_lab # <number> <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum - rc4 + dev45 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run tests , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove component - specific cfe header <hashtag> includes </hashtag> <section> - fixes # <number> - removes the component - specific cfe headers which are pulled in by the all - inclusive <code> . <section> tested with local cfs build + run , confirmed successful start - up . <section> none . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main of the cfs bundle . <section> avi weiss <user>"
"component - specific cfe headers not required ( all are pulled in by cfe . h ) <section> copy of <url> the component - specific cfe header files ( <code> , <code> etc . ) are all already pulled by the all - inclusive <code> . <section> remove unnecessary header <code> ' s . <section> <url> <section> avi weiss <user>"
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> github workflows <section> no expected behavior change . <section> - ubuntu <number> <section> depends on <url> <section> if included , identify any third party code and provide text file of license <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"sch_lab integration candidate : caelum - rc4 + dev26 - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> sch_lab checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , standardize naming of sch_lab functions / macros testing performed * * only github ci workflow actions . <section> no impact on behavior . <section> <user>"
apply standard naming convention ( sch_lab . <repeated> ) <section> copy of <url> a few cases also appear in sch_lab of inconsistent naming of macros and the main function . <section> apply standard pattern ( sch_lab . <repeated> ) <section> <url> <url> <url> <section> avi weiss <user>
"sch_lab integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ , function name in function header comments etc . ) expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"sch_lab integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in sch_lab that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"sch_lab integration candidate : caelum - rc4 + dev12 <section> pr # <number> - fix # <number> , update cmake_minimum_required <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> none <section> jphickey"
"fix # <number> , update cmake_minimum_required <section> fixes the warning that support for old versions will be removed the build does not actually expect such an old version fixes # <number> <section> build using cmake <number> <section> no deprecation warning <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"update cmake mimimum required to something more recent <section> the <code> command currently lists a very old version . in fact some of the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> build scripts assume at least version <number> to support things like target - specific includes and flags . notably , when using a recent version of cmake ( e . g . <number> ) this generates a warning that says : <code> <section> update the cmake_minimum_version to <number> ( this would match <allcaps> cfe </allcaps> ) <section> disable warning ? <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum - rc4 + dev10 <section> pr # <number> - fix # <number> , resolve uninit var static analysis warnings <section> sch_lab checks <url> cfs bundle checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> none <section> skliper"
"fix # <number> , resolve uninit var static analysis warnings - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
apply latest copyright header <section> updated copyright header <section> update <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
point codeql workflow to correct source <section> the codeql workflow points to a forked repository . <url> <section> update the codeql workflow to point at the nasa / cfs repository <section> none <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps>
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab ic : caelum + dev2 <section> sch_lab v2 . <number> - rc4 + dev13 pr # <number> - fix # <number> , add option to configure base tick rate <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add option to configure base tick rate <section> sch_lab was fixed at 1 hz because it bound to the 1 hz tick from cfe_time . this creates an <allcaps> osal </allcaps> timer instead , which posts a semaphore , and this can serve as a much more flexible time source , with configurable rate . this still binds to 1 hz and the <allcaps> sch </allcaps> does not start its first message until the first 1 hz is received , thereby keeping some form of 1 hz sync . fixes # <number> <section> used this feature to send wakeup events to cf at 1 0 hz instead of 1 hz . ( locally configurable - other items in the table got changed from <number> to <number> to compensate and keep those at <number> hz . ) <section> more configuration flexibility . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : caelum + dev1 <section> pr # <number> - fix # <number> - updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro - this also uses consistent naming - telemetryheader rather than tlmheader pr # <number> - fix # <number> , use separate address variable - avoids <code> cast by using a separate <code> local variable to hold the address . <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analyis , and format check <section> fixes # <number> <section> sch_lab format check reuse : <url> sch_lab codeql reuse : <url> sch_lab static analysis reuse : <url> <section> sch_lab will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check , overly restrictive on main push , remove - - quiet flag <section> missing duplicate check , overly restrictive on push : <url> remove <code> flag so cppcheck will report files analyzed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"format check workflow missing duplicate check , restricting to main push , job name incorrect <section> missing duplicate check , overly restrictive , incorrect job name : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove codeql workflow pr main branch restriction <section> - fix # <number> removed main branch restriction on pr <section> none <section> will run for all prs . <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql analysis workflow restricting to main pr <section> overly restrictive : <url> <section> remove branch restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , use separate address variable <section> avoids <code> cast by using a separate <code> local variable to hold the address . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> no warnings when using strict aliasing <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sch_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows sch_lab to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
typos in <allcaps> readme </allcaps> . md and <allcaps> security </allcaps> . md <section> found typos in documentation <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>
"hotfix <number> - <number> - <number> , fix missing typedef <section> see build failure in nasa / cfs # <number> <url> <code> <section> works in cfs - bundle fork <url> <section> clean build <section> ubuntu ci <section> part of nasa / cfs # <number> <section> none"
"sch_lab integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add cmdcode to sch_lab_table pr # <number> hotfix <number> - <number> - <number> , fix missing typedef <section> sch_lab checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> part of < <url> <section> none <section> <user>"
"fix # <number> , add cmdcode to sch_lab_table <section> allows the command / function code to be specified in the messages generated by sch_lab . this allows it to be used for testing apps that require a specific function code in the internal wakeup message . fixes # <number> <section> validated that the feature works by using it to test bp app ( which requires a specific code in it ' s wakeup <allcaps> mid </allcaps> ) <section> sch_lab now supports testing apps that require a specific function code in the generated wake up message <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"allow command codes to be specified in sch_lab_table <section> some apps have multiple functions that to be regularly scheduled , and use a single internal <allcaps> mid </allcaps> with separate command codes to do this . one example is bp , which has a "" <allcaps> wakeup </allcaps> "" internal <allcaps> mid </allcaps> that <allcaps> sch </allcaps> needs to send , but has two separate items that can be woken by this - differentiated by the fc field in the command header . sch_lab , in current form , is only capable of sending <allcaps> cmd </allcaps> messages with fc set to <number> . it would be fairly trivial to add "" cmdcode "" to the sch_lab_table , such that a nonzero fc can be used , so sch_lab can be used to test apps that need a specific fc value in their scheduled wakeup events . <section> add ability to set / specify an fc / cmdcode value for the command packets generated by sch_lab . <section> use full - featured <allcaps> sch </allcaps> ( but this is considerably harder to configure when just looking to test an app ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct typos in <allcaps> readme </allcaps> and <allcaps> security </allcaps> docs <section> - fix # <number> fixed a couple of minor typos in the _text_ of : - <allcaps> readme </allcaps> . md - <allcaps> security </allcaps> . md <section> none ( non - executable code ) . <section> none ( markdown doc changes only ) . <section> n / a <section> n / a <section> n / a"
"sch_lab integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"sch_lab integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests sch_lab tests < <url> cfs bundle tests < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , exit the main loop if init fails"
"fix # <number> , exit the main loop if init fails <section> initialize the "" runstatus "" to <allcaps> error </allcaps> if initialization fails . this causes the cfe_es_runloop function to return false , and the app will exit with an error status . fixes # <number> <section> build and run <allcaps> cfe </allcaps> with missing <allcaps> sch lab </allcaps> table file <section> sch_lab exits with error , does not loop infinitely <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sch_lab integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration # # testing performed sch_lab < <url> bundle < <url> # # expected behavior changes # # # pr # <number> removes app registration call , <code> since applications do not need to register themselves . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> see # <number> <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , update sequence count in transmitted messages <section> update the sequence counter in messages generated by sch_lab . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check behavior . <section> generated sch_lab messages have properly incrementing sequence number . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sch_lab , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , apply message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"sch_lab integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis <section> see events for "" github actions test "" at < <url> <section> pr # <number> - update to use <allcaps> msg </allcaps> module . replaces deprecated sb apis with <allcaps> msg </allcaps> <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , apply alignment pattern <section> fix # <number> - use cfe_msg_commandheader_t and cfe_msg_telemetryheader_t in command and telemetry type definitions - use cfe_sb_transmitmsg to copy the command and telemetry into a cfe_sb_buffer_t and send it where needed - avoids need to create send buffers within the app ( or union the packet types with cfe_sb_buffer_t ) - eliminates references to cfe_sb_cmdhdr_t and cfe_sb_tlmhdr_t that formerly enforced alignment since these had potential to change the actual packet sizes <section> bundle ci , unit tests , spot checked cmd / tlm <section> none , pattern applied <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle integration - candidates + nasa / cfe # <number> + # <number> , and the subject of this pr # <number> <section> depends on nasa / cfe # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds header guard ( the other warning on the ticket was already resolved ) <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - reorganize the *sch_lab* table so it matches the *sample_app* usage and format . <section> ubuntu - ci <section> nasa / cfs # <number> <section> christopher knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , reorg schedule table to conform with std <section> closes # <number> this is a reorg and a "" normalization "" of the sch_lab table to be organized how the sample_app uses a table . <section> built and tested with functional testing . <section> changing of the filenames and symbols for the table . <section> debian <number> vm <section> <email>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - fixes schedule table documentation pr # <number> - add baseline and build number to version reporting <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"close # <number> , add build number and baseline <section> close # <number> <section> build bundle and confirm version report format <section> version report now includes development build information . see excerpt from cfs_log <code> <section> ubuntu docker on <allcaps> osx </allcaps> <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_sb_cmdhdr_t for cmd sizing <section> eliminates unnecessary union and uses cfe_sb_cmdhdr_t for zero parameter command sizing fix # <number> <section> steps taken to test the contribution : <number> . nominal build , confirmed hk ' s were sent <section> none , but allows for updates in nasa / cfe # <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
packet sizing dependence on generic cfe_sb_msg_t <section> uses cfe_sb_msg_t in a union typedef related to a command w / no parameters . <section> use cfe_sb_cmdhdr_t for no parameter command <section> none <section> related to nasa / cfe # <number> updates <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bioinic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - apply the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . <section> see prs <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , and # <number> see pr # <number> for more details . <section> ci testing only <section> # <number> - improved table handling , see issue # <number> - sch_lab now builds on raspbian os # <number> - consolidate globals <section> ubuntu <section> see pr # <number> <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes pr # <number> - clean build when omit_deprecated = true system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"general sch_lab cleanup <section> fixes # <number> fixes # <number> fixes # <number> applies a consistent naming convention for all symbols in sch_lab to be consistent with the published <allcaps> cfe </allcaps> naming convention and other <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> modules . updates the message buffer structures to ensure proper alignment changes the table handling as described in # <number> <section> build code with <code> and confirm no errors or warnings in build . also build on raspberry pi and confirm the cast align warnings are gone . execute <allcaps> cfe </allcaps> and confirm nominal operation - all apps load and respond to basic commands as expected . test cfs - groundsystem python app to confirm that telemetry is being sent at the expected intervals . <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit raspberry pi 3 b + <section> this single pull requests addresses multiple issues because they cannot be parallelized without introducing conflicts ( the latter depends on the former ) . the fixes are kept as separate commits for review purposes . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed describe the contribution fixes # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed testing performed nominal build process : make distclean make prep make make install followed by building with omit_deprecated = true make distclean make omit_deprecated = true prep make make install confirmed clean build in both cases . expected behavior changes clean build when omit_deprecated = true system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> additional context there is a total of three pull requests to address issue_35 : nasa / to_lab nasa / sample_app nasa / sch_lab all three are intended to be delivered together . contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - corrected syslog writes - fixed return handling from cfe_tbl_gitaddress <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"accept cfe_success from cfe_tbl_getaddress ( ) <section> fix # <number> cfe_success is a valid return from the cfe_tbl_getaddress ( ) call . it should not be rejected as an error . <section> build for <allcaps> rtems </allcaps> , sanity check that sch_lab starts and runs normally . <section> adhere to the documented behavior / return codes of the cfe_tbl_getaddress ( ) call <section> i686 - rtems4 . <number> target running in <allcaps> qemu </allcaps> . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"correct writes to syslog <section> fix # <number> <number> . do not use the backslash to split string literal across lines . <number> . add casting to make the code work on both <number> - bit and <number> - bit platforms . <number> . correct misspelled "" <allcaps> scheule app </allcaps> "" - use "" sch_lab "" prefix instead . <section> build for <number> - bit <allcaps> rtems </allcaps> and confirm that warnings are fixed , and the sch_lab app starts and runs normally . <section> builds cleanly . no changes to runtime except for string formatting , the strings written to syslog will no longer have unintended whitespace included . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit building for i686 - rtems4 . <number> target . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"parameter myschtbl hides a global variable with the same name [ lgtm ] <section> sch_lab_app . c <code> sch_lab_sched_tab . h <code> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> : include definition of cfe_sb_msgid_t this type is provided by the cfe_sb_extern_typedefs . h file , so the table definition should include this header . <section> fixes issue # <number> add explicit inclusion of cfe_sb_extern_typedefs . h , which provides the definition of the <code> type . <section> compile all code in the <allcaps> cfs </allcaps> bundle <section> build no longer fails due to unknown type when integrating the <code> branch . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> bit ( build host ) <section> joseph hickey , vantage systems inc ."
"simplify table path in cmakelist . txt <section> fsw / src is ignored in : <url> <section> remove path , since it implies a specific file , when the build system actually searches the * _defs first for a matching file . <section> none <section> see the guide in elf2cfetbl <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> covers the following pull request : - # <number> - use table services ( was # <number> , just reopened ) <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> now uses cfe table services for schedule table management <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"fix # <number> , new table <section> fix # <number> , new table , reference closed pull request # <number> , reopen of it version of it . <section> references closed pull request # <number> , just a reopen version of it . <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sch_lab included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - updated performance id but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , implemented cfe table service <section> fix # <number> , implemented cfe table service <section> steps taken to test the contribution : <number> . build <number> . used groundsystem to enable telemetry <number> . used cosmos to verify package received : a . cfe_es - hk_tlm_pkt b . <allcaps> cfdp </allcaps> – cfdp_engine_hk c . cfe_evs – hk_tml_pkt d . cfe_sb – hk_tlm_pkt e . cfe_tbl = hk_tlm_pkt f . cfe_time – hk_tlm_pkt g . kit_ci – hk_tlm_pkt h . kit_to – hk_tlm_pkt i . <allcaps> unkown </allcaps> <number> . systematically removed each individual <allcaps> mid </allcaps> from table and verify : a . removed cfe_es_send_hk_mid . verify cfe_es is not receiving b . removed cfe_evs_send_hk_mid . verify cfe_evs is not receiving c . removed cfe_time_send_hk_mid . verify cfe_time is not receiving d . removed cfe_sb_send_hk_mid . verify cfe_sb is not receiving e . removed cfe_tbl_send_hk_mid . verify cfe_tbl is not receiving f . removed ci_lab_send_hk_mid . verify kit - ci is not receiving g . removed to_lab_send_hk_mid . verify kit - to is not receiving any package h . removed sample_app_send_hk_mid . verify unknown is not receiving any package * note - sample_app correspond to unknown in cosmos <section> no impact to behavior . <section> - hardware - os : ubuntu <date> - cosmos <number> . <number> ( part of opensatkit ) , groundsystem <number> . 9 0 a , cfe <number> . 0 a , <allcaps> osal </allcaps> <number> . 2 a <section> none <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , change perfid changed to <number>"
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
"sch_lab unused "" taskid "" originated by glimes ( <number> on babelfish ) : sch_lab application retrieves the task id for the current task at the top of its main loop , and never uses it ."
