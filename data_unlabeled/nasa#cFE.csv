text
"fix # <number> , avoid use of abspath make function <section> the abspath function does not work in <allcaps> gnu </allcaps> make v3 . <number> , which is still used as it is packaged with the wind river tools as part of vxworks <number> . x . the <code> function was used in two places related to generating tables - first for extraction of the <allcaps> elf </allcaps> file from an intermediate lib , second for conversion of that <allcaps> elf </allcaps> file to a table file . in the first case , the path should already be absolute , as it comes from cmake . in the second case , the path should always be relative , because it is intended to match another pattern rule starting with "" elf / %"". for the second rule , prefixing with $( <allcaps> curdir </allcaps> ) should achieve the same effect . fixes # <number> <section> build with both older ( v3 . <number> ) and newer ( v4 . <number> ) versions of <allcaps> gnu </allcaps> make <section> successfully builds using make v3 . <number> <section> <allcaps> gsfc </allcaps> vxworks development machine <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adjust dependencies on table lib <section> instead of having the intermediate table library build as part of the "" all "" target , attach it as a dependency under the custom rule . this way it will only be built in the context of the cfetables top level target , not both . fixes # <number> <section> build a configuration with lots of tables ( > <number> ) repeatedly from a clean start using various <code> values . <section> builds succeed , no race conditions / sporadic failures . <section> debian <section> this excludes the intermediate library from the <code> target and instead attaches it explicitly under the generate tables rule . so it should avoid the case of having two legs of a parallel build both finding the dependency and attempting to build it . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , fixes errors in ic bundle workflow file * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> addresses issue # <number> . also restores incorrectly altered changelog history in <allcaps> changelog </allcaps> . md . <section> generated ic branch in fork . <section> no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h additional occurrences of the string "" changelog "" are not replaced in the changelog . md file , as it is now replacing "" <hashtag> changelog </hashtag> "" . <section> dylan z . baker - <allcaps> nasa gsfc </allcaps> <number>"
"formatting issues with icbundle workflow <section> there are some small formatting issues that should be corrected in the changelog / version . h updates made by the icbundle workflow : <number> . an additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . an additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h <number> . additional occurrences of the string "" changelog "" are replaced in the changelog . md file <section> steps to reproduce the behavior : <number> . push a code change to a user - owned feature branch <number> . submit a pull request for that code change <number> . go to the "" actions "" tab in github and run the "" integration candidate bundle generation "" workflow with the pr number as the input argument for the field labeled "" the pull request numbers to include ( comma separated ) : "" <number> . wait for the workflow to complete <number> . inspect the newly updated / generated "" integration - candidate branch "" <number> . observe the changes made to the changelog . md and modules / core_api / fsw / inc / cfe_version . h files by the workflow <section> <number> . no additional "" # "" is placed in front of "" <hashtag> changelog </hashtag> "" in changelog . md <number> . no additional "" # "" is placed in front of "" <hashtag> define </hashtag> cfe_build_number . <repeated> "" in modules / core_api / fsw / inc / cfe_version . h <number> . additional occurrences of the string "" changelog "" are not replaced in the changelog . md file <section> github <section> dylan z . baker / <allcaps> nasa gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev54 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"default cfe_msg_init function will initialize a message with size of <number> <section> the 3 rd argument to <code> indicates the actual / real size of the structure that should be initialized . all of the operations that deal with a primary header assume it must be _at least_ this size , and write to the primary header . however , cfe_msg_init ( ) does not confirm that the size is at least the minimum required . it will still write fields ( e . g . msgid ) into the primary header , even if the size passed in is <number> . <section> call default <code> with size specified as <number> . the msgid is still written into the primary header . this is basically a buffer overflow , as the function wrote to memory that was beyond the end of the buffer . <section> the function should never write beyond the end of the buffer . passing a size of <number> should not initialize / write anything because there is no buffer to write to . <section> implementation of cfe_msg_init - note this proceeds to "" initdefaulthdr "" regardless of size . <url> <section> debian <section> related issue in cf that was relying on this bug - - this is being fixed in nasa / cf # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use correct object extension in table build <section> do not assume "" . o "" for object files , use ${ cmake_c_output_extension } fixes # <number> <section> build tables for vxworks ( using . obj extension ) <section> build should succeed now <section> <allcaps> gsfc </allcaps> vxworks build host <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update dev guide to fix out - of - date references and broken links <section> - fixes # <number> - delete references to ' cfe_testrunner ' module that was removed in <url> - update references to old function / variables : <code> , <code> , <code> , <code> - a few typos etc . picked up along the way ( and applied to other files at the same time ) - broken links in the developer ' s guide ' table of contents ' fixed <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> doc changes only . <section> avi weiss <user>"
"cfe dev guide has out - of - date references and some broken links <section> the cfe developer ' s guide has a few out - date - references to functions / variables that have changed , some typos and a few broken links in the table of contents . <section> - references to <code> module that was removed in <url> - out - of - date names : <code> , <code> , <code> , <code> <section> docs should be up - to - date and correct . <section> avi weiss <user>"
"add c + + header guards <section> adds header guards to public includes so <allcaps> cfe </allcaps> can be called from c + + translation units <section> - <allcaps> todo </allcaps> <section> - no impact to behavior - allow for easy calling from c + + translation units <section> - <allcaps> todo </allcaps> <section> addresses <url> for <allcaps> cfe </allcaps> <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"fix <number> : document es perf enums <section> a clear and concise description of what the contribution is . - fixes # <number> <section> - no impact to behavior ( doc change ) <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"values for triggermode provided to cfe_es_startperfcmd are not documented <section> here is the documentation for the <code> struct : > <number> . <number> triggermode <code> > desired trigger position ( start , center , end ) > definition at line <number> of file <code> there is no indication what values correspond with <code> , <code> , and <code> . some searching reveals that the implementation in <code> compares for values <code> . the public header <code> has the enum values for this , but there is no docstring and therefore does not appear in the user guide . the actual default numeric values would be good to indicate somewhere because the commanding interface may not have access to the <code> macros , ie , when using <code> from the command line . <section> isaac rowe , <allcaps> nasa jsc </allcaps> , jacobs technology"
"fix # <number> add perfid limit info to es docstring <section> a clear and concise description of what the contribution is . - fixes # <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior ( doc change ) <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"fix # <number> remove nonexist reference for perf tool <section> - remove non - existent reference to performance analyzer tool in cfe_es documentation . <section> none , doc change only . <section> - no impact to behavior <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"cfe_es_perflogadd should document config <section> the docstring for cfs_es_perflogadd makes no mention that the value of <code> is limited by the config value <code> . in my case , i have never altered this limit and was not aware of its existence , so i was surprised when calls to the cfe_es_perflogentry were failing . the only way to know that this value is used is to check the implementation file at <code> <url> or the note under from the documentation of <code> : > performance ids are limited to the range of <number> to cfe_mission_es_perf_max_ids - <number> . this text should also appear in the docstring for <code> i also find the documentation for <code> at <code> <url> confusing : <code> i find this confusing because although the value does affect the size of the <code> telemetry message via the filter and trigger mask buffers , the wording does not indicate that this limits the upper *value* of perfids , not the *number* of perfids . i could have only a few dozen perfids , but if one had a value greater than or equal to this parameter , it would be rejected . <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"es docstrings reference non - existent manual section <section> a clear and concise description of what the bug is . in <code> <url> : <code> there is no section <number> of the manual . <section> isaac rowe , <allcaps> nasa jsc </allcaps> ( jacobs technology )"
"avoid generating module - specific msgid files if project has provided an all - inclusive "" cfe_msgids . h "" file <section> as part of the effort to better compartmentalize the various <allcaps> cfe </allcaps> subcomponents , we are working toward having each module manage its own individual header files . during this migration , this presents some confusion for a configuration that already has an all - inclusive <code> - as these individual msgid headers will still be generated ( with default values ) even though they are not used . <section> to reduce confusion - - if the user has a <code> file , then do not generate the individualized msgid files . <section> the other option would be to revert the focused msgid . h file and go back to having cfe_msgids . h being the only msgid header for <allcaps> cfe </allcaps> . <section> there is a possibility that a user has overridden the <code> but in a way that still <hashtag> includes </hashtag> some ( but perhaps not all ) of the focused msgid headers . this proposal would break such a config . <repeated> so if that is a real possibility , this might not be a good idea . <section> joseph hickey , vantage systems , inc ."
"revert "" fix # <number> , do not directly use cfe_test_msgids . h "" reverts nasa / cfe # <number>"
"fix # <number> , uninitialized exceptiontaskid in cfe_es_runexceptionscan <section> - fix # <number> <section> ci <section> squash static analysis warning <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
uninitialized exceptiontaskid in cfe_es_runexceptionscan <section> uninitialized warning : <url> since it ' s not always written in : <url> <section> run static analysis <section> no uninitialized variable warnings <section> static analysis <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , uninitialized pkttime in evs_sendviaports <section> - fix # <number> resolves codesonar warning <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , triggermode unsigned compare with <number> <section> - fix # <number> this allows removal of cpp - check warning suppression and fixes a codesonar static analysis warning . note cfe_es_perf_trigger_start is <number> here : <url> and triggermode is uint32 here : <url> so the check is always true . only useful validity check is < cfe_es_perf_max_modes . <section> ci <section> none <section> ci <section> does not actually impact code coverage since it looks like this check was getting compiled out anyways . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , do not directly use cfe_test_msgids . h <section> for a user that has customized cfe_msgids . h , this will get conflicting values . if / when users have migrated to module - specific msgid files , this will be ok , but for now this can break things . fixes # <number> <section> build using override of <code> ( only ) . <section> no conflicting msgids if user has overridden <code> but not <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case <section> setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build with cfe_mission_time_cfg_default_utc = = true <section> build and test succeeds <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not directly use cfe_test_msgids . h <section> for a user that has customized cfe_msgids . h , this will get conflicting values . if / when users have migrated to module - specific msgid files , this will be ok , but for now this can break things . <section> build and run tests <section> no conflicts if user has modified <code> but not <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case <section> setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build and run <allcaps> cfe time </allcaps> tests <section> tests now pass as expected <section> debian <section> joseph hickey , vantage systems , inc ."
"testcase code should not directly include "" cfe_test_msgids . h "" ( yet ) <section> the module - specific header file is a relatively new addition . but for a user that has overridden the previous all - inclusive <code> file , including the test_msgids . h directly will cause conflict with the overrides . <section> override ( only ) <code> in a build , and change the msgids in here . do not override cfe_test_msgids . h . attempt to build cfe_testcase - - the <code> inclusion will bypass the modified msgids , and get defaults , which will conflict / mismatch . <section> should be backward compatible with an existing override of <code> <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , set atleapseconds in externaltone test case <section> setting this value to <number> allows it to get the same result regardless of the setting of cfe_mission_time_cfg_default_utc . fixes # <number> <section> build and run coverage tests <section> <allcaps> time </allcaps> test will pass with cfe_mission_time_cfg_default_utc = = true <section> debian <section> joseph hickey , vantage systems , inc ."
"<allcaps> cfe time </allcaps> coverage test fails if set to use <allcaps> utc </allcaps> <section> when configuration is set to use <allcaps> utc </allcaps> , the "" externaltone "" test case will fail . <section> configure <code> to be true , then compile and run coverage tests . <section> the test should pass regardless of how this configuration item is set . <section> debian <section> this is because it adds leap seconds into the <code> value only when set to use <allcaps> utc </allcaps> . the leap seconds were not configured by this test case , so it still has a value from a previous test case , which is <number> . this larger - than - expected jump causes it to go into the <code> result case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe to prefix list for msgids . h and platform_cfg . h <section> this allows the script to pick up the file if it was named simply "" cfe_msgids . h "" or "" cfe_platform_cfg . h "" , rather than insisting it be named with a platform - specific prefix fixes # <number> <section> build and run with stakeholder configuration <section> a file named <code> is picked up by the build system , as expected . <section> debian <section> joseph hickey , vantage systems , inc ."
"the include file wrapper script does not pick up a "" cfe "" prefix file <section> the include file wrapper script looks for a name - qualified file to use for e . g . <code> and <code> . this means that the file provided in the "" defs "" directory needs to be named based on the config , for example <code> or <code> . <repeated> then this file gets wrapped as <code> for c source files to use . this pattern has some advantages , in that only one copy of a file actually named <code> will exist on the disk , therefore it is clear ( er ) which one is actually getting picked up . however , this name difference / mapping is not well documented and can be confusing or unexpected to some users . <section> create a customized <code> file in the defs dir , and run "" make prep "" observe that the default msgids from <allcaps> cfe </allcaps> were picked up , not the customized version . <section> the customized version should be picked up . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> - cfe_time_print ( ) calls strftime ( ) * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> cfe_time_print ( ) calls strftime to format times and returns a status code rather than creating a syslog entry . note that this may be expanded to allow this to be configurable or parameterized ( although <allcaps> evs </allcaps> may just call strftime directly . ) re - introduced from # <number> . # <number> , # <number> reverted this pr . also collapsed epoch defines to <allcaps> seconds </allcaps> and <allcaps> micros </allcaps> for more performance and simpler configuration . <section> standard build and ut tests updated . <section> function returns cfe_status_t status . _note_ strftime uses time_t which *may* be <number> - or <number> - bit and *may* be signed or unsigned , depending on the platform . <section> ubuntu <number> . 0 4 lts <section> <url> <section> none . <section> <email>"
"fix # <number> , revert "" merge pull request # <number> from cdknightnasa / fix - <number> - time_fmt "" * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> reverts # <number> - fixes # <number> <section> n / a <section> # <number> is removed . <section> n / a <section> dylan z . baker - <allcaps> nasa gsfc </allcaps>"
push off pr # <number> to equuleus - rc2 <section> it has been decided that # <number> should be put into equuleus - rc2 to limit major changes to this release . <section> pr # <number> is reverted . <section> n / a <section> dylan z . baker - <allcaps> nasa gsfc </allcaps>
"fix # <number> , split up and simplify control flow in <code> <section> - fixes # <number> - first chunk of issues listed in <url> - this pr addresses the high cyclomatic complexity of <code> main change here was to pull out the logical blocks of work into helper functions . <section> _ <section> _ simplified the size checks to just a single check and report ( old ] ( <url> [ new <url> . can revert this change if the extra verbosity is desired . previously , if any of the name size checks failed ( and <code> status was set ) , the code would then still run on to verify the specific table options flags ( and re - assign another error code on top of <code> if this failed ) . have updated this logic to only enter the <code> checks if the size checks pass successfully . no need to continue execution if error status already set . _ <section> _ previously the code would search for an access descriptor even if already in error status here ] ( <url> this is unnecessary if already in error status so have changed this conditional to just check for <code> ( [ link <url> . in <number> locations inside the this same main table registration block there were status guards of the form <code> . i have reduced the nesting in this section , and simplified these checks to just check for <code> . the only non - negative ' warning ' status possible there was <code> , which was already being filtered out anyway . also , these warning ( i . e . non - success , non - error ) status / return codes are intended to be deprecated <url> anyway . _ <section> _ simplified this ] ( <url> true / false assignment to [ this <url> . note there are a few open issues already for specific issues inside <code> : - <url> - <url> - <url> ( this one is fixed by this pr as well ) <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing also conducted to confirm all variables and syslog strings printing as expected etc . <section> minor control - flow changes noted above . in general this pr will : - make unit testing much simpler / easier - ease future maintenance - reduce technical debt - ease use of cfe by developers <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"split up and simplify control flow in <code> <section> - first part of <url> <section> <url> <section> split up <code> , and try to simplify control flow and conditional logic a bit - it currently stands at <number> lines and several dozen branches . <repeated> will make testing and future maintenance easier . <section> avi weiss <user>"
"more script - friendly testcase mode <section> currently , the <allcaps> cfe </allcaps> workflow invokes cfe_testcase which runs all functional tests . however for performance testing it may be important to run certain tests in isolation . <section> allow some method where the user can limit the run to certain test case ( s ) . <section> one alternative could be to split cfe_testcase into separate apps . however this would entail some duplication / overlap between them . it would also require prior knowledge of which tests would be "" allowed "" to run in isolation . would prefer a solution where any test ( including the regular functional tests ) could be run in isolation - this is helpful if e . g . an error occurs in that test and a developer wants to run only that test for debug . <section> joseph hickey , vantage systems , inc ."
"implement multi - thread version of bulk transfer test <section> previous pull request # <number> implemented a "" first pass "" speed test for software bus - but it single threaded , in that the same thread is doing both the "" send "" and "" receive "" side of the transaction . while this gives a general idea of the execution time / cost of these apis , it does not indicate how well they scale across threads . <section> in real usage , it is ( almost ) always different app doing the "" send "" and "" receive "" calls . therefore , it is important to also know how well these sb apis scale across multiple threads / tasks . that is - they involve several "" critical sections "" - and the logic inside these sections runs only in a single task at a time . this will affect the level of concurrency possible between send and receive operations - and this is an important measurement to gauge the efficiency of the <allcaps> sb api </allcaps> . <section> this would be similar to the test done in pr # <number> but using separate tasks to do the sb operations . <section> joseph hickey , vantage systems , inc ."
"github check for pr ' s that make cfe take more <allcaps> cpu </allcaps> time <section> pull requests that significantly alter the performance character of the cfe software , particularly if that change makes cfe run slower , should be elicit inspection and require a good explanation . <section> the "" time "" unix command provides the "" <allcaps> cpu </allcaps> time "" that a process takes to completion . this is independent of wall clock time , and should provide a consistent measure of performance under varying github workflow conditions . i propose a github workflow to check the <allcaps> cpu </allcaps> time against a standard , akin to what we do currently with coverage testing . <section> we have been discussing adding <allcaps> cpu </allcaps> time calls to the <allcaps> psp </allcaps> so that cfe users can take measure of <allcaps> cpu </allcaps> time utilization . this should be a follow - on project , as vxworks and other <allcaps> rtos </allcaps> may not have the same apis or commands . <section> see <url> see <url> <section> <email>"
"fix <number> evs fmt mk2 joe , for your consideration , another pass at the "" % f "" and strftime code . this simplifies it a bit ( but only supports one "" % f "" in the format string . )"
"fix # <number> , refactor sb to support additional use cases <section> cleans up the internal sb implementation so it can better support future enhancements such as message integrity , additional header fields and timestamping . fixes # <number> <section> full suite of tests on sb implementation <section> <allcaps> api </allcaps> behavior is preserved , fully backward compatible <section> debian <section> replaces # <number> based on code review and discussion . this pr represents the refactoring change , along with some other refinements . the routing change will be a separate pr . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement sb bulk transfer test <section> add a functional test that moves a large number of messages across the bus as fast as possible ( i . e . with no delay ) . the process is timed , thus offering some metric as to the single thread / single core performance of the software bus implementation underneath . note that due to vast differences between hardware , results should only be compared between successive runs on the exact same hardware , such as before and after a change was made . fixes # <number> <section> execute test before and after changes made <section> introduce some form of performance check for sb implementation <section> debian <section> the test itself only shows microseconds elapsed ( because this metric is available from the <allcaps> psp </allcaps> today ) but the software can also be run under an external profiling tool for more info . <section> joseph hickey , vantage systems , inc ."
"implement software bus bulk transfer functional test <section> requests have been received to include software bus performance as part of the test matrix . <section> start by implementing a functional test case ( as part of cfe_testcase ) that emulates using the software bus for bulk message transfer , by sending a fixed large number of messages ( e . g . <number> million ) . this process can be timed , and this in turn will give some indication of relative performance of the implementation . <section> this obviously could be much more sophisticated . the proposed test only covers the simplest case , in single thread / single core context , and the results are only comparable to successive runs on the exact same hardware with the same compiler and same compiler flags . nonetheless , monitoring the result before and after a change will provide at least one simple metric of whether that change affects performance or not . a follow - on change should perform a similar test with multiple threads , and thus give some metrics to how well sb scales across cores . <section> joseph hickey , vantage systems , inc ."
"software bus refactoring needed to prepare for future needs <section> requests have been received for software bus features such as : - better message integrity checking - better control over message routing and delivery - timestamped commands ( not just <allcaps> tlm </allcaps> ) <section> the software bus can support all of this but the internal workings need some refactoring and clean up to make it possible to fully integrate such features without duplicating the code . <section> n / a <section> breaking up the software bus functions into smaller bits of functionality allow for : - different transmit / receive variants to use the same basic logic - easier unit testing and maintenance of smaller routines - reduced cyclomatic complexity of smaller routines - more code re - use between the two this needs to be implemented before # <number> can be done . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add code coverage for null check * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . fix # <number> update code coverage test for cfe_es_genpoolrecyclepoolblock and cfe_es_genpoolcreatepoolblock for null pointer check . <section> steps taken to test the contribution : <number> . build <allcaps> simulation </allcaps> = native enable_unit_tests = true prep <number> . make <number> . make test <number> . make lcov <section> no impact on behavior <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions . anh van , <allcaps> gsfc </allcaps>"
"fix # <number> , use <code> for variables / parameters representing size <section> - fixes # <number> - updated size variables / parameters to <code> where appropriate <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> some signed variables changed to unsigned but it would have been illogical / impossible to input negative values in those cases . <section> avi weiss <user>"
use <code> for variables / parameters representing size <section> some variables / parameters in cfe representing size could be updated to the more expressive <code> typedef . most cases are already <code> and are assigned values from other <code> types or sent into functions expecting <code> parameters anyway . <section> update to <code> where appropriate . <section> avi weiss <user>
"fix # <number> , add timestamp for sb messages which are missing it <section> - fixes # <number> - adds timestamp for <number> messages that were sent without it - also updates mention of old function name in docs ( <code> ) <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> messages will be stamped with updated time before being sent . <section> avi weiss <user>"
"fix # <number> <allcaps> tbl ut </allcaps> update for <allcaps> osal </allcaps> / <allcaps> cfe </allcaps> path length mismatch <section> fixes # <number> <section> see reproduction steps from linked issue <section> tests should pass even if <code> is less than <code> <section> - hardware : intel xeon <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> - versions : trunk <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license no third party code <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"<allcaps> osal </allcaps> path length variables cause <allcaps> tbl </allcaps> tests to fail <section> a clear and concise description of what the bug is . for certain values of <code> and <code> , tests for <allcaps> tbl </allcaps> ( and the ds application ) fail . i suspect that the tests are making assumptions about the maximum values these can be set to . <section> steps to reproduce the behavior : <number> . build <allcaps> fsw </allcaps> with <code> set to <number> and <code> set to <number> <number> . test with <code> <section> a clear and concise description of what you expected to happen . expect tests to pass . <section> if applicable , add references to the software . <code> <section> - hardware : intel ( r ) xeon ( r ) <allcaps> cpu </allcaps> e5 - 2 6 8 7 w v4 @ <number> . 0 0 ghz - os : centos <number> linux - versions : draco - rc3 tags for cfe , <allcaps> osal </allcaps> , and apps <section> add any other context about the problem here . related issue in ds : <url> <section> full name and company / organization if applicable isaac rowe , <allcaps> nasa jsc </allcaps> / jacobs technology"
"cfe integration candidate : caelum - rc4 + dev53 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , adds <allcaps> time </allcaps> module command to set cfe_time_print ( ) format * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> adds a <allcaps> cfe time </allcaps> command to configure how to print time information , mostly used by cfe_evs to print to stdout , and <allcaps> cfe es </allcaps> for writing to syslog . <section> build and test using standard cfe coverage tests which have been updated to test different formats and error conditions . <section> enhances cfe_time_print ( ) function and allows for more concise and helpful timestamps . <section> ubuntu <number> desktop vm . <section> <email>"
"fix # <number> , add source routing apis to sb <section> add two new apis that allow more control over the message routing . these allow the caller to directly specify the route ( msgid ) and size of the content , and the message will be delivered based on the passed in values vs . the values inside the message itself . this restructures the existing / historical <allcaps> api </allcaps> calls to use the same underlying mechanism . send / receive actions have a transaction object associated and this tracks the status and events . common event reporting is done based on this transaction object . fixes # <number> <section> build and run <allcaps> cfe </allcaps> including functional test app build and run sanity tests <section> adds two new apis . existing apis should be backward compatible , with some possible changes to the expected event ids that might be generated under some off - nominal conditions . <section> debian <section> the new <allcaps> api </allcaps> allows the passed object to be any arbitrary data - - it does not need to be a <allcaps> cfe </allcaps> / <allcaps> ccsds </allcaps> message at all . therefore this could be more suitable for things like <allcaps> cfdp pdu </allcaps> packets , etc . as it would not need to be forced to look like a <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increase cfe_platform_evs_app_events_per_sec to <number> * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> increases cfe_platform_evs_app_events_per_sec to <number> fixes # <number> <section> executed functional tests and confirmed that the results are no longer being squelched . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
functional test results are being squelched <section> functional test results are being squelched such that it appears the tests are not executing successfully . <section> run functional tests <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , increase slp time in funct test workflow * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> increase the wait time required to call a test ' frozen ' . this will prevent tests from erroneously being called ' frozen ' and allow the tests to complete successfully . fixes issue # <number> <section> ran workflow <section> tests complete successfully <section> dan knutsen <allcaps> nasa </allcaps> goddard"
github workflow does not allow enough time for all functional tests to run <section> the current functional test workflow will exit because it thinks the functional tests are frozen if they exceed <number> seconds . <section> run workflow <section> the time required to call a test ' frozen ' should be increased such that all tests can finish successfully <section> dan knutsen <allcaps> nasa </allcaps> goddard
"fix # <number> , update comment re . limits of <section> - fixes # <number> - updates out - of - date header comment regarding the limits of <code> - some typo fixes included <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior - documentation changes only . <section> avi weiss <user>"
"make <allcaps> evs </allcaps> stdout timestamps configurable <section> currently the <allcaps> evs </allcaps> output includes a full timestamp of <code> which , for most users , is too much information ( how likely are you going to run cfs for years ? ) and creates a lot of noise in the output . instead , <allcaps> evs </allcaps> should be configurable ( compile - time , load - time , or run - time ) to control what output timestamp format it should use . <section> a runtime - reconfigurable timestamp , at minimum the format string to use for strftime , plus "" % f "" ( not part of the c standard , but adopted from the python strftime <allcaps> api </allcaps> ) for the microseconds . additionally , instead of "" clock time "" , have an option to switch to "" seconds since start "" and / or "" seconds since timer reset "" with an associated reset command . <section> leaving well enough alone . <section> see also <url> <section> <email>"
"cfe integration candidate : caelum - rc4 + dev52 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> - cfe_time_print ( ) calls strftime ( ) * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> cfe_time_print ( ) calls strftime to format times and returns a status code rather than creating a syslog entry . note that this may be expanded to allow this to be configurable or parameterized ( although <allcaps> evs </allcaps> may just call strftime directly . ) also collapsed epoch defines to <allcaps> seconds </allcaps> and <allcaps> micros </allcaps> for more performance and simpler configuration . <section> standard build and ut tests updated . <section> function returns cfe_status_t status . _note_ strftime uses time_t which *may* be <number> - or <number> - bit and *may* be signed or unsigned , depending on the platform . <section> ubuntu <number> . 0 4 lts <section> <url> <section> none . <section> <email>"
"fix # <number> , update readme_functionaltest . md * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> updates readme_functionaltest . md to include sample_app in startup script . fixes # <number> <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , make shared tbl configurable * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> this fix makes the shared table used in the cfe functional tests project configurable fixes # <number> <section> executed functional tests and confirmed that the tests were successful . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , use <code> to swap between ping - pong buffers ( style change only ) <section> - fixes # <number> - changes swap pattern for ping - pong buffers from <code> to <code> . <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , format update for additional counters in summary * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> format update to support additional counters in functional test summary . fixes # <number> <section> executed functional tests and confirmed output is as expected . <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , rename overloaded <code> to <code> <section> - fixes # <number> - renames overloaded ( and confusing ) <code> type to <code> <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , sb_ut corrections and clear event count history after setup <section> - fixes # <number> - clears event history after setup calls and updates <allcaps> eventcount </allcaps> asserts to the lower number of events only expected from the test under question ( rather than including the total events from the setup calls as well ) while looking at this , i realised that lots of tests were checking events related the ' setup ' , not the actual function that is the focus of the test . for example , there are dozens of asserts for <code> and <code> - even though <code> and <code> have their own tests . <repeated> these asserts are largely redundant and just add clutter to the tests - i have removed the obvious cases from the tests i was already updating with <code> . <code> was checking for <code> and <code> which are part of the setup , not the function under test . i changed this to check for the command counter being incremented instead . <code> , <code> and <code> were checking for <code> . they should really be checking for <code> given that <code> is the focus of these tests . - in the case of <code> , it was actually sending a <code> event . the reason this wasn ' t noticed may be because <code> returns <code> ( and sends the <code> event ) if the pipe is not subscribed to the <code> . - i have amended the test to subscribe using <code> , instead of <code> , and now the call to <code> in the test actually works and returns <code> while sending the <code> event . even though these are coverage tests , they should still be clear and at least check for what they are testing . <repeated> <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing confirms net coverage unchanged . <section> no change to code behavior . test behavior updated as described above . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev51 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix nasa # <number> - adding cfe_time_stringfmt ( ) and cfe_time_stringfmtlen … … ( ) functions * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> , adds cfe_time_stringfmt ( ) and cfe_time_stringfmtlen ( ) functions that behave similarly to strftime ( but limited to % y [ y <elongated> ] , % j [ doy ] , % h , % m , %s , % f [ micro ] ) . cfe_time_print ( ) calls cfe_time_stringfmt ( ) . <section> added ut tests , all pass . <section> no impact to behavior , adds capabilities ( that will be extended to <allcaps> evs </allcaps> so that log message timestamps can be configurable . ) <section> - hardware : pc - os : debian "" bookworm "" ( <number> ) - versions : <allcaps> head </allcaps> of main branch of cfe <section> an alternative would be to use strftime , if all target platforms include it . this would allow for month / day - of - month and other options this code does not include and would be difficult to implement . <section> none <section> <email>"
"fix # <number> , update <code> macro in es_verify . h <section> - fixes # <number> - updates the compile - time checks on <code> ( which does not exist anymore ) to the new macros <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing confirms the checks are behaving as expected when invalid values for the <number> macros are used : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> checks will actually check what they intended to now . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"out - of - date <code> macro in cfe_es_verify . h <section> <code> was split into <code> and <code> , but the checks in cfe_es_verify . h got missed ( so this check is not actually checking anything right now ) . <section> <url> <section> update this compile - time check to use the new macros . <section> avi weiss <user>"
"fix # <number> , rename timea / timeb parameter to improve consistency <section> - fixes # <number> - converts <code> / <code> parameter names to <code> / <code> - making all consistent across cfe ( the other option is to reverse this and convert the others to timea / timeb ) - also converts the enumerated types <code> and <code> to <code> and <code> to remain consistent - some test strings using timea / timeb also updated for consistency note : if this pr is merged it will require a minor update to sc which utilises the <code> enumerated type here <url> and in a couple of tests . <section> github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> <section> avi weiss <user>"
inconsistent use of time1 / time2 timea / timeb parameter names <section> <code> and <code> use <code> and <code> to name their time parameters . <code> uses <code> and <code> . was noted here <url> but does not have an issue open that i could find . <section> <url> <url> <url> <section> make consistent . <section> avi weiss <user>
"fix # <number> , refactor common logic out of <code> <section> - fixes # <number> - near - identical logic in <code> , <code> and <code> has been factored out into a helper routine . <section> github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . local tests confirm the modified commands are working as expected : screenshot <number> - <number> - <number> <number> <number> <number> <img> net coverage is unchanged ( total lines reduced by <number> , total branches reduced by <number> ) . <section> behavior / logic is unchanged . code duplication reduced , easing future maintenance . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"refactor common logic out of <code> <section> near - identical logic in <code> , <code> and <code> . was noted here <url> but does not have an issue open that i could find . <section> <url> <section> pull common logic out into a helper function to reduce duplication and make code more readable / maintainable . <section> avi weiss <user>"
"fix # <number> , add msg verify capability <section> adds a "" verify "" <allcaps> api </allcaps> to the msg module . this always returns success in the default implementation , because checksums were not historically enforced . however it can be made more strict in a custom implementation . fixes # <number> <section> build and run tests ( <allcaps> api </allcaps> is not used yet ) <section> none at this time , follow on change to enable it <section> debian <section> joseph hickey , vantage systems , inc ."
"add <allcaps> msg api </allcaps> hook to validate a message prior to returning buffer from sb <section> if a user wants to add additional error checking within the header fields , such as a <allcaps> crc </allcaps> , there is currently no easy way to validate the value as part of the receive buffer process . <section> add a hook to validate the message before returning from sb . <section> this can be a no - op in the default build , as only the cmds have a ( weak ) checksum , and that was never really enforced / checked in <allcaps> cfs </allcaps> anyway . so for backward compatibility the implementation should be permissive . but if the user has customized <allcaps> msg </allcaps> with additional fields and logic , they could implement more validation using this hook . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , generalize update header parameter <section> expand the "" increment sequence "" boolean on transmit message functions to be a more general "" update header "" boolean , so it can be used for other fields like timestamps , checksums , or user - defined fields too . fixes # <number> fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check , confirm headers are as expected <section> headers will be updated more consistently / generically . * note - - * messages classified as commands will have headers updated , too - specifically the sequence count and checksum . this will apply to messages being created by <allcaps> sch </allcaps> / sch_lab , and the time signals sent by <allcaps> cfe time </allcaps> . previously the sequence counter was not set in any of these messages , so it would have always been zero . hence receivers would not be relying on it for anything , and thus setting it nonzero should not break anything , either . but there is a slight chance that some code had a dependency on this always being zero . <section> debian <section> joseph hickey , vantage systems , inc ."
"allow updating more than just sequencecount on message transmit <section> currently , the cfe_sb_transmitmsg ( ) <allcaps> api </allcaps> has a second parameter , to update the sequence count of the outgoing message . this was a bit short - sighted because the <allcaps> msg </allcaps> headers are user - configurable ( via customizing the <allcaps> msg </allcaps> module ) . <repeated> it is possible that there is more than just a sequence count that needs to be maintained . if users can add custom header fields , this hook needs to be more generic to update other headers . <section> generalize the boolean to mean "" update headers "" ( thus not limited to a sequence count ) . this would include a sequence count , of course , to not break existing code . <section> other headers that could conceivably be updated , if applicable to the message being sent : - timestamp - checksum / error control field <section> joseph hickey , vantage systems , inc ."
"uninitialized variable possible in evs_sendviaports <url> there is a possibility of an uninitialized variable in evs_sendviaports in cue_evs_utils . c . i do not have a running example , problem found using static analysis with grammatech codesonar , screenshot attached . screenshot <number> - <number> - <number> at <number> <number> <number> pm <img> line <number> calls cfe_msg_getmsgtime ( cfe_msg_ptr ( evs_pktptr - > telemetryheader ) , & pkttime ) ; this function is in cue_msg_sechdr_time . c however , if either the first , or the second parameter is <allcaps> null </allcaps> , then that function will return cfe_msg_bad_argument on line <number> of that file . second parameter is unlikely to be <allcaps> null </allcaps> as it is a pointer to a local variable from evs_sendviaports ( ) . which means it does not initialize pkttime , which is subsequently used in the cfe_time_print call . this may not be a problem if the compiler initializes local variables to <number> , but there is no guarantee on that . pkttime is used in a time calculation to convert epoch to calendar time , so worst case this could take a long time , and / or print garbage . probably would be better to check the return of the call to cfe_msg_getmsgtime and set pkttime to <number> if cfe_msg_bad_argument is returned ."
"cfe integration candidate : caelum - rc4 + dev50 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , refactor <code> to simplify and unmix variables <section> - fixes # <number> - loop simplified , and avoids mixing of <code> / <code> during the loop ( must mix at the end of the function to avoid multiple returns ) - a few documentation typos also corrected in this pr <section> github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . local testing to confirm net coverage unchanged and test commands also fine . <section> no change to behavior . function is cleaner / simpler which eases future maintenance . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , remove unused cfe_platform_es_reset_area_size <section> fixes # <number> remove unused define cfe_platform_es_reset_area_size <section> pipeline passing <section> no impact to behavior <section> - pipeline <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps> <number>"
"fix # <number> , remove unreachable / dead branch in <code> <section> - fixes # <number> - as noted in the issue , no way that <code> can be <code> - making the negative branch here unreachable <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . this pr ( slightly ) increases coverage by one branch by removing an unreachable branch . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , remove redundant status check in <code> <section> - fixes # <number> - additional status check was made redundant with the changes here <url> in <url> <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . this pr ( slightly ) increases coverage by one branch by removing an unreachable branch . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , adjust ut pool buffer size for platform config <section> if the cfe_platform_es_max_block_size is increased , then increase the ut pool buffer accordingly . this had been hardcoded to 1 2 8 k . also consider pool exhaustion to be a fatal error , as continuing the test will certainly segfault and this makes the original error harder to spot . fixes # <number> <section> build and run <allcaps> tbl </allcaps> test with configuration specified in issue . <section> <allcaps> tbl </allcaps> tests pass with larger sizes . <section> debian <section> pool buffer being too small will also now stop / abort the test , as this is a bug that will certainly segfault later , better to stop and report the error more obviously . <section> joseph hickey , vantage systems , inc ."
"remove unused define cfe_platform_es_reset_area_size the define is not needed anymore and is currently unused . now the "" <allcaps> psp </allcaps> ( using <code> ) informs es of what the total reserved memory area is , and es informs <allcaps> psp </allcaps> of how to organize / partition it . "" <url>"
"fix # <number> , add element to write error event in <code> <section> - fixes # <number> - adds element number to the event that reports a write error in <code> to provide more context for operations / ground personnel <section> github ci actions all passing successfully ( incl . build + run , coverage / functional tests etc . ) . <section> no change to behavior other than the variable added to the <code> mentioned above . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev49 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove unnecessary asserts in <allcaps> time </allcaps> invalid command length ut <section> - fixes # <number> - removed asserts of command counters in the tests for commands sent with an invalid command length . checking for <code> seems sufficient , and aligns <allcaps> time </allcaps> with the testing pattern in the other cfe modules . <section> github ci actions all passing successfully ( incl . build + run , unit / functional tests etc . ) . local testing with cfs suite confirms no change to coverage . <section> this simplifies the coverage tests and makes them easier to maintain . also , <allcaps> time </allcaps> is now consistent with the other modules . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
<allcaps> time </allcaps> includes unnecessary asserts in invalid command length tests <section> <allcaps> time </allcaps> is the only module that also checks the command counters in the coverage tests for commands issued with an invalid length . <url> the others : <url> <url> <url> <url> <section> can simplify the unit tests for <allcaps> time </allcaps> by removing these extra asserts - checking for <code> being sent seems sufficient . <section> avi weiss <user>
"cfe is inconsistent on whether to increment error counter in case of invalid <allcaps> mid </allcaps> <section> <number> / <number> of the cfe modules that have command pipes , increment the <code> when an invalid <allcaps> mid </allcaps> is received ( es , <allcaps> evs </allcaps> and sb ) . <section> <url> <section> <url> <section> <url> <number> / <number> do not ( <allcaps> tbl </allcaps> and <allcaps> time </allcaps> ) . <section> <url> <section> <url> <section> even though this should never actually occur - it should be consistently implemented across cfe . of note : most , but i believe not all , of the apps do increment their <code> when an invalid <allcaps> mid </allcaps> is received . <section> avi weiss <user>"
"fix # <number> , reorganize headers <section> reorganizes all the headers in <allcaps> cfe </allcaps> to make them comply with the naming convention as described in the developers guide section <number> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> in a variety of configurations <section> header files are split into smaller parts , more manageable . should be backward compatible . <repeated> <section> debian <section> the smaller , more granular header files are not only easier to maintain ( if maintained by hand ) but also are more easily switched to a generated source . it is important to compartmentalize the contents because "" source switching "" will not work if different types of definitions are mixed in the same header . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , uniqueness of tbl target names <section> if the passed - in table name does not use a qualifier suffix , then generate one by computing a hash of the context information . this ensures that the generated intermediate target names will be unique . fixes # <number> <section> replicated original error by doing additional "" add_cfe_tables "" for sample app in local project config , got duplicate name error from cmake . apply this patch , repeat build , and got all table files successfully . <section> no more target name conflict <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct unbalanced brackets in <code> macro <section> - fixes # <number> - unbalanced brackets / parentheses corrected <section> github ci actions all passing successfully . <section> balanced brackets - could avoid future compiler warnings / errors or code bugs if not picked up by the compiler . <section> avi weiss <user>"
"wrong closing parenthesis in cfe_msg_cmd_hdr_init macro the cfe_msg_cmd_hdr_init macro ' s parentheses are not properly balanced . the cfe_msg_cmd_hdr_init macro contains a ' ) ' instead of a ' } ' in line <number> as of latest commit [ f9112b4 ] on <date> file : nasa / cfe / modules / msg / option_inc / default_cfe_msg_hdr_priext . h simple inspection shows the problem . opening and closing parentheses should be balanced . line <number> : . systemid = { <number> , <number> ) \ matthias bark , boeing"
"create cfe_time_printfmt ( ); <section> currently the <code> function only produces <code> <url> formatted timestamps . cfe_evs now uses that for stdout messages , which adds quite a lot of text . <section> i suggest the addition of a new <code> function , a - la <code> ( preferably using <code> , if that is available on all our target platforms ) so that applications can produce a time - only format , for example . additionally , i suggest a "" t + "" format for such things as <allcaps> evs </allcaps> stdout output where the first report is the full timestamp for "" t0 "" and all subsequent messages are the number of seconds ( <code> ) after the t0 epoch for even more storage efficiency and readability . once this capability is created , <allcaps> evs </allcaps> should be modified to allow configuring the format . <section> another option is to use something other than <code> in evs_sendviaports ( ) <url> . <section> see the related pr # <number> <section> <email>"
"uniqueness of intermediate table target names <section> previously , each table "" . c "" source file was built into its own static library target based on that source file name . this had the side effect of creating lots of complexly - named static lib targets . with recent changes , this is changed to build all listed table source files listed into a single , simpler - named target . now a new problem occurs if one tries to build table files separately . for example , something like this : <code> will both try to register a static lib target named <code> , which results in a target name collision error . <section> invoking <code> as above should work without a target name collision . <section> the <code> does allow for a name suffix , which is used as part of the lib name - so as long as that suffix is unique , there is no name collision . for example , this works : <code> and listing mutiple source files works too : <code> it is only the case of multiple invocations of <code> with the _same_ first parameter that triggers this conflict . <section> unfortunately , we had previously documented / recommended the first parameter of <code> to match the app name , so there may be more users that were following the problematic pattern above ( <number> is confirmed ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update <allcaps> xml </allcaps> files per interoperability testing <section> verify the <allcaps> json </allcaps> files generated from <allcaps> eds </allcaps> match the expected content and <allcaps> ctf </allcaps> - based tests also pass . this required a few touchups to <allcaps> xml </allcaps> files to adjust sizes and / or padding . fixes # <number> <section> convert <allcaps> eds </allcaps> to <allcaps> json </allcaps> and run <allcaps> ctf </allcaps> - based tests using generated files <section> none <section> <allcaps> ctf </allcaps> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev48 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issues # <number> , # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , correct fallback file case <section> only include the "" fallback_file "" if the normal search came up empty . do not return a list containing the fallback / default along with the user - supplied files , only return the user - supplied files . this was an issue when using "" allow_list "" in that it had both . fixes # <number> <section> build with normal / default config , and build with overrides <section> overrides should work correctly again . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , simplify and clarify <code> logic <section> - fixes # <number> - removes duplication of incrementing the <code> - simplifies the function and makes logical flow a little clearer <section> github ci actions all passing successfully . would be good to add functional tests for this in the future - i noticed that changing the second block to just a simple <code> also passes all the coverage tests . <section> no change . <section> avi weiss <user>"
"fix # <number> , consistent use of <code> for <code> <section> - fixes # <number> - remaining <code> parameters / variables declared explicitly as <code> converted over to use the defined type note : <url> and <url> are unresolved but it seems unlikely the enum will be removed completely . i think it is worth clearing this issue up in the meantime - to improve consistency in cfe . <section> github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev47 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , document <allcaps> cfs </allcaps> component file naming <section> expand section <number> of the <allcaps> cfe </allcaps> application developer guide with recommended file naming patterns and the expected content of the files . <allcaps> cfs </allcaps> apps should strive to match this pattern for the next release . fixes # <number> <section> n / a ( documentation only ) <section> n / a ( documentation only ) <section> n / a ( documentation only ) <section> if approved , all apps / components should migrate to the described pattern in cases where they do not currently implement it . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add functional tests for cfe sb message id apis <section> - fixes # <number> - added functional tests for <code> , <code> , <code> and <code> . - renamed <code> to <code> to avoid confusion and better differentiate it from the new test file for the sb msgid tests created in this pr - couple text improvements and removal of trailing whitespace piggy - backing on this pr <section> github ci actions all passing successfully . <section> test code changes only . <section> avi weiss <user>"
"fix # <number> , remove else statement that was unreachable by unit tests * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> . <code> could only ever return <code> or <code> . removed else statement that would never be able to be reached . <section> unit tests <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
"fix # <number> , implement common command - handler return pattern across cfe <section> - fixes # <number> - major changes are to convert es , <allcaps> time </allcaps> and sb to the pattern already used by <allcaps> tbl </allcaps> and <allcaps> evs </allcaps> - namely , to increment the command counters centrally in the command processing function ( in xx _dispatch . c ) , rather than individually inside each command . - this results in a reduction of locations where <code> ' s are incremented from <number> to <number> , and <code> ' s from <number> to <number> - introduced the <code> macro which can be used by command functions to signal a general failure to execute their command . this macro can also be used by other cfs components and apps for command execution failures . summary of module - specific changes : <section> - move incrementing of command / error counters from the individual commands into <code> - there were <number> locations ( in <code> and <code> ) where <code> was returned during a failure / error event after the <code> was incremented . these now return <code> which improves the clarity of these functions . <section> - move incrementing of command / error counters from the individual commands into <code> - <code> , <code> and <code> were changed from <code> return type to <code> in order to carry through the result of their respective add / subtract versions over to <code> and increment the required counters <section> - move incrementing of command / error counters from the individual commands into <code> - removed the <code> helper function as it is no longer required with these changes - its functionality has been folded into <code> <section> - removed <code> ( essentially replaced by <code> - removed the <code> enumeration - the constants in this enum were already mapped to <allcaps> cfe </allcaps> macros anyway . the only real change here is that <code> which was previously mapped to <code> has now been replaced by the new <code> macro which was introduced in this pr . - _note : i have not added any deprecation for the removal of <code> or <code> - if this is required in this case , just let me know . _ - <code> erroneously noted a possible error return in doxygen comments - this has been removed as the function always returns <code> . _note : <url> which converts the remaining <code> return types to <code> ( along with most of the local <code> / <code> variables ) is complementary to this pr . _ <section> github ci actions all passing successfully . local testing with full cfs suite confirms net coverage unchanged . prior to changes : <code> after changes : <code> <section> behavior largely unchanged , other than the modifications listed above . cfe command - handling code is now simpler , more consistent and easier to maintain . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , add option to link to generated files <section> update the "" generate_config_includefile "" to be aware of generated files . this should not call cfe_locate_implementation_file ( ) in this context because the file may not exist at the time . for this type of use case it should just directly link the file without any checking . fixes # <number> <section> build hs ( with additional patch ) that needs this <section> files that are expected to be generated ( e . g . via <allcaps> eds </allcaps> tool ) do not need to exist . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve add_cfe_tables function <section> improves the functionality and adds additional documentation about how this function is intended to work . the improvements add some flexibility and intelligence and should be backward compatible with existing use cases . the add_cfe_app ( ) function now adds an additional interface target that can be referenced when building tables , and this includes the directory - scope properties from the original app build . therefore , calls to add_cfe_tables from other ( non - app ) contexts can get the full set of include directories . this also makes the target name simpler when adding custom properties , it is simply "" ${ app_name } . table "" finally , instead of invoking the table tool ( elf2cfetbl ) directly in the context of the table build rule , it generates a custom makefile rule instead , which is called from the top - level ( mission ) scope to do the conversions . fixes # <number> <section> build and sanity check table builds of <allcaps> cfs </allcaps> apps in a variety of configurations , with and without mission - provided overrides <section> updates to how the table tool is actually invoked <section> debian <section> this also sets up for an easier migration path to <allcaps> eds </allcaps> - based tables , as in this context the table building process must be run using a host - native compiler rather than the target compiler ( because <allcaps> eds </allcaps> , not the compiler , defines the binary layout ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , create workflow for ic bundle generation <section> a clear and concise description of what the contribution is . - addresses issue # <number> . <section> generated ic branch in fork . <section> adds new workflow for integration candidate branch generation . <section> dylan z . baker / <allcaps> nasa gsfc </allcaps> <number>"
"add option to generate an include wrapper for files that do not yet exist <section> a side effect of a recent change to <code> is that if the name specified fallback_file option does not exist , it now reports that as an error , whereas previously it would create a wrapper to the ( nonexistent ) file . the error is correct for most use cases , but if the underlying file is also generated , then there is an initial condition issue when running the build for the first time from a clean slate . <section> if the source for <code> is in turn also a generated file , should blindly create the wrapper and not check for existence . it should not even do the normal search in this case , as it would be incorrect to override a generated file with a static one . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> , add <allcaps> evs </allcaps> port timestamp and simplify port selection <section> - fix # <number> - fix # <number> <section> ci and on local build with time stamp enabled <section> adds time stamp when configured to do so <section> ci , ubuntu <number> <section> related but does not address ( although should make the change simpler ) : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove sparsely used <code> - related macros <section> - fixes # <number> - remove the <code> family of macros . they were nicely designed but used only a few times ( out of ~ <number> bit - check / manipulation expressions ) , so better to simplify and remove the abstraction . _note : there are <number> uses ( total ) of the <code> macros in sc and hs . _ <section> github ci actions all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"<allcaps> tbl </allcaps> tableoptionflags confusing <section> the <code> parameter specified when calling <code> is a bit map of flags . many of the <hashtag> define </hashtag> ' d flags are exclusive ( <code> and <code> , for example ) . in reality , <allcaps> sngl </allcaps> is the bit value of <code> and <allcaps> dbl </allcaps> is <code> . so , for example , if you have a bitfield with dbl_buffer defined , you have to <allcaps> and </allcaps> the <allcaps> sngl </allcaps> flag into it . <section> do not specify the "" default "" flag values as bit values , for example , only specify <code> and to switch back to single , you would <allcaps> and </allcaps> the negation of this bit field . also , often apis that have bit field flag specifiers allow callers to specify <code> for the parameter , and this usually means "" use the defaults "" . i believe this is the case with <code> but should be documented and confirmed as such . <section> leave as is . <section> <section> <email>"
"move <allcaps> tbl </allcaps> to use resourceid <section> other <allcaps> cfe </allcaps> core <allcaps> api </allcaps> ' s use resourceids when referring to resources ( tasks , apps , etc . ) <section> the <allcaps> tbl </allcaps> module should use a type based on resourceids , currently it uses int16 as "" table id ' s "" . <section> leave as is . <section> <section> <email>"
"cfe integration candidate : caelum - rc4 + dev46 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , implement common search routine for config files <section> adds a ' cfe_locate_implementation_file ( ) ' function that provides a consistent means to find a file within the ${ mission_defs } subdirectory . similar locate / search logic was necessary in a few places , for generate_config_includefile as well as add_cfe_tables , but these were not consistent in the paths or ordering used . using this function should make them consistent . fixes # <number> <section> confirm that the new file matching routine finds the same file as the old logic did <section> more flexibility with <code> <section> debian <section> currently this pr only employs the new logic for <code> . separate prs will switch <code> and any other logic used to search for other files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove return value doxygen markup the cfe_es_taskrecordsetfree ( ) function is a void , it should not have any documentation about return value . remove this line . appears to be a cut and paste error , produces a warning in newer doxygen versions . <section> fixes # <number> <section> build documentation <section> none <section> debian <section> joseph hickey , vantage systems , inc ."
"return code doc on void function cfe_es_taskrecordsetfree ( ) <section> the function <code> has a doxygen comment about a return value , but the function is <code> . newer doxygen versions appear to warn about this , older ones just ignore it . <section> run current version of doxygen , see warning <section> should be clean . <section> debian bookworm ( <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add syslog write for <code> timeout <section> - fixes # <number> - this pr adds a <code> for cases where the timeout is reached in <code> the output string looks like this : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> github ci actions all passing successfully . local sanity test with cfs bundle . <section> report on timeout , other than that no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"fix # <number> , add helper for <code> with common logic <section> - fixes # <number> - moves the common logic out of the <number> <code> functions into a helper function to reduce code duplication . the <number> different commands now call <code> with their personalised input parameters to perform the actual write . ( i was considering naming the new function <code> ) . <section> github ci actions all passing successfully . local testing shows net coverage ( for the full cfs bundle ) is unaffected and the changes result in a net reduction of <number> lines and <number> branches . before the changes : <code> after the changes : <code> <section> no change to behavior . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"incorrect include directories when using add_cfe_tables outside app <section> if the <allcaps> tgtname </allcaps> variable is set when this function is called , the function does not examine the include directories of the app ( via the app_name parameter ) . as a result , when this function is used in a custom setting to provide a mission - specific table definition , the include directories used will be different than when this function is used from the context of the app receipe itself . <section> if app_name is valid and is an app target name , then the target <code> for that app should always be included in the table build . currently when this function is used outside the app build context , it tries to get include_directories for a "" cpu1 "" target , which does not exist , and produces an error . <section> this include directory problem only occurs when trying to use customized table files , rather than the default / example files included with apps . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , move calls to cfe_sb_getpipename ( ) up higher to reduce duplication <section> - fixes # <number> - <number> calls to <code> reduced to <number> by moving it up to the start of the <code> loop block . the <code> is now ready to use in any of the error blocks if needed . <section> github ci actions all passing successfully . a couple of the coverage tests which were checking the error conditions but suppressing the actual sending of an event now have the extra event generated by <code> from earlier in the <code> block . <url> will remove the event from nominal execution of <code> anyway , so these event counts will go back down once that is merged ( also the call will no longer be ' indirectly recursive ' ) . <section> no change to behavior other than that described above . <section> avi weiss <user>"
move calls to <code> to reduce code duplication in <code> <section> these <number> calls to <code> in <code> could be reduced to <number> if it was moved up a bit higher to just after the opening of the <code> loop block . <section> <url> <section> reduce unnecessary code duplication . <section> avi weiss <user>
"fix # <number> , move calls to <code> higher to reduce code duplication <section> - fixes # <number> - <number> calls to <code> in <code> reduced to <number> by moving the call up <number> layer in the nesting . <section> github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
move calls to <code> to reduce code duplication in <code> <section> these <number> calls to <code> in <code> could be reduced to <number> if it was moved up a bit higher . <section> <url> <section> reduce unnecessary code duplication . <section> avi weiss <user>
"fix # <number> , add <allcaps> null </allcaps> check for appfilename parameter in cfe_es_reloadapp <section> - fixes # <number> - adds check for <code> input for the 2 nd parameter in <code> - <code> previously only the 1 st parameter , <code> , was directly checked for <code> <section> github ci actions all passing successfully . coverage unaffected . <section> will fail faster / earlier with <allcaps> null </allcaps> input for <code> clearer error logs ease future maintainability and debugging . <section> avi weiss <user>"
"fix # <number> , align padding explicitly in cfe_tbl_msg . h <section> - fixes # <number> - the <number> - byte implicit padding in <code> as noted in the issue has been made explicit , and my testing showed <number> - byte implicit padding on the end of <code> as well , which has also been rectified and made explicit . note : if this is merged , it will require updates to <code> in the ground system tool to ensure clean and correct interpretation of the data members . <section> github ci actions all passing successfully . local testing confirms all cfs bundle tests passing and coverage unaffected . <section> compilers trying to align to <number> - bits will not longer add implicit padding in these <number> locations . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"cmake . <repeated> / has error cmakeoutput . log <url> <section> a clear and concise description of what the problem is . ex . i am always frustrated when [ . <repeated> ] no cmake <allcaps> cli </allcaps> cmd for build in readme , md <section> * * my cmake has many options cmake kate - ninja . <repeated> /* * <code> <section> a clear and concise description of any alternative solutions or features you have considered . cmake has config errors <section> add any other context about the feature request here . <code> <section> full name and company / organization if applicable shaynababe"
"fix # <number> , remove unnecessary memset from cfe_tbl_loadfromfile <section> - fixes # <number> - <code> all to zero removed given that entire length is written to immediately after . just set last character to null terminate . <section> github ci actions all passing successfully . <section> no change . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev44 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , add status return to cfe_es_waitforstartupsync ( ) <section> - fixes # <number> - converts <code> from void return to <code> , and carries through the return value from <code> . <section> github ci actions all passing successfully . local tests confirm all tests passing and <allcaps> lcov </allcaps> confirms coverage of amended lines , and total coverage unaffected . these <number> ut calls to <code> would have had to be updated , but as far as i can tell they are not actually required for coverage , and are not needed for the test blocks that they are part of ( <code> is run immediately after both ) . <url> coverage is already provided by the prior call to <code> : <url> <code> is already fully covered elsewhere . <section> <code> now carries through the status / return of <code> allowing additional handling by the user . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add error report on <allcaps> evs </allcaps> failure during log header write <section> - fixes # <number> - event ( and new <allcaps> eid </allcaps> ) added for failure of <code> to write the expected amount of data . <section> github ci actions all passing successfully . local tests ( seeded with bad value for <code> ) to check formatting etc . : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior other than event report on error as per above . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , use logfullflag instead of checking logcount <section> - fixes # <number> - <code> replaced by <code> ( this is what that flag is for . <repeated> ) . <section> github ci actions ( incl . functional tests ) all passing successfully . local tests with cfs suite confirm coverage overall unaffected . <section> no change to behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add additional context to log file write error event <section> - fixes # <number> - entry index and total log count added to the event report in case of error during writing of the event log entries to file in <code> . <section> github ci actions ( incl . functional tests , coverage analysis etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , replace ut_displaypkt ( ) with utprintx ( ) <section> - fixes # <number> - all instances of <code> replaced with <code> - the declaration and definition of <code> deleted - <code> turned into a simple macro that calls <code> and placed inside deprecation guards <section> github ci actions ( incl . functional tests and coverage analysis etc . ) all passing successfully . tested locally with standard cfs bundle tests - confirmed output text is correctly displayed and identical to before the change ( the only difference other than the inclusion of the memory address , is the spacing and that the alphanumeric characters / digits in the hexadecimal output are now capitalized ) . before changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> after changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> test log prints now include the memory address along with the data . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add event for numeventfilters over max and remove filterlimit variable <section> - fixes # <number> - event added when <code> over max allowed . - refactored to remove unnecessary <code> variable . - wasn ' t sure if it was better to add a new <allcaps> eid </allcaps> on the end or re - use one of the now open slots . <repeated> - i went with the latter . <section> github ci actions ( incl . functional tests , code coverage analysis etc . ) all passing successfully . <section> only change to behavior is the new event report added as per the description above . <section> avi weiss <user>"
"fix # <number> , replace for loop copy with single memcpy <section> - fixes # <number> - character - by - character copy into <code> replaced by single call to <code> in <number> locations . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , add struct for version info in <allcaps> es hk </allcaps> tlm packet <section> - fixes # <number> - the <number> individual components of the version number for cfe , <allcaps> osal </allcaps> and <allcaps> psp </allcaps> in the <allcaps> es hk </allcaps> tlm packet have been moved into a struct . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . telemetry packet declaration is cleaner now with less code duplication . note : if this is merged in , it will require a new issue to make updates to the <code> file in the cfs ground system application . <section> avi weiss <user>"
"fix # <number> , align pipe id / name reporting in sb event strings <section> - fixes # <number> - removed the debug event from successful execution of <code> and deleted the <code> ( <code> was its only instance of use ) - updated all sb events that include the pipe id / name in the event string to use the <code> for nominal / success and <code> for error cases ( except where deviations are desirable ) - updated the format specifiers for <code> s to <code> ( if they were not already set as such ) <section> no change to behavior other than what is outlined above . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . local tests confirm no change to coverage . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , update remaining cfe source / tests to use cfe_status_t <section> - fixes # <number> - remaining <code> return types converted to <code> . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior / logic - <code> is currently typedef ' d to <code> , so no functional change to any types with this pr . synchronizing the return types to <code> simplifies the code , and makes it more type - safe . <section> avi weiss <user>"
"fix # <number> , separate dispatcher for messages <section> isolate the message verification and dispatch from the general message processing . functions in the "" task "" source file now strictly handle the command content , and do not get involved in general validation . also note : this is mostly a simple code move but does add a <code> qualifier to the task pipe function where it was missing before . all of the handlers were already <code> so this just makes it consistent throughout the handling . fixes # <number> <section> build and run <allcaps> cfe </allcaps> and sanity check . run all tests <section> none - this just moves code from one source file into another , does not make any change to functionality . <section> debian <section> joseph hickey , vantage systems , inc ."
"fix # <number> , convert cfe_tbl_info_table_locked into a negative error code <section> - fixes # <number> ( one of the cases of multiple ' success ' return codes identified in <url> - <code> in <code> converted into a negative error return code . not updating the table is a clear failure , and it should not be represented by a positive return value , giving an impression of success . <section> github ci actions ( incl . code coverage analysis , functional test etc . ) all passing successfully . <code> ( which calls <code> ) tests for <code> which is now triggered by <code> as well , and the branch for a non - <allcaps> null </allcaps> <code> was not previously covered . with these changes , that branch is now executed by the existing tests . this results in an increase in coverage of <number> lines and <number> branch : <code> <section> behavior of the function is the same . only the return code in the case of trying to update a locked table is changing from positive to negative . the only use of <code> from other apps where the return value is checked ( e . g . in hk ) use <code> , so will not be affected by this change . other ( non - public ) users who were checking the return of <code> and testing less precisely for <code> ( or similar equivalents ) will see a change , but it seems unlikely that they would consider a non - update as success anyway . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"cfe_tbl_info_table_locked should be a negative error code <section> there is an effort in <url> to deprecate / reduce the existence of multiple ( non - negative ) return codes indicating success . an easy target to start chipping away at this is <code> , used in <code> to signal a locked table and therefore skip the update . many of the others require refactoring to correct ( those in <code> ) or are ambiguous as to whether they should be categorized as error or success . <section> <url> <section> this is a clear error ( as noted by <user> in his analysis in <url> - i . e . nothing was updated . code should be negative indicating failure / error . <section> avi weiss <user>"
"fix # <number> , add more generic status codes <section> adds several more generic cfe_status_ codes to be used for common validation and input processing conditions . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , run all tests <section> none - just defines some new status codes that are not ( yet ) used anywhere , does not change any existing status code . <section> debian <section> apps can use these codes to make input validation a bit more consistent . <section> joseph hickey , vantage systems , inc ."
"add generic status code for "" invalid request "" <section> <allcaps> cfe </allcaps> defines several generic status codes , which are not specific to any module . these can be used by any app / module to indicate common status conditions , for example : - <code> - <code> - <code> - <code> however none of these are really appropriate for a validation failure for a request - e . g . if a value was out of range , or something of that nature . <section> add the following generic status codes : - <code> : for requests / inputs that fail structural validations ; this one can also be useful with <allcaps> tbl </allcaps> validation functions . - <code> : for requests that pass structural validation , but an input value is outside the acceptable range . - <code> : for requests that are otherwise valid , but the current system state does not permit its acceptance . <section> each app could define these status codes , but that would be redundant as these are common validation checks that every app should be doing on its inputs , so a common status code is warranted . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev43 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , improve <number> - bit memory address handling in <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> <section> the "" cfe_es_memaddress_t "" and "" cfe_es_memoffset_t "" types were intended to provide a path for easily upgrading the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> structs from <number> - bit to <number> - bit memory addresses . however , this type was a bit overused and in some of those use - cases ( e . g . in <allcaps> tbl </allcaps> header ) it assumed that the type was <number> - bits during the byte swap ops . as a result , the type could not be changed to <number> bits as intended . this reverts those cases in <allcaps> tbl </allcaps> back to uint32 ( meaning that tables will still be limited to <number> bit sizes , even on <number> bit cpus ) but otherwise the addresses and sizes in es / sb telemetry can grow to <number> bits as intended . for unit tests , correct operation depends on the availablily of an updated test macro that can compare integers as "" size_t "" type . ( as opposed to uint32 ) . fixes # <number> <section> build and run all tests <section> changing the definition of "" cfe_es_memaddress_t "" and "" cfe_es_memoffset_t "" should now work as intended , provided that the conversion macros are also updated to match the definition . <section> debian <section> joseph hickey , vantage systems , inc ."
"add pipe option to ignore msglim exceedance <section> currently <code> only reports the first <number> events on any pipe : <url> there ' s a use case where only the oldest or newest ( see # <number> ) message on the pipe should be kept , and the rest dropped . for example on a low rate link you may just want up to one message of each type , even though they may be getting produced at a higher rate ( say if you want to slowly round - robin through hk msgs ) . this intentional dropping causes the error event and if / when it does get filtered since the event id is shared with all the other pipes a legitimate issue ( on a pipe where you do not want to exceed msglim ) would be hidden . <section> add a pipe option to selectively ignore this error . <section> could use <allcaps> qos </allcaps> instead of pipe opts . <section> would be helpful to fix along with keeping newest msg : - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update naming convention document <section> updates to cover event id recommendations fixes # <number> <section> n / a <section> n / a - documentation only <section> n / a <section> this doc could really use additional updates to expand on command naming , camelcase vs . app_caps , etc . <section> joseph hickey , vantage systems , inc ."
"update naming conventions for events and other patterns <section> as <allcaps> cfs </allcaps> apps are under development for the next cycle it should be a goal to reduce all the variation in terminology between them . this includes , but not limited to : <number> . event naming patterns <number> . command naming patterns ( specifically between the function that handles the command , the structure that defines the command ) the first step in fixing pattern violations is to better define the intended pattern . this should be done as part of the <allcaps> cfe </allcaps> documentation and we can go from there . <section> consistency in naming , repeatable patterns . <section> examples of what <allcaps> not </allcaps> to do were recently addressed in nasa / fm # <number> , specifically stuff like : send hk command : command handler was <code> , the command struct name was <code> , and the <allcaps> mid </allcaps> was <code> . why are these all different - should all be <code> ( camel case version ) . for <code> the command handler was named <code> - no "" file "" - and the struct was named <code> - "" permissions "" got abbreviated . other examples of abbreviation mismatch between <code> and <code> exist , and the word <code> / <code> appears in command names in some places but not other places . similar naming chaos occurs in other <allcaps> cfs </allcaps> apps too , fm just provided some good examples of what not to do . <section> joseph hickey , vantage systems , inc ."
"<code> discarding <code> error status <section> many error cases within <code> just set the status code and return ( no reporting ) . then cfe_sb_getbufferfrompool just discards it . arguably not compliant with mission critical code requirements . <url> <section> definitely not the only case where returns get discarded or ignored ( see # <number> ) but this one is a significant shortcoming . affects <code> and <code> . <section> although apps need to check for a null return from cfe_sb_allocatemessagebuffer either way , the error code is lost by that point . another good use case for # <number> , since you would not want to flood events or sys log but the failure type and count is very important for monitoring system health . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , align mismatched function prototype / implem . parameter name <section> - fixes # <number> - similar to <url> all flight code function declarations now match the implementations ( incl . parameter names ) . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior . code clarity and consistency improved . <section> avi weiss <user>"
mismatched function prototype / implementation parameter name <section> mismatched parameter name ( <code> ) between function prototypes and it ' s implementation . declaration : <url> implementation : <url> <section> prototype and implementation should match ( for clarity and maintenance ) . <section> avi weiss <user>
"fix # <number> , factor out common code for bitmask check <section> - fixes # <number> - duplication reduced from <number> bitmask checks to <number> in the helper function . could also add another ( almost identical ) helper to factor out the bitmask check from <code> and <code> . they were not included here as they use a different structure to hold the bitmask ( they use <code> ) <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to behavior or return values . <section> avi weiss <user>"
"fix # <number> , resolve compiler warnings re . signedness comparisons <section> - partially fixes # <number> - only flight code was amended . warnings for test code still exist . - <code> represents <code> values . seems safe ( and future - proof ) to cast to a simple <code> given the possible range of these values . - <code> casted to <code> instead of <code> / <code> to guarantee no conceivable chance of overflow even with ( very ) large msec time values . - <code> used to represent the size of various structures - fine to cast to standard <code> . - <code> type changed to <code> ( more correct given it ' s usage , and avoids <number> signedness comparison warnings ) . - <code> represents number of bytes - maybe safest with <code> . - <code> represents number of bytes ( safest with <code> ) <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally with <code> flag enabled - no warnings issued for cfe . <section> no change to behavior . <section> avi weiss <user>"
"fix # <number> , use cfe_time_systime_t instead of indiv . sec / subsec members <section> - fixes # <number> - remaining individual ( <code> ) members representing seconds / sub - seconds for file creation time were converted to use the unified <code> type in <number> locations . <section> all tests were passing before changes to <code> were added ( see <url> and <url> the functional test and codeql analyses are no longer able to build because elf2cfetbl references the old <code> members in <code> directly , so an additional pr for elf2cfetbl is required at the same time - see <url> local tests with full cfs package confirm all tests passing when both changes are made together , and net coverage unaffected . screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> note : if this is merged it will require updates to some of the txt files in the ground system tool to ensure clean and correct interpretation of the data members . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> no change to behavior . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev39 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , cfe_tbl_filedef does not need static <section> remove the "" static "" qualification from the <allcaps> tbl </allcaps> file def objects , it is not needed , and works fine without any special sauce here . <section> build and run all tests run <allcaps> cfe </allcaps> with apps and confirm tables load normally <section> none <section> debian <section> tables do not need to be declared static because they are just used with a table tool like <code> - they are never linked with other table definition files by the c linker , so the <code> designation is not needed . on the other hand , it may cause issues with alternative table creation methods because it hides the symbol from e . g . <code> . furthermore , it necessitates use of a compiler - specific extension flag to avoid a warning , which is against coding standards . <section> joseph hickey , vantage systems , inc ."
"remove "" static "" and "" os_used "" flags from table definitions <section> in the <code> macro , there is no need to declare the variable as <code> , because there are no cases where multiple objects / translation units are directly linked together . in the case of tables , the content is extracted to a separate runtime - loadable file , and transferred to the target separately . they are not linked in by the c linker , which is where the <code> declaration becomes relevant . by not declaring it as <code> , one also does not need to use the compiler extension flag <code> to squelch a warning , either . <section> remove <code> and <code> flags <section> this makes it more compliant with coding standards that restrict use of compiler - specific extensions . <section> joseph hickey , vantage systems , inc ."
"leverage gcc - fsanitize = options , also a warning about implicit dynamic arrays for testing ( particularly <allcaps> ctf </allcaps> and coverage testing ) , i suggest we utilize some of the <code> options available to gcc ( <url> particularly <code> , <code> , <code> , <code> , <code> , <code> , <code> . but possibly others , like the float - related sanitization . of course , these are gcc - specific capabilities and has performance implications . also , turns out , with c , if you specify a struct like : <code> fundamentally , if you define a fixed - size array at the end of a struct , the bounds checking cannot be enforced because the compiler treats it as a dynamically - defined array . we should place placeholders after every instance of this in cfs code . for example : <url> thanks to this article and the article it references for bringing this to my attention . <url> )"
"fix # <number> , rename unclear filewrite eids <section> - fixes # <number> - replaces misnamed / unclear filewrite eids : - <code> replaced with : <code> - <code> replaced with : <code> ( minor change , purely for format consistency ) - <code> replaced with : <code> these eids are still overloaded . the aim to eventually make them unique is still open in issue <url> note : unrelated minor typo piggy - backed onto this pr ( to to ) . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to code behavior . future maintainability and ease - of - use improved due to clearer <allcaps> eid </allcaps> names . <section> avi weiss <user>"
"correct use of "" memaddress "" and "" memoffset "" <section> the memaddress and memoffset types defined by es are <number> bits by default , but are intended to be expandable to <number> . these should be used for <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> fields that need to hold a memory address on a <number> - bit machine , or the size of an object in memory on such a machine . however <allcaps> tbl </allcaps> services uses this type in some other locations , that generally do not need it . notably , this calls <number> - bit byte swapping routines to read / write this field , and that will not work if the size becomes <number> bits . <section> - these fields in table services will need to remain <number> bits regardless of the <allcaps> cpu </allcaps> address size . - need to make sure that the correct macro - <code> or <code> is used when setting the value . notably , this macro can provide the correct read / write logic in case the memaddress needs to be a struct with a high and low word , for example . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , combine duplicate status check if blocks <section> fixes # <number> duplicate ( redundant ) <code> blocks checking for <code> in two functions in this file have been refactored and combined into the first <code> blocks . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no change to logic . <section> avi weiss <user>"
"unnecessary duplicate ' if ( status = = cfe_success ) ' check <section> <code> and <code> have a redundant repeat check of <code> . can be refactored to combine them , without any change to the underlying logic . <section> refactor to remove ( unnecessary ) duplicate <code> block . <section> <url> identical case for <code> . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev36 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , adds workflow_dispatch to all workflows <section> - fixes # <number> <section> testing performed on fork : <url> <section> all cfe workflows executable using the latest nasa / cfs <section> github ui <section> n / a <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , check return value of cfe_es_putpoolbuf <section> - fixes # <number> - adds a writetosyslog for the single remaining cfe_es_putpoolbuf ( ) call that did not have a check / report of any kind . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> in case of error , the relevant details will be written to the log . <section> simpler version : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> avi weiss <user>"
"fix # <number> , update data types in <allcaps> cfe </allcaps> msgs * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fix # <number> , changed data types of some fields in certain message packets <section> unit testing <section> no impact to behavior <section> - os : ubuntu <number> <section> haven carlson - <allcaps> nasa </allcaps>"
data type changes <section> data types of fields in some packets need to be updated to types in <allcaps> jsc </allcaps> database . <section> data types should follow the <allcaps> jsc </allcaps> database . <section> haven carlson - <allcaps> nasa </allcaps>
"cfe integration candidate : caelum - rc4 + dev33 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user>"
"fix # <number> , <allcaps> eds </allcaps> updates to match the current mainline <section> this includes all the updates to <allcaps> eds xml </allcaps> files since the bootes release where they were last synced . this includes <allcaps> eds </allcaps> files for modules that did not yet have one , and updating the other files to match the current message structures in draco . fixes # <number> <section> generate artifacts from <allcaps> eds </allcaps> and confirm the artifacts match the current c code definitions <section> no impact to behavior , <allcaps> eds </allcaps> files are just informational in this tree <section> there are some remaining name mismatches due to [ non ] adherence to the naming conventions , might be a good chance to clean some of that up too . <section> joseph hickey , vantage systems , inc ."
"<allcaps> eds </allcaps> files need update to match current main line <section> the <allcaps> eds </allcaps> files are present in the <code> directory of each module but only as a reference , they are not actively used in the build at this time . in the time since bootes / caelum they have drifted apart a bit , and no longer reflect exactly what is in the c code in the current mainline . <section> n / a <section> provided <allcaps> eds </allcaps> files should match exactly to the c code ( at least as close as reasonably possible ) such that derived files _could_ be generated from them that will match the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interfaces . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update uts to use correct cmd types fix # <number> , update uts to use correct cmd types <section> these are the unit test updates requested by <user> - ito - nasa , and are associated with # <number> the requested change originated from # <number> <section> build and run all tests ' <section> no impact to behavior <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
update unit tests to use correct command types <section> update the unit tests to use the associated applicable command types in place of cfe_msg_commandheader_t . this will allow for additional flexibility when modifying command definitions . note : this is the required unit test update ( s ) associated with # <number> <section> replace cfe_msg_commandheader_t with the corresponding command type ( s ) where applicable . <section> dan knutsen <allcaps> nasa </allcaps> goddard
"cfe integration candidate : caelum - rc4 + dev32 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , replace cfe_msg_commandheader_t w / cfe_tbl_noargscmd_t * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> - replaces cfe_msg_commandheader_t w / cfe_tbl_noargscmd_t & runs clang - format . [ fixes # <number> ] <section> build and run all tests <section> none <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"cfe integration candidate : caelum - rc4 + dev31 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
out - of - date doxygen <user> names <section> a couple of out - of - date ( incorrect ) doxygen <user> values . <section> <url> <url> <section> either update to the correct names / descriptions or delete these <user> commands from the function comment . <section> avi weiss <user>
"fix # <number> , combine <allcaps> message </allcaps> and <allcaps> cmd entry </allcaps> macros * x ] i reviewed the [ contributing guide <url> . * x ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> - combines the message and command entry macros such that the <allcaps> mid </allcaps> , cc , type , handler function , and message type are all passed in parameters . [ fixes # <number> ] <section> build and run all tests <section> none <section> ubuntu <number> and <number> ( workflows ) <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , update event type constants in dev guide <section> - fixes # <number> <section> just github ci <section> none <section> avi weiss <user>"
"add parameter for sizeof check in cfe_tbl_task macro cfe_tbl_message_entry in cfe_tbl_task . c uses a static structure typedef for the sizeof check that is causing issues with a new feature . add new macro input parameter to have the structure type passed for sizeof check similar to macro cfe_tbl_command_entry . also change line <number> of cfe_tbl_task . c to have the macro input parameter to be cfe_tbl_noargscmd_t as seen below : cfe_tbl_message_entry ( cfe_tbl_send_hk_mid , <section> , cfe_tbl_housekeepingcmd ) nicholas dijkhoffz <allcaps> jsc </allcaps> / metecs"
"fix # <number> , add - fno - common to arch build flags <section> add - fno - common to arch_build_custom_native . cmake so the ci workflows will all build with this option . this is not the default in the version of gcc / binutils used in ubuntu <number> on which the workflows run . fixes nasa / cfe # <number> <section> build and run all tests <section> duplicate global symbol names will trigger errors , rather than being silently merged on some versions of the tools ( consistent behavior ) . <section> ubuntu <number> and <number> ( workflows ) <section> no - common is the default in newer versions of the tools , but was not the default in the versions used in <number> . the <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> builds should not require / rely on the use of a common section . <section> joseph hickey , vantage systems , inc ."
"use <code> in ci workflow builds <section> some versions of the <allcaps> gnu </allcaps> toolchains enable <code> by default , so globals end up in a "" common "" section rather than the normal "" bss "" section . the <allcaps> cfs </allcaps> apps should not rely on common sections , as it can mask duplicate symbols and cause strange results if not expected . in particular , this feature hid linking errors in nasa / lc # <number> . <section> add <code> to the default <code> file so this feature is consistently _not_ enabled rather than assuming the default for whatever version of gcc / binutils is being used at the time . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update github action versions <section> use v3 instead of v2 for checkout , cache , and upload - artifacts , which resolves a warning about node . js <number> deprecation . fixes # <number> <section> run all github actions <section> deprecation warnings removed <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"update workflows to use newer action versions <section> calls to the checkout and upload - artifacts actions in the workflow files refer to deprecated version <number> . this should be updated to v3 , which resolves a warning about deprecated node . js versions . <section> see any workflow log , e . g . <url> in the "" annotations "" section . <section> should be clean . <section> github hosted runner <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add abstract documentation dependency target <section> adds a top level target called "" doc - prebuild "" which in turn can be made to depend on any other files that need to exist before documentation can be built . fixes # <number> <section> build documentation <section> abstract dependency target now provided <section> ubuntu <number> <section> needs to be merged with nasa / osal # <number> to work correctly . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : caelum - rc4 + dev30 <section> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , refactor error handling for evs_getapplicationinfo ( ) <section> - fixes # <number> - refactors ( <number> cases of ) identical handling of error returns from <code> into a single helper function . the function prototype is not strictly required , given the placement of the function definition , but is probably worth having to improve clarity and ease future maintenance . can also be implemented as an if / else if / else block ( see below ) . no strong preference but i have left it as a switch for now . screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally as well and confirmed coverage of all new / amended lines of code via <allcaps> lcov </allcaps> report . <section> no impact on behavior . the same events will occur in the same circumstances . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch cfs bundle . cfe v7 . <number> - rc4 + dev205 <section> avi weiss <user>"
"fix # <number> , move variables declared mid - function to the top <section> - fixes # <number> - a couple of stray variables that were declared mid - function were moved to the top of their respective functions . <section> github ci actions all passing successfully . <section> all variables declared top of function as per cfs conventions / guidelines . <section> avi weiss <user>"
variables declared mid - function <section> a couple stray cases of variables declared mid - function left here . copy of <url> <section> all variables should be declared at the top of the function . <section> avi weiss <user>
"fix # <number> , update ci to use ubuntu <number> <section> - fix # <number> <section> ci <section> just updates ci ubuntu version <section> ci <section> required for : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"update ci to use ubuntu <number> <section> ubuntu <number> <allcaps> eol </allcaps> is approaching cfs was already updated in nasa / cfs # <number> , cfe should match <section> update to use ubuntu <number> in ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev28 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , enforce strict cast alignment on arch <section> - fix # <number> <section> ci <section> none , just enforces strict alignment and currently compliant <section> ci <section> note this strict option is not supported by clang so would need to be removed along with <code> and <code> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"enforce strict cast alignment <section> now that ci is upgraded to ubuntu20 , would be good to enforce strict cast alignment <section> update the cast - align line to read : <code> in <url> <section> none <section> note it ' s fully compliant w / this flag right now based on fixes done during draco , but should enforce to avoid future issues . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , support clang for whole archive flags <section> - fix # <number> - adds a toolchain file for clang to make testing simple <section> w / clang <number> installed , performed the following changes in sample_defs : - removed unsupported flags - compiled permissive to confirm it worked w / standard user privilages - explicitly set cpu1 to use the clang toolchain <code> <section> properly sets the whole archive flags for clang , warns if compiler is unmatched <section> ci shows no impact to base system steps above to prove clang works <section> could add to ci if someone wanted to maintain support , might be overcome if there ' s a target added to ci that uses clang . clang build does depend on nasa / sample_lib # <number> being merged , but does not impact current ci <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , explicit toolchain in sample target . cmake <section> - fix # <number> - removes old cpu <x> toolchains in prep for removing the "" hack "" mentioned in <url> - removes obsolete <allcaps> bspname </allcaps> refs , and unnecessary ( and incorrect ) refs to <allcaps> bsptype </allcaps> pc - linux which is now generic - linux and gets set from psp config based on the <allcaps> psp </allcaps> pc - linux <section> ci , also built locally via <code> <section> none . <section> ci <section> # <number> as followon <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove toolchain cpu <x> hack <section> see <url> cpu toolchain naming hack . <section> remove the cpu toolchain naming hack , explicitly require a toolchain . update related documentation , for example in target . cmake _system description . <section> none <section> # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , factor out construction of fullname to reduce code duplication <section> - fixes # <number> - construction of <code> ( using <code> ) has been moved out of the <code> statements , so as to only be included once in each function , instead of <number> - <number> times . this reduces code duplication . <section> github ci actions ( incl . build + run , functional tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"consider bumping up the stack size in the sample startup script <section> the startup script in the "" out of the box "" sample uses a stack size of 1 6 k for all apps , e . g . : <url> i was recently debugging a segmentation fault issue on one of my app builds , and i finally thought to check the stack usage after realizing the backtrace had quite a few entries in it . after checking the stack usage , it turns out all the framework sample / lab apps are using about <number> - 1 5 kb ( that is , more than <percent> of the allocated size ) . so while it does not appear to be an issue in the default build , this leaves very little margin for additional development work before the stack will be exceeded , and its <section> obvious that the stack has exceeded once it does get too big . <section> increase the sample script at least to 3 2 k , or preferably 6 4 k , on "" sample_app "" to have some additional room for development , because this is often used as a "" sandbox "" to test new ideas and concepts . <section> at least document that the stack size is right at its margin ( at least on on <number> - bit linux ) . <section> credits to an simple and effective tool to gauge stack usage here : <url> . <repeated> this worked like a charm to measure how much stack usage all the <allcaps> cfe </allcaps> tasks were using . in the future it might be nice to have features like that built into <allcaps> osal </allcaps> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct type of activetableflag variable <section> - fixes # <number> - <code> has been converted from <code> to what it was intended to be typed as , namely a <code> type ( which is actually just a <code> ' d alias for <code> anyway ) . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi <user>"
"fix # <number> , move data lock to inside of if block <section> - fixes # <number> - data lock moved inside the <code> block ( lock is not needed if the <code> block condition does not evaluate to <code> ) . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> data lock will not occur in the ( unexpected ) case of an error return from <code> , which is fine as no data would be accessed / amended in that case anyway . <section> avi <user>"
"fix # <number> , resolve static analysis errors in tbl_ut . c <section> resolves two uninitialized variable errors reported in the workflow . fixes # <number> <section> build and run all tests run workflow <section> passes static analysis , no behavior change . <section> updated github workflow ( with nasa / cfs # <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor cfe_time_calculateutc to utilize cfe_time_calculatetai <section> - fixes # <number> - removes ( a small amount ) of duplicate logic in <code> by utilizing <code> . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi <user>"
"disk percentage reserved for decompressing apps <section> es will reformat the volatile drive if the empty space is less than a configured percentage to support decompression of apps . decompression of apps prior to load is not implemented . config option and documentation : <url> start of reformat logic : <url> <section> i am not sure this option makes sense anymore , or at minimum it ' s an incomplete implementation . either complete the implementation , remove the option , or update the documentation ( should not claim it does something it does not ) . <section> see above <section> the label really depends on the solution picked . might be just documentation , could be enhancement . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"remove cfe_es_formcdsname and merge it ' s functionality into cfe_es_registercds _i think this particular function ( cfe_es_formcdsname ) is a broken <allcaps> api </allcaps> , and should be removed ( its not public ) . it is called in just one place - from cfe_es_registercds ( ) - and that can just do an <code> directly . it actually needs to know the app name anyway for an event later on , so this would also avoid getting it twice . a win - win . _ _originally posted by <user> in <url>"
"fix # <number> , move <allcaps> crc </allcaps> types and convert to enum <section> fixes # <number> the macro definitions of the <allcaps> crc </allcaps> types ( <number> , <number> , and <number> - bit <allcaps> crc </allcaps> polynomials ) have been moved to <code> and turned into a typedef ' d <code> . the previous <code> ' s have been left in with deprecation directives added around them , due to dependencies of the fm app . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> essentially no change to logic . note - two new issues will need to be opened if / when this is merged : fm : directly references the types that have been changed here . cs : refers to ( in comments only ) <code> <section> avi weiss <user>"
"fix # <number> , combine consecutive mutually exclusive <hashtag> ifs </hashtag> <section> fixes # <number> combines <number> ( identical ) cases of immediately consecutive , mutually exclusive <code> / <code> blocks into a single <code> / <code> / <code> . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior - logical flow is essentially unchanged . <section> avi weiss <user>"
"fix # <number> , rename confusing <allcaps> sb enbl </allcaps> / <allcaps> dsbl </allcaps> route commands <section> - fixes # <number> - <allcaps> eid </allcaps> enable / disable route commands have been improved to add information and better differentiate between similar eids . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior ( no logic changes ) . better - differentiated <allcaps> eid </allcaps> names will improve code clarity . <section> avi weiss <user>"
"fix # <number> , rename cfe_sb_removepipecallback_t to . <repeated> backargs_t <section> - fixes # <number> - renames <code> to <code> , which better matches what the struct represents . - only used locally in <number> functions . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , rename misnomer function name cfe_tbl_notifytblusersofupdate ( ) <section> - fixes # <number> - misnamed function <code> was renamed to <code> , which better reflects what it does . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"cfe integration candidate : caelum - rc4 + dev27 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , make evs_pktptr parameter in evs_addlog ( ) const <section> - fixes # <number> - changes <code> parameter in <code> to <code> . - parameter is not modified , so should be <code> to better show intent and improve type safety . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , remove duplicate status check <section> - fixes # <number> - removes duplicate ( unnecessary ) status check ( for <code> ) and moves event report ( <code> ) to earlier in function . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . logic does not change as the event is still sent in first <code> . <section> avi weiss <user>"
"fix # <number> , use osal_public_api header targets in doc <section> ensure that <code> is a dependency of all the doc builds . also adds the <allcaps> osal </allcaps> top level directory to the mission build which will define the <code> target , and thus not require the path to be repeated . fixes # <number> <section> build documentation from clean build area <section> order of operations with doc targets does not matter anymore , as the file gets generated correctly no matter which target is built first . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"missing dependency on osal_public_api targets for <allcaps> osal </allcaps> headers <section> in the <allcaps> cfe </allcaps> mission documentation build , this references the osal public <allcaps> api </allcaps> headers . since nasa / osal # <number> was merged there is now an <code> target which exposes the location of the headers via its <code> property , as well as a doxygen - specific target called <code> that generates a list of <allcaps> input </allcaps> files that can be included for doxygen . however , there is a missing dependency in the <allcaps> cfe </allcaps> docs build , as the <code> and <code> targets reference this file , but there is not a dependency in cmake to ensure that the file gets generated before the doxygen tool runs . as a result , if the <code> is built first , then the <allcaps> cfe </allcaps> targets will build ok , but if the <allcaps> cfe </allcaps> targets are built first , one gets an error about a missing <code> . <section> start with a clean build area run only <code> followed by <code> get error : <code> then run <code> followed by <code> again . now it builds fine . <section> dependency should be in place so the doc build will succeed regardless of the order . <section> if applicable , add references to the software . <section> ubuntu <section> the <allcaps> cfe </allcaps> docs build was also repeating the location of the <allcaps> osal </allcaps> include files here : <url> the <code> target properties should be the preferred source of this info , the path should not be specified outside of the <allcaps> osal </allcaps> build script as it can change in the future . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace while loop with single memset <section> - fixes # <number> - removes unnecessary while loop in <code> and sets entire block of memory pointed to by <code> to <code> in a single memset ( sized by remaining value of <code> ) . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> achieves same result without going through the loop . <section> avi weiss <user>"
"fix # <number> , remove empty if / endif block <section> - fixes # <number> - two empty <code> / <code> blocks were removed . <section> just github ci <section> no impact on behavior ( code logic not changed ) . <section> avi weiss <user>"
"fix # <number> , reformat do / while loop to while ( style change only ) <section> - fixes # <number> - reformats the <code> loop in <code> into a <code> loop , which is the same structure used in the neighboring functions . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior - code logic essentially unchanged . <section> avi weiss <user>"
"fix # <number> , align table name reporting in cfe_tbl_register ( ) <section> - fixes # <number> - updates / standardizes use of <code> in syslog reports in <code> . <section> only github actions . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , add reports for unreported errors in cfe_tbl_earlyinit ( ) <section> - fixes # <number> - adds reports to syslog for unreported errors in <code> <section> just github ci actions so far . <section> no impact on behavior . these missing error reports will now be reported to the syslog ( if they occur ) . <section> avi weiss <user>"
"fix # <number> , update deprecated binary filter constant in dev guide <section> - fixes # <number> - updates the development guide to refer to <code> rather than the deprecated <code> . <section> no impact on behavior ( doc changes only ) . <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events <section> - fixes # <number> - consistent event ids have been applied to the inconsistent cases to align them with a common event id naming convention . <section> only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"inconsistent event id naming <section> after finding that there were <number> different event ids to indicate the same thing ( invalid message id ) in <url> i scrubbed the other common commands ( e . g . task initialisation [ <allcaps> init </allcaps> ] , <allcaps> noop </allcaps> , reset counters etc . ) and found the same issue there - almost every component / app had their own variation of the event id name for the exact same event . <section> apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>"
"<allcaps> es crc </allcaps> type enumerations do not belong in cfe_mission_cfg . h <section> the mission config header file contains the following definitions : <url> these enumeration values are really part of the <allcaps> api </allcaps> to the <code> function , as they define the values for the 4 th parameter . they do not belong in "" mission_cfg . h "" because are not values that appear in any telemetry , nor in any command , nor would they need to be configured differently as there is no chance of conflict with anything else . <section> make a proper enumeration type in the in the <code> file , and use this for the 4 th parameter of the <code> function . <section> the "" <allcaps> default </allcaps> "" value is the only thing that ( theoretically ) does belong here : <url> however , this is just a placeholder anyway because only the crc16 algorithm was ever implemented . unless the user also has a patched version of es , no user can set this to anything other than crc16 or else the system will not function correctly . because this is somewhat of a "" dead "" option , and a case could be made to remove it entirely . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove last few uses of sprintf ( ) <section> - fixes # <number> - use of sprintf ( ) swapped for snprintf ( ) removing a source of potential buffer overruns . <number> other cases already have their own issues open with further changes being considered , and have not been updated with this pr at this stage ( <url> and <url> <section> standard cfs build tests ( covered the fsw change but not test code change ) . <section> no impact on behavior expected . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev193 <section> avi weiss <user>"
"remove remaining stray uses of sprintf ( ) <section> a few stray uses of sprintf ( ) remain in cfe ( mostly in the test code , but not entirely ) . the simple cases will be converted to snprintf ( ) to enforce a maximum size for the buffer being written into . a couple of cases have their own issues open already with further changes being considered , so i will probably leave those to be addressed there ( <url> and <url> <section> no use of sprintf ( ) in the code base ( including test code ) . <section> <url> <url> <section> avi weiss <user> previous discussion opening this issue : _i concur that <code> has some caveats / dangers - particularly with respect to the return code and handling that properly - whereas <code> is a buffer overflow exploit in almost all use - cases , and should rightfully be banned . _ _originally posted by <user> in <url> _there are still a few stray uses of sprintf ( ) across cfs . should these be removed ? _"
"cfe integration candidate : caelum - rc4 + dev26 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update ci_lab entry point in cfe_es_startup . scr <section> - fixes # <number> - updates ci_lab entry point in cfe_es_startup . scr part of changes to the ci - lab app ] ( <url> and [ groundsystem <url> aim is to standardize naming of ci_lab functions to match the predominant cfs style . <section> only the github ci workflow actions . <section> no impact on behavior . <section> avi weiss <user>"
update ci_lab entry point in cfe_es_startup . scr <section> ci_lab issue <url> is addressed in pull request <url> this issue is opened in order to address the corresponding change required to cfe_es_startup . scr <section> <user>
"fix # <number> , update sch_lab entry point in cfe_es_startup . scr <section> - fixes # <number> - updates sch_lab entry point in cfe_es_startup . scr part of changes to the sch - lab app <url> aim is to standardize naming of sch_lab functions / macros to match predominant cfs style . <section> only the github ci workflow actions . <section> no impact on behavior . <section> avi weiss <user>"
update sch_lab entry point in cfe_es_startup . scr <section> sch_lab issue <url> is addressed in pull request <url> this issue is opened in order to address the corresponding change required to cfe_es_startup . scr <section> <user>
"cfe integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fixes issue # <number> - remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . pr # <number> - fixes issue # <number> - update to_lab entry point in cfe_es_startup . scr pr # <number> - fixes issue # <number> - create <allcaps> changelog </allcaps> . md <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , remove changelog in doxygen config * ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> <section> none <section> cfs workflow will not throw error for <allcaps> psp </allcaps> changelog <section> related to <url> went ahead and moved the code to exclude repo documentation from mission - doc . doxyfile . in to cfe - common . this allows it to be excluded from all the doxygen processing ( all repos ) . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove redundant / inconsistent comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . <section> fixes # <number> removes redundant and inconsistent comments ( incl . <code> , <code> , function name in function header comments ) . there were also a few cases of unnecessary empty lines ( e . g . on the last line before the closing brace of a function ) and also missing empty lines ( e . g . between functions ) which were corrected . some of these empty lines trigger the ci format checks . i have left the commits separated for now to make life easier for whoever reviews this . i can squash them if / when this is ready for merge . <section> none ( comment and whitespace changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) and clean up empty lines . <section> copy of <url> and <url> and also related to and partly overlapping with <url> there are quite a few redundant comments in the code , such as : - <code> - type comments - <code> - type comments - function header comments which include the function name another minor issue has to do with empty lines : a ) _unnecessary_ empty lines ( e . g . first line after the opening brace of a function / struct , or the last line before the closing brace - the latter apparently sometimes triggers the ci format checks ) . b ) _missing_ empty lines between functions ( i . e . closing brace of last function , then next function beginning on the immediately next line without an empty line in between ) the unnecessary empty lines ( at the beginning or end of a function , for example ) represent a low single - digit percentage of the cases ( the vast majority of functions / structs do not have these extra empty lines ) , so there is an argument to remove them purely for consistency , not just due to them being redundant and triggering the ci format checks . <section> remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"cfe integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fixes issue # <number> - propagate cmake_export_compile_commands variable pr # <number> - fix # <number> , remove codeql paths ignore # <number> pr # <number> - fix # <number> , duplicated logic in cfe_sb_broadcastbuffertoroute pr # <number> - fix # <number> , remove ' return ; ' from last line of void functions . pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md <section> fixes # <number> note : related to <url> note : if <url> is implemented , it can be done directly on a single <allcaps> changelog </allcaps> . md file now , rather than inserting part way down into a <allcaps> readme </allcaps> . md file . <section> none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"fix # <number> , update to_lab entry point in cfe_es_startup . scr <section> fixes # <number> updates to_lab entry point in cfe_es_startup . scr part of changes to the to - lab app ] ( <url> and [ groundsystem <url> aim is to standardize naming of to_lab functions / macros to match predominant cfs style . <section> none so far . <section> no impact on behavior . <section> n / a <section> <user>"
update to_lab entry point in cfe_es_startup . scr <section> to_lab issue <url> is addressed in pull request <url> this issue is opened in order to address the change required to cfe_es_startup . scr changes are also being made to groundsystem file to_lab_msg ( <url> <section> <user>
"fix # <number> , remove ' return ; ' from last line of void functions . <section> fixes # <number> removes all cases of redundant "" return ; "" statements on the last line of void functions . <section> none , prior to submission . <section> no impact on behavior . <section> <user>"
"non - constant format string <section> passing a non - constant ' format ' string to a printf - like function can lead to a mismatch between the number of arguments defined by the ' format ' and the number of arguments actually passed to the function . if the format string ultimately stems from an untrusted source , this can be used for exploits . <section> same behavior . > if the argument passed as a format string is meant to be a plain string rather than a format string , then pass %s as the format string , and pass the original argument as the sole trailing argument . > > if the argument passed as a format string is a parameter to the enclosing function , then consider redesigning the enclosing function ' s <allcaps> api </allcaps> to be less brittle . <section> <url> <section> caught by codeql . critical in terms of severity . can dismiss as used in tests . i prefer addressing codeql issues , especially if they are marked as critical , for unit tests . by doing so , this can teach good coding practices and the coding standard which can translate into the source code . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove unnecessary parentheses around return values . <section> fixes # <number> removes parentheses in return statements in cfe that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements <section> unnecessary parentheses around return values in cfe copy of <url> <section> <user>
"fix the typos * ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions ."
"fix # <number> , duplicated logic in cfe_sb_broadcastbuffertoroute <section> fixes # <number> removes duplicated logic in the final if / else in cfe_sb_broadcastbuffertoroute . <section> standard cfs bundle tests performed . lcov ( cfe_sb_api c ) <img> <section> no impact on behavior . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev171 <section> <user>"
"unary minus operator should not be applied to an unsigned expression <section> negation of unsigned value <section> keep same behavior but fix codeql warning . <section> <url> <section> caught by codeql - violation of <allcaps> misra </allcaps> ( part of the coding standard ) . could cast evs_eventburstmax . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"fix # <number> , remove codeql paths ignore * ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> <section> tested on fork at arielsadams / cfe on test - remove - paths branch . as seen in the screenshot , the issues are gone . image <img> <section> same behavior , no issues thrown in codeql workflow . <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"remove codeql paths ignore <section> codeql throws two issues : using paths - ignore can prevent code scanning annotating new alerts in your pull requests and on push . <section> view the latest codeql workflow annotations . <section> same behavior , with no issues thrown in the workflow . <section> when removed , documentation files will still be ignored without the issues thrown due to this pr : <url> <section> ariel adams , <allcaps> mcsg </allcaps> tech"
"cfe integration candidate : caelum - rc4 + dev22 <section> pr # <number> - fix # <number> , resolve issues building users guide with ubuntu <number> / doxygen <date> <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fixes issue # <number> - propagate cmake_export_compile_commands variable propagates variable cmake_export_compile_comands to the cmake subprocess in mission_build . cmake * [ na ] i signed and emailed the appropriate [ contributor license agreement ] - - government employee <section> this fixes feature request # <number> which has cmake generate a compilation database for all subprojects / targets , helping editors / ides with understanding the full cfs / cfe environment . <section> steps taken to test the contribution : <number> . build steps ( from root of cfs directory ) <code> <number> . execution steps <code> <section> no impact to behavior of cfe itself . simply causes an extra file to be created ( the compilation database ) for cfe / cfs apps when requested by the user . <section> - hardware : linux server / mac book pro - os : rhel8 . <number> , ubuntu <number> - versions : dev ( main branch ) - <section> n / a <section> n / a <section> andrew liounis - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"propagate cmake_export_compile_commands to cmake subprocess <section> when building cfe alongside of other apps the setting for the cmake variable ` <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> ` . <section> this is the simplelest and least disruptive to the existing build process . alternatives would be to use externalproject or add_custom_command / add_custom_target which would probably play nicer than the execute_process , but they would also need to pass the same flag in this manor . <section> n / a <section> andrew liounis , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve doxygen <date> latex make errors <section> - fix # <number> <section> built cfe - usersguide locally and confirmed no warnings and pdf looked good <section> will now build cfe usersguide on ubuntu <number> w / o issues <section> - hardware : i5 / docker - os : ubuntu <number> - versions : main + this comit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add_cfe_app uses deprecated call to target_link_libraries <url> <section> the cmake linking directive in <code> uses the "" plain "" signature ( ie , does not use a <code> , <code> , or <code> keyword to specify how a library is used by a target ' s dependents ) . because of this , one cannot use the keyword - style call on a cfs app without triggering a cmake warning . mixing the plain and keyword styles has been deprecated since cmake <date> . since cfe specifies a minimum cmake version of <number> , this should be updated . as far as i can tell , calling <code> in an app to link in a static library is necessary , because this is not done as part of <code> . <section> <code> directives could be used with keyword signatures in app cmakelists files , and no deprecation warning emitted . <section> - create a static library ( either manually via cmake or by putting the target name in <code> and using <code> . - add the library as a dependency for an app ( either manually via cmake or by using <code> ) - try to link it in an app using <code> - build as usual <section> <url> <section> i am using the cfe v7 . <number> - rc4 release <url> but this is present in <code> and <code> at the time of reporting . cmake verison is <number> . <number> - rc2 . <section> see cmake policy cmp0023 . isaac rowe , jacobs contractor to <allcaps> nasa jsc </allcaps> ( edited to provide information requested by contributor guidelines )"
"runapp table scan waits maximum time for a shutdown app . <section> if es is commanded to stop an app , the runapptablescan background task does not check that the app has reached the desired state of cfe_es_appstate_stopped . instead it continues to decrement the wait time , which means the app will never get cleaned up until the timespan of <code> is reached . <section> steps to reproduce the behavior : <number> . set cfe_platform_es_app_scan_rate to <number> , and set cfe_platform_es_app_kill_timeout large enough to visually inspect the time between an app reaching cfe_es_exitapp and <allcaps> cfe </allcaps> sending the event with <code> <number> . start <allcaps> cfs </allcaps> , command es to stop the target app . note that the stop application takes the full cfe_platform_es_app_kill_timeout before the stop application event is generated . <section> i think the intent of the runapptablescan is to detect when an app is immediately able to be cleaned up or a timeout has been reached . the timeout is in place but the cfe_es_appstate_stopped condition is not checked . <section> if applicable , add references to the software . replacing the <code> code block in <code> with something like : <code> improves this app unload delay . <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] anything <section> add any other context about the problem here . <section> full name and company / organization if applicable thomas brain - <allcaps> metecs </allcaps> contractor to <allcaps> jsc </allcaps> ."
"cfe integration candidate : caelum - rc4 + dev19 <section> pr # <number> - fix # <number> , squash uninit var static analysis warnings <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , squash uninit var static analysis warnings <section> - fix # <number> <section> ci <section> just squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev17 <section> pr # <number> - fix # <number> , increase event burst credit to not squelch at startup in ci pr # <number> - fix # <number> , grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"fix # <number> , grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> - fix # <number> <section> ci <section> none , minor requirements grammatical / format updates <section> ci <section> fixed one summary typo . note this update will require a requirements document respin ( release artifact ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
grammatical / format updates to <allcaps> evs </allcaps> flooding requirements <section> import / export of <allcaps> evs </allcaps> flooding requirements caused minor formatting changes . note also fixed a summary typo . <section> update to latest export from requirements cm tool . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , increase event burst credit to not squelch at startup in ci <section> - fix # <number> doubled the event squelch credit ( <number> to <number> ) to avoid es event squelching at startup seen in app ci runs <section> tested with <number> <allcaps> gsfc </allcaps> apps , no squelch observed <section> just increased the default credit , can burst up to <number> events before squelch . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"event squelch triggering at startup on es version reporting in submodule ci <section> squelching es version events on startup in the <allcaps> cf ci </allcaps> : <url> <section> bump up maximum default credit <section> maybe not squelch until in a running mode ? although that somewhat limits the usefulness of the squelching . could switch the event message wording to not say "" error "" or just ignore the returned send event error <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev15 <section> pr # <number> - fix # <number> , use correct loop var in add_cfe_app_dependency pr # <number> - fix # <number> , automatic suppression of flooding events pr # <number> - fix # <number> , remove stray <allcaps> todo </allcaps> in ut <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user> <user>"
"fix # <number> , use correct loop var in add_cfe_app_dependency <section> this function was not using the loop variable , so ended up adding only the first item . fixes # <number> <section> call add_cfe_app_dependency with multiple items <section> all dependency items get registered , and compilation gets full <allcaps> api </allcaps> include paths , not just the first one . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove stray <allcaps> todo </allcaps> in ut <section> - fix # <number> <section> ci <section> comment only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev13 <section> pr # <number> - fix # <number> , remove commented out code <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> <user>"
"read ( ) vs os_read ( ) clarification <section> my application involves reading data from a serial device ( <allcaps> imu </allcaps> ) in a nonblocking fashion . furthermore , i am writing code for a particular linux architecture so benefits from the standpoint of enabling os abstraction are not really important . so , other than that : what is the difference between linux ' s read ( ) and os_read ( ) ? is there a specific one that is recommended given my situation ? if so , why that one ?"
"fix # <number> , remove commented out code <section> clean up old code which was commented out fixes # <number> <section> build and run <section> none ; code was commented out <section> <allcaps> rhel </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"remove commented - out logic <section> when developing other code i noted a commented in <allcaps> cfe </allcaps> core stubs with a "" <allcaps> jphfix </allcaps> "" marking . this is old from a previous change and should have been removed before commit ( mistake ) . <url> <section> remove the commented code <section> joseph hickey , vantage systems , inc"
"account for clang based toolchains in cmake logic for - - whole - archive flag generation <section> in the target cmakelists . txt file , there is logic that conditionally adds the - - whole - archive linker options . this logic currently checks for a compiler id of "" <allcaps> gnu </allcaps> "" . when using a vxworks <number> toolchain that is based on clang , this logic is not triggered . <section> adjust the logic to allow for clang based toolchains . the vxworks toolchain has compatible options so only the toolchain identification needs to be changed . <section> we could move these flags into the toolchain files , but that would require changing all existing toolchain files . <section> the current logic is here : <url> the new logic needs to look something like this : if ((""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" <allcaps> gnu </allcaps> "" ) or (""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" clang "" ) ) <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number> <allcaps> note </allcaps> : this change is likely to be part of a set of changes to support vxworks <number>"
"fix # <number> , endian macro mask before shift to avoid shift overflow warning <section> - fix # <number> <section> ci <section> none , just squashes warnings <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , automatic suppression of flooding events <section> - fix # <number> <section> ci <section> squelches flooding events ( configurable ) <section> ci <section> still a work in progress , needs coverage and functional cleanup <section> none , update suggestion from <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps> context . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user>"
"fix # <number> , add macro for initializing command header <section> - fix # <number> just adds cfe_msg_cmd_hdr_init <section> built and ran with nasa / sc # <number> , and observed the commands getting sent <section> none , just provides a more portable way to define tables with commands <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : build main + the sc changes and this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add macro for assembling message header for use in defining tables that contain messages <section> without a macro , tables are header implementation specific with their current approach of just using a uint16 array and hard coding the elements . <section> add an overridable macro that will fill in the header elements from "" common "" inputs . something like : <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_es_statustostring and cfe_status_c <section> - fix # <number> adds cfe_es_statustostring and cfe_status_c <section> ci ( coverage tests and app testcase functional ) <section> none , just adds useful apis for future cleanup <section> ci <section> none <section> none <section> none"
"cfe integration candidate : caelum - rc4 + dev10 <section> pr # <number> - fix # <number> , resolve ut uninit var static analysis warnings - fix # <number> , resolve fsw uninit var static analysis warnings - fix # <number> , resolve ut non - distinct identifier warnings - fix # <number> , resolve ut buffer underflow warning pr # <number> - fix # <number> , cfe_users_guide . pdf <number> <section> cfs bundle checks <url> cfe checks <url> <section> see prs <section> ubuntu <number> <section> part of < <url> commit and pr format - check failure expected for integration candidates <section> if included , identify any third party code and provide text file of license <section> skliper paulober"
"fix # <number> , automatic suppression of flooding events * ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> - fixes # <number> <section> <number> . built with <allcaps> simulation </allcaps> = i686 - native enable_unit_tests = true <number> . ran unit tests , all passing except time due to local time configuration changes <number> . built for vxworks <number> . ran cfs on vxworks and observed events being squelched and the squelch event message being emitted <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : squelch error code gets returned by event send functions if a squelch happens - behavior change : events get squelched after <number> events within <number> second per app ( default in cpu1_platform_cfg ) ; tokens are returned at a rate of <number> / sec ( default in cpu1_platform_cfg ) to allow a sustained event rate of <number> / sec / app . event is emitted upon squelching , and counters incremented . counters added to event data stored to file and realtime telemetry . <section> - hardware : sp0 - s ( simics ) - os : vxworks <number> - versions : cfe <number> . <number> + dev127 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev66 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev66 w / <allcaps> jsc </allcaps> changes <section> n / a <section> n / a <section> john n pham ( <user> ) , northrop grumman , space systems"
"fix # <number> , cfe_users_guide . pdf <number> <section> a clear and concise description of what the contribution is . - fixes # <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - no <allcaps> http </allcaps> <number> when clicking on cfe users guide link in <allcaps> readme </allcaps> . md <section> - personal"
"redundant word in app developer ' s guide remove "" compute "" <url>"
"fix # <number> # <number> # <number> # <number> , resolve static analysis warnings <section> - fix # <number> - fix # <number> - fix # <number> - fix # <number> <section> ci + static analysis run <section> none , just squashes static analysis warnings <section> - hardware : vm - os : ubuntu <number> - versions : bundle main + apps + related static analysis resolution branches <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
buffer underflow in ut <section> buffer underflow warning observed in ut static analysis <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
non - distinct identifiers in ut <section> non - distinct identifier static analysis warning in ut <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
resolve uninitialized variable static analysis warnings in unit tests <section> uninitialized variable warnings in unit tests identified by static analysis ( license prevents publishing ) <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , ut updates for alternate time configuration <section> - fix # <number> <section> build and run unit tests with alternate time configuration : <code> confirm it builds , tests pass , and coverage matches ( the same <number> lines , <number> branch uncovered in time for either config ) <section> none , just fixes ut for alt time config <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit w / alternate time config <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4_dev9 <section> pr # <number> - fix # <number> update rtems toolchain files pr # <number> - fix # <number> , add support for fractional seconds in epoch pr # <number> - fix # <number> , adds truncation warning suppression flags pr # <number> - fix # <number> , doc deploy from local workflow on main branch push pr # <number> - fix # <number> , redundant word in app developers guide pr # <number> - fix # <number> , ut updates for alternate time configuration <section> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> , <number> <section> part of < <url> <section> none <section> skliper chillfig jonathan brandenburg - metecs hugo - valentine acudmore"
"fix # <number> update rtems toolchain files <section> - fix # <number> modifies the existing <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> toolchain files to : - change the os define to avoid using a reserved identifier ( _rtems_ ( x ) _ ) - change the <allcaps> rtems </allcaps> <number> define to indicate it is deprecated - add a bsp_specs_flags flag to allow for <allcaps> rtems </allcaps> version variations in the specs flags - add a dynamic load cmake variable to allow for two types of <allcaps> cmake </allcaps> executable types in the platform file added a <allcaps> rtems </allcaps> <number> i686 toolchain file <section> - rebuilt and ran <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> tests - tested <allcaps> rtems </allcaps> <number> build and ran tests ( using local <allcaps> osal </allcaps> mods and ci docker image with <allcaps> rtems </allcaps> <number> ) <section> - no impact or behavior changes on <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> - <allcaps> rtems </allcaps> <number> , <allcaps> rtems </allcaps> <number> docker images used in ci workflows <section> - the changes in the toolchain files for <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> are to accommodate the <allcaps> rtems </allcaps> <number> port and allow for additional <allcaps> rtems </allcaps> builds to use the same cmake platform file for <allcaps> rtems </allcaps> . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"update <allcaps> rtems </allcaps> toolchain files for <allcaps> rtems </allcaps> <number> , <number> , and <number> <section> this is part of the <allcaps> rtems </allcaps> updates described here : <url> the <allcaps> rtems </allcaps> toolchain files require a few minor changes in order to : - add compatibility for <allcaps> rtems </allcaps> <number> - allow both static and dynamically linked cfe core implementations - allow the gaisler <allcaps> rcc </allcaps> toolchain to be used <section> i would like do the following to existing <allcaps> rtems </allcaps> toolchain files : - add a define to indicate that the cfe core is dynamically linked - add a define to indicate the version of <allcaps> rtems </allcaps> being used . this is a new define , and when the proper <allcaps> osal </allcaps> and <allcaps> psp </allcaps> changes have been made , the old defines will be removed . the new define has the form - dos_rtems_x where the old define has the form - d_rtems_x_ - add a rtems_bsp_specs variable to allow a version specific specs option to be specified . this allows the same cmake platform file for <allcaps> rtems </allcaps> to be used for <allcaps> rtems </allcaps> <number> , <number> , and <number> . i would also like to add a new toolchain file for i686 - rtems6 <section> the alternative is to create two additional cmake platform files in the <allcaps> psp </allcaps> for <allcaps> rtems </allcaps> <number> and gaisler <allcaps> rcc </allcaps> <number> . this is not ideal because there would be <number> separate <allcaps> rtems </allcaps> cmake platform files to maintain and they would be almost the same . <section> the toolchain file changes are the only changes needed in the cfe to support <allcaps> rtems </allcaps> <number> , <number> , and <number> as well as gaisler <allcaps> rtems </allcaps> <number> ( <allcaps> rcc </allcaps> <number> . x) . these changes also will enable a new generic - rtems <allcaps> osal bsp </allcaps> and <allcaps> psp </allcaps> to be added later . <section> alan cudmore , <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
"fix # <number> , doc deploy from local workflow on main branch push <section> - fix # <number> workflow deploys document locally to avoid deployment password issues when trying to deploy from cache in reusable . also does not skip main branch actions so it will deploy on push to main . <section> ci <section> document deploy fixed <section> ci : tested on fork here - <url> <section> depends on updates in cfs reusable workflow so it will not get skipped - nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
documentation deployment fails on push to main <section> see <url> fails deployment step <section> likely due to secret not being passed in explicitly to reusable workflow <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : caelum - rc4 + dev8 <section> pr # <number> - fix # <number> , only increment sb internalerrorcounter on errors pr # <number> - fix # <number> , improve es unit test coverage pr # <number> - fix # <number> , add config module to coverage enforcemnt pr # <number> consistent doxygen flow / naming for generation and use reusable documentation generation workflow - fix # <number> , - fix # <number> , pr # <number> - fix # <number> , remove contributor license agreements <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> and <number> <section> part of nasa / cfs # <number> <section> none <section> skliper chillfig"
"unit test will not build with external time source configuration <section> many failures in build with <code> and the following settings : <code> this has already been noted in the general time unit testing issue # <number> which includes many other unit test issues with changing time config . raising priority on this one with a unique issue since it ' s currently a stakeholder impact . <section> fix this configuration at minimum , which is often used when supplying cfs with time from an external source ( or app ) . <section> time services does need a general refactor as noted in # <number> , many issues w / the unit tests as noted in # <number> . really would benefit from converting the configuration files to cmake as described in # <number> . <section> # <number> fixed the build issue , but unit test fails to build . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> per stakeholder request"
"fix # <number> , add support for fractional seconds in epoch describe the contribution fix # <number> testing performed build / run unit tests , confirm same coverage of time module expected behavior changes epoch contains a value for fractional seconds in the form of a cfe_mission_time_epoch_micros . this value is included in the time value before generating the printable string in cfe_time_print system ( s ) tested on hardware : i7 / virtual box os : centos linux <number> versions : bundle main plus this component additional context none third party code none contributor info - all information <allcaps> required </allcaps> for consideration of pull request jonathan brandenburg - <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps>"
"fix <number> add fractional seconds to epoch <section> fix # <number> <section> build / run unit tests , confirm same coverage of time module <section> epoch contains a value for fractional seconds in the form of a <code> . this value is included in the time value before generating the printable string in <code> <section> - hardware : i7 / virtual box - os : centos linux <number> - versions : bundle main plus this component <section> none <section> none <section> jonathan brandenburg - <allcaps> nasa </allcaps> / <allcaps> jsc </allcaps>"
"fix # <number> # <number> , consistent doxygen flow / naming for generation and use reusable documentation generation workflow <section> - fix # <number> - fix # <number> <section> tested via <url> <section> more consistent naming supports doc generation reusable workflow use <section> ci w / modified reference passed at <url> <section> depends on nasa / cfs # <number> addition of reusable workflow <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"support for fractional seconds in epoch definition would a change to accept fractional seconds for the time epoch be accepted into cfe ? cfe supports setting the epoch of time with a granularity of seconds . here is a relevant extract from <code> : <code> it seems the definition of a commonly used epoch , j2000 , contains fractional seconds : <code> as this issue is written , i have locally modified <code> to account for fractional seconds using a <code> macro , defined in this example to <number> . i have not yet written the unit tests . here is a fragment from <code> : <code>"
"fix # <number> , only increment sb internalerrorcounter on errors <section> - fix # <number> <section> build / run unit tests , confirm coverage ( asserts added to verify behavior ) <section> no longer increments <code> for timeouts or no message which are not internal errors <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve es unit test coverage <section> - fix # <number> <section> build / run unit tests and confirmed coverage <section> improves coverage <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> also tightened up the coverage enforcement <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add config module to coverage enforcemnt <section> - fix # <number> <section> ci <section> none , just adds enforcement <section> ci <section> will update minimum coverage as part of fix to # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"replace cfe <allcaps> cla </allcaps> with bundle bootes <allcaps> cla </allcaps> forms <section> remove the individual and corporate contributor license agreement . <section> removal of the respective individual and corporate contributor license agreement pdfs from nasa / cfe . <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
"fix # <number> , adds truncation warning suppression flags <section> - fix # <number> adds printf - style format and string operation truncation warning suppression flags . <section> tested on fork : <url> <section> none , flags should prevent warnings on future compilations using latest systems . <section> ubuntu <number> <section> justin figueroa , <allcaps> asrc </allcaps> federal <allcaps> edit </allcaps> - jh : added reference to issue so it will autolink"
"fix # <number> , remove contributor license agreements <section> - fixes # <number> adds checklist for <allcaps> cla </allcaps> and contributing guide . <section> working links . removal of the respective individual and corporate contributor license agreement pdfs from nasa / cfe . <section> depends on <url> <section> justin figueroa , <allcaps> asrc </allcaps> federal"
es missing coverage in cfe_es_task . c of <code> <section> not covered at all : <url> <section> add coverage <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
add <code> module to coverage enforcement ci <code> <section> config module missing from code coverage ci enforcement <section> add - note the uncovered minimums should also be updated based on latest results ( <number> lines <number> branches ) <section> none <section> <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - fix # <number> , resolve build failure for time cfg source pr # <number> - <allcaps> hotfix </allcaps> # <number> , set cfe_revision = <number> and cfe_mission_rev = 0 xff <section> cfe checks < <url> cfs bundle checks < <url> failed codeql workflow is being examined <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"fix # <number> , resolve build failure for time cfg source <section> - fix # <number> <section> built with settings described in # <number> , note unit tests do not build yet with those settings ( see # <number> ) <section> code will at least build <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> # <number> : revert changes to versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> correct cfs_versions . dox appropriately . <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , expand cmake documentation <section> expands cmake documentation <section> documentation - only , just proofreading <section> none <section> n / a <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> elizabeth timmons ( <user> ) , <allcaps> nasa </allcaps>"
"cfe integration candidate : caelum - rc4 + dev6 <section> pr # <number> - fix # <number> , use osal - common . doxygen to resolve <allcaps> osal </allcaps> doxygen refs pr # <number> - fix # <number> , refactor doxygen mainpage into frontpage <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> / <number> ( bundle ) <section> part of <url> docs build will fail until bundle ic is merged , see successful build at <url> <section> none <section> <user>"
"fix # <number> , use osal - common . doxygen to resolve <allcaps> osal </allcaps> doxygen refs <section> - fix # <number> <section> built osal users guide and cfe users guide and mission doc from bundle level , confirmed contents . <section> docs only , reduces dependencies <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit + nasa / osal # <number> <section> nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum - rc4 + dev4 <section> pr # <number> - fix # <number> , missing sb include for v2 msgid pr # <number> - fix # <number> , resolve doxygen doc warnings and enforce in ci pr # <number> - fix # <number> , remove explicit filename doxygen comments pr # <number> - fix # <number> , add cfe_es_createchildtask default handler <section> cfe checks < <url> - * <allcaps> note </allcaps> <kiss> failing documentation build passes in bundle ci , requires osal dependency - cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> and <number> <section> part of <url> <section> none <section> <user>"
"incomplete conversion of cfe_sb_msgid_t in test_cfe_msg_msgid_v2 . c <section> building the cfe unit tests with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> fails due to compiler errors in modules / msg / ut - coverage / test_cfe_msg_msgid_v2 . c . the errors are due to calling cfe_msg_setmsgid ( ) with a "" message id "" parameter which is an integer , not a cfe_sb_msgid_t . <section> steps to reproduce the behavior : <number> . configure the sample mission with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> . <number> . attempt to build the unit tests . note compiler errors . <section> the unit tests should compile without error . <section> see attached patch . test_cfe_msg_msgid_v2_patch . txt <url> <section> - "" hardware "" : generic x86 - <number> <allcaps> pc vm </allcaps> on virtualbox <date> , running on macos <number> . <number> . - os : ubuntu <number> . <number> - compiler : gcc <number> . <number> - versions : current head of cfe ' main ' branch , <allcaps> osal </allcaps> v6 . <number> - rc4 , <allcaps> psp </allcaps> v1 . <number> - rc4 <section> toolchain is configured to build <number> - bit apps . <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on <allcaps> isrds </allcaps> - <number> , <allcaps> nasa arc </allcaps> code ti <email>"
"<allcaps> ccsds </allcaps> v2 : msg module unit test inconsistencies with cfe_sb_invalid_msg_id <section> the msg_ut test fails at test_cfe_msg_msgid_v2 . c : <number> . the check at that location expects cfe_msg_setmsgid ( ) to return cfe_msg_bad_argument when given cfe_sb_invalid_msg_id as the message id . instead the function returns cfe_success . when a check against cfe_sb_invalid_msg_id is added , a number of new failures appear , notably at test_cfe_msg_init . c : <number> , test_cfe_msg_ccsdsext . c : <number> , test_cfe_msg_ccsdsext . c : <number> , and test_cfe_msg_msgid_v2 . c : <number> . the first , third , and fourth expect a message id with a value of <number> to be legal . the second check passes the constant cfe_sb_invalid_msg_id itself and expects success . <section> steps to reproduce the behavior : <number> . configure the sample mission with mission_include_ccsdsext_header and mission_msgid_v2 set to <allcaps> true </allcaps> . <number> . build the unit tests . <number> . run ' make test ' . note failure in msg_ut . <section> consistent enforcement of an <allcaps> api </allcaps> error check on the msg module . the documentation for cfe_msg_setmsgid ( ) says : > the user should ensure that this function is only called with a valid msgid parameter value . if called with an invalid value , the results are implementation - defined . the implementation may or may not return the error code <hashtag> cfe msg bad argument </hashtag> in this case . the function is behaving as documented . the unit test suite itself is inconsistent about whether the function should reject cfe_sb_invalid_msg_id as invalid . <section> if applicable , add references to the software . <section> - "" hardware "" : generic x86 - <number> <allcaps> pc vm </allcaps> on virtualbox <date> , host macos <number> . <number> . - os : ubuntu <number> . <number> , <number> - bit . - compiler : gcc <number> . <number> . - versions : cfe <user> w / local fixes to correct compiler errors in test_cfe_msg_msgid_v2 . c ( bug report to follow ) , <allcaps> osal </allcaps> v6 . <number> - rc4 , <allcaps> psp </allcaps> v1 . <number> - rc4 <section> toolchain is configured to build as a <number> - bit program . <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on the <allcaps> isrds </allcaps> - <number> contract , <allcaps> nasa arc </allcaps> code ti <email>"
"fix # <number> , refactor doxygen mainpage into frontpage <section> - fix # <number> - also refactors how mission documentation is created to support the front page concept <section> built doc , usersguide , osalguide and confirmed layout / contents <section> none <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + # <number> + this commit <section> hard to pull apart from # <number> , so submitted on top . 3 0 a4c4e835712955f6776a207678941950ac0a08 is the subject of this merge . will fail until # <number> dependencies are merged . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , missing sb include for v2 msgid <section> - fix # <number> <section> stand alone build and ci <section> clean v2 build ( see details in # <number> ) <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"message struct definitions in default_cfe_msg_hdr_priext . h conflict with cfe_msg_api_typedefs . h <section> when mission_include_ccsdsext_header is set to <allcaps> true </allcaps> in global_build_options . cmake , the file modules / msg / option_inc / default_cfe_msg_hdr_priext . h is included in place of . <repeated> / default_cfe_msg_hdr_pri . h . the definitions in default_cfe_msg_hdr_priext . h conflict with those in modules / core_api_fsw / inc / cfe_msg_api_typedefs . h . <section> steps to reproduce the behavior : <number> . define a mission configuration . modify global_build_options . cmake by adding the following two lines : set ( mission_include_ccsdsext_header <allcaps> true </allcaps> ) set ( mission_msgid_v2 <allcaps> true </allcaps> ) <number> . attempt to build cfs . observe compilation errors while compiling . see attached file cfe_typedef_errors . txt for example error messages . cfe_typedef_errors . txt <url> <section> cfe should compile cleanly . <section> see attached patch file . cfe_msgdefs_patch_2022 - <number> - <number> . txt <url> <section> - hardware : virtualbox emulation of an x86 - <number> system on macos <number> . <number> - os : ubuntu linux <number> - compiler : <allcaps> gcc </allcaps> v9 . <number> with - m32 flag , all other options standard for relwithdebinfo build type - versions : cfe tag v7 . <number> - rc4 ; <allcaps> osal </allcaps> tag v6 . <number> - rc4 ; <allcaps> psp </allcaps> tag v1 . <number> - rc4 <section> <section> chuck fry , <allcaps> qts </allcaps> inc . , a subcontractor to <allcaps> kbr </allcaps> wyle on the isrds3 contract at <allcaps> nasa arc </allcaps> code ti <email>"
"fix # <number> , resolve doxygen doc warnings and enforce in ci <section> - fix # <number> <section> built doc standalone and confirmed with all the merges it built without warnings <section> none except warnings squashed <section> - hardware : i5 / wsl2 - os : ubuntu <number> - versions : bundle main + dependent commits <section> needs nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_es_createchildtask default handler <section> - fix # <number> <section> ci , also tested with cs unit test which depended on the behavior , passed <section> default handler sets parameter <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> related to # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
add cfe_es_createchildtask default handler <section> see # <number> for full issue / scrub details . this issue just fixes <code> <section> add handler <section> none <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"implement default handlers for apis that set values , not all exist ( needs full scrub ) <section> there are not default handlers for all apis that set parameters , leading to potential uninitialized variables when unit testing code that expects the parameter to be set if guaranteed by the <allcaps> api </allcaps> . <section> for <allcaps> api </allcaps> ' s that initialize / set id ' s or really any other case where the parameter should always be set there should be a default handler to avoid uninitialized variable issues for the code under test . example preferred handler : <url> example of a missing handler - <code> . at minimum for success the id should be set valid . <section> initialize the passed in parameter , but when initialized to invalid if there is not a handler to set it for the valid case the test will fail . it ' s better than the often silent uninitialized variable issue but for apis that always set the parameter the burden should not be on the flight code to fix the test issue . <section> planning to spawn individual issues based on identified cases , but this issue relates to a full scrub . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"expand ut - stub handlers <section> cfs apps duplicate ut handler extensions suggesting a general need for extra functionality <section> add ut functionality duplicated across <allcaps> gsfc </allcaps> apps . see this : lock : conversation <url> and changes in the following merge requests : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> : lock : < <url> <section> add a template in a users or developers guide ? <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum + dev3 <section> pr # <number> - fix # <number> , replace cfe_sb_valuetomsgid ( <number> ) with cfe_sb_invalid_msg_id pr # <number> - fix # <number> , improve cfe_sb_isvalidmsgid handler pr # <number> - fix # <number> , revert breaking change to cfe_es_appinfo_t structure pr # <number> - fix # <number> , fix git error in codeql workflow <section> see prs <section> cfe checks < <url> cfs bundle checks < <url> note that codeql workflow will fail until nasa / cfs # <number> is merged . passing test can be seen in nasa / cfe # <number> <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"fix # <number> , replace cfe_sb_valuetomsgid ( <number> ) with cfe_sb_invalid_msg_id <section> - fixes # <number> <section> - no impact to behavior <section> paul oberosler - personal"
"fix # <number> , improve cfe_sb_isvalidmsgid handler <section> - fix # <number> - if no return value override is set test against cfe_sb_invalid_msg_id <section> build / run unit tests , passed . used with ds and confirm units under test worked as expected based on valid / invalid <allcaps> mid </allcaps> use . <section> handler behaves more like expected <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , revert breaking change to cfe_es_appinfo_t structure <section> - fix # <number> <section> ci ( unit test build / execute ) <section> no behavior change but reverts breaking software change ( public structure modification ) <section> ci <section> need to decide if we should reopen # <number> as future work for a major update cycle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow <section> depends on nasa / cfs # <number> fixes # <number> - replace checkout action for bundle with git clone - use symlink to map calling repo workspace to expected cfs bundle directory location - replace bundle checkout action with git clone - adds component - path input parameter - adds "" code snippets "" to codeql analyze action <section> see pr checks tab <section> codeql action executes successfully . <section> - github actions , ubuntu <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"codeql workflow fails after "" upload "" stage <section> codeql workflow fails in the code ql analyze step , specifically right after the "" upload "" stage . see failed run in <url> also silent "" failure "" in <url> <code> <section> run latest codeql workflow <section> passing workflow run <section> if applicable , add references to the software . <section> - github actions , ubuntu <number> <section> can be fixed by updating workflow to use nasa / cfs # <number>"
"fix # <number> , array length calculation for perf structs <section> cleans up the array length calculation for perf structs to not assume a specific base element type ( uint32 ) . this also makes the definitions much more readable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none w / current structure definitions . just a bit of future - proofing and clean up . <section> ubuntu <number> <section> notably the <allcaps> eds </allcaps> build actually does use a different base type for this array , so this is not just cosmetic . but this is a worthwhile cleanup regardless . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , initialize blockdata in <allcaps> es ut </allcaps> <section> - fix # <number> - initializes blockdata in <allcaps> es ut </allcaps> testcds <section> build / run unit tests w / valgrind <section> unit test only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> probably caught in static analysis but we have got way too many nuisance warnings . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_fs_parseinputfilenameex avoid uninit var <section> - fix # <number> - uses input buffer if default is <allcaps> null </allcaps> to set output to avoid uninitialized variables in unit test <section> build / run unit tests with valgrind , eliminates warning <section> unit test only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> i wonder if this would have been caught sooner if we had a different bucket for "" critical "" static analysis checks . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"use input if default not set for parsing file name <section> <code> handler sets output to input as last resort ( avoids uninit vars ) . <code> only sets the output to default if default is not null , so there ' s cases in the es unit test where the output is not initialized since there is no default value . <url> <section> if <code> is <allcaps> null </allcaps> , use <code> <section> none <section> any unit that uses <code> with a <allcaps> null </allcaps> default risks uninit var , example : <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , osal_id_t type conversion in es_ut . c <section> corrects the implicit type conversion from an osal_id_t to an integer , making it explicit by using the os_objectidtointeger ( ) conversion function . fixes # <number> <section> build with strict osal_id_t type definition . run all tests . <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"implicit / incorrect <allcaps> osal id </allcaps> type conversion in es_ut . c <section> the following line in unit tests makes an implicit conversion between <code> ( an osal_id_t ) and an integer : <url> this is allowed with the current permissive type definition , but fails when building with strict types . <section> use a type - safe definition for osal_id_t . this conversion fails and results in a compiler error . <section> should use <code> here - easiest way to make it work without changing logic . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , limit <allcaps> sbr ut </allcaps> loops <section> - fix # <number> - limits <allcaps> sbr ut </allcaps> loops to avoid potentially long tests of questionable value <section> built / ran unit tests , confirmed acceptable timing <section> none , ut only <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add configurable symbol scope option for apps <section> in caelum , apps were switched to have local symbol scope when getting loaded ( on systems that support it ) to avoid discouraged design behaviors and possible issues with unloading / reloading if apps share symbols . really libs should contain all global scope symbols used by other apps ( and are still loaded with global scope ) and are never unloaded ( requires restart to modify ) . <url> the down - side of this change is apps like mm , md , cs all become more challenging to use when symbols are not available and a global symbol table dump will not include the app symbols . although sharing symbols from a reloadable app is likely never a good idea due to the potential for executing or utilizing stale memory , there ' s definitely a trade related to maintenance / portability . likely use case would be to compile w / local app symbols to ensure apps are not sharing symbols , but then switch to global for testing and / or release build for systems that require it . <section> add a configuration option to load apps with global or local scope ( also helpful to have background as to why each might be selected ) . this also allows a system that supports local symbols to behave like a system that does not support it for simulation / portability purposes . <section> could add an option at in the startup config , but probably overkill to set at an app by app basis . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : caelum + dev2 <section> pr nasa / cfe # <number> - fix # <number> , add cfe_es_appinfo_t element documentation pr nasa / cfe # <number> , - fix # <number> , fs functional test pr nasa / cfe # <number> , - fix # <number> , mismatched foreach in cmake function pr nasa / cfe # <number> , - fix # <number> , improved code highlighting in cfe application developers guide pr nasa / cfe # <number> , - fix # <number> , cfe_fs_parseinputfilenameex avoid uninit var pr nasa / cfe # <number> , - fix # <number> , array length calculation for perf structs pr nasa / cfe # <number> , - fix # <number> , limit <allcaps> sbr ut </allcaps> loops pr nasa / cfe # <number> , - fix # <number> , initialize blockdata in <allcaps> es ut </allcaps> pr nasa / cfe # <number> , - fix # <number> , osal_id_t type conversion in es_ut . c pr # <number> - fix # <number> , reuse codeql , static analysis , and format check <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> ( bundle level ) <section> part of <url> <section> none <section> <user> <user> <user> <user> <user>"
"functional tests may crash if created tasks use floating points <section> some functional tests create tasks without using the <code> flag . depending on the platform they are running , the spawned tasks might require floating points to be enabled for the task , otherwise we get an exception . <section> these two tests do not use os_fp_enabled to create a task : <url> <url> possible fix is to add os_fp_enabled to the function call . es_task_test . c : <code> tbl_registration_test . c : <code> <section> - hardware : <allcaps> dleon </allcaps> processor - os : <allcaps> rtems </allcaps> - versions : cfs bundle caelum rc4 <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"functional tests fail when cfe_mission_sb_max_sb_msg_size is set to max value <section> several sb tests fail because the tests expect the mission to be using the default value of <code> . if we use a value of <code> ( 0x 1 0 0 0 0 ) , the following tests fail : <code> see test_failure . log <url> <section> steps to reproduce the behavior : <number> . set <code> to <code> <number> . run the cfe functional tests <section> - hardware : <allcaps> leon </allcaps> processor - os : <allcaps> rtems </allcaps> - versions : cfs bundle caelum rc4 <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
specify language for improved code highlighting in app developers guide <section> github ' s markdown render engine can display code syntax highlighting in code blocks <section> add language specification to markdown code blocks <section> none <section> none <section> <user>
"fix # <number> , fs functional test <section> - fixes # <number> <section> personal"
"fix # <number> , mismatched foreach in cmake function <section> - fixes # <number> <section> - > conversation at # <number> <section> personal"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> cfe format check reuse : <url> cfe codeql reuse : <url> cfe static analysis reuse : <url> <section> cfe will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the workflow simply uses <code> and the full path of the workflow . the cfs workflows , or targeted workflows , must include workflow_call and runs - on as seen below . <code> <section> keep it as is . <section> tested in forked cfs : <url> tested in forked <allcaps> osal </allcaps> : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , format check add duplicate job <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . changed name from static - analysis to format - check <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , static analysis add duplicate check and remove main push <section> fixes # <number> <section> <url> <section> skips push actions if there is a matching or duplicate pull - request action . run on all branches for push and pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis in ci missing duplicate check , restricted to push to main <section> missing duplicate check and restricting to main for pushes here : <url> <section> run on all pushes , add duplicate check <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
format check in ci missing duplicate check <section> should skip format check if it ' s a duplicate action missing here : <url> <section> add duplicate check like the rest of the actions . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , replacing hardcoded message limit in <allcaps> time </allcaps> services <section> replacing the hardcoded message limits in the <allcaps> time </allcaps> services with <code> . fix # <number> <section> none <section> none <section> personal - zachary gonzalez"
"cfe integration candidate , caelum + dev1 <section> pr # <number> - fix # <number> , use cfe time clock state enum t in cmd / tlm and handling pr # <number> - fix # <number> , add cfe_sb_valuetomsgid / msgidtovalue wrappers - fix # <number> , use <number> as the invalid cfe_sb_msgid_t value - fix # <number> , use type safe value for cfe_sb_msgid_t pr # <number> - fix # <number> , <allcaps> evs </allcaps> functional test add for different event types pr # <number> - fix # <number> , patch for recursive event loop pr # <number> - fix # <number> , cfe_es_memaddoff structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t pr # <number> - fix # <number> , avoid aliasing warnings pr # <number> , message id type improvements - fixes # <number> - fixes # <number> pr # <number> - fix # <number> , use cfe_time_clockstate_enum_t in cmd / tlm and handling pr # <number> - fix # <number> , consolidate repeated <allcaps> msg </allcaps> stub setup in sb_ut pr # <number> - fix # <number> , return type conversions in cfe_es_gettaskname pr # <number> - fix # <number> , better message type pointer conversion pr # <number> - fix # <number> , replacing hardcoded message limit in <allcaps> time </allcaps> services pr # <number> - fix # <number> , use macro in cfe_resourceid_isdefined pr # <number> - fix # <number> , checking against isnewoffset only <section> cfe checks < <url> bundle checks < <url> <section> see prs <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , checking against isnewoffset only <section> - fix # <number> removed redundant check of <code> only using <code> now . <section> none <section> none <section> add any other context about the contribution here . <section> personal - zachary gonzalez"
"logically dead code for cfe_mission_time_epoch_second <section> execution cannot reach this statement : numberofminutes + + ; <section> no unreachable code when cfe_mission_time_epoch_second is configured as <number> . <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , consolidate repeated <allcaps> msg </allcaps> stub setup in sb_ut <section> utilize the common setup / wrapper functions in ut_support . c whenever possible <allcaps> msg </allcaps> dispatching in the generic handler . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests confirm that branch coverage is <section> changed from baseline <section> none <section> ubuntu <section> refactor for improved source maintenance / flexibility - but no behavior change , works identically <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , functional requirements grammar cleanup pr # <number> - fix # <number> , extended header definitions and test updates <section> cfe checks < <url> cfs bundle checks <section> see linked prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of < <url> <section> none <section> <user> <user>"
"use "" calltaskpipe "" wrapper in sb_ut <section> all other unit test modules ( es , evs , tbl , time ) go through a wrapper provided in the support code called <code> to invoke a command handler via the task ' s message handler function . this helper function would set up the <allcaps> msg </allcaps> stubs properly to dispatch to the given command code , avoiding the need to repeat the same setup calls dozens of times in the ut . for historical reasons , the sb unit test did _not_ do this - because the message accessor functions were also implemented in sb , and therefore it could not rely on stub behavior to set up proper dispatch ( i . e . it had to do the "" real "" thing ) . however , with the advent of the separate <allcaps> msg </allcaps> module , this is no longer the case . the sb_ut . c now uses / sets up <allcaps> msg </allcaps> stubs to do the dispatch , but it was never converted to use the same wrapper that other modules do . instead , the same setup code is repeated all over the tests . <section> convert oft - repeated sequences like : <code> to be : <code> <section> this is initially for clean up and readability , but it greatly improves flexibility too - if / when the core modules switch to a more intelligent verification and dispatch method , only ut_calltaskpipe needs to be updated to support the dispatch method , not dozens ( or even hundreds ) of different test cases . <section> joseph hickey , vantage systems , inc ."
"ic workflow upgrades <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , avoid aliasing warnings <section> use an actual <code> value when invoking functions that output an opaque pointer value . if necessary the value of this pointer can then be assigned to the real pointer type to dereference . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> no warnings when building with strict aliasing <section> ubuntu <number> ( gcc <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , extended header definitions and test updates <section> do not double - typedef the cfe_msg types when using extended headers . this also corrects a call to ut_setforcefail in the extended header test , which was renamed . fixes # <number> <section> build and run all <allcaps> cfe </allcaps> sanity checks , with extended headers enabled . <section> builds and runs correctly when extended headers are selected . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"scrub requirements for the next development cycle <section> there are a handful of requirements that either are not very useful , over - constrain design , or apply to heritage systems . see real time port control - cevs3017 , event data types - cevs3103 . <number> , etc . <section> scrub . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , message id type improvements <section> <number> . makes the value for <code> and <code> to be based on <number> rather than - <number> . this way , objects / values which are memset or otherwise cleared to <number> will get a safe value by default , rather than actively needing to be set to a safe value . <number> . makes the type used for <code> to be a wrapper around the msgid value , rather than a direct equivalent of the msgid value . this increases type safety and enforces that the correct type and correct conversions ( where necessary ) must be employed when working with msgids . fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> using "" <number> "" as a value for cfe_sb_msgid_t no longer passes the validity test . for unit tests where values were "" made up "" and did not actually need to be valid but needed to pass the cfe_sb_isvalidmsgid ( ) test - the value <number> can be used instead of <number> . type checking enforces that the msgid value conversion helpers must be used when intentionally using msgid as an int or vice versa . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe_sb_valuetomsgid / msgidtovalue wrappers <section> correct code that was not correctly using the cfe_sb_valuetomsgid or cfe_sb_msgidtovalue conversion wrappers where required to do so . this should be used whenever the value is intentionally converted to / from an integer . the cfe_sb_msgid_t type should not be assumed to be an integer in nature . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none for framework build / default config <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> evs </allcaps> functional test add for different event types <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , avoid alias warning on some compilers <section> use an intermediate variable of type <code> to store the address , which avoids an alias warning . fixes # <number> <section> build with strict flags ( <code> ) on <allcaps> gcc </allcaps> <number> . <section> builds clean ( no warning ) <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , confirm sb / time reset requirements in coverage test <section> - fix # <number> just added confirmation of sb / time reset requirements that are hard to fully verify operationally . <section> locally build / ran unit tests , ci <section> no impact <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
enhance unit test to check for reset of values on initialization ( requirements related ) <section> it ' s difficult functionally ( or via <allcaps> ctf </allcaps> ) to confirm the reset requirements related to counters / states since they get populated / used and counters increment based on the configuration . requirements that would help to check in coverage tests : csb4500 - sb : initialize routing on power on reset | upon a power - on reset the cfe shall initialize the routing information and clear all error counters . csb4501 - sb : initialize routing on processor reset | upon a processor reset the cfe shall initialize the routing information and clear all error counters ctime2002 - <allcaps> time </allcaps> : zero counters | upon receipt of command the cfe shall set to zero all counters reported in time services telemetry . <section> add a quick assert that the values do get initialized ( typically in cfe_*_earlyinit <censored> ) as required . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , cfe_assert macro names pr # <number> - fix # <number> , update msgid testcase to match implementation pr # <number> - fix # <number> , single time domain in functional time tests pr # <number> - fix # <number> , add missing inclusions in <allcaps> cfe api </allcaps> headers pr # <number> - fix # <number> , use existing / ram for fs header test pr # <number> - fix # <number> , add static local to function test so data section is nonzero pr # <number> - fix # <number> , make invalid buffer length consistent in es task test pr # <number> - fix # <number> , only check base filename in library info functional pr # <number> - fix # <number> , confirm sb / time reset requirements in coverage test pr # <number> - fix broken link in application developers guide pr # <number> - fix # <number> , avoid alias warning on some compilers <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> ( see cfs bundle pr ) <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , better message type pointer conversion <section> provides more abstract conversions between the local buffer pointers and the <code> pointer required for calling cfe_sb <allcaps> api </allcaps> , without assuming specific member names . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none in framework build . improves source code compatibility when using an alternate <allcaps> msg </allcaps> implementation that does not ( directly ) contain a <code> member . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use existing / ram for fs header test <section> - fix # <number> removes os_mkfs / os_mount in the fs header functional test and replaces with just using existing / ram . this avoids <allcaps> ram </allcaps> being reformatted on the mcp750 mid - functional which was causing the table tests to fail since the tables created at the beginning of the function no longer existed . note any system that runs out of <allcaps> ram </allcaps> would also not handle this well . <repeated> <section> tested on both linux and vxworks <section> no longer formats <allcaps> ram </allcaps> mid - test on mcp750 <section> - hardware : intel i5 / docker , mcp750 - os : ubuntu <number> , vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"table content management test fails on mcp750 due to format of <allcaps> ram </allcaps> triggered by file header test <section> out of the box there ' s <number> failures in the tbl_content_mang_test . c on the mcp750 , many related to cfe_tbl_err_access errors on the generated tables , which come from the following function : <url> since it ' s not added as a regular test , it runs before actually starting the test case : <url> but fs_header_test . c does a os_mkfs / os_mount which seems to trigger a format of <allcaps> ram </allcaps> on mcp750 before the table content management test is run ( but after the table file generation ) : <url> from the console mid - test ( does not get recorded in log , note there ' s a mixing of output strings . <repeated> <sad> <code> this is not ideal for numerous reasons ( some systems may have useful things in <allcaps> ram </allcaps> , or even be running out of <allcaps> ram </allcaps> ) <section> just use the available / ram . <section> i did not really dig that deep so there may be alternatives or underlying behavior that may need to be investigated , but as a quick fix for the functional test this seems sufficient . <section> formatting <allcaps> ram </allcaps> causes a reboot on sp0 since that ' s where it runs out of . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , single time domain in functional time tests <section> - fix # <number> functional test now uses consistent <allcaps> api </allcaps> ' s for bounding time , also fixed likely issue with <allcaps> met </allcaps> rollover causing a false failure . <section> build and ran on linux and mcp750 , passed <section> functional test now passes on systems where os_getlocaltime resolution is less than cfe_psp_gettime . <section> - hardware : intel i5 / docker , mcp750 - os : ubuntu <number> , vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional test can fail if os_getlocaltime and cfe_psp_gettime resolution is different <section> testgettime in time_current_test . c uses os_getlocaltime to bound the cfe_time_gettime and related calls here : <url> os_getlocaltime uses clock_gettime here : <url> but the cfe_time_gettime related calls use cfe_psp_gettime which for vxworks uses vxtimebaseget here : <url> the issue is ( at least on vxworks ) if clock_gettime resolution is less than vxtimebaseget the test may fail since it can show a <code> of zero yet the cfe_time_get * calls may show a difference so the timeinrange test fails . <section> use the same utilities and stay in the cfe_time_systime_t domain by bounding with cfe_time_gettime at the start and the end vs using os_getlocaltime . the test is really intended to show that the conversions work correctly to the resolution provided by cfe_time_systime_t , changing resolutions or references only complicates things unnecessarily leading to possible false results . <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , make invalid buffer length consistent in es task test <section> - fix # <number> changes : - makes the testname into an array ( and just subtracts <number> ) - removes the const invalid test name - tests against <number> buffer length <section> ran on mcp750 <section> tests both too short and <number> buffer length . <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional es task test does math on a pointer size which results in different behavior for <number> vs 6 4 bit <section> dodgy test on line <number> fails on a <number> bit machine since <number> length returns a different error vs a buffer that is too small : <url> sizeof ( taskname ) is either <number> or <number> since it ' s defined as a pointer on line <number> . i think the intent was to pass in a buffer length that is too small . <section> do a <number> buffer length test and a buffer length to small test separately ( and fix ) . also the invalid_name does not really follow case or use patterns , just pass in an invalid constant . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , functional <allcaps> crc </allcaps> converted to <allcaps> mir </allcaps> to handle different implementations <section> - fix # <number> simplified and made confirmation of results <allcaps> mir </allcaps> <section> mcp750 ( and ci ) <section> functional <allcaps> crc </allcaps> tests no longer fail vs hard coded values <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + # <number> + # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"functional test crc results are implementation ( and possibly endian ) dependent , fail vs hard coded expected value <section> <allcaps> crc </allcaps> calculations can depend on implementation or endianness of data being tested ( test fails on mcp750 which is big endian ) : <url> <section> convert to <allcaps> mir </allcaps> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add static local to function test so data section is nonzero <section> - fix # <number> added a static local ( testname ) just to make the data section nonzero so the test will pass when the addresses are valid . <section> tested on mcp750 <section> nonzero data section ( size and address ) <section> - hardware : mcp750 - os : vxworks <number> - versions : bundle main + # <number> + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
mcp750 functional test failure - app dataaddress and datasize zero <section> when running on the mcp750 : <code> from : <url> since there is not anything in the data section ( no initialized non - const globals or local staic vars ) <section> add a local static . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , patch for recursive event loop <section> adds cfe_sb_requesttosendevent / cfe_sb_finishsendevent wrappers around all events generated by cfe_sb_transmitmsgvalidate . this is avoids the potential for a recursive loop if configured improperly . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> tested with the mis - configuration where <allcaps> evs </allcaps> had an invalid <allcaps> mid </allcaps> and confirmed that the system does not get into a recursive loop and segfault anymore . <section> ubuntu <section> this is just a minimal patch that does not change current architecture but avoids a crash . a better fix for future versions would be to put this recursion protection into <allcaps> evs </allcaps> in a more generic manner . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , only check base filename in library info functional <section> - fix # <number> just checks the base of the filename <section> ran on linux and mcp750 , passed <section> passes test <section> - hardware : pc and mcp750 - os : ubuntu <number> and vxworks <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
functional library filename check hardcodes configurable elements <section> library filename check here : <url> directory and extension may be different on different systems . <section> recommend just checking the base name matches . could use the configurable elements to construct the name but that is not really proving much and could still be fragile ( defaults are not actually required ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update msgid testcase to match implementation <section> updates the test case for "" cfe_msg_setmsgid ( ) "" to write a value that is outside the set of storable values for msgid . this currently uses the value "" - <number> "" do this , assuming that this translates to a value with all bits set , and at least one of those bits will not correlate with an actual header field . caveat is that in other implementations , it is possible that all bits are storeable in the header . that is , all msgid values can be stored in a message or vice versa , even those msgids which are not route - able in sb . this also updates the documentation of cfe_msg_setmsgid to clarify if / when the cfe_msg_bad_argument status code is returned , and that the set of msgid values which are "" settable "" really depends on the <allcaps> msg </allcaps> implementation . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests . <section> none with default <allcaps> msg </allcaps> implementation and current config . <section> ubuntu <section> note that the "" cfe_sb_isvalidmsgid "" and the related constants <code> and <code> are really pertinent message routing in sb and <allcaps> sbr </allcaps> , more so than <allcaps> msg </allcaps> . the general concept of what constitutes a "" valid "" msgid is different for <allcaps> msg </allcaps> than sb / <allcaps> sbr </allcaps> . for <allcaps> msg </allcaps> it is just a matter of how many bits the real header has , and how this bits are mapped between the header and cfe_sb_msgid_t type . for example there are values which are "" storable "" in the <allcaps> ccsds </allcaps> primary header , but are not valid for sb / <allcaps> sbr </allcaps> or usable with <allcaps> cfe </allcaps> . in particular , it is possible that an application might be serving as an intermediate node in a <allcaps> dtn </allcaps> network - in which case it might need to decode and / or encode messages which are not actually routed on the <allcaps> cfe </allcaps> software bus at all . it should be sb ( and <allcaps> sbr </allcaps> ) domain to determine if a msgid is route - able . <allcaps> msg </allcaps> only should care if it is store - able in the header . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_assert macro names <section> replace "" cfe_utassert "" macro prefix with "" cfe_assert "" , to match the naming convention . ( the "" utassert "" was a carry over from the coverage test environment ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , just namespace consistency in code . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add missing inclusions in <allcaps> cfe api </allcaps> headers <section> some <allcaps> cfe api </allcaps> headers were missing dependency inclusions , where the header was referencing a type or symbol but not directly including the header file that provides that type / symbol . adding the dependent include allows the headers to work more consistently . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none for framework config ( these inclusions were already satisfied in existing use cases ) but fixes a broken build for external code that only included these headers directly . <section> ubuntu <section> this type of thing was intended to be caught by the "" headercheck "" concept in the module code , but that is currently not enabled / enforced in the build . there theoretically could be other instances of stuff like this , but these are the only two noted so far . <section> joseph hickey , vantage systems , inc ."
"fix # <number> support unimplemented features in <allcaps> msg </allcaps> ft <section> <allcaps> msg </allcaps> functional tests will not pass on gateway cert repo that uses a custom <allcaps> msg </allcaps> api . this pr makes the necessary changes to support unimplemented features in the custom <allcaps> api </allcaps> . <section> steps taken to test the contribution : <number> . checkout custom gateway cert repo <number> . checkout latest cfe and osal <number> . add sample lib , sample app , and test apps to be compiled and run by default <number> . run project and verify results <section> verify that unimplemented features in <allcaps> msg </allcaps> api do not result in failures <section> - ubuntu <number> vm <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> jose f martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , update directory diagrams in app developer guide pr # <number> - fix # <number> , improve sb coverage pr # <number> - improve es code coverage - fix # <number> - fix # <number> pr # <number> - fix # <number> , enforce minimum code coverage pr # <number> update dev guide for <allcaps> msg </allcaps> and <allcaps> sbr </allcaps> - fix # <number> - fix # <number> pr # <number> - fix # <number> support unimplemented features in <allcaps> msg </allcaps> ft <section> cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , enforce minimum code coverage <section> - fix # <number> added enforcement of minimum coverage to ci , currently set to numbers achieved once all coverage pr ' s are in ( es and sb pending ) <section> see results on branch with es / sb merges at : <url> ( <allcaps> passed </allcaps> ) <section> only impact is to fail the workflow if code is added without associated code coverage . <section> ci ( also ran it locally for testing ) <section> the numbers can be adjusted if code is added that really can not be covered ( although we should avoid this ) and / or as we resolve open coverage issues ( all are documented ) . needs # <number> and # <number> merged to pass . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"missing entries in system log during initialization <section> the first ~ <number> entries during initialization are being dropped from the system log . <section> dump the system log and review the first few entries . see the attached cfs_cfs_stdout . txt file and compare against a what was captured in the system log - syslog . txt . specifically , the message to determine power on / processor reset is being dropped - which is sometimes used for requirement verification / is resulting in test failures . <section> all log entries captured in log . <section> if applicable , add references to the software . <section> oracle vm virtualbox os : ubuntu - <number> cfs versions : cfe v6 . <number> - rc1 + dev593 , osal v5 . <number> - rc1 + dev458 , psp v1 . <number> - rc1 + dev112 . <section> dan knutsen <allcaps> nasa </allcaps> / goddard cfs_cfs_stdout . txt <url> syslog . txt <url>"
"fix # <number> # <number> , improve es code coverage <section> - fix # <number> - fix # <number> improve coverage for es . <section> build with unit tests , run , verify coverage improvement <section> none , coverage only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining coverage issues ( <number> uncovered lines , <number> uncovered branches ) : - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing branch coverage in es_queryallcmd , alternate config <section> would need a configuration where cfe_es_query_all_max_entries does not fit all the apps / libs : <code> here : <url> <section> coverage test with multiple configurations . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing coverage in cfe_es_task . c related to global_configdata defined in psp stubs <section> many cases in cfe_es_task . c where code can not be exercised based on the definition of global_configdata in the psp . example : <code> here : <url> impacts cfe_es_findconfigkeyvalue , cfe_es_generatesingleversionevent , cfe_es_generateversionevents , cfe_es_generatebuildinfoevents <section> provide a mechanism for overriding or defining global_configdata from the test code . some branches require both <allcaps> null </allcaps> and non - <allcaps> null </allcaps> values for coverage , so likely would need multiple builds . <section> coverage could be improved by just exposing a few of the internal routines and / or splitting up code and providing stubs . with <number> versions available from the <allcaps> psp </allcaps> likely could achieve full coverage , but clunky to cross repos just for coverage . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es missing coverage in cfe_es_poolcreateex , requires alternate config <section> branch / line below uncovered since it would require an alternate configuration : <code> here : <url> <section> test with alternate configurations <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> full name and company / organization if applicable"
"es missing branch coverage in cfe_es_backgroundtask , defensive code <section> missing branch coverage based on the const cfe_es_background_job_table and defensive coding ( not null , timer values ) : <code> here : <url> <section> maybe split the file such that it can be overridden in a test case with an array that hits these conditions . alternatively could just provide an array that has these conditions , but it would not really make sense in operational software . <section> none . note the actual implementation is ok as - is , it ' s just defensive code . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> <number> , use memset to clear structs <section> instead of assigning <code> , use an explicit <code> to clear the local stack structures . <section> build and run all tests <section> fixes compiler error when struct did not start with an integer . <section> <allcaps> rtems </allcaps> <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve sb coverage <section> - fix # <number> <section> build , run , report coverage , confirm improvement . now just missing <number> lines , <number> branches ( all documented ) , <percent> / <percent> . <section> none , unit test updates for code coverage only <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> issues for uncovered code : - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb missing branch coverage in cfe_sb_sendstatscmd , alternate config <section> branch coverage would require a config with cfe_mission_sb_max_pipes < cfe_platform_sb_max_pipes to hit the stats limit first : <code> here : <url> <section> test with alternate config to get full coverage . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb line coverage for collision reporting in cfe_sb_subscribefull requires alternate config <section> default config does not use the hash implementation , so there ' s no way to get collisions : <code> here : <url> <section> # <number> <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , correct various typos in docs , comments and error messages <section> fixed various minor typos in <allcaps> readme </allcaps> docs , comments and a few debug / error / description message strings . - fix # <number> <section> none ( non - executable code ) . <section> none . code execution is unchanged / unaffected . <section> n / a <section> n / a <section> n / a"
"sb missing branch coverage in cfe_sb_deletepipefull , cfe_sb_subscribefull , cfe_sb_unsubscribefull : pendingeventid ! = <number> when status = = cfe_success <section> pendingeventid is always set , so can not hit false case : <code> here : <url> same pattern in cfe_sb_subscribefull ( although inverted ) : <code> here : <url> again in cfe_sb_unsubscribefull : <code> here : <url> <section> consider just <code> ? anything that is not a <allcaps> success </allcaps> should increment the error counter . <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update time tests to use bitmask check macros <section> the new bitmask check macros provide more concise information the resulting log file . this updates the time test to use those macros when checking the state flags . <section> build and run all tests , confirm log output is correct <section> improved test log file info <section> ubuntu <section> note this also changes the code to call <code> repeatedly , rather than storing in a local variable and checking that value . the intent is to clearly indicate in the log that this function was invoked , not just what its output was . this helps with tracking / confirming that the function is covered by the functional test . this just reads a global so it should not be different in subsequent calls , unless the clock actually changes state during the test . but that was already a risk with the separate call to <code> , this does not really change that - and the flags are not really connected otherwise . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_memaddoff structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t <section> - fixes # <number> <section> <number> . github actions <section> - nothing <section> see # <number> . i am new to the docs system in this project , what is the type i should use for cfe_es . xml line <number> - <number> <url> ? maybe implement a new type in "" base_types "" , how ? after this fix , i will squash the commits with a clear commit message . <section> <user>"
"fix # <number> , cmake modifiable table tool path parameter cmake option to change the path of the ef2cfetbl executable file via the tabletool_exe environment variable . this also enables the user to specify other tools as table tool if needed . <section> - fixes # <number> <section> <number> . github actions <section> - nothing only if <code> environment variable is set . then the cmake would use the content as path to an executable used for transforming lib into tbl . <section> if <code> is not set the build process does not change . but if it is set the program will not add the default ef2cfetbl tool as a dependency in cmake and the with tabletool_exe specified executable will be run with the parameters like for the ef2cfetbl utility . <section> see above . <section> <user>"
"fix # <number> , use macro in cfe_resourceid_isdefined <section> - fixes # <number> <section> <number> . github actions checks <section> <user>"
"fix # <number> , remove extern from function prototypes <section> - fixes # <number> <section> <number> . github actions checks <section> - nothing <section> paul oberosler , individual"
"enforce cfe code coverage minimum statistics <section> code coverage not enforced , so it ' s easy to miss where code modifications should trigger coverage test updates <section> enforce ( like <allcaps> osal </allcaps> ) maximum uncovered lines / branches in ci . would benefit from an additional makefile rule or similar to separate and report out just cfe coverage . <section> none <section> should enforce as soon as the full coverage scrub is complete . as we address missing coverage issues in the future we can adjust the limits . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
sb code coverage improvements <section> there ' s a few achievable code / branch coverage lines in sb . <section> cover them . <section> none <section> ok as - is : - # <number> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> # <number> , improve <allcaps> tbl </allcaps> code coverage <section> - fix # <number> - fix # <number> <section> build / run / report coverage on unit tests , confirm improvement <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches , documented in : - # <number> - # <number> - # <number> - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> uncovered lines in cfe_tbl_loadcmd , no alternative error codes from cfe_tbl_getworkingbuffer <section> cfe_tbl_getworkingbuffer has no alternative error codes to exercise the following code in cfe_tbl_loadcmd : <code> <url> <section> could cover if cfe_tbl_getworkingbuffer was stubbed ( test individual file units in # <number> ) . note there is a possible internal error from getting the mutex , but it does not get returned ( see # <number> ) <section> trade refactor / removal of condition . <repeated> it ' s useful if errors do get added , just not currently reachable . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> : cfe_tbl_register branch coverage requires alternate configuration <section> hitting the condition below would require cfe_platform_tbl_max_sngl_table_size > cfe_platform_tbl_max_dbl_table_size , with a single buffer table and size between the two settings ( should not create the system log message ) <code> <url> <section> add multiple builds in ci with alternate settings to include this config . <section> could manually cover . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> tbl </allcaps> coverage can be improved <section> still some easy coverage missing in <allcaps> tbl </allcaps> . <section> add it <section> none <section> ok as - is : # <number> , # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve <allcaps> time </allcaps> branch coverage <section> fix # <number> , <allcaps> time </allcaps> now at <percent> / <percent> with just # <number> outstanding <section> build / run / verify coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branch : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> time </allcaps> improve branch coverage <section> a few more branches in <allcaps> time </allcaps> could be fairly easily covered <section> add coverage <section> none <section> ok as - is : # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , improve <allcaps> sbr </allcaps> branch coverage <section> fix # <number> , now at <number> / <number> for <allcaps> sbr </allcaps> <section> build , run , check coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> sbr </allcaps> incomplete branch coverage <section> easy branches currently uncovered . <section> add coverage <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"silently limiting usecount in cfe_sb_incrbufusecnt might cause issues when released early limiting the maximum value silently leads to the queue being released before all users are done . this really should create an error on subscribe or similar to avoid potential issues / strange behavior . maybe this case is protected somewhere else , but until confirmed to not be an issue , marking as bug since in theory this could cause pretty strange results . <repeated> not immediately critical since there are not 0x 7 fff subscribers in any currently realistic system . _originally posted by <user> in <url>"
"fix # <number> , improve resource id branch coverage <section> fix # <number> - pushes resource id coverage to <number> / <number> note it was just an out - of - order test where id was made invalid before the section that needed a valid id to get full coverage , so swapped the tests . <section> build / run / report coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> rid </allcaps> missing branch coverage <section> resource id is missing full branch coverage <section> add it . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , improve <allcaps> msg </allcaps> branch coverage <section> fix # <number> - improves <allcaps> msg </allcaps> branch coverage note only remaining is documented in # <number> <section> build / run / report coverage for unit tests <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches : - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> msg </allcaps> - improve coverage <section> additional missing branch coverage can be added <section> add it . <section> none <section> ok as - is : # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> msg </allcaps> missing branch coverage , would require alternate / stub implementation and splitting up coverage executable <section> the software is implemented to support multiple options but currently just utilizes a single option to build one executable ( see issue # <number> ) which means it ' s impossible to cover all the branches . example - can not hit the non - success case of the following branch since the selected implementation for <code> used internally can not fail ( although conceptually an implementation could test the header version and reject if it does not match for example ) : <url> <section> this could be solved by implementing # <number> ( related to # <number> ) <section> none <section> results in <number> branches not being exercised . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"split msg coverage tests into multiple executables to be able to cover all implementations <section> currently with just one executable it ' s not possible to cover all implementations with one build / run , so source selection is used : <url> <section> split into smaller units , probably makes sense to do the <number> for <number> pattern like <allcaps> osal </allcaps> and then all the implementations can be covered from one build / run . <section> none <section> related to # <number> , and the suggested responses . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , add <allcaps> sb api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> es api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> tbl api </allcaps> test cases pr # <number> - fix # <number> , add <allcaps> fs api </allcaps> test cases pr # <number> - fix # <number> , add time clock test pr # <number> <allcaps> evs </allcaps> coverage - fixes # <number> , adds test for messagesendcounter not incrementing when sending a filtered event . - fixes # <number> , adds tests for logoverflowcounter incrementing when the log overflows . pr # <number> sb test improvements - fix # <number> - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , cfe_tbl_modified : test <allcaps> crc </allcaps> , updated flag pr # <number> - fix # <number> improve <allcaps> evs </allcaps> code coverage pr # <number> , - fix # <number> , add call to cfe_es_exitchildtask pr # <number> - fix # <number> , improve fs coverage pr # <number> - fix # <number> , improve <allcaps> msg </allcaps> branch coverage pr # <number> , - fix # <number> , improve resource id branch coverage pr # <number> - fix # <number> , improve <allcaps> sbr </allcaps> branch coverage pr # <number> improve <allcaps> tbl </allcaps> code coverage - fix # <number> - fix # <number> , pr # <number> - fix # <number> , support custom <allcaps> psp </allcaps> directory pr # <number> - fix # <number> , update time tests to use bitmask check macros <section> ubuntu ci cfe checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu ci <allcaps> rtems ci </allcaps> ( cfs bundle ) <section> part of <url> <section> none <section> <user> <user> <user> <user> <user> - hbr <user>"
"fix # <number> , improve fs coverage <section> fix # <number> - fs coverage now at <percent> line and <percent> branch ( all but <number> branches ) <section> build unit tests , run , report coverage <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> remaining uncovered : <number> lines , <number> branches : - # <number> - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs cfe_fs_parseinputfilenameex missing branch coverage ( defensive condition check ) <section> non - independent conditions checked in cfe_fs_parseinputfilenameex : <url> since when processing <code> ( the case before <code> ) the inputptr is set to <allcaps> null </allcaps> : <url> <section> trade the usefulness of testing for an unreachable condition . it ' s "" defensive "" but only reachable by changing the implementation , although it can not cause harm . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs missing branch coverage of run - time endian logic ( and sometimes line ) <section> fs suffers from the unfortunate pattern of run time checks for endian ( and associated logic ) , which leads to uncovered branches and possibly uncovered code ( depending on endian of platform ) . example : <url> <section> complete coverage is possible if run on each system , but should be resolved in the future . possibly in concert with # <number> and related abstraction such that this code does not care ( whatever underlying <allcaps> api </allcaps> / implementation that handles raw data should do the appropriate conversion ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve <allcaps> evs </allcaps> code coverage <section> fix # <number> , now getting <percent> line and branch coverage on <allcaps> evs </allcaps> <section> build unit tests , run , report coverage , confirm <percent> on <allcaps> evs </allcaps> <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fs code coverage improvements <section> fs still has a few lines of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> code coverage improvements <section> <allcaps> evs </allcaps> still has a few lines of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"es code coverage improvements <section> es still has a fair amount of uncovered code . <section> another coverage update , hit at minimum the parameter and stub related coverage , document the rest via issues if it ' s overly challenging this round . <section> none , we need to meet minimum coverage expectations . <section> already documented coverage issues ( ok as - is ) : - # <number> - # <number> - # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add call to cfe_es_exitchildtask <section> invoke cfe_es_exitchildtask from the main test task , to confirm that the task does not actually exit . there is no status code but the fact that the test keeps running is evidence that the task did not exit ( which means the test passed ) . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional test <section> adds test case for cfe_es_exitchildtask being called from main task ( no actual effect , request is rejected , task does not exit ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> , # <number> , # <number> , sb test improvements <section> a set of additional test cases to improve requirements coverage of the sb functional test . fixes # <number> - adds unsubscribe of single pipe id , confirms other subscriptions not changed fixes # <number> - confirms that msglimit and pipedepth are both honored and that delivery to other ( open ) pipes is not affected when some pipes have reached delivery limits fixes # <number> - adds use of cfe_sb_pend_forever in some cases fixes # <number> - adds a sequence number validation to the zero copy test . <section> build and sanity check <allcaps> cfe </allcaps> , run all functional tests <section> functional test covers requirements as indicated in linked issues <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , return type conversions in cfe_es_gettaskname <section> provide better status code conversion from os_getresourcename fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> better status returns from cfe_es_gettaskname <allcaps> api </allcaps> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> tbl api </allcaps> test cases <section> adds <allcaps> tbl </allcaps> functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> fs api </allcaps> test cases <section> adds fs functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requiresa failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> sb api </allcaps> test cases <section> adds sb functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add <allcaps> es api </allcaps> test cases adds es functional test cases to cover all missing items that were identified as part of the scrub in issue # <number> . where a specific condition is not testable because it requires a failure of another subsystem , it is marked as <code> to indicate it is only verifiable in coverage test environment . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> adds test cases described in # <number> <section> ubuntu <section> related to scrub in # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> cfe_tbl_modified : test <allcaps> crc </allcaps> , updated flag <section> fixes # <number> add verification that <code> successfully calculates and sets the table <allcaps> crc </allcaps> and sets the updated flag if the table has been modified . <section> steps taken to test the contribution : <code> - verify github workflows pass <section> none . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"cmake : fix support for non - standard psp source directory <section> this pr fixes a bug which prevents non - standard psp source directory specification via the environment variable <code> or the cmake variable <code> . the cfe cmake build infrastructure uses the environment / cmake variable <code> as well as the cmake meta - variable pattern <code> to locate apps and other modules ( such as psp ) , and subsequently sets the variable pattern <code> ( see mission_build . cmake lines <number> - <number> <url> . however , the resulting variable <code> is not used in <code> in arch_build . cmake line <number> <url> when including a target platform ' s <code> file . this causes a cmake configuration failure when trying to use a non - standard psp location . <section> build with psp in non - standard location , with the <code> environment variable set : <code> before this pr : <code> after this pr : <code> <section> this should only affect projects which use the environment variable <code> or the cmake variable <code> . currently , they are being ignored for <code> ' s <code> path resolution , which means some users may be building with different target build options than they think they are based on the intended behavior . <section> - hardware : pc - os : ubuntu <number> - versions : cfe <code> <section> aside , this is also suggested as a method to specify a non - standard <code> source directory in mission_defaults . cmake line <number> <url> since pr # <number> with the following : <code> however , this will lead to the same cmake configure error as above without this fix . <section> no thirdy party code included in this contribution . <section> jonathan bohren , honeybee robotics"
"fix # <number> , fix # <number> , evs coverage test <section> fixes # <number> adds test for messagesendcounter not incrementing when sending a filtered event . fixes # <number> adds tests for logoverflowcounter incrementing when the log overflows . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add time clock test <section> fixes # <number> adds test to cover clock apis . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused cfe_tbl_err_file_not_found <section> status code no longer produced by current implementation , it returns cfe_tbl_err_access when unable to open a file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , end child task requirement remove error code <section> fixes # <number> - the end child task <allcaps> api </allcaps> is void , so can not return error code - requirement name fix for report application id ( added by name ) <section> ci - doc only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> check error ctr to transmitmsg test <section> fixes # <number> verify error counter increments when using transmitmsg for a message that is too big . <section> steps taken to test the contribution : <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> none . <section> - os : ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , correct syslog message in pool create <section> corrects a simple search and replace error fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused cfe_tbl_err_bad_app_id <section> status code no longer produced by current implementation , it passes through the es error which will be cfe_es_err_resourceid_not_valid . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> could also go the other way and make implementation match doc instead ( translate code ) . this changes doc to match what the implementation was doing . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused cfe_es_pool_bounds_error <section> remove stale error code no longer produced by implementation fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , disable unit tests in codeql <section> fix # <number> <section> tested on forked repo : <url> <section> disabled unit tests for both codeql workflows . alerts should only be shown for flight code . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , enable strict resource id w / omit_deprecated <section> when the user specifies the omit_deprecated build option , also enable the strictly - typed resource ids to catch common coding errors . fixes # <number> <section> build and run all tests in both omit_deprecated mode and without omit_deprecated <section> strict types will be automatically enabled with omit_deprecated mode <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"disable unit tests in codeql <section> do not analyze unit and functional test code for codeql . <section> disable unit tests in the workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"<allcaps> hotfix ic </allcaps> - <number> , type correction <allcaps> tbl </allcaps> coverage test <section> update the assignment to cdshandle to be of the correct value type ( hotfix for current integration - candidate ) <section> build and run all tests with type - safe mode enabled <section> builds successfully <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , hotfix for strict resource ids . <section> fixes # <number> fixes strict resource id check . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> hotfix for issue from # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
<allcaps> time </allcaps> functional - add test of cfe_time_getclockstate and cfe_time_getclockinfo <section> missing functional test for <code> and <code> <section> add <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add null check for cfe_resourceid_findnext <section> fixes # <number> adds null check to cfe_resourceid_findnext <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> if this gets into master before <url> then a functional test will need to be added there . otherwise it should be added here . <section> alex campbell <allcaps> gsfc </allcaps>"
"<allcaps> time </allcaps> missing coverage in cfe_time_api . c when default cfe_mission_time_epoch_second is <number> <user> and <user> reformat into standard template > in cfe_time_api . c , can not test the following lines when default cfe_mission_time_epoch_second is <number> . > > <code> reached <percent> in all but cfe_time_api . c <code> _originally posted by <user> in <url>"
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> add software bus tests - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , separate variable for <allcaps> osal </allcaps> status pr # <number> - fix # <number> , increase sb pool max size bucket pr # <number> - fix # <number> , add null check for cfe_resourceid_findnext pr # <number> - fix # <number> , hotfix for strict resource ids . pr # <number> improve tbl coverage tests - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> pr # <number> - fix # <number> , add missing cases for msg id func tests pr # <number> - fix # <number> , consolidate msg get / set doxygen group pr # <number> - fix # <number> , adding coverage tests to cfe <allcaps> time </allcaps> pr # <number> - fix # <number> , enable strict resource id w / omit_deprecated pr # <number> - <allcaps> hotfix ic </allcaps> - <number> , type correction <allcaps> tbl </allcaps> coverage test pr # <number> - fix # <number> , consolidate msg get / set doxygen group pr # <number> - fix # <number> , add test for es backgroundwakeup pr # <number> - fix # <number> , success test for cfe_es_restartapp pr # <number> - fix # <number> , subscribe to message limit greater than cfe_platform_sb_default_msg_limit pr # <number> - fix # <number> , success test for cfe_es_getmempoolstats pr # <number> - fix # <number> , group <allcaps> msg </allcaps> apis documentation by header type pr # <number> - fix # <number> , add retroactive <allcaps> cfe </allcaps> status asserts pr # <number> - fix # <number> , remove unused cfe_tbl_err_bad_app_id pr # <number> - fix # <number> , correct syslog message in pool create pr # <number> - fix # <number> , remove unused cfe_es_pool_bounds_error pr # <number> - fix # <number> , remove unused cfe_tbl_err_file_not_found - fix # <number> , remove comment referencing cfe_tbl_err_file_not_found pr # <number> - fix # <number> check error ctr to transmitmsg test pr # <number> - fix # <number> , end child task requirement remove error code pr # <number> - fix # <number> , add functional tests for resource misc <section> cfe ci < <url> cfs bundle ci < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user> <user> <user> <user> <user> <user>"
"<allcaps> tbl </allcaps> missing coverage in cfe_tbl_api . c function cfe_tbl_update <section> <code> function contains two hard to reach lines ( <number> - <number> ) that remains untested , preventing us from reaching <percent> line coverage . it ' s actually just one uncovered line , but lcov thinks it ' s two . <code> <section> these lines should be safe to leave uncovered because they do not contain any potential to access a <allcaps> null </allcaps> pointer or anything else similarly dangerous . <section> line <number> is currently impossible to reach because <code> does not throw any error status codes ( < <number> ) , so the only way to trigger the if statement on line <number> is from <code> on line <number> which would always mean <code> is <allcaps> null </allcaps> . thus the if statement on line <number> can never be true , leaving line <number> uncovered . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"<allcaps> tbl </allcaps> missing coverage in cfe_tbl_api . c function cfe_tbl_register <section> <code> function contains two hard to reach lines ( <number> - <number> ) that remain untested , preventing us from reaching <percent> line coverage . <code> <section> these lines should be safe to leave uncovered because they do not contain any potential to access a <allcaps> null </allcaps> pointer or anything else similarly dangerous . <section> lines <number> and <number> are currently impossible to cover as noted in the code comment because line <number> calls <code> with true for the third argument which skips over anything that could return a non cfe_success code . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
fix # <number> adding coverage tests to cfe <allcaps> time </allcaps> <section> fix # <number> completing coverage for cfe <allcaps> time </allcaps> . completed coverage on all lines except two . see issue for details : <url> missing cov <section> steps taken to test the contribution : <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> tests should continue to pass . <percent> coverage on all <section> - os : ubuntu <number> vm - github workflow <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"<allcaps> tbl </allcaps> coverage - add check for <allcaps> crc </allcaps> update and confirm notification of other apps for cfe_tbl_modified <section> cfe_tbl_modified coverage check ( in test_cfe_tbl_tblmod ) missing confirmation <allcaps> crc </allcaps> was updated and apps that have shared the table get notified by return code from cfe_tbl_getaddress ( requirements ) <allcaps> tbl </allcaps> : modified , ctbl6315 , "" upon receipt of a request , the cfe shall perform the following actions on a table : - update critical table data in <allcaps> cds </allcaps> ( this is already checked ) - update the time of last modification ( this is already checked ) - update the <allcaps> crc </allcaps> ( <section> ) - update the last loaded filename with modified indicator ( this is already checked ) - flag the update notification for other applications "" ( <section> ) <section> add confirmation . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add missing cases for msg id func tests <section> fixes # <number> adds the missing cases and cleans up some minor style inconsistencies . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"sb functional test - add zero copy verification of sequence count increment and non - increment <section> missing verification of sequence count behavior for zero copy ( requirement ) <section> add a "" pass "" ( no increment ) and confirm both behave as required <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sb functional test - exercise cfe_sb_receivebuffer cfe_sb_pend_forever and cfe_sb_poll options <section> sb functional test only calls cfe_sb_receivebuffer with a timeout of <number> , requirements include poll and pend forever . <section> exercise cfe_sb_poll and cfe_sb_pend_forever options . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
improve tbl coverage tests <section> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> - fixes # <number> <section> <number> . build and run cfe coverage tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern
sb coverage test - need to verify msgsenderrorcounter increments when msg too big <section> missing verification of msgsenderrorcounter increment on message too big ( requirement ) <section> add verification <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
sb functional test - limit exceeded still sends to other pipes <section> missing functional checks that a limit reached on one pipe will still send to the others ( requirement ) . <section> add a check that a message limit reached on one pipe will still transmit to another add a check that a pipe full reached on one pipe will still transmit to another <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"sb functional test - add verification that unsubscribe actually unsubcribes <section> although there are nominal calls in sb_subscription_test . c and messages are sent / received ( after a subscription ) in sb_sendrecv_test . c , there ' s no functional check that after unsubscribing from a message it is no longer received . unsubscribe also is not used by the services ( although it is used by <allcaps> gsfc </allcaps> apps ) . <section> add at minimum a verification of the unsubscribe . would be nice to also add just a simple send / receive for each subscribe type in sb_subscription_test . c since only cfe_sb_subscribeex is utilized in the sendrecv test ( and it ' s helpful have the test self contained ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"clean up message id functional test <section> <url> was merged in but there are a few style changes that need to be fixed and some edge cases that are not being tested . <section> clean up the code , and add the remaining edge cases . <section> <url> <section> alex campbell <allcaps> gsfc </allcaps>"
"fs functional test - add calls to get default mount point and extension for each file type <section> functional test just calls with <allcaps> unknown </allcaps> , should exercise each type ( although response verification is not necessary since it ' s implementation defined and "" helper "" functions are really best effort ) . <url> <section> exercise each defined file type <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage - add verification of log overflow counter increment <section> the following requirement is not verified in coverage ( or functional ) test : cevs3108 . <number> : if the local event log is full , the cfe shall increment the local event log overflow counter . <section> add verification of <code> behavior in <code> unit test function . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage - filter behavior failures do not get logged correctly , missing verification of latch requirement <section> filter verification is done by sending an event message that says "" <allcaps> failed </allcaps> "" , even though the actual assert will <allcaps> pass </allcaps> . this does not get counted in test reporting as an actual failure . <url> <section> assert on the message counters not incrementing ( messagesendcounter and / or eventcount ) and cfe_sb_transmitmsg stub count does not increment , the as well as the filter counter ( should latch at max per requirement ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> functional test - send each event type including invalid <section> <allcaps> evs </allcaps> functional test currently only sends <allcaps> informational </allcaps> events . example : <url> <section> add a send of each message type for each <allcaps> api </allcaps> , including invalid . note they all return success . <section> none , note the message type handling is exercised in coverage tests so this is an improvement . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add retroactive <allcaps> cfe </allcaps> status asserts <section> add a set of macros that decouple the function call from the expected status : - <code> - <code> - <code> the first will make the function call and put the status into a temporary holding area , but will not assert on any particular result . the others will check the value of the holding area . fixes # <number> <section> build and run all tests also add new test cases that need this paradigm and confirm macros working as expected ( will be in other prs ) . <section> none , new test macros only , not used yet . <section> ubuntu <section> these macros should be used whenever a specific status is not predictable before the call , but other checks after the call can determine if the result was ok or not . a typical use case for a function that might return any of <number> status values ( e . g . status1 , status2 , status3 ) would be something like : <code> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , subscribe to message limit greater than cfe_platform_sb_default_msg_limit <section> fixes # <number> <section> github actions workflows <section> subscribe locally to a message with limit greater than cfe_platform_sb_default_msg_limit <section> cfe_platform_sb_default_msg_limit is equal to <number> . used uint16_max . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , success test for cfe_es_restartapp <section> fixes # <number> <section> used github actions workflow . <section> there is a success test for cfe_es_restartapp in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , success test for cfe_es_getmempoolstats <section> fixes # <number> <section> tested through github actions workflows . <section> there is a success test for cfe_es_getmempoolstats in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
add functional tests for cfe message extended header apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message extended header apis cfe_msg_getedsversion - gets the message <allcaps> eds </allcaps> version . cfe_msg_setedsversion - sets the message <allcaps> eds </allcaps> version . cfe_msg_getendian - gets the message endian . cfe_msg_setendian - sets the message endian . cfe_msg_getplaybackflag - gets the message playback flag . cfe_msg_setplaybackflag - sets the message playback flag . cfe_msg_getsubsystem - gets the message subsystem . cfe_msg_setsubsystem - sets the message subsystem . cfe_msg_getsystem - gets the message system . cfe_msg_setsystem - sets the message system . <section> n / a <section> these test are being split off from # <number> <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , increase sb pool max size bucket <section> in the default config , the maximum bucket size for the sb pool was not quite big enough to allocate a message of <code> . this increases the margin so this can be allocated again . fixes # <number> <section> build and run all tests <section> a call to <code> now succeeds and returns non - null . <section> ubuntu <section> on my system the <code> is <number> , hence why <number> was not enough . using <number> just adds an extra margin for padding and platform differences , etc . users can still reduce this in their tuning if they are using every possible byte . note we cannot use <code> directly here because its a private structure . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate <number> - <number> - <number> <section> pr # <number> - fix # <number> , add <allcaps> cfe </allcaps> assert macros to functional test pr # <number> adds invalid id syslog to for cfe_es_deleteapp and cfe_es_reloadapp and verifies required reporting - fix # <number> - fix # <number> pr # <number> stop memory leak & add cds size test . - fix # <number> - fix # <number> pr # <number> - fix # <number> , mark read only inputs as const pr # <number> - fix # <number> , check resource id idx is less than max pr # <number> - fix # <number> , update cfe_es_runloop documentation pr # <number> - fix # <number> , add message api functional test pr # <number> - partial # <number> , update in / out status and nonnull / nonzero tags pr # <number> - fix # <number> , add external time source functional tests pr # <number> - fix # <number> , add perf <allcaps> api </allcaps> functional tests pr # <number> - fix # <number> , add es application behavior functional tests <section> ubuntu ci <section> see pr <section> ubuntu <number> <section> part of nasa / cfs # <number> <section> none <section> <user> <user> <user> <user> <user>"
"fix # <number> , add test for es backgroundwakeup <section> fixes # <number> - adds missing test for cfe_es_backgroundwakeup <section> build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
add es test for cfe_es_backgroundwakeup <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> - add call for background wakeup _originally posted by <user> in <url> <user> or <user> can you flesh this out ?
"fix # <number> , check resource id idx is less than max <section> fixes # <number> <section> steps taken to test the contribution : <number> . build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> # <number> # <number> , add software bus tests <section> adds functional testing for <allcaps> cfe sb </allcaps> apis : subscription , message passing , zero copy . fixes # <number> fixes # <number> fixes # <number> <section> build and run all tests , confirm log outputs as expected <section> additional apis are functional tested <section> ubuntu <section> currently requires pr # <number> as dependency ( will rebase once finalized ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> add perf <allcaps> api </allcaps> functional tests <section> fixes # <number> add perf <allcaps> api </allcaps> functional tests and add perf trigger and perf start commands to functional test workflow . functional test will now send a command to set a perf trigger , send command to start capturing perf data and finally send command to start running the functional tests . <section> steps taken to test the contribution : <number> . build with tests enabled <number> . run cfs <number> . send commands to set perf trigger , and start perf data <number> . send command to run functional tests <number> . verify tests pass <number> . push code to github and verify workflow works <section> new tests added to functional tests . workflow now sends two more commands to cfs . <section> - os : ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"partial # <number> , update in / out status and nonnull / nonzero tags <section> first pass at <allcaps> api </allcaps> doxygen scrub , this updates the in / out markings on parameters where they were not correct , and adds nonnull and nonzero tags where appropriate . related to # <number> ( but should not close yet ) <section> build and run all tests <section> none ( documentation only ) <section> ubuntu <section> note this is "" partial "" as it does not yet do all the test case verification , those will come later . but the <allcaps> api </allcaps> documentation needs to have these tags correct so the validation scripts know what to look for . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace <allcaps> voidcall </allcaps> assert macro <section> use the generic utassert_voidcall macro now provided from utassert , rather than a local macro in cfe_testcase app . fixes # <number> <section> build and run all tests <section> none ( macros are equivalent ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"test boundaries for numtables in cfe_tbl_getaddresses <section> from # <number> . <section> should test on boundary conditions for numtables . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"subscribe to message limit greater than cfe_platform_sb_default_msg_limit <section> from # <number> . <section> consider subscribing to message with limit greater than cfe_platform_sb_default_msg_limit <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_validate <section> from # <number> . no success test for cfe_tbl_validate . <section> add a success test for cfe_tbl_validate in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_update <section> from # <number> . no success test for cfe_tbl_update . <section> add a success test for cfe_tbl_update in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test and boundaries for cfe_tbl_releaseaddresses <section> from # <number> . no success test for cfe_tbl_releaseaddresses . no test on boundary conditions for numtables . <section> add a success test for cfe_tbl_releaseaddresses in cfe / modules / tbl / ut - coverage / tbl_ut . c . test boundary conditions for numtables . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add <allcaps> cfe </allcaps> assert macros to functional test <section> adds the following macros to <allcaps> cfe </allcaps> assert library in cfe_assert . h : - cfe_utassert_status_ok - cfe_utassert_status_error - cfe_utassert_resourceid_eq - cfe_utassert_resourceid_undefined - cfe_utassert_memoffset_eq - cfe_utassert_msgid_eq fixes # <number> <section> build and run all tests ( including with some new test cases that use the new macros ) and confirm all is working as expected . <section> none right now , these are new macros that test cases are not using yet . <section> ubuntu <section> provides improved feature parity with coverage test environment , gives a common macro to use for common tests / asserts , and more consistent naming convention . <section> joseph hickey , vantage systems , inc"
"no success test for cfe_tbl_getstatus <section> from # <number> . no success test for cfe_tbl_getstatus . <section> add a success test for cfe_tbl_getstatus in cfe / modules / tbl / ut - coverage / tbl_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_tbl_dumptobuffer <section> from # <number> . no success test for cfe_tbl_dumptobuffer . <section> add a success test for cfe_tbl_dumptobuffer in cfe / modules / tbl / ut - coverage / tbl_ut . c <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_es_getmempoolstats <section> from # <number> . no success test for cfe_es_getmempoolstats . <section> add a success test for cfe_es_getmempoolstats in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"no success test for cfe_es_restartapp <section> from # <number> . no success test for cfe_es_restartapp . <section> add a success test for cfe_es_restartapp in cfe / modules / es / ut - coverage / es_ut . c . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fixes # <number> , # <number> , stop memory leak & add cds size test . <section> fixes # <number> delete memory pools to prevent memory leak . fixes # <number> add test for registering <allcaps> cds </allcaps> with same name and different size . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add external time source functional tests <section> fixes # <number> add external time source functional tests <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add functional tests for resource misc <section> - fixes # <number> - adds functional tests for - cfe_resourceid_tointeger - cfe_resourceid_frominteger - cfe_resourceid_equal - cfe_resourceid_isdefined - cfe_resourceid_getbase - cfe_resourceid_getserial - cfe_resourceid_findnext - cfe_resourceid_toindex <section> <number> . build and run cfe functional tests <section> no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , <allcaps> rtems </allcaps> cfe_ft_global build failure <section> - fix # <number> <section> cfe ci and bundle ci see succesful bundle tests at <url> <section> no behavior change , fixes build failure on <allcaps> rtems </allcaps> <number> and <number> <section> github actions ci <section> fixed as part of ic : <number> - <number> - <number> <section> none <section> <user> <user>"
"fix # <number> , # <number> - adds invalid id syslog to for cfe_es_deleteapp and cfe_es_reloadapp and verifies required reporting <section> fix # <number> fix # <number> <section> build and run unit tests , passed <section> will now report invalid ids to the syslog for cfe_es_deleteapp and cfe_es_reloadapp <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + these commits <section> related to requirements verification <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add es application behavior functional tests <section> fixes # <number> add es application behavior functional tests <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> cfe_es_exitapp was not directly tested . <url> will be needed to test that . <section> alex campbell <allcaps> gsfc </allcaps>"
"adding test to cfe_testcase app demonstrating non - detection of pipe destruction by cfe_sb_receivebuffer <section> a clear and concise description of what the contribution is . - this adds a test to the <code> app demonstrating a potential bug in <code> - when <code> is called with <code> , and its pipe is destroyed , it does not return with an error code . ( it is unclear at this time whether it blocks indefinitely or returns with <code> ) . - if this test case asserts the correct behavior , it indicates a change may be necessary in <code> <section> steps taken to test the contribution : <number> . create template mission from <code> <number> . add <code> to <code> in <code> : <code> <number> . add <code> to <code> : <code> <number> . run <code> out of standard build directory <section> - the test case does the following : - creates a pipe - transmits one message , which should be received by that pipe - creates a child task with a loop servicing that pipe - waits one second - destroys the pipe - waits one second - checks to see that the child task has exited - checks to see if cfe_sb_receivebuffer ( ) has returned an error code - output from the failing check : <code> this indicates that <number> seconds after deleting an sb pipe , a call to <code> has not exited with a failure condition . <section> - hardware : pc - os : ubuntu <number> - versions : - cfe <code> - <allcaps> osal </allcaps> <code> - <allcaps> psp </allcaps> <code> <section> we have been working with an internal fork of <allcaps> sbn </allcaps> running with cfe ( version <code> ) and encountered a race condition where a blocking call to <code> is not failing if its sb pipe is destroyed while waiting . this is modeled after the implementation in <allcaps> sbn </allcaps> [ ref ] <url> . cc <user> <section> no third - party code is included . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - jonathan bohren , honeybee robotics"
"resource leak in mempool tests <section> the <code> function creates <number> memory pools in total - whenever cfe_success is returned , this means a pool was instantiated . see here : <url> <url> <url> however , only the last pool id is deleted here : <url> the other two pools are left hanging , and are automatically cleaned up by <allcaps> cfe es </allcaps> at the time the app exits itself , as designed . however , in the case of the pool with an embedded mutex ( the one created at line <number> ) the mutex will be deleted by both <allcaps> cfe es </allcaps> resource cleanup and task cleanup , due to the fact that the mutex was created by the task . note that the id validation works , and the mutex is only deleted once - task cleanup gets to it first , and when pool cleanup tries to delete it again , the id is reported as stale and nothing is deleted , but it does issue a warning about it right here : <url> <section> execute <allcaps> cfe </allcaps> functional tests , observe an unexpected warning in the syslog when the test completes : <code> <section> test should delete all the pools it creates , and this clean up warning should not happen <section> ubuntu <section> in a way , this could be considered a happy accident , as it verifies that stale id rejection is occurring , and everything is working as designed . as a result , there is no real harm done by this double delete , aside from the extra warning . <section> joseph hickey , vantage systems , inc ."
replace cfe_ftassert_voidcall with new utassert_voidcall <section> the cfe functional test use a macro called <code> . that macro should be deleted and all existing references to it replaced with <code> . <section> replace old macro . <section> leave as is . <section> see <url>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , move global count into test global struct . pr # <number> - fix # <number> , add es application control <allcaps> api </allcaps> functional tests - fix # <number> , add null pointer check to cfe_es_reloadapp functional test pr # <number> - fix # <number> , add generic counter <allcaps> api </allcaps> test pr # <number> - fix # <number> , update coverage test to use utassert macros pr # <number> - fix # <number> - fix # <number> - fix # <number> - fix # <number> pr # <number> - fix # <number> , add resource <allcaps> id api </allcaps> functional tests pr # <number> - fix # <number> , last char truncated in coverage log output pr # <number> - fix # <number> , mistakes in some copyright headers pr # <number> - fix # <number> , add misc time api functional test pr # <number> - fix # <number> , add functional test for <allcaps> evs </allcaps> reset filters <allcaps> api </allcaps> . pr # <number> - fix # <number> , replace <allcaps> voidcall </allcaps> assert macro pr # <number> - fix # <number> , <allcaps> rtems </allcaps> cfe_ft_global build failure <section> cfe checks < <url> cfs checks < <url> <section> see included prs <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
need to functionally test create data store with size change requirement <section> requirement related to creating critical data store with new size which should be functionally exercised : <url> <section> functionally exercise the changed size case > <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add misc time api functional test <section> fixes # <number> <section> steps taken to test the contribution : <number> . build and run cfe functional tests <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , finish es misc <allcaps> api </allcaps> functional test <section> fixes # <number> <section> <number> . build and run cfe functional tests <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , mark read only inputs as const <section> the following functions have read - only inputs which are passed by pointer , so it should be "" const "" qualified : cfe_es_copytocds cfe_sb_transmitmsg cfe_sb_transmitmsgvalidate fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , input was already read only , this just corrects the prototype to reflect that . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , last char truncated in coverage log output <section> the "" messagecheck_impl "" routine used for printf / syslog checks was incorrectly truncating the last character of the log message . fixes # <number> <section> run all coverage tests , confirm print logs now contain the full string . <section> last char is no longer truncated in log <section> ubuntu <section> joseph hickey , vantage systems , inc ."
write resource id functional test to check maximum <section> need open source functional tests for certifiability <section> add additional checks to functional tests for es resource id to index that ensure the returned index is less than the maximum allowed for that resource type <section> none <section> _originally posted by <user> in <url>
"cfe integration candidate : <number> - <number> - <number> <section> pr # <number> fix # <number> , add null pointer check to table getaddresses and releaseaddresses pr # <number> fix # <number> , explain fs header offset & add offset functional tests . pr # <number> fix # <number> , handle fail status in gettypefrommsgid pr # <number> fix # <number> , add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> pr # <number> fix # <number> , remove sb get last message sender info requirement pr # <number> fix # <number> update uts to use utassert_mir pr # <number> fix # <number> , add functional tests cfe message id pr # <number> fix # <number> , add time conversion functional test pr # <number> fix # <number> , add cast to <allcaps> mir </allcaps> prints [ fasttracked ] <section> cfe checks < <url> - cfe failures due to osal dependency , jobs pass in bundle tests and fork - passing coverage tests <url> - passing functional tests <url> cfs checks < <url> <section> see prs <section> ubuntu ci <section> part of < <url> <section> none <section> <user> <user> <user> <user> <user> <user>"
"fix # <number> , handle fail status from internal functions of cfe_msg_gett … <section> fixes # <number> handle fail status from internal functions of cfe_msg_gettypefrommsgid <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , separate variable for <allcaps> osal </allcaps> status <section> ensure a separate stack variable , always named "" osstatus "" , is used to hold the result of an <allcaps> osal api </allcaps> call . do not use the same variable that is used to store a <allcaps> cfe </allcaps> status code . this also fixes a few return code translations , where some functions were returning the <allcaps> osal </allcaps> status code ( perhaps unintentionally ) because it was stored in the same variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> nothing significant , however some apis which returned an <allcaps> osal </allcaps> status will now translate to <allcaps> cfe </allcaps> status . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"throw error for c + + comments in format check <section> the format check workflow does not throw an error for c + + comments which are not allowed . image <img> <section> throw an error for c + + comments to enforce /* <allcaps> x <elongated> </allcaps> */ or multi - line c comments in the format check workflow . <section> n / a <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , add generic counter <allcaps> api </allcaps> test <section> add tests for the following apis : - cfe_es_registergencounter - cfe_es_counterid_toindex - cfe_es_getgencounteridbyname - cfe_es_getgencountername - cfe_es_getgencount - cfe_es_setgencount - cfe_es_incrementgencounter - cfe_es_deletegencounter fixes # <number> <section> build and run all functional tests , confirm passing <section> additional apis are tested <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add null pointer check to table getaddresses and releaseaddresses <section> - fixes # <number> - adds null check on tblhandles pointer in cfe_tbl_getaddresses and cfe_tbl_releaseaddresses <section> <number> . build and run <allcaps> cfe </allcaps> functional tests from # <number> <section> - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add functional test for <allcaps> evs </allcaps> reset filters <allcaps> api </allcaps> . <section> fixes # <number> add functional test for <allcaps> evs </allcaps> reset filters apis . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> <section> fixes # <number> add functional test for <allcaps> evs </allcaps> send event <allcaps> api </allcaps> <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , validate <allcaps> evs </allcaps> register inputs first . <section> fixes # <number> move the validation of inputs to be the first thing for cfe_evs_register <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add message <allcaps> api </allcaps> functional test <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , update coverage test to use utassert macros <section> a number of <allcaps> cfe </allcaps> coverage - specific macros and generic assert functions were moved into <allcaps> osal </allcaps> utassert library so it can be used in a wider variety of tests . this removes the <allcaps> cfe </allcaps> coverage - specific version , and changes allreferences to use the equivalent utassert macro . fixes # <number> <section> build and run all tests <section> none - utassert - provided macros should be equivalent in function <section> ubuntu <section> requires nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove sb get last message sender info requirement <section> fix # <number> , just removes requirement we no longer support ( sb get last message sender ) <section> none , requirements / docs update only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add message <allcaps> api </allcaps> functional test <section> - fixes # <number> <section> paul oberosler , individual"
"fix # <number> , add cast to <allcaps> mir </allcaps> prints <section> fixes # <number> added cast to <allcaps> mir </allcaps> prints in time_ut . c so that the <allcaps> rtems </allcaps> build does not break . <section> steps taken to test the contribution : <number> . build and run time ut tests : <code> <code> <number> . build and run cfs tests : <code> <code> <section> <allcaps> rtems </allcaps> workflow should build and run successfully . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , move global count into test global struct . <section> fixes # <number> move global count into the test global struct <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> add functional tests for cfe message id apis <section> fixes # <number> add functional tests for cfe message id apis cfe_msg_getmsgid - gets the message id from a message . cfe_msg_setmsgid - sets the message id bits in a message . cfe_msg_gettypefrommsgid - gets message type using message id . <section> tested in functional tests and format check workflows on fork . <section> tests functionality for cfe message id apis <section> ariel adams , <allcaps> asrc </allcaps> federal"
"add additional checks to cfe get table information <allcaps> api </allcaps> functional tests <section> need open source functional tests for certifiability <section> add additional checks to functional tests for cfe get table information apis . # <number> adds basic functionality checks and error condition checking , but does not check everything . the following list contains things that are not currently tested , but probably should be <code> : * test that pending update , validation statuses are returned at the correct time <code> : * test numusers increments after the table is shared * test crc is valid * test lastfileloaded is correct after loading a file * test tableloadedonce updates after loading data * test filecreatedtime makes sense * test timeoflastupdate is correct <code> : * test messages are actually sent with correct message id , cc , parameter <section> n / a <section> add any other context about the feature request here . <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
add table api functional tests <section> a clear and concise description of what the contribution is . - fixes - fix # <number> - fix # <number> - fix # <number> - fix # <number> - adds functional unit tests for - cfe_tbl_register - cfe_tbl_share - cfe_tbl_unregister - cfe_tbl_getstatus - cfe_tbl_getinfo - cfe_tbl_notifybymessage - cfe_tbl_load - cfe_tbl_update - cfe_tbl_validate - cfe_tbl_manage - cfe_tbl_dumptobuffer - cfe_tbl_modified - cfe_tbl_getaddress - cfe_tbl_getaddresses - cfe_tbl_releaseaddress - cfe_tbl_releaseaddresses <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern
fix # <number> update time_ut . c to use utassert_mir <section> fixes # <number> updated time_ut . c to start using the new utassert_mir to avoid incorrect use of utassertex . this update requires <url> to be merged first . cfs will fail to compile otherwise . <section> steps taken to test the contribution : <number> . pulled <allcaps> osal </allcaps> repo with the utassert_mir changes <number> . rebuild cfs <number> . run unit tests . <repeated> all passed . <number> . set a custom epoch time <number> . rebuild and run unit tests . <repeated> all passed . <number> . manually run . / coverage - time - <allcaps> all </allcaps> - testrunner and verify expected output : <code> <number> . manually run functional tests and verify expected output : <code> <section> no expected changes in behavior . <section> ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>
"fix # <number> , explain fs header offset & add offset functional tests . <section> fixes # <number> add explanation of offset to the header file . add functions test for the offset . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add table registration functional tests <section> a clear and concise description of what the contribution is . - fixes # <number> - adds functional unit tests for - cfe_tbl_register - cfe_tbl_share - cfe_tbl_unregister <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"update time_ut . c : test_print to use the utassert_mir macro <section> utassertex use is not great ( leads to nonstandard output ) : <url> <section> once nasa / osal # <number> is implemented , update the <allcaps> mir </allcaps> tests in test_print . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add application control functional tests <section> a clear and concise description of what the contribution is . - fixes # <number> - fixes # <number> - adds functional tests for - cfe_es_restartapp - cfe_es_reloadapp - cfe_es_deleteapp <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern <allcaps> edit </allcaps> - <user> added # <number> link ."
"fix # <number> , add null check to cfe_es_taskid_toindex . <section> fixes # <number> add null check to cfe_es_taskid_toindex . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> # <number> # <number> # <number> , requirements update for caelum <section> fix # <number> - re - add cfe_sb_deletepipe fix # <number> - remove application / child es registration fix # <number> - remove message initialization clear / no - clear option fix # <number> - add new <allcaps> api </allcaps> requirements to match development changes fix # <number> - remove get message checksum <section> none , docs / requirements updates only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , scrub command documentation <section> update documentation for all command codes in <allcaps> cfe </allcaps> core apps , in particular the error conditions , to confirm it matches the actual implementation . for common operations that apply to all commands <elongated> ( length verification ) this is now put into the users guide as a general statement rather than repeating the info in every command . fixes # <number> fixes # <number> <section> build documentation and confirm output <section> none ( docs only ) <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add resource <allcaps> id api </allcaps> functional tests <section> - fixes # <number> - adds functional tests for each of the following functions - cfe_es_appid_toindex - cfe_es_libid_toindex - cfe_es_taskid_toindex - cfe_es_counterid_toindex <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add time arithmetic functional tests <section> a clear and concise description of what the contribution is . * fixes # <number> * adds functional tests for * cfe_time_add * cfe_time_subtract * cfe_time_compare <section> steps taken to test the contribution : <number> . build <allcaps> cfe </allcaps> and run all functional tests <section> a clear and concise description of how this contribution will change behavior and level of impact . - no impact to behavior <section> - hardware : pc - os : ubuntu <number> <section> niall mullane - <allcaps> gsfc </allcaps> <number> intern"
"fix # <number> , add custom epoch support to <allcaps> time ut </allcaps> <section> fixes # <number> - <code> is only function that uses the epoch defines . avoid use of <code> to test other time functions and specifically check for the expected seconds and subseconds . - print that manual inspection required ( <allcaps> mir </allcaps> ) is required when testing <code> with a custom epoch . <section> - manually ran unit tests for <allcaps> time </allcaps> : $ make - c build / native / default_cpu1 / time test - verified coverage on files with $ gcov cfe_time_api . c . gcno and $ gcov cfe_time_api . c . gcno - verified correct output when using default epoch time : <code> - verified correct output when using custom epoch time : <code> <section> time unit tests will now pass , even when project is using a custom epoch time . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , tests for time conversion api <section> - fixes # <number> ( new unit - tests for the time conversion <allcaps> api </allcaps> like described in this issue ) <section> - no impact on behavior <section> hi , i am new to this repository and tried my hand at a "" good first issue "" . i would be very grateful if someone who knows about this repo can have a quick look and tell me if my first commit for this issue works like this . that ' s why the unit test is commented so much . thanks already <happy> <section> paul oberosler , individual"
"fix # <number> , correct return code mismatches <section> make sure functions documented as <allcaps> cfe </allcaps> status check for cfe_success , and functions documented as <allcaps> osal </allcaps> status check for os_success . fixes # <number> <section> build <allcaps> cfe </allcaps> , and run all tests <section> none <section> ubuntu <section> in practice all these symbols had value of <number> , so this is no change , but its just using the correct success symbol per documented function return . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update docs for cfe_fs_backgroundfiledumprequest <section> update notes to better clarify that the meta object must persist for the duration of the dump operation , which occurs in another task , so it must not be on the stack . fixes # <number> <section> build and run all tests <section> none - documentation only <section> ubuntu <section> noted in pr # <number> which allocated meta object on stack during test ( producing weird / unpredictable errors ) <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # # testing cfe checks < <url> cfs checks < <url> # # # authors <user> <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , correct return code check # # # pr # <number> fix # <number> , documentation for fs apis that return <allcaps> osal </allcaps> codes # # # pr # <number> fix # <number> , adding coverage tests for cfe_es_apps . c # # # pr # <number> fix # <number> , add file utility functional tests . # # # pr # <number> fix # <number> , add custom epoch support to <allcaps> time ut </allcaps> # # # pr # <number> fix # <number> - re - add cfe_sb_deletepipe fix # <number> - remove application / child es registration fix # <number> - remove message initialization clear / no - clear option fix # <number> - add new <allcaps> api </allcaps> requirements to match development changes fix # <number> - remove get message checksum # # # pr # <number> fix # <number> , add null check to cfe_es_taskid_toindex . # # # pr # <number> fix # <number> , scrub command documentation # # # pr # <number> fix # <number> , add time arithmetic functional tests # # # pr # <number> fix # <number> , update docs for cfe_fs_backgroundfiledumprequest # # # pr # <number> fix # <number> , correct return code mismatches"
"fix # <number> , documentation for fs apis that return <allcaps> osal </allcaps> codes <section> some <allcaps> fs api </allcaps> calls will pass through failure / status codes directly from <allcaps> osal </allcaps> without remapping to <allcaps> cfe </allcaps> status code values . note this behavior in the documentation and that it will likely change in a future version of <allcaps> cfe </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build docs <section> none ( docs only ) <section> ubuntu <section> this just documents the pass through - behavior should be fixed in # <number> to return a proper <allcaps> cfe </allcaps> status . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct return code check <section> the return code of cfe_es_startapptask is a <allcaps> cfe </allcaps> status code , so it should be compared to cfe_success , not os_success . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> no change to actual behavior here , this is just for type / symbol correctness <section> joseph hickey , vantage systems , inc ."
"fix # <number> , adding coverage tests for cfe_es_apps . c <section> fixes # <number> added tests to complete coverage on the following functions : * cfe_es_runapptablescan * cfe_es_parsefileentry * cfe_es_loadmodule * cfe_es_cleanupapp * cfe_es_cleanupobjectcallback <section> manually ran unit tests for es : $ make - c build / native / default_cpu1 / es test verified coverage on files with <code> and <code> <section> increased coverage percentage to greater than <percent> in cfe_es_apps . c . <section> ubuntu <number> vm <section> there is still <number> untested line in file . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , correct function name in ut_bsp_unlock <section> corrects the log message in ut_bsp_unlock ( in cfe_assert module ) to match the <allcaps> osal </allcaps> function called ( os_mutsemgive ) . fixes # <number> <section> build and run tests <section> none <section> ubuntu <section> just for correctness , this log never happens in normal operation . <section> joseph hickey , vantage systems , inc ."
add functional tests for cfe miscellaneous time apis <section> need open source functional tests for certifiability <section> add functional tests for cfe miscellaneous time apis cfe_time_print - print a time value as a string . cfe_time_local1hzisr - this function is called via a timer callback set up at initialization of the <allcaps> time </allcaps> service . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe external time source apis <section> need open source functional tests for certifiability <section> add functional tests for cfe external time source apis cfe_time_externaltone - provides the <number> hz signal from an external source . cfe_time_externalmet - provides the mission elapsed time from an external source . cfe_time_externalgps - provide the time from an external source that has data common to <allcaps> gps </allcaps> receivers . cfe_time_externaltime - provide the time from an external source that measures time relative to a known epoch . cfe_time_registersynchcallback - registers a callback function that is called whenever time synchronization occurs . cfe_time_unregistersynchcallback - unregisters a callback function that is called whenever time synchronization occurs . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe time conversion apis <section> need open source functional tests for certifiability <section> add functional tests for cfe time conversion apis cfe_time_met2sctime - convert specified <allcaps> met </allcaps> into spacecraft time . cfe_time_sub2microsecs - converts a sub - seconds count to an equivalent number of microseconds . cfe_time_micro2subsecs - converts a number of microseconds to an equivalent sub - seconds count . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe time arithmetic apis <section> need open source functional tests for certifiability <section> add functional tests for cfe time arithmetic apis cfe_time_add - adds two time values . cfe_time_subtract - subtracts two time values . cfe_time_compare - compares two time values . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe get table information apis <section> need open source functional tests for certifiability <section> add functional tests for cfe get table information apis cfe_tbl_getstatus - obtain current status of pending actions for a table . cfe_tbl_getinfo - obtain characteristics / information of / about a specified table . cfe_tbl_notifybymessage - instruct cfe table services to notify application via message when table requires management . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe access table content apis <section> need open source functional tests for certifiability <section> add functional tests for cfe access table content apis cfe_tbl_getaddress - obtain the current address of the contents of the specified table . cfe_tbl_getaddresses - obtain the current addresses of an array of specified tables . cfe_tbl_releaseaddress - release previously obtained pointer to the contents of the specified table . cfe_tbl_releaseaddresses - release the addresses of an array of specified tables . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe manage table content apis <section> need open source functional tests for certifiability <section> add functional tests for cfe manage table content apis cfe_tbl_load - load a specified table with data from specified source . cfe_tbl_update - update contents of a specified table , if an update is pending . cfe_tbl_validate - perform steps to validate the contents of a table image . cfe_tbl_manage - perform standard operations to maintain a table . cfe_tbl_dumptobuffer - copies the contents of a dump only table to a shared buffer . cfe_tbl_modified - notify cfe table services that table contents have been modified by the application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe table registration apis <section> need open source functional tests for certifiability <section> add functional tests for cfe table registration apis cfe_tbl_register - register a table with cfe to obtain table management services . cfe_tbl_share - obtain handle of table registered by another application . cfe_tbl_unregister - unregister a table . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message id apis <section> need open source functional tests for certifiability <section> add functional tests forcfe message id apis cfe_sb_isvalidmsgid - identifies whether a given cfe_sb_msgid_t is valid . cfe_sb_msgid_equal - identifies whether two cfe_sb_msgid_t values are equal . cfe_sb_msgidtovalue - converts a cfe_sb_msgid_t to a normal integer . cfe_sb_valuetomsgid - converts a normal integer into a cfe_sb_msgid_t . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe setting / getting message characteristics apis <section> need open source functional tests for certifiability <section> add functional tests for cfe setting / getting message characteristics apis cfe_sb_setuserdatalength - sets the length of user data in a software bus message . cfe_sb_timestampmsg - sets the time field in a software bus message with the current spacecraft time . cfe_sb_messagestringset - copies a string into a software bus message . cfe_sb_getuserdata - get a pointer to the user data portion of a software bus message . cfe_sb_getuserdatalength - gets the length of user data in a software bus message . cfe_sb_messagestringget - copies a string out of a software bus message . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe zero copy apis <section> need open source functional tests for certifiability <section> add functional tests for cfe zero copy apis cfe_sb_allocatemessagebuffer - get a buffer pointer to use for "" zero copy "" sb sends . cfe_sb_releasemessagebuffer - release an unused "" zero copy "" buffer pointer . cfe_sb_transmitbuffer - transmit a buffer . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe send / receive message apis <section> need open source functional tests for certifiability <section> add functional tests for cfe send / receive message apis cfe_sb_transmitmsg - transmit a message . cfe_sb_receivebuffer - receive a message from a software bus pipe . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message subscription control apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message subscription control apis cfe_sb_subscribe - subscribe to a message on the software bus with default parameters . cfe_sb_subscribeex - subscribe to a message on the software bus . cfe_sb_subscribelocal - subscribe to a message while keeping the request local to a cpu . cfe_sb_unsubscribe - remove a subscription to a message on the software bus . cfe_sb_unsubscribelocal - remove a subscription to a message on the software bus on the current <allcaps> cpu </allcaps> . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe resource misc apis <section> need open source functional tests for certifiability <section> add functional tests for cfe resource misc apis cfe_resourceid_tointeger - convert a resource id to an integer . cfe_resourceid_frominteger - convert an integer to a resource id . cfe_resourceid_equal - compare two resource id values for equality . cfe_resourceid_isdefined - check if a resource id value is defined . cfe_resourceid_getbase - get the base value ( type / category ) from a resource id value . cfe_resourceid_getserial - get the serial number ( sequential id ) from a resource id value . cfe_resourceid_findnext - locate the next resource id which does not map to an in - use table entry . cfe_resourceid_toindex - internal routine to aid in converting an es resource id to an array index . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message id apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message id apis cfe_msg_getmsgid - gets the message id from a message . cfe_msg_setmsgid - sets the message id bits in a message . cfe_msg_gettypefrommsgid - gets message type using message id . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe message header apis <section> need open source functional tests for certifiability <section> add functional tests for cfe message header apis cfe_msg_init - initialize a message . cfe_msg_getsize - gets the total size of a message . cfe_msg_setsize - sets the total size of a message . cfe_msg_gettype - gets the message type . cfe_msg_settype - sets the message type . cfe_msg_getheaderversion - gets the message header version . cfe_msg_setheaderversion - sets the message header version . cfe_msg_gethassecondaryheader - gets the message secondary header boolean . cfe_msg_sethassecondaryheader - sets the message secondary header boolean . cfe_msg_getapid - gets the message application id . cfe_msg_setapid - sets the message application id . cfe_msg_getsegmentationflag - gets the message segmentation flag . cfe_msg_setsegmentationflag - sets the message segmentation flag . cfe_msg_getsequencecount - gets the message sequence count . cfe_msg_setsequencecount - sets the message sequence count . cfe_msg_getnextsequencecount - gets the next sequence count value ( rolls over if appropriate ) cfe_msg_getedsversion - gets the message <allcaps> eds </allcaps> version . cfe_msg_setedsversion - sets the message <allcaps> eds </allcaps> version . cfe_msg_getendian - gets the message endian . cfe_msg_setendian - sets the message endian . cfe_msg_getplaybackflag - gets the message playback flag . cfe_msg_setplaybackflag - sets the message playback flag . cfe_msg_getsubsystem - gets the message subsystem . cfe_msg_setsubsystem - sets the message subsystem . cfe_msg_getsystem - gets the message system . cfe_msg_setsystem - sets the message system . cfe_msg_generatechecksum - calculates and sets the checksum of a message . cfe_msg_validatechecksum - validates the checksum of a message . cfe_msg_setfcncode - sets the function code field in a message . cfe_msg_getfcncode - gets the function code field from a message . cfe_msg_getmsgtime - gets the time field from a message . cfe_msg_setmsgtime - sets the time field in a message . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , cfe_sb_msghdrsize returns size_t <section> fixes issue # <number> by changing the return type in cfe_sb_msghdrsize and cfe_sb_getuserdatalength <section> build and ran unit tests <section> cfe_sb_msghdrsize and cfe_sb_getuserdatalength now return <number> when * msgptr is <allcaps> null </allcaps> <section> ubuntu <number> <section> add any other context about the contribution here . <section> oliver hamburger <allcaps> gsfc </allcaps>"
"fix # <number> , add file utility functional tests . <section> fixes # <number> add functional tests for file utility functional tests . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , update documentation for cfe_es_getpoolbufinfo <section> corrects the return type documentation , on success this function returns the size of the buffer , it does not return <code> . additionally , this updates the general description of the pool implementation to reflect the variances in platform architectures ( i . e . the buffer descriptor / overhead may be <number> bytes on a <allcaps> cpu </allcaps> with <number> bit size_t , but will be greater on a <allcaps> cpu </allcaps> with a <number> bit size_t ) . fixes # <number> <section> build documentation , check no new warnings ( no code change ) <section> none <section> n / a <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update <allcaps> api </allcaps> doxygen list <section> fix # <number> - added missing apis to doxygen list <section> make usersguide , confirmed list <section> none <section> na <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve sb coverage test <section> add test cases to exercise all functions , lines , and branches to the extent reasonably possible . improves the coverage stats significantly : functions <percent> - > <percent> lines <percent> - > <percent> branches <percent> - > <percent> fixes # <number> <section> build and run coverage test , check <allcaps> lcov </allcaps> reports <section> more complete branch / line coverage <section> ubuntu <section> remaining uncovered lines / branches are not possible to be reached due to the way the code is structured , or because it would require an alternate implementation of <allcaps> sbr </allcaps> ( note that sb + <allcaps> sbr </allcaps> are currently tested as a single unit , even though they are technically separate modules now ) . for example , the "" direct "" <allcaps> sbr </allcaps> implementation cannot have collisions , hence the collision handling in sb cannot be reached . making stubs for <allcaps> sbr </allcaps> may allow this to be tested . for example this conditional is not reachable with direct mode : <url> other lines in cfe_sb_appinit are also not reachable ( will report in separate issue ticket ) . additionally , many internal <code> statements can only be reached with values for which there is a corresponding <code> - that is , there is no default case nor is it possible to reach the switch statement with any value other than the listed values . however gcov still reports this as an un - executed branch even though all possible cases are indeed covered . <section> joseph hickey , vantage systems , inc ."
"uncovered default switch "" branch "" ( vs unreachable default switch code ) in gcov coverage report <section> gcov reports missing branch coverage for the default case of a switch statement . numerous examples in cfe where there is no default case and / or it ' s impossible to reach ( all cases are handled explicitly ) . <section> at minimum document this behavior in the coverage report . would be nice if there was an option or alternative to get gcov to not report impossible cases as uncovered , or post - process the report to remove . <section> none <section> cfe_sb_api . c - <number> uncovered branches cfe_sb_task . c - <number> uncovered branches <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # # tests cfe < <url> bundle < <url> # # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , change ci to use test log . # # # pr # <number> fix # <number> , remove default . dat extension # # # pr # <number> fix # <number> , update <allcaps> api </allcaps> doxygen list # # # pr # <number> fix # <number> , update documentation for cfe_es_getpoolbufinfo # # # pr # <number> fix # <number> , cfe_sb_msghdrsize returns size_t # # # pr # <number> fix # <number> , improve sb coverage test # # # pr # <number> fix # <number> , correct function name in ut_bsp_unlock"
"fix # <number> , remove default . dat extension <section> do not enforce / add a default extension to binary data files fixes # <number> <section> build and run all tests send sb "" dump route table "" command using filename without extension and confirm output file has no extension . <section> no longer adds a "" . dat "" extension if omitted from command <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use cfe time clock state enum t in cmd / tlm and handling <section> fixes issue # <number> by replacing uint16 with cfe_time_clockstate_enum_t <section> steps taken to test the contribution : built and ran unit tests <section> no impact to behavior <section> ubuntu <number> <section> oliver hamburger <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # authors <user> <user> # # description # # # pr # <number> fix # <number> , size unit test table load buffer based on config # # # pr # <number> fix # <number> , add sb pipe management functional tests . fix # <number> , remove inconsistent test ."
"fix # <number> , change ci to use test log . <section> fixes # <number> change ci to use the test log file instead of tee . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"hard coded time print format checks fail when non - default epoch is used <section> epoch is configurable : <url> time unit tests hard - code checks that are impacted by epoch configuration , and fail when it ' s changed ( example ) : <url> <section> update tests to work with configured epoch . either adjust for configured epoch or test the actual values ( not print time ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , <user>"
"fix # <number> , add sb pipe management functional tests . <section> fixes # <number> add new functional tests for sb pipe management . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , size unit test table load buffer based on config <section> fix # <number> - supports larger table configurations ( in passing unit tests ) by sizing the unit test buffer used for table loads based on the configuration values . <section> increased cfe_platform_tbl_max_sngl_table_size to where when multiplied by cfe_platform_tbl_max_simultaneous_loads it would break the <number> * <number> limit hard coded in ut_support . c . built and ran unit tests , confirmed they now pass . <section> unit tests will pass for a configuration supporting larger tables <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit ( plus a modified config ) <section> still not unlimited since table register uses the default buffer size , but an improvement . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"support larger tables in the table unit test <section> the first limitation hit is <allcaps> tbl </allcaps> services needs <code> from the memory pool for setting up the load buffers . easy to exhaust the buffer set up in ut_support . c : <url> <section> size the buffer used in unit test based on the configured sizes . <section> could remove the buffer set up in ut_support . c for <code> and size it everywhere , or could override the handler with something simpler that supports the specific test . <section> causing stakeholder unit test failures . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests cfe checks < <url> bundle checks < <url> # # authors <user> <user> <user> <user> - creator # # description # # # pr # <number> fix # <number> , change index type to resolve infinite loop warning # # # pr # <number> fix # <number> , adding coverage for cfe_es_task . c # # # pr # <number> fix # <number> , expand fs header functional tests . # # # pr # <number> fix # <number> , complete coverage for cfe_es_start . c and cfe_es_syslog . c"
"fix # <number> , adding coverage for cfe_es_task . c <section> fix # <number> test the following cases : - cfe_es_taskmain ( ) with a cfe_es_taskinit ( ) error - query tasks command with valid lib id - error when sending build info event - cfe_es_generateversionevents ( ) error when sending mission event <section> manually ran unit tests for es : $ make - c build / native / default_cpu1 / es test verified coverage on files with gcov cfe_es_task . c . gcno and gcov cfe_es_task . c . gcno <section> increased coverage percentage . <section> - ubuntu <number> vm <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"es uncovered lines in cfe_es_task . c , cfe_es_housekeepingcmd , perf filter and trigger size the same <section> <code> clauses in the following code are not reachable : <url> explanation : <code> same as <code> and <code> same as <code> they all ultimately use the same macro <code> . _originally posted by <user> in <url> <section> we have to determine if we want to remove the dead code , or implement the feature that allows the use of smaller cfe_platform_es_perf_max_ids , as explained by jake in <url> <section> can not complete <percent> code coverage if file contains dead code . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
add functional tests for cfe sb pipe management apis <section> need open source functional tests for certifiability <section> add functional tests for cfe sb pipe management apis – cfe_sb_createpipe - creates a new software bus pipe . – cfe_sb_deletepipe - delete a software bus pipe . – cfe_sb_setpipeopts - set options on a pipe . – cfe_sb_getpipeopts - get options on a pipe . – cfe_sb_getpipename - get the pipe name for a given id . – cfe_sb_getpipeidbyname - get pipe id by pipe name . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe fs file utility apis <section> need open source functional tests for certifiability <section> add functional tests for cfe fs file utility apis – cfe_fs_getdefaultmountpoint – cfe_fs_getdefaultextension – cfe_fs_parseinputfilenameex – cfe_fs_parseinputfilename – cfe_fs_extractfilenamefrompath – cfe_fs_backgroundfiledumprequest – cfe_fs_backgroundfiledumpispending <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> reset event filter apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> reset event filter apis – cfe_evs_resetfilter - resets the calling application ' s event filter for a single event id . – cfe_evs_resetallfilters - resets all of the calling application ' s event filters . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> send event apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> send event apis – cfe_evs_sendevent - generate a software event . – cfe_evs_sendeventwithappid - generate a software event given the specified application id . – cfe_evs_sendtimedevent - generate a software event with a specific time tag . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe <allcaps> evs </allcaps> registration apis <section> need open source functional tests for certifiability <section> add functional tests for cfe <allcaps> evs </allcaps> registration apis – cfe_evs_register - register an application for receiving event services . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es resource id apis <section> need open source functional tests for certifiability <section> add functional tests for cfe resource id apis – cfe_es_appid_toindex – cfe_es_libid_toindex – cfe_es_taskid_toindex – cfe_es_counterid_toindex <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
finish functional tests for cfe es miscellaneous apis <section> need open source functional tests for certifiability <section> this function got missed by the existing miscellaneous api test – cfe_es_processasyncevent - notification that an asynchronous event was detected by the underlying os / <allcaps> psp </allcaps> . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es generic counter apis <section> need open source functional tests for certifiability <section> add functional tests for cfe generic counter apis – cfe_es_registergencounter - register a generic counter . – cfe_es_deletegencounter - delete a generic counter . – cfe_es_incrementgencounter - increments the specified generic counter . – cfe_es_setgencount - set the specified generic counter . – cfe_es_getgencount - get the specified generic counter count . – cfe_es_getgencounteridbyname - get the id associated with a generic counter name . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es performance monitor apis <section> need open source functional tests for certifiability <section> add functional tests for cfe performance monitor apis – cfe_es_perflogentry - entry marker for use with software performance analysis tool . – cfe_es_perflogexit - exit marker for use with software performance analysis tool . – cfe_es_perflogadd - function called by cfe_es_perflogentry and cfe_es_perflogexit macros . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"add functional tests for cfe es application behavior apis <section> need open source functional tests for certifiability <section> add functional tests for cfe application behavior apis – cfe_es_runloop - check for exit , restart , or reload commands . – cfe_es_waitforstartupsync - allow an application to wait for the "" <allcaps> operational </allcaps> "" global system state . – cfe_es_waitforsystemstate - allow an application to wait for a minimum global system state . – cfe_es_incrementtaskcounter - increments the execution counter for the calling task . – cfe_es_exitapp - exit a cfe application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>"
add functional tests for cfe es application control apis <section> need open source functional tests for certifiability <section> add functional tests for cfe application control apis – cfe_es_restartapp - restart a single cfe application . – cfe_es_reloadapp - reload a single cfe application . – cfe_es_deleteapp - delete a cfe application . <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
add functional tests for cfe es entry / exit apis <section> need open source functional tests for certifiability <section> add functional tests for cfe entry / exit apis – cfe_es_main – cfe_es_resetcfe <section> n / a <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , expand fs header functional tests . <section> fixes # <number> expands fs header functional tests to include error checking . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> complete coverage for cfe_es_start . c and cfe_es_syslog . c <section> completed code coverage for <code> and <code> with the following changes : fixes # <number> the following tests were added : - <code> with a es perf data mutex creation failure - <code> with unknown object type - <code> when calculated blocksize is <number> fixes # <number> removed function <code> <section> manually ran unit tests for es : <code> verified <percent> coverage on files with <code> and <code> <section> increased overall code coverage <section> - ubuntu <number> vm <section> <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , expand <allcaps> cds </allcaps> functional tests . <section> fixes # <number> expends on the <allcaps> cds </allcaps> functional tests . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add test log file <section> add cfe_assert capability to "" tee "" all test log output to a file in addition to the regular output ( console / event ) . this aids in scripting and automation , by creating a file containing only test results , not intermixed with other info , and not subject to the length limitations of events . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests <section> test results now stored in <code> in addition to normal output <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # context part of <url> # # testing cfe checks < <url> bundle checks < <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , rename / clean <allcaps> cfe </allcaps> coverage assert macros # # # pr # <number> fix # <number> , correct path to users guide warning log # # # pr # <number> fix # <number> , add additional test cases for child tasks # # # pr # <number> fix # <number> , add cfe functional tests to ci # # # pr # <number> fix # <number> , added ut tests for cfe es api # # # pr # <number> fix # <number> , expand <allcaps> cds </allcaps> functional tests . # # # pr # <number> fix # <number> # <number> # <number> , event id updates # # # pr # <number> fix # <number> , add test log file # # # pr # <number> fix # <number> , scrub all ut_report calls"
"run continuous - integration workflows with the bundle integration - candidate branch where needed <section> some ci workflows checkout the cfs bundle , it would be good to see how some things fail against main but pass with ic <section> add a matrix build so workflows that depend on the bundle can test both . add a badge to the readme . <section> <section> add any other context about the feature request here . <section> full name and company / organization if applicable"
"fix # <number> , correct path to users guide warning log <section> corrects the path to the warning log file for <allcaps> cfe </allcaps> users guide build fixes # <number> <section> check <allcaps> cfe </allcaps> workflow <section> workflow should succeed <section> github <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename / clean <allcaps> cfe </allcaps> coverage assert macros <section> rename <allcaps> cfe </allcaps> coverage test assert macros in ut_support . h to have consistent name prefix . also adds a "" <allcaps> voidcall </allcaps> "" and "" resourceid_eq "" macro for logging void functions and id checks , respectively . fixes # <number> <section> build and run all unit tests <section> none - just renames macros for consistency , and simplifies the implementation of some ( reusing existing macro where feasible ) . <section> ubuntu <section> discussed initially in <allcaps> ccb </allcaps> on <number> - <number> - <number> , as part of discussion on # <number> , then split off into a separate issue / pr . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub all ut_report calls <section> scrub through all ut reporting calls and replace with preferred macro where possible . - all calls to check status / return code are replaced with macro that logs all arguments and return value - all calls that involved multiple conditions <allcaps> and </allcaps> ' ed together are replaced with individual asserts on each condition . fixes # <number> fixes # <number> <section> build and run unit tests , confirm logging is as intended , and coverage level is not reduced <section> better , more complete context information is logged into the file all individual assert conditions are logged separately ( no more checking of multiple <allcaps> and </allcaps> ' ed values / conditions in a single report ) <section> ubuntu <section> this also removes all the "" free - form "" info that was in the logs , since it wasn ' t really providing value ( a developer will go to the source file / line number and see full context , nor was it complete or consistent enough to provide any value for cross referencing or documentation ) . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , added ut tests for cfe es api <section> fixes # <number> completed code coverage on the following functions : - test cfe_es_reloadapp bad appid , core app , file does not exist - test cfe_es_getappid : <allcaps> null </allcaps> appid pointer - test cfe_es_getappidbyname : <allcaps> null </allcaps> appid pointer - test cfe_es_getappidbyname : <allcaps> null </allcaps> name pointer - test cfe_es_deletechildtask : task inactive / invalid case - test cfe_es_registercds : <allcaps> null </allcaps> handle and <allcaps> null </allcaps> name <section> steps taken to test the contribution : <number> . compiled code and tests for es <number> . manually run coverage - es - <allcaps> all </allcaps> - testrunner and verify output of new tests <number> . generated cfe_es_api . c . gcov and verified expected lines are now covered . <section> percentage of lines covered should increment . <section> - ubuntu <number> . <number> vm server <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , complete coverage for fs subsystem <section> add required coverage test cases to achieve <percent> line coverage in fs fixes # <number> <section> build and run unit tests , generate coverage report ( lcov ) <section> fs line coverage is now <percent> <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add additional test cases for child tasks <section> fixes # <number> add tests to do more than just the nominal cases of child task apis <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # testing cfe checks < <url> - documentation workflow failures due to osal docs rename . these are fixed in bundle . - local tests failure due to osal docs rename , also fixed in bundle . cfs bundle checks < <url> # # context part of <url> # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , add ci workflow to run cfe coverage tests # # # pr # <number> fix # <number> , updated fs read / writeheader <allcaps> api </allcaps> return documentation # # # pr # <number> fix # <number> , document cfe_es_runloop increment task counter behavior # # # pr # <number> fix # <number> , standardize on "" docs "" subdirectory # # # pr # <number> fix # <number> , update version description per current design # # # pr # <number> fix # <number> , document cfe_tbl_unregister use - case # # # pr # <number> fix # <number> , provide <allcaps> cfe </allcaps> assert lock / unlock # # # pr # <number> fix # <number> , simplify cfe_fs_settimestamp and fix syslog typo # # # pr # <number> fix # <number> , removed redundant check / set of cfe_cpu_id_value # # # pr # <number> fix # <number> , add time get reference error bit # # # pr # <number> fix # <number> , add workflow to build cfe documentation # # # pr # <number> fix # <number> # <number> # <number> # <number> # <number> - requirements updates # # # pr # <number> fix # <number> , es / resourceid documentation cleanup # # # pr # <number> fix # <number> , allow multiple sources in add_cfe_coverage_test # # # pr # <number> fix # <number> , add es misc functional test # # # pr # <number> fix # <number> , add mempool functional tests # # # pr # <number> fix # <number> , clean / simplify version header and reporting # # # pr # <number> fix # <number> , <number> , doxygen cleanup # # # pr # <number> fix # <number> , prepend system log messages with function name"
"ut_defaulthandler_cfe_sb_receivebuffer does not adequately model behavior of cfe_sb_receivebuffer for unit test purposes <section> ut_defaulthandler_cfe_sb_receivebuffer only sets the value at bufptr when status is => <number> ( cfe_success = = <number> ); however cfe_sb_receivebuffer changes the value at bufptr to <allcaps> null </allcaps> whenever the status value is _not_ cfe_success . it is possible to get a <allcaps> null </allcaps> with a non - zero positive result when set by the user . it is not possible to get the <allcaps> null </allcaps> value from the handler with a negative status , a behavior that the production code has . there is no guarantee that the cfe_sb_buffer_t * * bufptr passed into the function does not already contain a non - <allcaps> null </allcaps> value from the code under test ( <allcaps> cut </allcaps> ) . <section> steps to reproduce the behavior : <number> . write a unit test for some <allcaps> cut </allcaps> that uses the function and do not set a new handler <number> . make it so a negative value is received back from the function ( i . e . cfe_sb_time_out ) <number> . if the <allcaps> cut </allcaps> does not do it automatically , temporarily change the passed in address to have a value at that address <number> . test results show that the reference value is never set by the stub <section> the follow - on logic from the default handler should match the logic in the production code , or redesign the stubs to have no follow - on logic so unit test developer is in complete control of outside effects . <section> <url> <url> <section> - <allcaps> rhel </allcaps> - <number> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"fix # <number> , standardize on "" docs "" subdirectory <section> use "" docs "" instead of "" doc "" in both source and binary / build directory names for documentation and related files . fixes # <number> <section> build cfe and <allcaps> osal </allcaps> documentation targets , confirm working as expected <section> no change , just consistent naming <section> ubuntu <section> <section> should be merged at the same time as nasa / osal # <number> and nasa / psp # <number> this also changes the names of the build tree / binary directories too ( <allcaps> imo </allcaps> it seemed odd to keep the binary dirs named differently from source dirs , so i made everything "" docs "" ) . however , it does <section> update the names of the makefile targets ( <code> in the cmake build , and <code> in the sample top - level target makefile ) . i figured there were probably many build / workflow scripts that depended on these target specific target names . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , allow multiple sources in add_cfe_coverage_test <section> add ${ <allcaps> argn </allcaps> } such that the user can specify multiple source files add a check for targets in the add_cfe_coverage_dependency , so this can be used to add arbitrary other non - stub libraries too . fixes # <number> <section> build and run all unit tests , confirm no change in behavior <section> none <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <number> , doxygen cleanup <section> clean up and simplify the generated <code> s for the documentation builds . instead of having special rules or providing direct refs to non - cfe subdirectories in the <allcaps> input </allcaps> , just add the base dir for all modules . then use "" exclude "" logic to filter out parts based on file / directory names ( unit - test , ut - stubs , etc ) . gives each cfe doc build ( detaildesign , usersguide ) its own dedicated working directory . fixes # <number> fixes # <number> <section> build detail design and users guide docs and verify contents . built all <number> doc targets ( detaildesign , usersguide , osalguide ) numerous times with <code> make option , did not see any issues related to parallelism . <section> the full set of code is included in the "" detaildesign "" , even for os / <allcaps> bsp </allcaps> / <allcaps> psp </allcaps> layers that may not be used - e . g . <allcaps> rtems </allcaps> and vxworks <allcaps> psp </allcaps> and <allcaps> osal </allcaps> layers are included in this build . after parallel builds and / or building all doc targets at once - the warning files for each doc target are left are intact , and can be reviewed individually after the build - they do not overwrite each other as they used to . note that instead of <code> the artifact is now <code> and <code> , respectively . <section> ubuntu <section> there had been some attempts at not including unused components in the past , but they were not working ( pre - existing issue ) so it was all getting included anyway , this simply takes out the broken logic but the end result is largely the same . this may also require some sort of update to the list of artifacts due to the <code> file name change . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , prepend system log messages with function name <section> fix # <number> - standardizes system log messages with a prefixed function name <section> built and passed unit tests . <section> only modified output string of syslog . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : cfs bundle + this commit <section> note this will have a conflict with # <number> , easy to resolve . i fix once it ' s in . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , es / resourceid documentation cleanup <section> fix # <number> , cleanup of documentation related to <allcaps> cfe </allcaps> - <number> code review for es resourceid . typo fixes , clarification , removal of obsolete comments , etc . <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> # <number> # <number> # <number> # <number> - requirements updates <section> fix # <number> : added task and <allcaps> cds </allcaps> file write default filenames fix # <number> : removed optional from <allcaps> evs </allcaps> log fix # <number> : non - parameter reload / restart does not increment cmd error fix # <number> : removed system log elements from reset preservation list fix # <number> : simplifed table partial load file requirement <section> ci - requirements documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , add cfe functional tests to ci <section> fixes # <number> add the functional tests to the ci workflow . <section> changed the tests to be wrong and force a failure . changed the tests to have a delay to simulate a timeout . <section> will now fun the cfe functional tests on every pull request . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add mempool functional tests describe the contribution fixes # <number> adds new functional tests for es mempool system ( s ) tested on ubuntu <number> additional context this is a just testing the nominal cases . more in depth tests will have to be added later . contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , clean / simplify version header and reporting <section> fix # <number> - cleans up the version header and how it ' s reported ( standardized event text ) . note just es uses / reports the short version . <section> built and ran unit tests , executed cfe to confirm output . <section> minor event message output format changes <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add workflow to build cfe documentation <section> fix # <number> build documentation at cfe component level , so we can catch documentation errors at cfe repo before they get merged into the cfs bundle . <section> steps taken to test the contribution : <number> . workflow runs and completes successfully after a push . <section> a new action workflow runs to build documentation after a push or merge request . <section> - tested on the github servers where ci actions get to run . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , provide <allcaps> cfe </allcaps> assert lock / unlock <section> provide the ut_bsp_lock / unlock function to be compatible with nasa / osal # <number> . the library no longer needs to be locked the entire time a test runs . this also allows test programs to be multi threaded . fixes # <number> <section> build and run <allcaps> cfe </allcaps> functional tests in cfe_testcase app that use cfe_assert library <section> more fine - grained locking , and tests may use child tasks safely . <section> ubuntu <section> required for compatibility with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> # <number> # <number> , event id updates <section> fix # <number> - removed cfe_es_max_eid and all the others ( very fragile , especially when eids are out of order ) fix # <number> - ordered <allcaps> eid </allcaps> ' s and fixed duplicate assignments fix # <number> - cleaned up eventid documentation - removed format string and replaced with brief description - reduce verbiage in full descriptions , made consistent and less "" bi - directional "" when there are multiple sources . <allcaps> api </allcaps> / commands will reference eids . <section> build an run unit tests , passed - <allcaps> tbd </allcaps> ( not actually done yet ) <section> deconflicted eids . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> did not address # <number> , could be a big impact . wrote # <number> to track use of <allcaps> eid </allcaps> in multiple locations . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add time get reference error bit <section> use one of the unused time state bits to indicate if an error has occurred where cfe_time_getreference was not able to get a consistent copy of the reference state data . in a functional system this should never occur - there should be at most one retry , which only happens in the event there was a burst of updates ( more than <number> ) concurrently with reading the structure . the previous implementation did not report or handle the condition at all , this at least sets a <allcaps> tlm </allcaps> status bit and returns a reference struct filled with all zeros . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests check coverage report to ensure the new tests are being executed and confirm that the read error flag gets set , and the output state is all <number> in that case . force the error to occur during a syslog call and confirm the timestamp gets set , e . g . <number> - <number> - <time> . <number> es startup : opened es app startup file : / cf / cfe_es_startup . scr <section> if cfe_time_getreference was ever not able to get a valid reference structure , it outputs all zeros and the "" <allcaps> referr </allcaps> "" bit ( 0x0 0 1 0 ) will be set in the output <allcaps> tlm </allcaps> structure until the system is rebooted . <section> ubuntu <section> this solution was chosen over an event / syslog because both of those will also get the time , thereby introducing a recursive loop if the error happens again . by zero - filling the structure the output is also identifiable ; i . e . if the date "" <number> - <number> - <time> . <number> "" ever appears in a log file , failure of cfe_time_getreference is really the only way a timestamp like that is possible . without this change the time data would be variable / unpredicatable . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , removed redundant check / set of cfe_cpu_id_value <section> fix # <number> - removed redundant set of cfe_cpu_id_value if not set . and checked as well as assigned to cfe_cpu_id_value here : <url> <url> and used here : <url> <section> removed assignment of cpu1_processorid and confirmed error was generated by target / cmakelists . txt : <code> <section> none as long as required elements are defined . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , fix calculate <allcaps> crc </allcaps> header return description . <section> fixes # <number> change header file to match functionality . <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add ci workflow to run cfe coverage tests <section> fix # <number> run cfe coverage tests for every push and pull request . use a checks - for - duplicates job to avoid duplicate runs of the ci action . <section> steps taken to test the contribution : <number> . pushed to fork , ci action ran successfully : <url> <number> . created a temporary branch and introduced an es bug to force a workflow failure . workflow failed successfully : <url> <number> . reverted commit that introduced bug to verify that workflow run completed successfully . <section> a new workflow is added when looking at the different nasa / cfe actions . the workflow will run for every push and pull request . <section> - tested on the github servers where ci actions get to run . <section> jose f . martinez pedraza / <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add es misc functional test <section> fixes # <number> test for the api calls in misc section . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> note codeql failure in cfe checks because workflow points at "" main "" . this is resolved by the cfs - bundle ic . # # authors <user> <user> <user> <user> # # description # # # pr # <number> fix # <number> , update es verify errors to match ensures error messages in <code> match test logic . # # # pr # <number> fix # <number> , resolve mismatched endforeach of cmakelist . txt # # # pr # <number> fix # <number> , improve event filter documentation adds documentation for the behavior of <code> and explains how event filter mask values work . # # # pr # <number> fix # <number> , <allcaps> evs </allcaps> / fs documentation cleanup # # # pr # <number> fix # <number> , remove shell file subtype and clarify scope removes <code> and clarifies the scope of <code> so that it only includes the cfe - defined file types # # # pr # <number> fix # <number> , simplify cfe_es_queryallcmd file open logic removes the obsolete <code> and file - remove - on - success logic from <code> . # # # pr # <number> fix # <number> , remove deprecated elements # # # pr # <number> fix # <number> , replace header content type magic number . # # # pr # <number> fix # <number> , remove unused <allcaps> evs </allcaps> logmode defines # # # pr # <number> fix # <number> , # <number> , sb / <allcaps> msg </allcaps> / <allcaps> sbr </allcaps> documentation cleanup and remove unused <code> # # # pr # <number> fix # <number> , add cfe_sb_destinationd tag and use for pointersastrogeco # # # pr # <number> fix # <number> , use cfe_msg_sequencecount_t for seqcnt type # # # pr # <number> fix # <number> , document cfe_es_poolcreateex numblocksizes error handling # # # pr # <number> fix # <number> , documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> # # # pr # <number> fix # <number> , document tblname as app specific # # # pr # <number> fix # <number> , use <allcaps> osal </allcaps> script to generate <allcaps> api </allcaps> guide # # # pr # <number> fix # <number> , include verify headers to validate config # # # pr # <number> fix # <number> , add doxygen aliases for <allcaps> osal </allcaps> parameter / retvals"
"fix # <number> , simplify cfe_es_queryallcmd file open logic <section> fix # <number> - removes the first os_opencreate ( and file remove on success ) since the following os_opencreate with truncate makes it obsolete <section> build / run unit tests , passed ( once updated ) <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update es verify errors to match test <section> fix # <number> - updated es verify error reporting to match test <section> ci - preprocessor error text update only <section> none ( except updated error message if triggered ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , improve event filter documentation <section> fix # <number> - clarifies how event filters work <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve mismatched endforeach of cmakelist . txt <section> fix # <number> - resolved mismatch <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_evs_unregister <allcaps> api </allcaps> <section> fix # <number> , remove cfe_evs_unregister <allcaps> api </allcaps> - removed requirement cevs3101 - removed documentation references - removed from <allcaps> api </allcaps> header - removed stub - removed implementation - removed coverage test <section> built and ran unit tests , passed <section> removed <allcaps> api </allcaps> . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> evs </allcaps> / fs documentation cleanup <section> fix # <number> - cleans up <allcaps> evs </allcaps> / fs documentation comments from code review <section> ci <section> none , documentation only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove shell file subtype and clarify scope <section> fix # <number> - removes <code> and clarifies the scope of <code> to just include the cfe defined file types <section> build and run unit tests , passed <section> none , wasn ' t used since shell command was removed from <allcaps> cfe </allcaps> / es . <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> evs </allcaps> coverage tests mix filter index with eventid in testing , other misleading comments <section> test claims it ' s using an invalid eventid , but really it ' s just not registered . mixes the concept of filter table index with eventid : <url> the application is registered , it ' s the eventid that has not been registered for filtering : <url> <section> clear up documentation / test , should be obviously testing registered eventids , unregistered eventids , invalid eventid , etc . use min / max values ( <number> and 0 xfffe ) <section> none <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , consistent use of uint16 for eventid <section> fix # <number> - use <code> everywhere for <code> <section> built / ran unit tests , passed <section> none , just makes types consistent <section> - hardware : intel i5 , docker - os : ubuntu <number> - versions : bundle main + this commit <section> does not fix the fact cfe_evs_free_slot is not documented or handled well . see # <number> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , sb / <allcaps> msg </allcaps> / <allcaps> sbr </allcaps> documentation cleanup and remove unused <code> <section> fix # <number> - various documentation cleanup fix # <number> - remove <code> ( combined due to doc dependence ) <section> build and ran unit tests , passed <section> none <section> - hardware : intel i5 / docker - os : ubuntu <number> - versions : bundle main + these commits <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # context part of nasa / cfs # <number> # # testing cfe checks : < <url> cfs bundle checks : < <url> # # description # # # pr # <number> fix # <number> , add printf format casts uses ( int ) with % d conversions in <code> and <code> for platform portability . # # # pr # <number> fix # <number> , accept "" <allcaps> null </allcaps> "" as entry point specifying the special string <allcaps> null </allcaps> as the entry point in a startup script results in no entry point being called for the library . equivalent to leaving the field empty . # # # pr # <number> fix # <number> , add capability to generate multiple tables [ build system ] adds an <code> hook that can added to a <allcaps> cpu </allcaps> - specific subdirectory under the "" defs "" directory . this hook can perform extra installation steps as required for the custom implementation . tweaks the <code> function so it can be called from the <code> script to generate additional / alternative table binary files for that <allcaps> cpu </allcaps> . <code> now uses the "" app_name "" parameter to associate the table files with the app library , so the same set of include files can be used . still allows any unique string to be used as "" app_name "" for backward compatibility . the script will now generate a "" note "" message to the user if it does not match an application name . if the multiple table feature is used , it actually needs to match the application name , or else the include paths may be incomplete . # # # pr # <number> fix # <number> , # <number> , resolve <allcaps> api </allcaps> prototype / implementation discrepancies removes discrepancies ( return type , parameter names , etc ) between function prototypes and implementation . also fixes some but not all use of <code> in the implementations . updates ut - stubs accordingly . # # authors <user> <user> <user>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removed deprecated elements <section> built and ran unit tests , passed <section> none ( for those that already compiled with <code> ) <section> - hardware : intel i5 - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify cfe_fs_settimestamp and fix syslog typo <section> fix # <number> - writes the timestamp with one call and updates / fixes the syslog message - now setting success as <code> - <code> now returns <code> if the write does not return the correct bytes written - update coverage test checks - updated the functional test to check for <code> vs <code> - updated check of status in <code> to <code> <section> built and ran unit tests , passed . <section> updated syslog , returns an actual error code if there is an error . <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add cfe_sb_destinationd tag and use for pointers <section> fix # <number> - added cfe_sb_destinationd tag and used for the linked list pointers <section> built unit tests , ran sb and passed <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_sequencecount_t for seqcnt type <section> fix # <number> - fixed type for seqcnt <section> built all unit tests , ran sbr tests and passed <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> osal </allcaps> script to generate <allcaps> api </allcaps> guide <section> instead of including the <allcaps> osal api </allcaps> guide templates and pages in the <allcaps> cfe </allcaps> repo , invoke the build script now provided in the <allcaps> osal </allcaps> repo itself . fixes # <number> <section> build full documentation , including <allcaps> osal api </allcaps> guide , confirm same as it was <section> none , documentation build only <section> ubuntu <section> depends on nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , document cfe_es_poolcreateex numblocksizes error handling <section> fix # <number> - updated documentation to match implementation <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> <section> fix # <number> - minor documentation cleanup in <allcaps> tbl </allcaps> / <allcaps> time </allcaps> from code review <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , document tblname as app specific <section> fix # <number> - replaces "" processor specific "" comments with app specific in relation to table name and also refers to the "" raw table name "" instead of overloading "" table name "" <section> ci - documentation only <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , include verify headers to validate config <section> fix # <number> - includes the verify . h headers in service * _task . c file to verify config settings <section> build and ran unit tests w / default config ( passed ) made an es config invalid and confirmed it errored on build <section> actually runs the config verification macros <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + this commit <section> eventually the compile time checks could move closer to use , but for now at least this performs the checks as part of service compilation . debated running as a separate check in cmake , but preference is to move closer to where it matters vs further away . we dropped them once , hopefully we will be less likely to drop them in the future when it ' s actually in the code . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , replace header content type magic number . <section> fixes # <number> changes the magic number to the defined value . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused <allcaps> evs </allcaps> logmode defines <section> removed unused <allcaps> evs </allcaps> logmode defines and references to these defines . fixes # <number> <section> steps taken to test the contribution : <number> . build and run unit tests <section> there are no behavior changes . everything continues to run the same . <section> - os : ubuntu <number> <section> jose f . martinez pedraza , <allcaps> nasa gsfc </allcaps> code <number>"
"update ut - stubs related to prototype / implementation scrub , # <number> /# <number> <section> prototype / implementation discrepancies were resolved in # <number> , but ut - stubs were not updated . <section> update ut - stubs <section> none <section> # <number> and # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> , resolve <allcaps> api </allcaps> prototype / implementation discrepancies <section> fix # <number> - this checks prototypes against implementation and fixes any differences ( return type , parameter names , etc ) . for the most part implementation was considered truth ( fixed prototype ) except for cfe_status_t return type change . also fixes some but not all use of cfe_status_t in the implementations . fix # <number> - note completed ut - stub updates after <allcaps> ccb </allcaps> , added in since they are trival . follow on work needed - internal use of cfe_status_t (# <number> ) <section> built and ran unit tests , all passed . built usersguide and confirmed no errors . <section> none <section> - hardware : docker on laptop - os : ubuntu <number> - versions : bundle main + these commits <section> builds on commit from <user> submitted in # <number> , now closed as duplicate to this pr <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> zachary gonzalez - individual"
"fix # <number> , add capability to generate multiple tables adds a "" install_custom . cmake "" hook that can be put into a <allcaps> cpu </allcaps> - specific subdirectory under the "" defs "" directory , that can perform extra installation steps as required for the project / mission . tweaks the "" add_cfe_tables "" function such that it can also be called from the install_custom . cmake script to generate additional / alternative table binary files for that <allcaps> cpu </allcaps> . the main update is that it uses the "" app_name "" parameter to associate the table files with the app library , so the same set of include files can be used . this relies on the target - scope properties being used . historically that string wasn ' t verified , it could have been any unique string , but now it should match the app if this is to work as expected . <section> fixes # <number> <section> add multiple / alternative table definitions for sample_app in a local <number> - cpu configuration . confirm that all table files are built and installed to the staging area correctly , and that sample_app can be tweaked to load one of the alternatives , just by changing the filename it loads . <section> because the "" app_name "" ( 1 st parameter ) of <code> was never validated historically , it just had to be unique , this still allows any string for backward compatibility . it will generate a new "" note "" message to the user if it does _not_ match an application name , but it is still accepted . if the multiple table feature is used , it actually needs to match the application name , or else the include paths may be incomplete . <section> ubuntu <section> see also nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , changing return type from int32 to cfe_status_t <section> - fix # <number> changing the implementation return types to cfe_status_t to match the function prototypes . <section> none <section> none <section> n / a * * contributor info individual zachary gonzalez"
"fix # <number> , add printf format casts <section> use ( int ) with % d conversions for portability fixes # <number> <section> build and run unit tests on <allcaps> rtems </allcaps> <section> build now succeeds <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add printf format casts <section> use ( int ) with % d conversions for portability fixes # <number> <section> build and run unit tests on <allcaps> rtems </allcaps> <section> build now succeeds <section> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , accept "" <allcaps> null </allcaps> "" as entry point <section> recognize the special string "" <allcaps> null </allcaps> "" to indicate no entry point should be called for the library . equivalent to leaving the field empty . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , and use a startup script that loads a cfe_lib with a <allcaps> null </allcaps> entry point run all unit tests . <section> specifying the special string <code> as the entry point in a startup script should work as it did in previous versions - skips the entry point . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add coding standard rules in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . <section> testing done on forked repository , arielsadamsnasa / cfe . <url> jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , resolve sequence count auto - increment rollover bug adds <code> so the auto - increment of the local sequence counter works when sending tlm ( and increment is enabled ) . updates unit tests and adds the old - style stub . the unit tests check for the correct rollover behavior . sequence count will roll over based on the mask . before the fix the sequence counter would "" stick "" in telemetry until the passed in value rolled over . # # # pr # <number> , * community contribution ! * fix # <number> , correctly format code block section terminator markdown renders correctly after fixing fixing code block termination . # # # pr # <number> , * community contribution ! * fix # <number> , typos in developer guide # # authors <user> <user> - hbr <user>"
"cfe integration candidate : <number> - <number> - <number> # # context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # description # # # pr # <number> fix # <number> , remove broken travis - ci script # # # pr # <number> fix # <number> , generated coverage stubs for <allcaps> cfe </allcaps> core updates <allcaps> cfe </allcaps> core stub libraries to use stubs generated from new ut assert script . converts existing stub logic to a default handler routine . moves all of the internal <allcaps> api </allcaps> prototypes from "" core_api "" to the "" core_private "" interface lib . fix # <number> , move cfe_fs_runbackgroundfiledump to internal <allcaps> api </allcaps> update # <number> , rename hook files to handler # # # pr # <number> fix # <number> , <allcaps> osal </allcaps> config file simplification adds documentation and comments about how the configuration facility works and where to find information on the complete set of options available updates the configuration files in "" sample_defs "" to reflect only those parameters that are set to a non - default value along with information about why the configurable item is changed . # # # pr # <number> fix # <number> , removes - - quiet option so files checked go to stdout # # # pr # <number> fix # <number> , table object file name # # authors <user> <user>"
"fix # <number> , report files checked in cppcheck action <section> fix # <number> , removes <code> option so files checked go to stdout <section> ci <section> reports files checked in ci <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove broken travis - ci script <section> fix # <number> - removes broken travis - ci script . the github action for <code> already exist that cover the required testing . note all the travis - ci was doing is the strict cpp check . <section> ci , confirm travis results no longer show up <section> none , ci only <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"rename * hooks . c as * handler . c for stubs <allcaps> ccb </allcaps> : <number> - <number> - <number> <url> <allcaps> approved </allcaps> with changes - extends "" handler function "" concept from osal to cfe - do we have a better naming scheme ? we have hooks and handler . - rename the files to <code> instead of <code> . open issue in osal to rename as well _originally posted by <user> in <url>"
"fix # <number> , resolve sequence count auto - increment rollover bug <section> fix # <number> - adds <code> so the auto - increment of the local sequence counter works when sending tlm ( and increment is enabled ) . updates unit tests and adds the old style stub . the unit tests check for the correct rollover behavior . note - will need to rebase when autogenerated stubs are merged , will update at that point . <section> build and execute unit tests , passed <section> sequence count will roll over based on the mask . before the fix the sequence counter would "" stick "" in telemetry until the passed in value rolled over . <section> - hardware : local docker - os : ubuntu <number> - versions : cfs bundle main + this commit <section> will need to deconflict once autogenerated stubs are merged , # <number> . note this just fixes the reported bug , and does not add any of the other extra functionality discussed as part of # <number> . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , add <allcaps> es cds </allcaps> functional test adds tests for nominal use cases of the es critical data store <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , function comment blocks [ docs ] makes comment blocks in source and header files more consistent for all internal , <allcaps> cfe </allcaps> core apis . moves information about the function behavior to its prototype in the header in doxygen format . comment blocks on the function implementation refer back to the prototype , it does not duplicate the info . local helper functions that are not separately prototyped , are exceptions to this pattern . adds intended scope to all functions : global , application - internal , or file / local . # # # pr # <number> fix # <number> , add file header management <allcaps> api </allcaps> functional tests . adds new functional tests for nominal uses of fs header <allcaps> api </allcaps> . # # # pr # <number> fix # <number> , add current time functional test adds new functional tests for time current <allcaps> api </allcaps> . # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> # # authors <user> <user>"
<allcaps> cfe </allcaps> current time functional test <section> the functional test currently only test the base cases of the <allcaps> api </allcaps> functions . more in depth tests still need to be written . <section> write tests for all the possible cases <section> follow up to # <number> <section> alex campbell
"fix # <number> , # <number> , # <number> , generated coverage stubs for <allcaps> cfe </allcaps> core <section> update <allcaps> cfe </allcaps> core stub libraries to use generated stubs , using the generator script now part of ut assert . all existing stub logic is converted to a default handler routine . this also entailed moving all of the internal <allcaps> api </allcaps> prototypes to be in the "" core_private "" interface lib rather than in "" core_api "" . the only reason this was not done earlier was due to issues with the stubs , but that is alleviated when using generated stubs . fixes # <number> fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to <allcaps> fsw </allcaps> . for unit testing , this allows the stub handler to be completely replaced by a test case , bypassing any default handler logic , if the default handler function is not desired . <section> ubuntu <number> <section> originally when the directory reorganization was done (# <number> ) the "" core internal "" function prototypes were kept in <code> because that ' s where the stubs were , and splitting them would require splitting the stub library . when using generated stubs , this is no longer an issue , and actually flips the problem around - such that to maintain the patterns these header files should be moved so that the stubs are generated properly with the right scope . as a result - this moves the "" internal "" header files from core_api to core_private , but does not change them . this is where they really should have been all along . <section> joseph hickey , vantage systems , inc ."
"decouple sb and <allcaps> sbr </allcaps> in coverage tests <section> currently the sb coverage test is not like the others in that it links with the real <allcaps> sbr </allcaps> sub - module , rather than a stub version . this becomes evident when generating the stubs as in # <number> <section> - make <allcaps> sbr </allcaps> unit tests follow the pattern of all other modules - generate a set of stubs for <allcaps> sbr </allcaps> using the generator script and it should use the new cmake functions to add the coverage test . - update the sb unit tests where it was depending on having a real <allcaps> sbr </allcaps> implementation ( should be just a matter of setting the intended stub output where it was missing ) <section> per the system architecture / design , each sub - module should be individually coverage tested , using stubs for all other modules . this is an exception to that general design because <allcaps> sbr </allcaps> does not have proper stub functions for testing dependencies in isolation ( e . g . sb in this case ) like all other modules do . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> osal </allcaps> config file simplification <section> the <allcaps> cfe </allcaps> framework build uses mostly default values for <allcaps> osal </allcaps> compile time configuration . there are just a few exceptions where the <allcaps> cfe </allcaps> build is tuned for a more debug - friendly result . this updates the configuration files in "" sample_defs "" to reflect only those values which are set to a non - default value , along with information about why the configurable item is changed . currently , these are only items related to debugging . this change also includes more documentation / comments about how this configuration facility works and where to find information on the complete set of options available ( which is <allcaps> osal </allcaps> version dependent ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none , this is just documentation / sample config cleanup , but does not change the effective <allcaps> osal </allcaps> configuration , since most of the values in this sample file were the same as the default value . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , change index type to resolve infinite loop warning <section> a clear and concise description of what the contribution is . - fixes # <number> <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> - [x ] individual <allcaps> cla </allcaps> himanshu <allcaps> cla </allcaps> . pdf <url>"
"fix # <number> , table object file name <section> use a shell glob instead of assuming a specific file name , this should pick up the object file no matter how it was named , as long as it ends in ${ cmake_c_output_extension } . it does rely on / assume there is only one such file , so this might break if one changes the name of a table without a clean rebuild . a proper fix would still be to use target_objects generator expression , but that can not happen until ubuntu <number> ( w / ver <number> ) is <allcaps> eol </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm tables are built successfully <section> tables should build even if the file name pattern is not as expected . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , memory pool pointer type no behavior changes . changes the type of pointer for <code> in <code> <allcaps> api </allcaps> from uint8 * to void * to be more consistent and easier to use . should be backward compatible . updates the doxygen documentation for this parameter , as it was incorrectly specifying a <number> - bit alignment requirement . # # # pr # <number> fix # <number> , es child task functional test fixes # <number> , typo in macro name adds new functional tests for es child task <allcaps> api </allcaps> . does not check edge cases . fixed spelling mistake in <code> name # # # pr # <number> fix # <number> , remove broken <allcaps> builddir </allcaps> reference removes <allcaps> builddir </allcaps> reference and an old comment . no behavior changes # # # pr # <number> fix # <number> , remove option for "" osal_compatible "" moves and renames <code> to <code> . since it is is assumed / required that resource ids follow the "" osal compatible "" pattern . perhaps in a future version this could change , but # # # pr # <number> fix # <number> , cfe_success constant type ensures that the <code> constant is of the <code> type . since an explicit cast is required on all error codes that are expected to be negative values . * no behavior change . * # # # pr # <number> fix # <number> , remove unused error codes removes unused error codes : <code> and <code> . no impact to behavior . # # # pr # <number> fix # <number> , better warning about malformed startup line when a startup file has a line with too many tokens the build script will generate a concise warning including an indicator of which line is causing the problem . # # # pr # <number> fix # <number> , check status of call to <code> confirm that the call to <code> returns <code> before continuing . no behavior changes . now shows up as untested lines in the coverage report since error condition cannot be exercised through coverage . # # # pr # <number> fix # <number> , update documentation for <code> [ docs ] clarify that <code> does not wipe or erase the block , it only returns resources to the pool for re - use . # # # pr # <number> fix # <number> , exception logic when app / task is not found [ docs ] adds comments in <code> describing the logic when an exception cannot be traced back to a specific app , in that it should fall back to the <allcaps> psp </allcaps> reset . # # # pr # <number> fix # <number> , error if alignment size not a power of two <code> now returns <code> error if the <code> passed - in value is not actually a power of two instead of "" fixing "" the alignment mask , # # # pr # <number> fix # <number> , remove unneeded cfe_es_syslog_append macro replace internal <code> macro with the <code> <allcaps> api </allcaps> since coding standards discourage use of multi - line macros . * no behavior change * # # # pr # <number> fix # <number> , improve documentation for resourceid patterns [ docs ] improve resource ids documentation . specifically on use of the various helper functions and common patterns documents that the "" ismatch ( ) "" functions accept <allcaps> null </allcaps> pointers so they can be used with initial validation ( gatekeeper ) . all other helper functions assume a non - <allcaps> null </allcaps> pointer . # # # pr # <number> fix # <number> , assert <code> is a bitmask compiler will catch if the <code> value changes in such a way that makes it not usable as a bit mask as intended . add a compile time assert to ensure that <code> value is one less than a power of two ( i . e . an <allcaps> lsb </allcaps> - justified bit mask ) . notes in the comments that it serves as both a numeric limit and a mask . # # context part of < <url> # # testing cfe tests < <url> cfs bundle tests < <url> # # authors <user> <user> <user>"
"fix # <number> , function block comments <section> fixes # <number> scrub all internal apis within <allcaps> cfe </allcaps> core to make comment blocks in sources and headers more consistent . whenever a function is prototyped in a header , this moves the information about the function behavior to that prototype and puts it into doxygen format . the comment block on the function implementation refers the reader to the prototype - it does not duplicate the info . exception for local helper functions which are not separately prototyped , these may have pre / post condition info in the block itself . all functions definitions are noted whether they intend to conform to the public <allcaps> api </allcaps> ( i . e . from a header in core_api ) and therefore have global scope , or if they have application - internal scope , or if they have file / local scope . <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none - documentation updates only <section> ubuntu <number> <section> changes to each subsystem are put in a separate commit . <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> - also fixes # <number> ( deletes instead of moves , they are not implemented )"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : table services & time services # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <code> # # objectives <number> . this review starts on <section> . <number> . dispositions of findings is on <section> <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general comment there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , add <allcaps> es cds </allcaps> functional test <section> fixes # <number> adds new functional tests for es cds <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
fix810 es cds functional tests <section> fixes # <number> adds new functional tests for es cds . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>
"fix # <number> , add current time functional test <section> fixes # <number> adds new functional tests for time current <allcaps> api </allcaps> . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , fs header functional tests <section> fixes # <number> adds new functional tests for fs header . <section> ubuntu <number> <section> this is a just testing the nominal cases . more in depth tests will have to be added later . <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe_es_restorefromcds crashes when target block too small <section> if the pointer to the block of memory is smaller than <allcaps> cds </allcaps> size then the app crashes <section> call cfe_es_restorefromcds ( void * restoretomemory , cfe_es_cdshandle_t handle ) with restoretomemory smaller than the size of handle <section> should return an error code saying the target is too small . <section> got this error from the console <section> : terminated aborted ( core dumped ) <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , split interface and implementation modules separates the list of <allcaps> cfe </allcaps> core interface modules ( e . g . core_api ) from the list of <allcaps> cfe </allcaps> core implementation modules ( e . g . msg ) . this allows the content of core_api to be expanded to locally include any additional modules the user has added to cfe core via the <code> list . # # # pr # <number> fix # <number> , add docs to <code> regarding clearing note in the documentation for this function that it is the responsibility of the calling app to clear / fill the <allcaps> cds </allcaps> block any time a new block is allocated . # # # pr # <number> fix # <number> , remove testrunner and convert testcase to app removes the separate <allcaps> cfe </allcaps> "" testrunner "" module and moves the logic associated with running a test into cfe_assert library . converts the "" testcase "" module from a library into an app , by calling into the runner logic that is now inside cfe_assert . each functional test is a separate app , not a library , so it can be started and stopped via es command like any other app . # # # <allcaps> hotfix ic </allcaps> <number> - <number> - <number> : always build cfe_assert . building "" cfe_assert "" does not need to be conditional on <code> , it should be built all the time . # # additional context part of < <url> # # testing cfe checks < <url> cfs bundle checks < <url> # # authors <user>"
"restrict <code> to core use only <section> similar to # <number> which would be a bigger change , but at minimum should remove this from the public <allcaps> api </allcaps> so libs do not start using it . <section> move to internal / private . also need to confirm requirements match up . <section> # <number> - probably should be removed all together , but that ' s a bigger issue <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"use of <code> in apis does not follow preferred model <section> <code> is used in many of the cfe core apis . this leads to possible <allcaps> eid </allcaps> collisions ( core to app ) , cross dependencies for filter management , and does not really follow preferred pattern . <section> apps should manage their events , apis should return status for apps to handle . <section> manage eids to prevent collisions , still not great since they are compiled in so fairly fragile <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , exception logic when app / task is not found <section> adds comments to describe the logic when an exception cannot be traced back to a specific app , in that it should fall back to the <allcaps> psp </allcaps> reset . restarting only an app is a special opt - in case that is only done if specifically selected when starting the app , and the exception is also positively traced back to that app . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none - documentation only <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update documentation for cfe_es_deletecds <section> noted that this does not actually wipe or erase the block , it only returns resources to the pool for re - use . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none , documentation change only . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , improve documentation for resourceid patterns <section> improve the doxygen documentation on the various helper functions and common patterns dealing with resource ids . specifically , document that the "" ismatch ( ) "" functions accept <allcaps> null </allcaps> pointers to allow use with initial validation ( gatekeeper ) , but all other helper functions assume a non - <allcaps> null </allcaps> pointer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build design docs <section> none - documentation only , no code change here <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"cfe_es_stop_app_cc results in processor reset ( sp0 only ) <section> the cfe_es_stop_app_cc is resulting in a processor reset when sent to our sp0 . note that this behavior is isolated to the sp0 and is not observed on a linux system . <section> start a test app send the cfe_es_stop_app_cc command observe reset <section> application exits cleanly <section> sp0 os : vxworks <number> cfs versions : cfe v6 . <number> - rc1 + dev218 , osal v5 . <number> - rc1 + dev109 , psp v1 . <number> - rc124 <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"fix # <number> , memory pool pointer type <section> changes the type of pointer in the <allcaps> api </allcaps> from <code> to <code> to be more consistent and easier to use . should be backward compatible . this also updates the doxygen documentation for this parameter , as it was specifying a <number> - bit alignment requirement whereas the alignment requirement is processor dependent - <number> bit processors typically will need <number> bit alignment . link to the macro which is intended to aid in aligning the static pool buffer . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , rebuild documentation . <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add docs to cfe_es_registercds ( ) regarding clearing <section> note in the documentation for this function that it is the responsibility of the calling app to clear / fill the <allcaps> cds </allcaps> block any time a new block is allocated . fixes # <number> <section> build and sanity check . <section> none - documentation only . <section> ubuntu <number> <section> do not recommend changing this behavior , it could easily break something or have unintended consequences , but should be clear in docs that a new <allcaps> cds </allcaps> block must be written to before using , and it is the app / caller responsibility to do so . <section> joseph hickey , vantage systems , inc ."
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : sb , <allcaps> msg </allcaps> , and globals # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <code> # # objectives this review starts on <section> <number> . dispositions of findings is on <date> . <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general comment there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , cfe_success constant type <section> ensures that the cfe_success constant is the cfe_status_t type . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests , confirm nothing went wrong . <section> none <section> ubuntu <number> <section> the explicit cast is required on all error codes that are expected to be _negative_ values . the problem that occurs if these are not forced to <code> type is that the compiler up - converts them to <code> , which on a <number> - bit platform can can represent the value as a positive integer . therefore a test for equality starts to fail . on codes that are positive values , it does not matter as much , the compiler will not need to convert these literals to anything other than int , but it should not hurt to add it for consistency , just in case . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check status of call to cfe_es_cds_cachepreload <section> confirm that the call returned cfe_success before continuing . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> note that the error / failure condition here is effectively dead code from the beginning . not even coverage test can exercise it , because its a void function , and the args are largely fixed / constant values . so this now shows up as untested lines in the coverage report . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , error if alignment size not a power of two <section> instead of "" fixing "" the alignment mask , return an error if the passed - in value is not actually a power of two . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests <section> function will return <code> if the passed in parameter is not a power of two . <section> ubuntu <number> <section> this is an internal functions , and in es this only gets passed from two possible sources : one is <allcaps> cds </allcaps> , hardcoded as <number> , and the other is sourced from the align_of macro for generic memory pools . the latter is platform - dependent but i have never seen a platform that aligns data on something other than a power of two boundary . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , assert cfe_resourceid_max is a bitmask <section> add a compile time assert to ensure that this value is actually a power of two - <number> ( i . e . an <allcaps> lsb </allcaps> - justified bit mask ) . notes in the comments that it serves as both a numeric limit and a mask . fixes # <number> <section> build <allcaps> cfe </allcaps> normally , sanity check . also intentionally set <code> to an invalid value and confirm that the compile time assert caught it . <section> will catch the case if the <code> value changes in such a way that makes it not usable as a bit mask as intended . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , better warning about malformed startup line <section> this improves the log message when a line in the startup script is not formed correctly , such as being too long or having too many tokens . fixes # <number> <section> hack <allcaps> cfe </allcaps> startup file to have a bad line with too many tokens . confirm that all _other_ apps started ok . <section> none if startup script is correctly formed . but startup file line with too many tokens now generates a more concise warning as opposed to being silent . this also adds an indicator of which is the actual bad line . example . <number> - <number> - <time> . <number> es startup : es startup file line <number> is malformed : <number> bytes , <number> tokens . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rename "" zero "" union member field <section> this field is just some generic bits . it is used when the <allcaps> cds </allcaps> is cleared by zero - filling this data block and writing it to <allcaps> cds </allcaps> repeatedly in a loop . renaming it to "" genericdatablock "" should be clearer as to its intent . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> confirm all unit tests pass <section> none <section> ubuntu <number> <section> just renames internal field to avoid confusion about the name <code> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unneeded cfe_es_syslog_append macro <section> replace uses of this internal macro with the <code> <allcaps> api </allcaps> . fixes # <number> <section> build and sanity check , run all unit tests <section> none <section> ubuntu <number> <section> coding standards discourage use of multi - line macros , and for the <number> remaining uses there is no compelling reason not to just use the standard public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
add functional test to ci <section> now that there are functional tests for cfe they should be added to the continuous integration and checked on pull requests like the osal tests . <section> the tests should be run on pull requests like the osal tests . <section> n / a <section> alex campbell <allcaps> gsfc </allcaps>
clarify use of <code> in <code> <section> use of <code> not clear : <url> <section> improve documentation / justify use . <section> none <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"move <code> to the end of <code> to maintain consistent locations <section> cfe_mission_es_cds_max_full_name_len change could move <code> location : <url> <section> confirm cfe_es_cds_regrec_t is not "" exposed "" anywhere it matters , move <code> to the end <section> if it is exposed , trade impacts and determine appropriate milestone <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add null pointer check to cfe_es_reloadapp functional test <section> appfilename <allcaps> null </allcaps> not checked ( or tested ) <url> <section> add a <allcaps> null </allcaps> test , add the check ( if needed ) <section> none <section> code review <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unused error codes <section> fixes # <number> removes unused error codes . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
<allcaps> wip </allcaps> cfe functional test structure preview <section> this is an overview of a few different task all merged together to get a look at the structure of the test files . to make sure everyone agrees on how they should be done and to discuss any changes they want that affect multiple tests . <section> this should never be merged in . it is just to have an easy way to look at the big picture . <section> alex campbell
"fix # <number> , remove option for "" osal_compatible "" <section> currently it is assumed / required that resource ids follow the "" osal compatible "" pattern . perhaps in a future version this could change , but for now it is simpler to just require this configuration , rather than having an option with only one choice . this renames / moves the header file but the content is not fundamentally changed . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm normal operation run all unit tests <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"create structure to associated cfe_es_memaddress_t and cfe_es_memoffset_t <section> see <url> cfe_es_memaddres_t and cfe_es_memoffset_t are often used in pairs . <section> the two could be combined into ( for example ) cfe_es_memaddoff_t <section> none <section> from code review # <number> <section> jacob hageman <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , submitted by <user>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , use events for <allcaps> cfe </allcaps> test asserts reports test failures as <allcaps> cfe </allcaps> events . test status messages are now sent as events rather than syslog . this allows for more processing capability , and allows failures to be received externally ( e . g . ground system ) . # # context part of < <url> # # tests cfe checks < <url> cfs bundle checks < <url> # # author <user>"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : <allcaps> evs </allcaps> and fs # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <url> <code> # # objectives <number> . this review starts on <date> and ends on <date> . <number> . dispositions of findings is on <date> . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes if there ' s anything else that is observed as a repeated pattern , feel free to document as a general commen there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow rule <number> in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> - <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"fix # <number> , remove testrunner and convert testcase to app <section> - removes the separate <allcaps> cfe </allcaps> "" testrunner "" module and moves the logic associated with running a test into cfe_assert library . - converts the "" testcase "" module from a library into an app , by calling into the runner logic that is now inside cfe_assert . this permits tests to be invoked at any time by issuing the es "" start app "" command and specifying the testcase app . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . run all currently - implemented functional tests <section> each functional test is a separate app , not a library , so it can be started and stopped via es command like any other app . <section> ubuntu <number> <section> requires # <number> as prerequisite <section> joseph hickey , vantage systems , inc ."
"fix typo in test macro name : utassert_resourceid_undifeined <section> typo in recently added macro name : <url> <section> "" undifeined "" - > "" undefined "" <section> from # <number> , which somehow got merged to main without fixing this <section> joseph hickey , vantage systems , inc ."
"fix # <number> , split interface and implementation modules <section> separate the list of <allcaps> cfe </allcaps> core interface modules ( e . g . core_api ) from the list of <allcaps> cfe </allcaps> core implementation modules ( e . g . msg ) . this allows the content of core_api to be expanded to include any additional modules the user has added to cfe core locally . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no <allcaps> fsw </allcaps> change , only build system . the "" core_api "" interface module will now be expanded to include anything that is in the <code> list , so if the mission has locally expanded this list , the additional / expanded content will become part of <code> automatically . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , es child task functional test <section> fixes # <number> adds new functional tests for child cases . fixes # <number> fixed spelling mistake <section> none <section> ubuntu <number> <section> this is just the most simple cases , edge cases are not checked . <section> alex campbell <allcaps> gsfc </allcaps>"
"format code <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , remove broken <allcaps> builddir </allcaps> reference <section> fix # <number> - removes <allcaps> builddir </allcaps> reference and an old comment <section> <code> no longer fails . <section> none <section> - hardware : docker container - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hagmean - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , es info <allcaps> api </allcaps> functional test adds new tests for the es info apis # # context part of < <url> # # tests cfe checks < <url> bundle checks : < <url>"
"cfs - caelum review , <allcaps> cfs </allcaps> - <number> : es , resource id , core api and private , and build system # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum review code inspection ( full - scale code review ) . this pr is solely focused on "" <allcaps> cfs </allcaps> - <number> "" . for more info see this readme <url> the included files are <url> <code> # # objectives <number> . this review starts on <number> - <number> - <number> and ends on <number> - <number> - <number> <number> . dispositions of findings is on <number> - <number> - <number> <number> . reviewers only need to review source files , header files & build files . <number> . use . ppt , . pdf , . txt & . xlsx files for background information about the code . <number> . see the attachments section for peer review data package . <number> . see also "" the power of <number> "" rules for safety - critical code . <url> <number> . <allcaps> note </allcaps> : do not spend too much time over coding standard violations . the static code analysis tool will enforce the coding standards . this code is developed by <allcaps> gsfc </allcaps> , so <allcaps> gsfc </allcaps> coding standards will be enforced for this code base . # # # notes note a few already existing issues ( no need to individually comment on occurrences ) : doxygen event documentation does not match code : <url> end of function comments out of date ( generalized / paraphrased version of <url> update code / unit tests to use cfe_status_t : <url> if there ' s anything else that is observed as a repeated pattern , feel free to document as a general commen there are several places that would trigger warnings with some common compilers / warning options . it would be nice to follow # <number> rule in "" the power of <number> "" . quick summary / references for currently enforced settings on the <allcaps> fsw </allcaps> compiler options ( note - wall and - werror ) - <url> cppcheck - <url> codeql - <url> codesonar - currently using default set for cfe , extending to <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> is future work for codeql and codesonar we do not eliminate all warnings , but we do analyze and disposition them all ( plan to report dispositions as part of certification package ) this approach is compliant with the latest <allcaps> gsfc </allcaps> <number> standard ( that is still going through review ) . happy to discuss any additional settings that you have concerns about ."
"[ <allcaps> deleted </allcaps> ] # # description this is a "" bookkeeping "" pull request meant for the cfs - caelum cfe code inspection ( full - scale code review ) ."
"[ <allcaps> deleted </allcaps> ] # # description this is a "" dummy "" pull request meant for the cfs - caelum cfe code inspection ( full - scale code review ) ."
"cfe integration candidate : <number> - <number> - <number> # # change description and impacts # # # pr # <number> fix # <number> , remove pspconfig global object removes <code> member from the <code> object . updates the only remaining reference to this object inside the <code> and uses the new version <allcaps> api </allcaps> instead . updates the <allcaps> osal </allcaps> version print to use the version <allcaps> api </allcaps> call and <allcaps> cfe </allcaps> uses the macro directly . # # # pr # <number> fix # <number> , zerocopy typo in readme . md replaces duplicate mention of the removed <code> with the correct removal target of <code> # # tests cfe < <url> bundle < <url> # # additional context part of < <url> # # authors <user> <user>"
"fix # <number> , zerocopy typo in readme <section> fix # <number> , zerocopy typo in readme <section> docs only <section> none <section> none <section> nonoe <section> <user>"
"fix # <number> , use events for <allcaps> cfe </allcaps> test asserts <section> reports test failures as <allcaps> cfe </allcaps> events , which allows for more processing capability , and allows failures to be recieved externally ( e . g . ground system ) . fixes # <number> <section> update startup script to load the <allcaps> cfe </allcaps> functional test libs + apps and execute <allcaps> cfe </allcaps> to run the tests . <section> test status messages sent as events rather than syslog . <section> ubuntu <number> <section> also tested in conjunction with # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , increment sequence if indicated <section> do not restrict sequence increment to <allcaps> tlm </allcaps> only , since <allcaps> cmd </allcaps> packets can be locally generated too ( e . g . <allcaps> sch </allcaps> , <allcaps> time </allcaps> ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests . <section> all transmitted messages will get their sequence count incremented if transmitted with parameter <code> set to true . previously , for some reason , this flag was only honored on <allcaps> tlm </allcaps> packets . <section> ubuntu <number> <section> thus far i have not found a real reason / explanation as to why this flag would be ignored for <allcaps> cmd </allcaps> packets . if there is a good reason , it should be documented . otherwise for the sake of consistency it should be done for all messages . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove pspconfig global object <section> the <code> member is removed from the <code> object . updates the only remaining ref to this object inside the cfe_psp_version macro to use the <allcaps> api </allcaps> function instead . this also updates the <allcaps> osal </allcaps> and <allcaps> cfe </allcaps> version print to _not_ depend on the global object too - <allcaps> osal </allcaps> becomes an <allcaps> api </allcaps> call and <allcaps> cfe </allcaps> can just use the macro directly because its the same library ( itself ) so no linking concern / issue . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> co - dependent with nasa / psp # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , limit check in pool validation <section> it is ok / valid if numbuckets is the maximum value . fixes # <number> <section> build and run all unit tests <section> pool structure using max value will correctly validate <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , # <number> add null pointer check <section> fixes # <number> adds null pointer checks fixes # <number> finishes refactor for buffer error to bad argument . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"update cfe_assert / cfe_testrunner / cfe_testcase namespaces to match cfs suggested standard <section> from # <number> , the cfe_testrunner entry point was too long , so namespace was adjusted to cfe_tr . cfs suggested namespace is typically just a couple characters ( <number> - <number> ) . <section> adjust all three to shorter / consistent namespaces ( module name , function names , globals , etc ) <section> cfe_asrt , cfe_tr , cfe_tc ? <section> # <number> , <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove redundant checks in cfe_evs_earlyinit <section> fix # <number> - removed redundant checks for cfe_success <section> build / run unit tests , passed <section> none , squashes static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , scrub include header guards <section> all c header files should have a header guard matching the file name of the header , in all_caps , with no extra leading / trailing underscores . this also takes a first pass at converting the file - scope block comments to a doxygen format to include a summary of the file . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , build and run all unit tests build documentation and confirm the content of "" detailed description "" on the files contains the info from <code> doxygen blocks . <section> no impact to behavior . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add branch coverage option to genhtml <section> fix # <number> , adds - - branch - coverage option to genhtml line in lcov makefile rule <section> <code> - observe branch coverage summary reported , also checked and html includes branch coverage <section> no code behavior changes <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , removes impossible conditions fix # <number> , remove deprecated elements fix # <number> , squash potentially uninitialized variable warnings fix # <number> , squash possible uninitialized variable false alarms fix # <number> , typo in cfe_tbl_validate appname fix # <number> , initialize totalmsgsize in cfe_sb_getuserdatalength fix # <number> , increment createpipeerrorcounter for all create pipe errors fix # <number> , remove useless assignments / checks fix # <number> , scrub include header guards fix # <number> , check for <allcaps> null </allcaps> in slotused helpers fix # <number> , removed redundant checks for cfe_success fix # <number> , remove task registration calls fix # <number> , shorten testrunner function name fix # <number> , convert functional test startup script example to use "" simple "" filenames fix # <number> , use fs file name parser for commands fix # <number> , clean up zero copy <allcaps> api </allcaps> fix # <number> , global variable cleanup fix # <number> , report <allcaps> psp </allcaps> version in <allcaps> es hk tlm </allcaps> fix # <number> , limit check in pool validation fix # <number> , add null pointer check fix # <number> , replace <code> return for invalid null pointer arguments fix # <number> , adds - - branch - coverage option to genhtml line in lcov makefile rule # # testing cfe tests <url> bundle tests < <url> # # behavior changes # # # pr # <number> removes cases in <code> and <code> that could never hit the alternate condition since the condition was already checked # # # pr # <number> removes all apis deprecated in # <number> and # <number> # # # pr # <number> resolves codeql warnings on uninitialized variables . # # # pr # <number> refactors a small portion of <code> and initializes variables to resolve "" uninitialized variable "" false alarms . # # # pr # <number> fixes a typo in initialization in <code> # # # pr # <number> initializes <code> as <number> to avoid static analysis warning of "" use before initialized "" # # # pr # <number> increments the <code> for all create pipe errors to eliminate a trivial static analysis warning # # # pr # <number> removes redundant or unreachable assignments and checks # # # pr # <number> updates header guards to standard format . converts some file - scope block comments to a doxygen format to include a summary of the file . # # # pr # <number> enables the internal helper functions that determine table slot availability to handle <allcaps> null </allcaps> pointers . # # # pr # <number> resolves static analysis warnings by removing redundant check for <code> in <code> # # # pr # <number> <section> moves the invocation of <code> from the registration function to the pre - entry function and removes all references to task registration in code , docs , and tests . # # # pr # <number> renames <code> as <code> so it is less than <number> characters long . updates app file names in documentation for <code> . # # # pr # <number> replace the call to <code> with the new filename - aware function <code> for commands that contain file names like <code> . the default pathname / extension logic is now applied here too and only a "" basename "" is strictly necessary , although if a full / absolute path is given , it will be used as is . # # # pr # <number> removes the now - unnecessary <code> type and all apis that refer or require it . replaces <code> and <code> with two new simplified functions <code> and <code> , respectively . these new functions do not use a separate handle . updates the <code> <allcaps> api </allcaps> to also remove the handle . does affect public apis . # # # pr # <number> internal cleanup localized to es implementation . consolidate all es global variables under the <code> struct . removes the separate <code> and some random pointers that were stored at global scope . adjusts all references to the deprecated items accordingly ( search and replace ) . # # # pr # <number> adds <allcaps> psp </allcaps> version info to es housekeeping <allcaps> tlm </allcaps> messages . changes both <allcaps> psp </allcaps> and <allcaps> osal </allcaps> version info assignments on <allcaps> hk tlm </allcaps> to use the new version info <allcaps> api </allcaps> . # # # pr # <number> fixes check for "" numbuckets "" member to use <code> instead of <code> . <code> now returns <code> if using the max number of buckets ( <number> by default ) and the pool structure using max value will correctly validate # # # pr # <number> replaces remaining <code> with <code> for when functions receive an invalid null - pointer argument . adds null pointer checks in <code> . # # # pr # <number> adds branch coverage to html report when running <code> # # additional context part of < <url> # # authors <user> <user> <user> <user>"
"fix # <number> , clean up zero copy <allcaps> api </allcaps> <section> this removes the now - unnecessary <code> type and all apis that refer / require this extra handle . adds two new simplified functions <code> and <code> to replace <code> and <code> , respectively . these new functions do not use a separate handle . updates the <code> <allcaps> api </allcaps> to also remove the handle . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , sanity check , run all tests . also updated ci_lab to use this zero copy <allcaps> api </allcaps> pattern , and confirm that all is working correctly . <section> removes redundant handle type and simplifies <allcaps> api </allcaps> . note - this does affect public apis . <section> ubuntu <number> <section> see also nasa / ci_lab # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , check for <allcaps> null </allcaps> in slotused helpers <section> these are internal helper functions that determine if a table slot corresponding to a given id is in use or free / available . this updates the function to handle <allcaps> null </allcaps> pointers even though in context they are used the lookup should always work . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none <section> ubuntu <number> <section> should resolve a static analysis warning <section> joseph hickey , vantage systems , inc ."
"fix # <number> , report <allcaps> psp </allcaps> version in <allcaps> es hk tlm </allcaps> <section> add <allcaps> psp </allcaps> version info to es housekeeping <allcaps> tlm </allcaps> messages . this is done equivalently to <allcaps> osal </allcaps> version info . changes both to use the proper version <allcaps> api </allcaps> . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm <allcaps> hk tlm </allcaps> packets transmitted correctly . <section> changes format of <allcaps> hk tlm </allcaps> to include <allcaps> psp </allcaps> version info . <section> ubuntu <number> <section> this may need a corresponding update in the python ground system for <allcaps> es hk </allcaps> to display correctly , since it adds new fields . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , global variable cleanup <section> consolidate all es global variables under a single cfe_es_global . removes the separate cfe_es_taskdata as well as some random pointers that were stored at global scope . all references adjusted accordingly ( search and replace ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> none , internal cleanup localized to es implementation <section> ubuntu <number> <section> the following es variables were instantiated separately at global scope without real reason : - cfe_es_taskmain - cfe_es_resetdataptr - perf ( was not even qualified w / cfe_es_ ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , squash potentially uninitialized variable warnings <section> fix # <number> - initialized all the potentially uninitialized variables ( all false alarms ) <section> build / run unit tests , passed <section> none , just squashes codeql warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> static analysis warning squash <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> es api </allcaps> functional tests <section> fixes # <number> new tests for the es info <allcaps> api </allcaps> ' s <section> this is the test <section> none <section> dependant on # <number> addresses are only valid on vxworks system so the tests for when that is true have not be run and verified . <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove task registration calls <section> explicit task registration is no longer necessary , since all required actions can be done before invoking the entry point . this moves the invocation of <code> from the registration function to the pre - entry function , this was the only remaining action in task registration . all references to task registration in code , docs , and tests are removed . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to behavior , but this is an <allcaps> api </allcaps> change that affects apps . <section> ubuntu <number> <section> cfe_es_registerapp and cfe_es_registerchildtask functions no longer exist . requires updates to apps to remove these calls if they are referenced . <section> joseph hickey , vantage systems , inc ."
trigger for static analysis <number> <section> codeql results not showing up on branch pushed to fork . test pr for static analysis <section> n / a <section> n / a <section> ci <section> for static analysis <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , typo in cfe_tbl_validate appname <section> fix # <number> - appname initialization from "" <allcaps> unknwon </allcaps> "" to "" <allcaps> unknown </allcaps> "" <section> ci <section> none , just fixes the typo in initialization ( typically replaced by the real appname ) . <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , increment createpipeerrorcounter for all create pipe errors <section> fix # <number> - increments the createpipeerrorcounter for all create pipe errors which eliminates a static analysis warning for trivial case <section> build / run unit tests , passed <section> increments the error counter for all pipe creation errors <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , bit order macros fix # <number> , removes false child tasks statement . fix # <number> , adds cast to avoid implicit conversion on a vsnprintf error fix # <number> , clarify the documentation on sb msgid regarding requirements for command and telemetry messages fix # <number> , cast isspace input to unsigned char to avoid undefined behavior fix # <number> , updated message module , msgid v1 to use mask instead of cast to alter value ( and added comment ) fix # <number> , coercion alters value caused by incorrect type - static analysis warning fix # <number> , use quotes for local includes fix # <number> , and # <number> add a contributing guide fix # <number> , reinstate recipes for coverage test # # testing performed see < <url> # # expected behavior changes # # # pr # <number> adds a local definition of <code> directly inside <code> to provide a compatible symbol for apps that still require this . this allows <allcaps> cfe </allcaps> to build and run successfully when <allcaps> osal </allcaps> stops providing this in <code> . # # # pr # <number> removes incorrect statements from application developers guide # # # pr # <number> fixes truncation handling on vsnprintf error by adding a cast to avoid implicit conversion # # # pr # <number> clarify the documentation on sb msgid regarding requirements for command and telemetry messages # # # pr # <number> avoids undefined behavior and resolves static analysis warnings by casting <code> input to <code> . # # # pr # <number> updates message module and msgid v1 , <code> , to use mask instead of cast to alter value . resolves static analysis warning . # # # pr # <number> updates <code> to report status , not a <code> actual since <code> returns <code> . use <code> for local type from <code> since it ' s an index , not a status . # # # pr # <number> replaces <code> with <code> in local <code> s # # # pr # <number> adds <code> that links to the main cfs contributing guide . ` # # additional context part of < <url> # # third party code none # # contributor info - all information <allcaps> required </allcaps> for consideration of pull request"
"fix # <number> , # <number> shorten testrunner function name and update cfe_es_startup . scr docs <section> fixes # <number> change the name of the testrunner main function to be less than <number> characters . fixes # <number> use simple filenames . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , squash possible uninitialized variable false alarms <section> fix # <number> - swash uninitialized variable false alarms with a minor refactor and initializations where required . <number> elements listed in # <number> were <allcaps> obe </allcaps> , will rerun analysis and write a new issue if additional fixes required . <section> build / run unit tests <section> none , squashes static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + cfe main ( for unit test fix ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove deprecated elements <section> fix # <number> - removes all deprecated elements <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + cfe main ( unit test fix ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove impossible conditions <section> fix # <number> - removes impossible conditions ( typically a test that could never hit the alternate condition since the condition was already checked ) <section> build / run unit tests <section> none , squash static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove useless assignments / checks <section> fix # <number> - removes useless / redundant / unreachable assignments / checks <section> build / run unit tests <section> none , resolves static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , avoid implicit conversion from vsnprintf errors <section> fix # <number> - adds cast to avoid implicit conversion on a vsnprintf error , and comments to explain <section> build / run unit tests ( note # <number> ) <section> no real change , vsnprintf should never error but does avoid static analysis warnings . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize totalmsgsize in cfe_sb_getuserdatalength <section> fix # <number> - initialize totalmsgsize to <number> to avoid false use before initialized static analysis warning <section> build / run unit tests <section> none , just squashes warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve type issues with cfe_es_filewritebytecnterr and cfe_tbl_findtableinregistry <section> fix # <number> - use int16 for local type from cfe_tbl_findtableinregistry ( it ' s an index , not a status ) - update cfe_es_filewritebytecnterr to report status , not a size_t actual ( os_write returns int32 ) <section> build / run unit tests , passed <section> squash static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use mask instead of cast to alter value <section> fix # <number> - updated message module , msgid v1 to use mask instead of cast to alter value ( and added comment ) <section> build / run unit tests ( note see # <number> ) <section> squash static analysis warnings <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cast isspace input to unsigned char <section> fix # <number> - cast isspace input to unsigned char to avoid undefined behavior <section> build / run unit tests ( note issue # <number> ) <section> squash static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use fs file name parser for commands <section> for commands containing file names , replace the call to cfe_sb_messagestringget ( ) - which is just a basic copy - to the new filename - aware function cfe_fs_parseinputfilename ( ) . this means that the default pathname / extension logic is applied here too and only a "" basename "" is strictly necessary , although if a full / absolute path is given , it will be used as is . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> issue commands which accept file names ( e . g . <allcaps> restart </allcaps> app ) and confirm they accept the same file names as the startup script accepts . <section> commands accept "" bare "" file names using same logic as startup script , assuming a default path and extension if omitted . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , use quotes for local includes <section> fix # <number> - use quotes for local includes <section> build / run unit tests ( note open issue on unit tests , # <number> ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , reinstate recipes for coverage test <section> builds the <allcaps> cfe </allcaps> coverage tests using new cmake functions . also requires fixing up some include directives in ut headers to make this all work correctly . fixes # <number> <section> build and run unit tests , confirm that cfe core module coverage tests are now part of the group as they should be . <section> cfe core coverage tests are built . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> - <allcaps> hotfix </allcaps> <number> , updates to work with older cmake - fix # <number> , reorganize directory structure - <allcaps> hotfix ic </allcaps> <number> - <number> - <number> : correct static app build issue <section> ci <section> see prs <section> ci <section> none <section> none <section> <user>"
"fix # <number> , clarify the documentation on sb msgid <section> fixes # <number> clarify the documentation on sb msgid regarding requirements for command and telemetry messages <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> apply and check standard code format <section> fix # <number> fix # <number> <section> see checks tab < <url> bundle ( fork ) test : < <url> <section> adds new github actions workflow that checks format . this workflow runs on both "" push "" and "" pull_request "" for all branches so at the moment it will trigger twice for any branch that is part of a pull request <section> ubuntu <number> <section> will create a tag after merge <section> none"
"fix # <number> , bit order macros <section> provide a local definition of software_big / little_bit_order directly inside <code> to provide a compatible symbol for apps that still require this . this allows <allcaps> cfe </allcaps> to build and run successfully when <allcaps> osal </allcaps> stops providing this in common_types . h . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> maintains backward compatibility after nasa / osal # <number> <section> ubuntu <number> <section> prerequisite of nasa / osal # <number> . this pr is needed in same merge cycle or before . <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> pr # <number> <section> ci <section> see related prs <section> ci <section> none <section> none <section> <user> <user> <user>
"fix # <number> , add wrapper targets to simplify app builds <section> adds the following functions to simplify tracking of dependencies and use of interface libraries provided by <allcaps> cfe </allcaps> : add_cfe_app_dependency - dependency that applies to both <allcaps> fsw </allcaps> and coverage test add_cfe_coverage_dependency - dependency that applies only to coverage test ( i . e . for overrides ) add_cfe_coverage_test - creates object + executable targets for coverage test add_cfe_coverage_unit_include - add extra include path to unit build ( i . e . for overrides ) add_cfe_coverage_stubs - add a stub library for coverage testing other modules the goal is to reduce / eliminate the need to directly specify any include paths or compile definitions for dependencies , relying on target properties to do this instead . fixes # <number> <section> build and run all <allcaps> cfe </allcaps> unit tests ( this only affects ut , not <allcaps> fsw </allcaps> ) <section> none , just adding the routines for now , sample app / lib will be transitioned to use them in subsequent pr <section> ubuntu <number> <section> this is needed as part of preparation for directory reorganization in # <number> . these wrapper functions will make it much easier to fixup apps that depended on the old include paths . with this they should not need to ever refer directly to an include path ( or any path ) from another target , so it should avoid any future issues if files get moved around again . see also nasa / sample_lib # <number> and nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reorganize directory structure <section> reorganize / refactor the <allcaps> cfe </allcaps> source code directory structure per the discussion in # <number> . important notes : - this uses cmake "" interface libraries "" to define the <allcaps> cfe </allcaps> apis - the public interface is now defined in the <code> and the internal interface ( private types , stuff that goes only between core apps ) is in <code> . - the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definition headers ( e . g . <code> ) are within the <code> directory of the respective module - because these are "" owned "" by the module itself . - any data types that are shared between <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message and <allcaps> api </allcaps> functions should be defined in the "" extern_typedefs . h "" file ( some things did have to move to meet this ) . - split all public headers into two groups : - the "" api_typedefs . h "" ( e . g . <code> ) which is intended to define the data types and constants used in the <allcaps> api </allcaps> , which in turn may be included by other headers that need to reference / build upon the data types in the respective <allcaps> api </allcaps> . - the actual <allcaps> api </allcaps> header ( e . g . <code> ) which contains the all function prototypes . it is intended to be included only from c files . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> none outside build system . <section> ubuntu <number> ( native ) testing is not yet sufficient - still needs more verification on other platforms and configurations ( static apps , etc ) . <section> although this is a substantial change to the build system and directory structure , very little ( if any ? ) of the <allcaps> fsw c </allcaps> code was actually changed . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct compiler warnings <section> corrects some ( false ) warnings about use before init . also corrects an alignment warning and removes unneeded union type ( union type is not the best way to deal with this situation ) . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> for raspberry pi ( older <allcaps> gcc </allcaps> w / strict alignment ) and native ( <number> - bit ) run all unit tests <section> none , just compiler warning fixes <section> ubuntu <number> ( native ) raspbian ( cross compiled ; gcc <number> . <number> ) <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor sb buffer descriptor object fix # <number> , update <code> to use the <code> type fix # <number> , remove cfeesugshellsrv from user guide fix # <number> , apis missing argument validation fix # <number> , apis missing check for <allcaps> null </allcaps> pointer ( s ) fix # <number> , calculate crc can not return error code fix # <number> , remove logic based on logenabled status fix # <number> , correct compiler warnings <section> see < <url> <section> pr # <number> - refactors the sb buffer descriptor object <code> and simplify the zero - copy buffer paradigm . combines the zero - copy and the normal <allcaps> cfe </allcaps> buffer descriptor into a single unified <code> object . results in a simpler zero - copy design that is similarto the the standard , non - zero - copy message path . all message descriptor objects are now tracked in a list by sb . all changes are internal to sb . this does not affect <allcaps> api </allcaps> or behavior of any existing apis ( but see note ) . corrects a minor issue where the <code> would get incremented if there were no subscribers , but only in the zero copy <allcaps> api </allcaps> . pr # <number> - replaces <code> with <code> for all error message codes pr # <number> - removes references to <code> from user guide pr # <number> - adds null pointer checks and size checks to validate method parameters . returning the input instead of an error code pr # <number> - removes use of <code> element in hk telemetry for <allcaps> evs </allcaps> logic since log is always enabled now . on failures , reset area or semaphore will panic . pr # <number> - fixes various build warnings when <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , remove false child tasks statement . <section> fixes # <number> removes false child tasks statement . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> references to cfe deployment guide were fixed by # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , update pipe name documentation . <section> fixes # <number> clarify pipe name scope in documentation . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"cfe_msg_getsize does not initialize size on failure - static analysis <section> should initialize all output parameters : <url> <section> initialize to <number> scrub <allcaps> msg api </allcaps> ' s to ensure documentation and implementation comply ( set all outputs , and define in documentation ) <section> none <section> static analysis warning <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
infinite loop false alarm in unit test ( easy fix ) - static analysis warning <section> static analysis warning on <code> being int8 . can be avoided if defined as size_t . <url> based on logic strlen ( ut_subsys ) will never be bigger than int8 ( unless someone redefines ut_subsys as something unreasonable ) so this is a false alarm but easy to fix and better pattern to follow . <section> change to size_t <section> none <section> please wait until # <number> is resolved . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update <allcaps> crc </allcaps> documentation <section> fixes # <number> includes additional info that describes the <allcaps> crc </allcaps> <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfeesugshellsrv from user guide <section> fixes # <number> remove cfeesugshellsrv from user guide <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , remove logic based on logenabled status <section> fix # <number> - no longer utilizing the logenabled element in hk telemetry for <allcaps> evs </allcaps> logic , log is always enabled in this implementation <section> built and executed unit tests , passed <section> no real change , but on failures ( reset area or semaphore ) will panic . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> confirmed still getting <percent> line coverage <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , shorten task info default filename <section> fix # <number> - shortened <code> name so it is within the <code> size limit <section> built and ran unit tests , passed . ran cfs and sent <code> command , confirmed file was generated . <section> will now output task info to default filename if no filename is provided in command . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor target config objects <section> rework the dynamic content so it is generated entirely via a cmake "" configure_file ( ) "" command into a c source file ( . c ) that can be built as normal . this removes the need for inline <code> statements to pull in data fragments to fill in the data . fixes # <number> fixes # <number> <section> build and run all unit tests , sanity test <allcaps> cfe </allcaps> , confirm versions reported as expected . <section> this reports multiple event "" <number> "" ( version info ) - one event for each statically linked code module . this now also includes supplemental modules such as "" msg "" and "" sbr "" ( these were not reported at all before ) . this also moves reporting of the "" mission config "" name from event <number> to event <number> ( build info ) as it is not really version info . ideally event <number> should be strictly for source control revision info . any other environment / config info should be in the other events . <section> ubuntu <number> <section> this also attempts to better differentiate / clarify the two different versions that are reported . the first version is administratively - assigned , traditional "" semantic "" version ( major / minor / rev plus dev build number ) . this is updated manually and it is what is reported in <allcaps> cfe </allcaps> event <number> during start up as follows : <code> the second version is the automatically - obtained "" source "" version which is gained by introspection of the source code at compile time . this is reported in <allcaps> cfe </allcaps> event <number> , as follows : <code> important to note that instead of squeezing this all into a _single_ event <number> as had been done before , this sends a separate event for each component . this means that _all_ components can be done ( note this includes msg / sbr / resourceid now , these were not reported before ) as well as making it possible to split "" cfe - core "" into its components as well . it will scale more easily to any number of modular components . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update to use ut_stub_checkdefaultreturnvalue <allcaps> api </allcaps> <section> fix # <number> - updates <allcaps> api </allcaps> name for nasa / osal # <number> fix <section> build and execute unit tests <section> none , name change ( as long as corresponding nasa / osal # <number> in ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : cfs bundle main + nasa / osal # <number> + this commit <section> depends on osal pr <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , do file writes in background fix # <number> , put task parameters into task record fix # <number> , allow directories and symlinks in <allcaps> filelist </allcaps> . fix # <number> , add comment if null terminated or not . fix # <number> , shorten task info default filename fix # <number> , update to use ut_stub_checkdefaultreturnvalue <allcaps> api </allcaps> <section> see < <url> <section> pr # <number> - implements a generic fs facility to perform file writes as a background job . applications wanting to use this need to instantiate a state object ( metadata ) in global memory and two callback apis , one to get a data record , another to send events . the following file requests are changed to use this facility : - <allcaps> es er </allcaps> log dump - sb pipe info - sb message map - sb route info - <allcaps> tbl </allcaps> registry dump changes the internal sb member names for consistency and thus fixes propagation of <code> and <code> into files : - <code> for maximum depth at queue creation time ( previously was queuedepth or depth depending on context ) - <code> for the running count ( previously was inuse or currentdepth depending on context ) - <code> for the highest "" watermark "" ( previously was peakinuse or peakdepth depending on context ) pr # <number> - no public <allcaps> api </allcaps> change . encapsulates all parameters for apps and tasks into a structure object . cleans up internal apis to pass this new object rather than individual parameters . adds details to the relevant record ( i . e . a task record has all relevant task details ) which eliminates the need to traverse the app record to find some data . pr # <number> - enables items in <code> to be in a target name directory as well as symlinks . <code> now checks a name - based subdirectory under <code> for files listed in the <code> for that target . if file is a symlink , the link should be followed so the correct content is installed , not a symlink . pr # <number> - mo impacts to behavior . adds documentation on inclusion presence of null terminators for length parameters . pr # <number> - shortened <code> name so it is within the <code> size limit . will now output task info to default filename if no filename is provided in command . pr # <number> - replaces <code> with <code> . no behavior change . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , remove configs about shells <section> fixes # <number> removes unused configs relating to shell commands <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add comment if null terminated or not . <section> fixes # <number> added comments for if lengths included null terminals or not . <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds core - cfe and tests , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add fields to task info struct <section> adds stack size and priority to the task info structure written by <code> command . fixes # <number> <section> build and run <allcaps> cfe </allcaps> , issue query_all_tasks command , confirm data is in the resulting file . run all unit tests . <section> adds two new fields to the file produced by the command . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , allow directories and symlinks in <allcaps> filelist </allcaps> . <section> checks a name - based subdirectory under ${ mission_defs } for files listed in the <allcaps> filelist </allcaps> for that target . if file is a symlink , the link should be followed so the correct content is installed , not a symlink . fixes # <number> <section> created a symlink in a target name subdirectory ( see additional context ) and confirm that the correct file content is installed . <section> items in <allcaps> filelist </allcaps> can be in a target name directory , and may be symlinks . <section> ubuntu <number> <section> this also adds another "" <allcaps> note </allcaps> "" message to indicate exactly what file is being used , after all lookup / de - mapping logic is done , e . g . i made a symlink to test this out : $ cd sample_defs $ mv cpu1_cfe_es_startup . scr test_startup . scr $ mkdir cpu1 $ cd cpu1 $ ln - s . <repeated> / test_startup . scr cfe_es_startup . scr $ cd . <repeated> / . <repeated> $ make prep < <snipped> > <allcaps> note </allcaps> : selected / home / joe / code / cfecfs / github / sample_defs / test_startup . scr as source for cfe_es_startup . scr on cpu1 this is similar to all the other informational messages for table sources and app sources indicating where they were found . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement better filename parser <section> implemements a new function in fs to parse an input file name from a user - <code> the new function produces fully - qualified output where the input may omit either a pathname or an extension . these items will be added from the specified defaults , if missing , and a complete fully - qualified filename will be output . if the input is already a fully qualified filename , then the output is the same as the input ( basically a copy ) . this initially is used to provide better cross - platform startup script processing , where module suffix may differ across platforms . only the "" basename "" of the filename needs to be specified in the startup script - everything else can come from defaults . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> . check startup with all combinations of filename in script - fully qualified , basename only . check startup with new default startup script that has basename only - works on both linux ( . so ) and <allcaps> rtems </allcaps> ( . obj ) with no change . <section> easier switching between platforms - startup script does not need to change to account for the different suffix that different platforms use . <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> ( i686 , <allcaps> qemu </allcaps> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor sb buffer descriptor object <section> refactor the sb buffer descriptor object ( <code> ) and simplify the zero - copy buffer paradigm . combine the zero - copy and the normal <allcaps> cfe </allcaps> buffer descriptor into a single unified cfe_sb_bufferd_t object . this cleans up a bunch of extra logic related to zero - copy buffers , including the extra descriptor object . the result is a simpler zero - copy design that is much less different from the standard ( non - zero - copy ) message path . all message descriptor objects are now tracked in a list by sb , not just the zero - copy descriptors ( for consistency - if any buffers need to be tracked , they should all be tracked ) . this notably puts the buffer content as a _member_ within the descriptor , rather than a calculated pointer , so it will be aligned properly . fixes # <number> <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> all changes are internal to sb . this does not affect <allcaps> api </allcaps> or behavior of any existing apis ( but see note ) it also ensures that zero - copy buffers ( and the associated cfe_sb_transmitbuffer <allcaps> api </allcaps> ) behave as similarly as possible to the normal cfe_sb_transmitmsg <allcaps> api </allcaps> . notably this corrects a minor issue where the msgsenderrorcounter would get incremented if there were no subscribers , but only in the zero copy <allcaps> api </allcaps> . <section> ubuntu <number> <section> this does not change public <allcaps> api </allcaps> in any way . however now there is no extra descriptor for the "" zero copy "" buffers - they are all just buffer descriptors , regardless of whether they were allocated on the fly or pre - allocated by the application . this means that the <code> value that is output from <code> and others is now largely redundant . it is equal to the buffer descriptor address , but it can be easily determined from the buffer content pointer too , so it is really not necessary to pass around two values for zero copy buffers . this can be simplified in a future change - but that will change the public <allcaps> api </allcaps> . <section> joseph hickey , vantage systems , inc ."
generalize msg module unit tests to handle different cfe_platform_sb_highest_valid_msgid settings <section> module unit test code tests against hardcoded highest valid msgid : <url> <section> test against cfe_platform_sb_highest_valid_msgid <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , put task parameters into task record <section> encapsulate all parameters for apps and tasks into a structure object and clean up internal apis to pass this object rather than individual parameters . these parameters can then easily be stored with the relevant record in the internal table ( tasks , apps , libs ) and makes management easier - as code copies one object rather than many individual fields with ( potentially ) different names . all parameters are stored in the record , which facilitates future telemetry generation / stats and / or for when an app might get restarted or reloaded in the future . notably this changes all task startup to go through the same basic routine ( there is no longer a need for different accounting between main tasks and child tasks ) and share the same common entry point . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . in particular ensure that all tasks + child tasks are starting and running normally . also checked that the app restart command is working as expected . run all unit tests and confirm coverage . <section> no public <allcaps> api </allcaps> change . internal apis are simplified , internal data structures are more consistent , and more detail is stored with the relevant record ( i . e . task record has all relevant task details , so when looking up task info one does not have to traverse to the app record which previously held some of this data ) . <section> ubuntu <number> <section> using the common entry point for child tasks avoids a theoretical race condition where the child task might not have been fully accounted for in the global table at the time the user function started execution . previously this would directly invoke the user - supplied function immediately . now using the common entry point this delays until the task record is completely accounted for ( linked back to app , etc ) before calling the user function . so functions such as <code> and others will work right from the beginning . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , patch <allcaps> psp </allcaps> include directory reference fix # <number> , split resource id functions into module fix # <number> , cfe_evs_register const correct and report truncation fix # <number> , remove table service exclusion logic fix # <number> , remove cfe_platform_evs_log_on undefined option to diasble log fix # <number> , check for file existence in cfe_es_restartapp fix # <number> , es and <allcaps> evs </allcaps> use default message limits fix # <number> , convert global cfe_sb_default_qos to macro fix # <number> , hex output for return checking asserts fix # <number> , remove unnecessary cfe_msg_init in <allcaps> tbl </allcaps> fix # <number> , resolve mismatched types in <allcaps> sbr </allcaps> throttle fix # <number> , initialize status in cfe_es_waitforsystemstate fix # <number> , remove unimplemented es prototypes fix # <number> , remove test_sb_cmds_subrptunexpcmdcode fix # <number> , simplify ut_initdata sb setup fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_ … fix # <number> , update highest msgid documentation / verification fix # <number> , clarify restart / reload app behavior fix # <number> , clear task data in earlyinit and standardize name fix # <number> , send - > write name update for sb write cmds fix # <number> , pipename unset with debug event fix # <number> , update workflow action badge fix # <number> , add workflow action timeout fix # <number> , clean up ifdef blocks fix # <number> , add codeql analysis to workflow <allcaps> hotfix </allcaps> for # <number> , update doxygen refs <allcaps> hotfix </allcaps> for # <number> , remove ref to cfeesresourceidbase <section> see < <url> <section> pr # <number> and # <number> - corrects reference to <allcaps> psp </allcaps> header file location . build now succesfully completes the build succeeds again when using <code> in custom cmakelists file . pr # <number> - replace "" send "" with "" write "" in names for commands that write files . for example , <code> . updates function names , command code names and comments . pr # <number> - removes incorrectly implemented deferred return code of <code> for <code> from software bus setup in <code> . pr # <number> - implements more informative <section> by making <code> print <code> while <code> now prints both % lf <code> 0x % lx <code> readme . md <code> test_sb_cmds_subrptunexpcmdcode <code> test_sb_cmds_cmdunexpcmdcode <code> cfe_es_waitforsystemstate <code> status <code> hkpacket <code> tblregpacket <code> cfe_tbl_earlyinit <code> cfe_tbl_initdata <code> notifymsg <code> cfe_tbl_initdata <code> cfe_tbl_sendnotificationmsg <code> cfe_es_appgetlist <code> cfe_es_appdumpallinfo <code> cfe_platform_sb_highest_valid_msgid <code> cfe_es_restart_app_cc <code> cfe_es_restartapp <code> cfe_sb_routeid_atom_t <code> cfe_platform_sb_max_pipe_depth <code> os_queue_max_depth <code> const <code> cfe_evs_register <code> cfe_platform_evs_log_on <code> cfe_platform_evs_log_max = <number> <code> exclude_cfe_tbl <code> cfe_sb_subscribeex <code> cfe_sb_default_qos <code> cfe_sb_default_qos <code> memset <code> <allcaps> cfe msg </allcaps> <code> <allcaps> sbr </allcaps> <code> uint32 ` results in a compiler error . <section> the user can elect at the mission level whether this is a simple typedef ( all uint32 , all interchangeable ) or a wrapper type ( separate / strict type , cannot be interchanged ) . the former is backward compatible but the latter is not - must use proper types . pr # <number> - adds code ql analysis to continuous integration workflow . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , do file writes in background <section> implement a generic fs facility to perform file writes as a background job . applications wanting to use this facility need to instantiate a state object ( metadata ) in global memory , and two callback apis - one to get a data record , another to send events . the following file requests are changed to use this facility : - <allcaps> es er </allcaps> log dump - sb pipe info - sb message map - sb route info - <allcaps> tbl </allcaps> registry dump fixes # <number> <section> first built and ran "" main "" branch ( unchanged ) and issued all file write commands before change to get a baseline / reference copy . then re - built with this change applied and re - issued all file write commands . compared old files to new files - confirmed that the new files are correct ( but see note below ! ) . <section> files are written in the context of the es background task . <section> ubuntu <number> <section> while examining the diffs between the old files and new files , i noticed that the queue depth in the pipe info was actually wrong in the original / reference data . this was due to some mismatches between pipe info fields where names were getting crossed . in order to fix this and avoid it from happening in the future - this changes the internal sb member names to be consistently named : - <code> for maximum depth at queue creation time ( previously was <code> or <code> depending on context ) - <code> for the running count ( previously was <code> or <code> depending on context ) - <code> for the highest watermark ( previously was <code> or <code> depending on context ) in particular the <code> and <code> were not ( previously ) being propagated to the file correctly - as the names got crossed in the implementation . this pr fixes it by making the names consistent . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add workflow action timeout <section> fix # <number> - added a timeout to prevent excess resource utilization ( default is <number> minutes ) <section> set timeout to <number> and added a sleep , confirmed workflow timed out <section> none , just avoids log job runs <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"unit test should clear event count history after setup <section> test cases that check for events should focus on the events actually sent by the unit under test . but many test cases also require some "" setup "" calls , which also may generate events . as a result the "" assert "" is checking for all events from the combination of ( setup + test ) . this makes tests more fragile , because many tests call the same routine e . g . <code> as part of the test setup . in the current implementation this appears to generate <number> events in its default / nominal mode . but when ( not if ) <code> changes in any way that affects its nominal events ( very easy to do ) it breaks nearly every test in sb . <section> for any call considered "" setup "" it should discard any events generated by the call , thereby not including them in the set that will be validated later as part of the test case . <section> note that all functions ( by definition ) have their own test case where events _will_ be verified . it does not need to be verified again when it is used as the setup for something else . doing so just causes more maintenance work . this also makes test cases clearer - as they should only be checking for events that are actually generated by the function under test . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , pipe name unset <section> fix # <number> only print the pipe id in the debug event <section> enable debug events and run <allcaps> cfe </allcaps> , observe events <section> debug subscription events have pipe id , no name . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> # <number> , api argument validation <section> fixes # <number> fixes # <number> add validation for method parameters . mostly null pointer checks for # <number> and a few size checks for # <number> fixes # <number> returning the input instead of an error code <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> here is the function list from # <number> and the changes done cfe_es_api . c : cfe_es_deleteapp - can get a segmentation fault if user tries to delete an <allcaps> app </allcaps> greater than cfe_platform_es_max_applications cfe_es_locateapprecordbyid gets a pointer that is either valid or null cfe_es_api . c : cfe_es_reloadapp - can result in segmentation fault if <allcaps> apid </allcaps> is invalid cfe_es_locateapprecordbyid gets a pointer that is either valid or null cfe_es_api . c : cfe_es_createchildtask - input argument ' flags ' is not validated … also it does not appear to be used anywhere , consider removing not changing functions in this task cfe_es_api . c : cfe_es_getappname - consider comparing bufferlength with os_max_api_name prior to use . no invalid buffer length cfe_es_api . c : cfe_es_registercds - consider checking if block size is less than cfe_platform_es_max_block_size cfe_es_registercdsex checks blocksize cfe_es_perf . c : cfe_es_perflogadd - should check if entryexit is either a <number> or <number> it ' s internal and the macro that calls it will only pass in valid values cfe_fs_api . c : cfe_fs_initheader - subtype not checked the <allcaps> api </allcaps> does not have a limitation for subtype cfe_sb_api . c : cfe_sb_subscribefull - quality is not checked … consider checking that it is <number> or <number> quality is not nessacarly <number> or <number> cfe_sb_api . c : cfe_sb_zerocopygetptr - is there a maximum message size ? consider verifying msgsize prior to use . checks msgsize cfe_sb_api . c : cfe_sb_subscribelocal - msglim is not checked … if a max limit does exist , should add argument validation a max limit does not exists cfe_sb_util . c : cfe_sb_setuserdatalength - consider verifying length of user data ( if there exists a limit ) and / or totalmsgsize checks totalmsgsize cfe_tbl_api . c : cfe_tbl_getaddresses - can result in segmentation fault if numtables grows larger than max number of tables . needs to be enforced by user cfe_tbl_api . c : cfe_tbl_releaseaddresses - should check to make sure numtables is less than cfe_platform_tbl_max_num_tables needs to be enforced by user here is a list of the functions from # <number> and their new current state cfe_es_api . c : cfe_es_calculatecrc checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_copytocds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_createchildtask checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getappid checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getappname checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_getgencounteridbyname checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_gettaskinfo checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_processcoreexception method no longer exists cfe_es_api . c : cfe_es_registercds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_restorefromcds checks for <allcaps> null </allcaps> cfe_es_api . c : cfe_es_runloop can be called with <allcaps> null </allcaps> cfe_es_api . c : cfe_es_writetosyslog checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getmempoolstats checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getpoolbuf checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_getpoolbufinfo checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreate calls cfe_es_poolcreateex which checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreateex checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_poolcreatenosem calls cfe_es_poolcreateex which checks for <allcaps> null </allcaps> cfe_esmempool . c : cfe_es_putpoolbuf checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendevent checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendeventwithappid checks for <allcaps> null </allcaps> cfe_evs . c : cfe_evs_sendtimedevent checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_initheader checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_readheader checks for <allcaps> null </allcaps> cfe_fs_api . c : cfe_fs_settimestamp no pointer to check cfe_fs_api . c : cfe_fs_writeheader checks for <allcaps> null </allcaps> cfe_sb_api . c : cfe_sb_createpipe checks for <allcaps> null </allcaps> cfe_sb_api . c : cfe_sb_zerocopygetptr checks for <allcaps> null </allcaps> cfe_sb_msg_id_util . c : cfe_sb_getmsgid deprecated cfe_sb_msg_id_util . c : cfe_sb_setmsgid deprecated cfe_sb_util . c : cfe_sb_generatechecksum deprecated cfe_sb_util . c : cfe_sb_getchecksum deprecated cfe_sb_util . c : cfe_sb_getcmdcode deprecated cfe_sb_util . c : cfe_sb_getmsgtime deprecated cfe_sb_util . c : cfe_sb_gettotalmsglength deprecated cfe_sb_util . c : cfe_sb_getuserdata checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_getuserdatalength checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_initmsg deprecated cfe_sb_util . c : cfe_sb_messagestringget checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_messagestringset checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_msghdrsize checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_setcmdcode deprecated cfe_sb_util . c : cfe_sb_setmsgtime deprecated cfe_sb_util . c : cfe_sb_settotalmsglength deprecated cfe_sb_util . c : cfe_sb_setuserdatalength checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_timestampmsg calls cfe_msg_setmsgtime which checks for <allcaps> null </allcaps> cfe_sb_util . c : cfe_sb_validatechecksum deprecated cfe_tbl_api . c : cfe_tbl_getaddress checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_getaddresses checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_getinfo checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_load checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_register checks for <allcaps> null </allcaps> cfe_tbl_api . c : cfe_tbl_share checks for <allcaps> null </allcaps> cfe_time_api : cfe_time_print checks for <allcaps> null </allcaps> cfe_time_api : cfe_time_registersynchcallback checks for <allcaps> null </allcaps> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> for main branch ( merge of <number> . x after bookkeeping ) <section> this just applies fix # <number> to main <section> leveraging testing from # <number> <section> <allcaps> psp </allcaps> module include path correct ( should build ) <section> no new testing , just a merge <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> copy of # <number> but main target ( caelum development ) <section> nothing new , # <number> tested the fix <section> <allcaps> psp </allcaps> modules should be able to build again <section> na , leveraging previous tests <section> maybe add a <allcaps> psp </allcaps> module test into the matrix to catch issues like this ? <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> copy of # <number> but main target ( caelum development ) <section> nothing new , # <number> tested the fix <section> <allcaps> psp </allcaps> modules should be able to build again <section> na , leveraging previous tests <section> maybe add a <allcaps> psp </allcaps> module test into the matrix to catch issues like this ? <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , split resource id functions into module <section> move all functions , macros , types , and other definitions related to resource ids and generic resource management into a separate module , like <allcaps> cfe msg </allcaps> and <allcaps> sbr </allcaps> , etc . notably this allows a mission to elect "" strict "" implementations of these objects , where every id type is unique , and assigning between them ( or uint32 ) results in a compiler error . fixes # <number> fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests <section> <allcaps> api </allcaps> now has separate types for each resource type ( apps , tasks , libs , counters , etc ) . <section> ubuntu <number> <section> the user can elect at the mission level whether this is a simple typedef ( all <code> , all interchangeable ) or a wrapper type ( separate / strict type , cannot be interchanged ) . the former is backward compatible but the latter is not - must use proper types . default if nothing is indicated is to use the backward compatible types , of course - so this does not break anyone ' s build . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> build and run unit tests with - d flag to get debug output , passed and now reports cfe_es_writetosyslog messages <section> ut more informative , no <allcaps> fsw </allcaps> changes . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_evs_register const correct and report truncation <section> fix # <number> - filters pointer now const in <allcaps> api </allcaps> and truncation is reported in the system log <section> built and ran unit tests ( already cover the truncation case ) , verified new system log message <section> reports truncation when registering filters with cfe_evs_register <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove table service exclusion logic <section> fix # <number> - this removes the final remnants of the table service exclusion logic and documentation . <section> build and run unit tests , passed . <section> no affect to default behavior . <code> no longer used , if define table services will still be started . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> will transition table service to a module that can be customized or implemented differently if desired . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_platform_evs_log_on undefined option to diasble log <section> fix # <number> - removes the ability to disable the log by not defining <code> <section> build and run unit tests , passed <section> no longer able to disable log completely , for minimum memory use define <code> as <number> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> could remove control based on logenabled , panic on reset area fail and limp along if sem create fails . needs requirements updates - # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , check for file existence in cfe_es_restartapp <section> fix # <number> - <code> now checkes for file existence as part of command processing . avoids removing the app if the file does not exist ( just avoids one error case ) . <section> build and ran unit tests , passed . also ran cfe and tested with valid and invalid file ( moved good file ) , confirmed error counter increment ( and command rejected so app remained running ) . <section> now rejects command and increments command error counter if file is missing <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , es and <allcaps> evs </allcaps> use default message limits <section> fix # <number> - es and <allcaps> evs </allcaps> used <code> with no requirement or justification ( all but one of the limits were default , and the non - default for <allcaps> es hk </allcaps> was <number> vs <number> ) . default limits should be fine unless required to be different . <section> built and ran unit tests , passed <section> none except it could queue a few more hk messages , but <allcaps> sch </allcaps> loads after es anyways . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , convert global cfe_sb_default_qos to macro <section> fix # <number> - deprecates cfe_sb_default_qos and replaces with cfe_sb_default_qos macro that avoids global variable exposure , and removed sb internal defines ( they are not implemented anywhere and are not used ) . these can be added at the appropriate scope once requirements are defined . <section> build and ran unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle integration candidate + this commit <section> <user> - deprecation of cfe_sb_default_qos ( coding standard all - caps for macros requires change ) depends on # <number> to compile with omit_deprecated <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clear task data in earlyinit and standardize name <section> fix # <number> - explicity memset the task data to zero at the start of earlyinit . also standardizes the global typdef / variable names . might need a rebase based on the name changes . <section> build and run unit tests , passed . <section> none . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> <allcaps> tbl </allcaps> global depends on <code> being set , which does not happen until the app starts ( in <code> ) , so replaced where cfe_tbl_earlyinit was being called to initialize the data with the test initialization function <code> . in the future these tests could be cleaned up by calling the initialization before each test , and ensuring there are no test configuration dependencies across tests . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , hex output for return checking asserts <section> fix # <number> - <allcaps> setup </allcaps> / <allcaps> teardown </allcaps> / <allcaps> assert </allcaps> now print 0x % lx and assert_eq prints both % lf and 0x % lx format for the inputs <section> built and ran cfe - core_sb_ut and confirmed output as expected . <section> more informative assert messages ( often comparing error codes ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unnecessary cfe_msg_init in <allcaps> tbl </allcaps> <section> fix # <number> - removed the <code> and <code> message initializations from <code> , they are initialized in <code> . moved the <code> message initialization to <code> , and just setting the message id each time it ' s sent from <code> . <section> build and run unit tests , passed . <section> none ( or just slightly better performance since the msg is not initialized every call ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , send - > write name update for sb write cmds <section> fix # <number> - updated "" send "" to "" write "" in command names that write files . includes function names , command code names and comments . <section> standard build and run unit tests , passed . made user ' s guide w / no errors / warnings . <section> none , name change to fix misnomer <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> additional update pending # <number> merge <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , resolve mismatched types in <allcaps> sbr </allcaps> throttle <section> fix # <number> - switched throttle indexes to use <code> and combined helper function since separation no longer necessary ( only <number> foreach function implemented ) . <section> build and run unit tests , passed . <section> none , just resolves static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , initialize status in cfe_es_waitforsystemstate <section> fix # <number> - initializes status in cfe_es_waitforsystemstate and added missing success test case ( would have failed ! ) <section> build and run unit tests , passed . <section> no longer returning uninitialized status <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove unimplemented es prototypes <section> fix # <number> , removed unimplemented <code> and <code> prototypes <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove test_sb_cmds_subrptunexpcmdcode <section> fix # <number> , remove test_sb_cmds_subrptunexpcmdcode test was just a copy / paste of test_sb_cmds_cmdunexpcmdcode and did not actually implement a new test . subscription reporting is a no parameter command . <section> build and run unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , simplify ut_initdata sb setup <section> fix # <number> - removes confusing and incorrectly implemented deferred return code of - <number> for <code> from software bus setup in ut_initdata . <section> build and run unit tests , passed <section> none in the core since nothing depended on this behavior , anything that did ( other apps ) should do it correctly . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_max_depth <section> fix # <number> , remove cfe_platform_sb_max_pipe_depth in favor of os_queue_max_depth <section> built and ran unit tests , passed <section> depth parameter in command now checked prior to attempting <allcaps> osal </allcaps> call <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor cfe_time_registersynchcallback fix # <number> , add os_printf to cfe_es_syslog_append fix # <number> , pad msg headers to <number> bit fix # <number> , add cfe_sb_getuserdata padding check fix # <number> , remove duplicate cfe_mission_rev define fix # <number> , remove ut_checkforopensockets references fix # <number> , update cpuname targets . cmake documentation fix # <number> , ut event check bounds fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , create security policy fix # <number> , remove senderreporting from sb global fix # <number> , globalize "" resource id "" definitions fix # <number> , refactor <allcaps> sb api </allcaps> for proper global locks fix # <number> , finish cfe_platform_es_perf_max_ids removal fix # <number> , handle debug events in unit test fix # <number> , remove os_printf stub count checks in ut fix # <number> , cleanup strncpy use - unit tests fix # <number> , cleanup strncpy use - main code fix # <number> , update ut for cfe_mission * string sizing fix # <number> , add utdebug output to cfe_es_writetosyslog stub <section> see <url> <section> pr # <number> - documentation : add security . md with instructions to report vulnerability pr # <number> - documentation : update cpuname / mission_cpunames documentation pr # <number> - fixes <code> helper routine to read the correct number of ids so it checks the correct number of events . also correct bad event checks in <allcaps> tbl ut </allcaps> . pr # <number> - adds <code> to <code> so it matches <code> pr # <number> - removes unused <code> and <code> pr # <number> - tests pass when debug events are enabled via <code> in platform config . pr # <number> - removes references to <code> which is no longer applicable since the ut framework resets the state for each unit test . pr # <number> - rename <code> as <code> given change in <url> pr # <number> - adds checks that ensure <code> works with all payload data types . pr # <number> - adds header padding to <number> - bit so that <code> will work for message structures with elements up to <number> bit - for primary - only header config : telemetry header required to <number> bit boundary ( affects all receivers ) - for primary and extended header config : command header required padding to <number> bit boundary ( affects all senders ) pr # <number> - refactor <code> to only have one return point and eliminates "" possible uninitialized variable "" static analysis warning pr # <number> - none of these changes are expected to cause problematic . - addresses message delivery issues due to inconsistent locking by reworking cfe - <allcaps> sb api </allcaps> implementation . ensures all events are generated and counters are incremented consistently by avoiding early returns in functions and using the <code> register to record what event id should be sent per the current operation . - employs the <code> type and related patterns for managing the sb pipe ids . in particular this ( intentionally ) makes it not possible - will break code which directly accessed these items without going through the lookup function . - <section> , increased in size from <number> to <number> bits , and is now consistent with all other id types in both behavior and size . - <section> . this structure contained a <code> value , hence why it had to be updated because the type is now bigger . the spare bytes are also moved to the end of the struct . pr # <number> - removes <code> checks of stub calls in unit tests and checks for specific format string in history instead to confirm the right path was taken . pr # <number> - removes <code> from platform config . pr # <number> - removes the rest of the references and uses of <code> in favor of <code> pr # <number> - remove uses of strncpy and other minor hardcoded references - cleanup unit tests to reflect size changes in <code> and <code> . - moved es pipe name and lengths to defines - removed pipename and pipedepth variables from app global - removed unnecessary ( char <wink> casts - simplified <code> to <code> where observed - enables projects that have oss with different limits to maintain a standard cmd / tlm and have unit tests pass . pr # <number> - make <code> stub unit test more informative by adding <code> output <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user> <user>"
"fix # <number> , remove os_printf stub count checks in ut <section> fix # <number> - removes checking of os_printf # of stub calls in unit tests ( mostly es , <number> in <allcaps> evs </allcaps> ) . checks for specific format string in history instead ( added <number> checks where they were missing ) to confirm the right path was taken . <section> built and ran unit tests , passed <section> none , reduces technical debt ( no need to fix sub counts all over when implementation changes ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , handle debug events in unit test <section> fix # <number> - updates asserts to handle debug events if enabled via cfe_platform_evs_default_type_flag in platform config . <section> built and ran unit tests with default ( 0 xe ) and debug enabled ( 0 xf ) , passed <section> none except tests pass w / debug events enabled <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , finish cfe_platform_es_perf_max_ids removal <section> fix # <number> - removes the rest of the references / uses of <code> ( in favor of <code> ) <section> build and run unit tests , passed <section> none , just avoids issues that could happen if the platform / mission defines diverged <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> # <number> is open for consideration , but future work <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , separate pipeinfo file data structure <section> provide a separate / dedicated structure for use in the "" pipe info "" file as written by the <code> command , instead of using the <code> which is supposed to be internal / private . data is extracted from the internal <code> while shared data locked and staged into this new format , then the shared data is unlocked while the other information is gathered and finally written to the file . fixes # <number> fixes # <number> <section> build <allcaps> cfe </allcaps> and sanity check , run all unit tests run the <code> and confirm that the file is generated . <section> this changes the binary format of the generated pipe info file . however after this is merged the format of the fine should be more stable going forward , as internal changes to the <code> will no longer affect it . <section> ubuntu <number> <section> this still needs a rebase as it depends on # <number> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update highest msgid documentation / verification <section> fix # <number> - updates the documentation and verification for cfe_platform_sb_highest_valid_msgid <section> built and ran unit tests , passed . <section> none other than allows the full range of values . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> relates to hash message map implementation ( and search if ever added ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove senderreporting from sb global <section> fix # <number> - removes unused senderreporting and cfe_platform_sb_default_report_sender <section> build and run unit tests <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> replaces # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> and # <number> , strncpy cleanup and ut updates for mission sizing of api_len and path_len <section> fix # <number> - this cleans up the use of strncpy ( and other minor hardcoded references ) which solves most of # <number> fix # <number> - remainder of cleanup in unit tests now that <code> and <code> can be bigger than <code> and <code> other minor mods - moved es pipe name , lengths to defines ( someday these could be cfg items , but just matched pattern of other services for now ) - removed pipename and pipedepth variables from app global where they did not add anything ( just sent and passed ) - removed many unnecessary ( char <wink> casts - simplified & stingname [ <number> ] to stringname where observed <section> built and ran unit tests with sample config ( where values are equal ) , and with cfe_mission * + = <number> , passed <section> none , just easier maintenance and allows for use case of mission with multiple os ' s w / different limits to have standard cmd / tlm and the unit tests will still pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , software bus locking <section> the root cause of the mysterious message delivery issues was tracked down to inconsistent locking . when running on multi core systems a variety of buffer corruption issues were observed . this fix is really a rework of all <allcaps> cfe sb api </allcaps> implementations toward the goal of more consistent locking patterns to solve this issue . because sb apis make heavy use of event ids , this presents a challenge because events can only be sent while unlocked . in order to ensure that all events are generated and all counters are incremented consistently , the functions should run through to the end and not return early , and use a "" pendingeventid "" register to record what event id should be sent per the current operation , rather than simply sending the event at the time the condition is identified . the general pattern becomes : <number> . initial checks without lock <number> . lock sb <number> . perform query / modification of sb pipe / routing tables as needed while locked <number> . unlock sb <number> . call into other subsystems as needed ( e . g . <allcaps> osal </allcaps> ) <number> . ( optional ) re - lock sb global to update based on the result of ( <number> ) , and unlock again <number> . send pending event id . this also employs the <code> type and related patterns for managing the sb pipe ids . in particular this ( intentionally ) makes it not possible to use this directly an array index , and will break code which directly accessed these items without going through the lookup function . fixes # <number> fixes # <number> fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests also let <allcaps> cfe </allcaps> run for approx <number> hours , and observed no more "" invalid msgid "" or memory pool errors . <section> - __the <code> type is no longer usable as a direct array index__ . it is also increased in size from <number> bits to <number> bits . but as a result is now consistent with all other id types in both behavior and size . as long as the typedef is used and pipeids are used only as intended , , this should not be noticeable to apps . - __the "" pipe stats "" structure in the pipe <allcaps> tlm </allcaps> is also changed__ . this structure contained a <code> value , hence why it had to be updated because the type is now bigger . the spare bytes are also moved to the end of the struct . neither of these are expected to be particularly problematic - just stuff to be aware of . <section> ubuntu <number> <section> not sure if the change to <code> size ( and the <allcaps> tlm </allcaps> message that contains this type ) might require an update to cfs - groundsystem . <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> - fix # <number> - eliminates identified double locks ."
"fix # <number> , ut event check bounds <section> fixes <code> helper routine to read the correct number of ids . divide the "" position "" ( in bytes ) by the size of the event ids to get the number of events . also correct bad event checks in <allcaps> tbl ut </allcaps> . fixes # <number> <section> build and run all unit tests <section> ut_checkeventhistoryfromfunc ( ) works properly now . <section> ubuntu <number> <section> only unit test is affected , no <allcaps> fsw </allcaps> <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , replace os_fsblocksfree fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods fix # <number> , remove cfe_sb_timeout_t typedef fix # <number> , remove unused network_includes . h fix # <number> , correct deprecation directive typo <section> see < <url> <section> pr # <number> - replace <code> with <code> which will be deprecated . this call reports the number of total blocks , not just the free blocks , making the check more accurate and removing the need for a workaround for desktop machines . pr # <number> - instead of accessing <code> values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence and abstraction from the specific <code> definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . pr # <number> - removes the spurious <code> typedef from <code> . may affect any apps that inappropriately rely on the private typedef . pr # <number> - removes unused <code> . not used by the framework anywhere , apps should use <allcaps> osal </allcaps> socket apis instead . pr # <number> - fixes deprecation directive typos <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , update cpuname targets . cmake documentation <section> fix # <number> - update cpuname / mission_cpunames documentation <section> none , comment update only <section> none <section> n / a <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove ut_checkforopensockets references <section> fix # <number> - removes all references to ut_checkforopensockets . no longer applicable since the ut framework resets the state for each unit test . <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> see also nasa / osal # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove duplicate cfe_mission_rev define <section> fix # <number> - removed cfe_mission_rev from platform config . intent of this rev is to track mission cfe <allcaps> fsw </allcaps> mods / customization / code changes not as a more generic "" <allcaps> mission </allcaps> "" revision number . <section> nominal build and run of unit tests <section> none , although if cfe_mission_rev was being utilized somewhere and included from cpu1_platform_cfg . h this will break . arguably this was broken before removal also since it was a duplicate define . <repeated> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , correct deprecation directive typo <section> fix # <number> - fixed <number> deprecation directive typos <section> standard build and unit test <section> deprecation of cfe_sb_rcvmsg works correctly ( will not show up if cfe_omit_deprecated_6_8 is defined ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
version string not reported correctly <section> <code> note missing <code> for psp <section> add <code> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , pad msg headers to <number> bit <section> fix # <number> - pads headers to <number> - bit so that cfe_sb_getuserdata will work for message structures with elements up to <number> bit <section> added # <number> ( to catch errors from cfe_sb_getuserdata ) , built unit tests for both primary only and primary + extended headers , passed . <section> for primary only config - telemetry header required to <number> bit boundary ( affects all receivers ) for primary + extended config - command header required padding to <number> bit boundary ( affects all senders ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + # <number> ( only required for testing ) + this commit <section> will require updates in cfs - groundsystem , both cmdutil , and cmd / tlm from the <allcaps> gui </allcaps> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add os_printf to cfe_es_syslog_append <section> fix # <number> - added os_printf to cfe_es_syslog_append so it behaves the same as cfe_es_writetosyslog <section> built unit tests and confirmed cfe_es_syslog_append calls os_printf ( observed outputs ) <section> cfe_es_syslog_append will os_print the message <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / osal # <number> was submitted to see the os_print in debug of unit tests <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor cfe_time_registersynchcallback <section> fix # <number> - one return point - eliminates "" possible uninitialized variable "" static analysis warning <section> standard build , unit test <section> none except eliminates static analysis warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> partially just a conversation starter - do we want to avoid ( invalid ) warnings w / similar refactors ? alternatively we could just ignore / repress the warnings . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , patch <allcaps> psp </allcaps> include directory reference <section> the <allcaps> psp </allcaps> header files are located in fsw / shared / inc , not fsw / shared . this corrects the reference . fixes # <number> <section> modify local config to use "" eeprom_stub "" <allcaps> psp </allcaps> module to implement eeprom functions , which reproduces the build failure - i confirmed the error with respect to <code> with this patch applied , the build succeeds again . <section> none <section> ubuntu <number> <section> this pr is based on bootes rc2 as the bug exists there , recommend to patch it in prior to final release . should also merge this forward to <code> as the bug exists there too and this is the easiest short term fix . longer term fix should be # <number> to prevent this type of issue from recurring . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove unused network_includes . h <section> fix # <number> - removes network_includes . h ( not used anywhere , and apps should use <allcaps> osal </allcaps> apis ) <section> built with file removed ( no dependencies ) <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , resolve osal guide generation warnings fix # <number> , corrects documentation for cfe_sb_getpipename ( ) stub fix # <number> , add cppcheck github actions workflow <section> github actions run < <url> <section> pr # <number> - resolved doxygen warnings osalguide and updated header file references pr # <number> - corrects the documentation for the <code> unit test stub function . pr # <number> - adds a new github actions workflow file to run cppcheck <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , re - add cppcheck automated testing <section> fix # <number> adds a new github actions workflow file to run cppcheck <section> see action runs in fork : < <url> <section> static analysis workflow runs on pull requests and push . workflow saves log file as an artifact for analysis . <section> n / a <section> n / a <section> none"
"fix # <number> - remove cfe_sb_timeout_t typedef closes # <number> <section> removes the spurious cfe_sb_timeout_t typedef from cfe_sb . h <section> sb unit test <section> none , may affect any apps that rely on the typedef ( which they probably have not done , given that no public <allcaps> api </allcaps> ' s use it . ) <section> <email>"
fix # <number> - cfe_sb_receivebuffer stub returns timeout or empty if buffer closes # <number> this changes the return value returned by the <code> stub when there has not been a buffer defined . <section> tested with sb and <allcaps> sbn </allcaps> unit tests . <section> <email>
"fix # <number> , use <allcaps> osal </allcaps> time conversion / access methods <section> instead of accessing <code> values directly , use the <allcaps> osal </allcaps> - provided conversion and access methods . this provides independence / abstraction from the specific ` os_time_t definition and allows <allcaps> osal </allcaps> to transition to a <number> bit value . fixes # <number> <section> build and run unit tests , sanity check <allcaps> cfe </allcaps> <section> none ( but see notes ) <section> ubuntu <number> ( native ) <allcaps> rtems </allcaps> <number> + pc686 ( qemu ) <section> by using the <allcaps> osal </allcaps> implementation of subsecond / microsecond conversion , this will correct some minor inaccuracies in the <allcaps> cfe time </allcaps> conversions that were never noticed before . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , resolve osal guide generation warnings <section> fix # <number> - resolved warnings and updated header file references <section> built guide ( including pdf ) and spot - checked resulting document , no warnings generated . <section> github user guide generation action ( in nasa / cfs ) should now pass <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> dependant on nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
"fix # <number> , replace os_fsblocksfree <section> use <code> instead of <code> which will be deprecated in the future . this also enables the check to be more appropriate as this call reports the number of total blocks , not just the free blocks , so no workaround for desktop machines is needed . fixes # <number> <section> build and run all unit tests sanity check <allcaps> cfe </allcaps> <section> no impact to behavior . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> no longer needs a workaround for running on desktop system , since the new <allcaps> api </allcaps> also returns the total blocks , not just free blocks . <section> joseph hickey , vantage systems , inc ."
"cfe integration candidate : <number> - <number> - <number> <section> combines ic <number> - <number> - <number> and <number> - <number> - <number> fix # <number> , remove use of osapi - os - loader . h fix # <number> , atomic type for systemstate fix # <number> , <allcaps> osal </allcaps> module flags to permit app reload fix # <number> , change test_msg to ut_displaypkt <section> see < <url> <section> pr # <number> - remove use of <code> from <allcaps> es ut </allcaps> . pr # <number> - use volatile <code> for system state to avoid race issue if uint32 is not atomic on a system pr # <number> - set the flags parameter on the os_moduleload ( ) properly to allow an app to be properly unloaded , which in turn allows the reload command to work as expected . fixes problem where unload comand resulted in continuous restarting of the same app code . pr # <number> - replaced <code> with <code> . also removed unused <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
fix # <number> change test_msg to ut_displaypkt <section> fixes # <number> removed test_msg_printmsg and and replaced it with ut_displaypkt . also removed test_msg_sum since it was not being used . <section> build and run unit test . <section> none <section> ubuntu <number> <section> alex campbell <allcaps> gsfc </allcaps>
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , add toolchain file for <allcaps> rtems </allcaps> <number> / pc - rtems fix # <number> , refactor message header alignment and "" raw "" types to fit a clear pattern fix # <number> , use void * for pool buffer pointers <section> see < <url> <section> pr # <number> - adds <code> , <code> , <code> - main change is to utilize <code> and <code> in a consistent manner to facilitate alignment - deprecates multiple <code> items - redefines <code> as <code> to minimize duplicated work and facilitate transition to <code> pr # <number> - use a generic void * as the interface type for the pool buffer pointers . this reduces the need for local type casting in the apps and makes it generally easier to use . pr # <number> - remove reference to <allcaps> cexp </allcaps> in <allcaps> rtems </allcaps> <number> i686 toolchain . add an <allcaps> rtems </allcaps> <number> i686 toolchain file . <section> ubuntu <number> <section> see < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , remove use of osapi - os - loader . h <section> remove use of <code> from <allcaps> es ut </allcaps> . this is the only reference to <allcaps> osal </allcaps> header other than the standard <code> and <code> ( which are staying ) . fixes # <number> <section> build and run unit tests . <section> none . this header was redundant since it was already including <code> which has everything . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"remove references to os_taskregister ( non - op ) <section> see nasa / osal # <number> , currently just a non - op for backwards compatibility . <section> remove <section> none <section> nasa / osal # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"create housekeeping command structure typedefs ( consistency , futureproof ) <section> cfe_xx_housekeepingcmd_t does not typically exist , just uses cfe_msg_commandheader_t . more consistent to have a typedef ( less future changes if unique elements needed ) . <section> add housekeeping command typedefs for the services . <section> none . <section> <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> from discussion on # <number>"
"fix # <number> , <allcaps> osal </allcaps> module flags to permit app reload <section> set the flags parameter on the <code> properly to allow an app to be properly unloaded , which in turn allows the reload command to work as expected . fixes # <number> <section> build and run all unit tests test <allcaps> cfe </allcaps> app reload procedure : - run <allcaps> cfe </allcaps> as normal , confirm unmodified sample_app is loaded and running - build a modified sample_app that has an additional <code> call during startup , and install as <code> - issue "" reload "" command ( <number> ) via cmdutil , to reload sample_app from <code> - confirm that the expected printf message is visible ( confirms that the new file was actually loaded ) <section> module unload / reload works as expected on linux . previously the unload would not actually unload , so it would end up restarting the same app code over again . <section> ubuntu <number> <section> needs sync delete fix in <allcaps> osal </allcaps> ( see nasa / osal # <number> ) to avoid task delete race condition . without this <allcaps> osal </allcaps> change , the task may still be running at the time <allcaps> cfe es </allcaps> unloads it , which will likely cause a segfault / crash if that happens . <section> joseph hickey , vantage systems , inc ."
"fix <number> , atomic type for systemstate <section> fix # <number> - use volatile sig_atomic_t for system state avoids race issue if uint32 is not atomic on a system ( microcontroller ? ) <section> built and ran unit tests , passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add toolchain file for <allcaps> rtems </allcaps> <number> / pc - rtems <section> fix # <number> this change makes a minor comment change to the rtems <number> i686 toolchain file to remove a reference to <allcaps> cexp </allcaps> . the change also adds an <allcaps> rtems </allcaps> <number> i686 toolchain file . <section> after building the <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> tools and bsps for the i686 , i was able to build the cfs bundle using : make <allcaps> simulation </allcaps> = i686 - rtems - <number> prep make install and make <allcaps> simulation </allcaps> = i686 - rtems - <number> prep make install and i was able to run the bundle on x86 <allcaps> qemu </allcaps> according to the instructions in the <allcaps> psp readme </allcaps> . txt file : <url> note , that <allcaps> psp </allcaps> ticket <number> and pr <number> have updates to the <allcaps> readme </allcaps> . txt files . also , this depends on a pr for <allcaps> osal </allcaps> ( <allcaps> tbd </allcaps> ) for issue <number> ) <section> - or no impact to behavior <section> - hardware : <allcaps> qemu </allcaps> x86 - os : <allcaps> rtems </allcaps> - versions : <allcaps> rtems </allcaps> <number> and <allcaps> rtems </allcaps> <number> <section> requires a fix for <allcaps> osal </allcaps> , which is described in <allcaps> osal </allcaps> ticket <number> . pr will be submitted . but the comment change does not affect current <allcaps> rtems </allcaps> <number> build . <section> n / a <section> alan cudmore <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code <number>"
fix merge conflicts in pr # <number> <section> took # <number> and rebased on top of integration - candidate and attempted to solve merge conflicts <section> built on docker container . unit tests pass . see <url> for more tests
"cfe integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis fix # <number> , bogus warning in strncpy fix # <number> , default stack size fix # <number> , remove <allcaps> osal id </allcaps> from app / libinfo struct fix # <number> , correct stub appid parameter fix # <number> , more consistent use of datatypes <section> see events for "" github actions test "" at < <url> <section> pr # <number> - backward compatible <allcaps> api </allcaps> change . replace many uses of generic uint16 and uint32 with a more purpose - specific type . replace all sizes with size_t across the <allcaps> api </allcaps> . pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing pr # <number> and # <number> - deprecates many sb elements and replaces them with the new <allcaps> msg </allcaps> module . see <url> for list . pr # <number> - app and lib info telemetry structures no longer contain the <code> value from <allcaps> osal </allcaps> . pr # <number> - add an extra write of a null char after <code> which squelches a warning and appease compiler warning logic . pr # <number> - uses <code> as a default instead of a minimum . affects the start app command ; if stack size is specified as zero , then the default stack size value from platform config is used . otherwise the value in the command will be passed through and used as - is . pr # <number> - changes the type of the appid parameter on "" cleanup "" routines from <code> to <code> . <section> ubuntu <number> <section> part of < <url> <section> none <section> <user> <user> <user>"
"fix # <number> , pool buffer type <section> use a generic <code> as the interface type for the pool buffer pointers . this reduces the need for local type casting in the apps and makes it generally easier to use . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior . <section> ubuntu <number> <section> note that getting a buffer in one step still requires a type cast , as the interface here is really <code> . however when putting or querying a buffer no cast is needed . one can also avoid the need to cast if they get a buffer in two steps ( i . e . get as <code> first , then convert to real type with a simple assignment . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , correct stub appid parameter <section> the type of the appid parameter on cleanup routines should be <code> , not <code> fixes # <number> <section> build and run <allcaps> cfe </allcaps> run all unit tests <section> none . <section> ubuntu <number> <section> these two are typedef equivalent in the main branch , so no change , but needed for consistency . this was missed originally due to pr # <number> not being there yet . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , default stack size <section> do not enforce <code> as a minimum , it should be a default . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> . run all unit tests . <section> this affects the start app command . if stack size is specified as zero , then the default stack size value from platform config is used . otherwise the value in the command will be passed through and used as - is . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> no specific value is enforced at the es level . many <allcaps> rtos </allcaps> ' s will implement any stack size requested - so no need for es to get in the way and put arbitrary restrictions . furthermore the value is documented as a default , not a minimum . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , bogus warning in strncpy <section> add an extra write of a null char which squelches a warning . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> with <allcaps> buildtype </allcaps> = release on focal <section> none - just avoid extraneous warning <section> ubuntu <number> <section> buffer was already zero ' ed out via previous memset , so this extra zero really has no effect except ( possibly ) using an extra <allcaps> cpu </allcaps> cycle . this just appeases some over - zealous compiler warning logic . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove <allcaps> osal id </allcaps> from app / libinfo struct <section> removes the module id from the app / lib info telemetry structures . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> app and lib info telemetry structures no longer contain the "" moduleid "" value from <allcaps> osal </allcaps> . <section> ubuntu <number> <section> <allcaps> cfe </allcaps> code should be distinct about the types used in messages vs . the types used at runtime . they may need to be different depending on mission architecture ( i . e . mixing <number> and <number> bits , different local platform - specific sizes of things , etc ) . all message definitions should be in the proper app - specific message typedef files and must have mission scope , not platform scope . the "" osal_id_t "" type is not defined in any of the <allcaps> cfe </allcaps> message / interface header files for use within telemetry , but this was included in the appinfo and libinfo telemetry structures . this id is an ephemeral runtime value and is not relevant to a ground system or anything outside <allcaps> cfe </allcaps> , so it makes most sense to simply remove this id from the telemetry structure . note that all commands are name - based , not id - based , hence why this id is not really useful . the alternative would be to use cfe_es_resourceid_t type instead . this is the same underlying value but defined in es rather than <allcaps> osal </allcaps> , in the typedefs file with all other message types . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_registercdsex stub update <section> fix # <number> - update cfe_es_registercdsex stub to match current signature <section> built and ran unit tests , all pass <section> none , except stub match . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , simplified cfe_evs_sendevent macros fix # <number> , update cfe_mission_time_def_leaps to <number> seconds fix # <number> , cfe_msg_init clear option removed fix # <number> , add flags parameter to module load fix # <number> , cfe_es_registercdsex stub update fix # <number> , include cfe_private . h in stubs <section> bundle ci on astrogeco : <url> <section> pr # <number> - adds macros for more compact calls to cfe_evs_sendevent , making the type be part of the function name . pr # <number> - the sample configs leap seconds default value is now up to date . ( as of <date> ) pr # <number> - removed the clear = false logic ( and clear parameter ) <code> now always zeroes entire message and sets defaults . pr # <number> - adds flags parameter to calls to <code> . initially just pass <number> ( <allcaps> global </allcaps> ) to maintain old behavior . pr # <number> - updates <code> stub to match current signature pr # <number> - includes <code> for stubs that implement related elements . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of <url> <section> if included , identify any third party code and provide text file of license <section> <user> <user> <user> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on <url> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe_es commands that do not increment the error counter when an error occurs while testing bootes on vxworks , i issued the following commands that generated an error event but did not increment the <allcaps> es cmdec </allcaps> counter : scx_cpu1_es_writeerlog2file and scx_cpu1_es_stopperf . <section> steps to reproduce the behavior : <number> . issue the command scx_cpu1_es_writeerlog2file <allcaps> erlogfilename </allcaps> = "" nopathname . log "" <number> . error event id = <number> is generated but the es . <allcaps> cmdpc </allcaps> is not incremented <number> . issue the scx_cpu1_es_stopperf <allcaps> datafilename </allcaps> = "" nopathname "" <number> . debug <allcaps> eid </allcaps> = <number> is generated which makes me think the command was accepted as valid . <number> . also , error event id = <number> is generated but again the <allcaps> cmdec </allcaps> did not increment , <section> cfe <number> . <number> testing incremented the <allcaps> cmdec </allcaps> for these <number> cases . <section> - mcp750 running vxworks <number> . cfe version <number> . <number> <allcaps> osal </allcaps> <number> . <number> walt moleski / <allcaps> gsfc </allcaps> <number> scx_cpu1_es_logging - <number> - <number> - 1 2 h27m15s . log <url>"
"fix # <number> , more consistent use of data types <section> define and use data types more consistently across <allcaps> cfe </allcaps> . replace many uses of generic uint16 / uint32 with a more purpose - specific typedef . replace all sizes with <code> across the <allcaps> api </allcaps> . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> <section> none , but does affect <allcaps> api </allcaps> . the <allcaps> api </allcaps> changes should be largely backward compatible , however . <section> ubuntu <number> , <number> - bit <section> joseph hickey , vantage systems , inc . <allcaps> edit </allcaps> : also fixed # <number>"
"fix # <number> , add flags parameter to module load <section> add flags parameter to calls to os_moduleload ( ) . initially just pass <number> ( <allcaps> global </allcaps> ) to maintain old behavior . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests . <section> none - the <allcaps> global </allcaps> ( <number> ) flag should maintain exact same behavior . <section> ubuntu <number> <section> dependency on nasa / osal # <number> - needs to be merged simultaneously <section> joseph hickey , vantage systems , inc ."
"fix # <number> deprecate sb <section> fix # <number> - see issue for deprecated elements <section> built and ran , enabled telemetry , checked noops . unit tests built and passed . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"cfe_time_add_1hz_adjustment_cc and cfe_time_sub_1hz_adjustment_cc commands are not performing as expected <section> add delta to spacecraft time correlation factor each 1 hz and subtract delta from spacecraft time correlation factor commands are modifying <allcaps> stfc </allcaps> seconds as not as required . <url> <url> <allcaps> time </allcaps> : delta adjust <allcaps> stcf </allcaps> upon receipt of a command to make a ' continuous ' adjustment to the <allcaps> stcf </allcaps> , the cfe shall adjust the <allcaps> stcf </allcaps> each second by the command - specified value . the commanded value is signed so a positive or negative adjustment may be made . as example i have attached the print screen with the test <hashtag> 1308 09 </hashtag> results . example <img> //* <allcaps> stcf </allcaps> seconds = = <number> given values for the cfe_time_add_1hz_adjustment_cc and cfe_time_sub_1hz_adjustment_cc commands are : seconds = = <number> sub - seconds = = <phone> <section> anhelina yurkova arctic slope technical services , inc . <allcaps> nasa </allcaps> goddard space flight center"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , reorganize es public <allcaps> api </allcaps> + msg definitions fix # <number> , update padding in <allcaps> cds </allcaps> registry record fix # <number> , rename <allcaps> max cds </allcaps> name macro to full_name_len fix # <number> , short background task name fix # <number> , strncpy warning fix # <number> , add casts on printf calls <section> see framework - bundle pr : <url> <section> pr # <number> - keeps task names under <number> chars to make more debugger friendly , regardless of the <allcaps> osal </allcaps> limit . task name shows up as <code> pr # <number> - move es typedefs shared across <allcaps> api </allcaps> and telemetry messages into the <code> . - move all es typedefs that define the telemetry interface and structures that define the output of commands that write data files into this group ( query all apps , query all tasks , query all <allcaps> cds </allcaps> ) . - remove some localized definitions and replace with <allcaps> mission </allcaps> scope definitions where appropriate / necessary . pr # <number> - adjust <code> call to avoid compiler warning pr # <number> - cast fixed width types to the type used in the <code> call . removes <code> type warnings on the <number> - bit <allcaps> rtems </allcaps> build . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , add casts on printf calls <section> cast fixed width types to the type used in the printf call . fixes # <number> <section> build and sanity test on <allcaps> rtems </allcaps> target <section> no warnings related to printf <section> ubuntu <number> host for i686 - rtems4 . <number> target <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build tables for static apps <section> fixup the table build targets so it will be invoked for both static and dynamic apps . improve the prep log messages to indicate the targets that tables will be built for for both static and dynamic apps . fixes # <number> <section> locally changed "" sample_app "" to be a static app instead of dynamic app . confirmed table file is now correctly built and app runs normally and is able to load the table file . <section> table works correctly as static app . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
fix # <number> updated the cfe_mission_time_def_leaps to <number> seconds <section> fixes # <number> by updating the sample config to <number> <section> built the sample config then with the ground tools sent cfe_time_send_diagnostic_tlm_cc and verified attoneleapseconds was <number> <section> the sample configs leap seconds will be up to date . ( as of <date> ) <section> ubuntu <number> . <number> <section> alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , cfe_msg_init clear option removed <section> fix # <number> - removed the clear = false logic ( and clear parameter ) <section> built and ran test cases with no extended header , extended header with msgid v1 , and extended header with msgid v2 . all passed <section> always zeroes entire message and sets defaults . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , short background task name <section> keep names under <number> chars to make more debugger friendly , regardless of the <allcaps> osal </allcaps> limit . fixes # <number> <section> run <allcaps> cfe </allcaps> in debugger <section> confirm task name shows up as "" es_bg_task "" no other impact to behavior <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> see bundle ci : <url> <section> - pr # <number> - provide library <allcaps> api </allcaps> similar to app <allcaps> api </allcaps> - allows the existing cfe_es_appinfo_t structure to be extended to libraries as well as applications by introducing a new value ( <number> ) for the type field . - allows libraries to be queried via <allcaps> api </allcaps> calls similar to app <allcaps> api </allcaps> . - extends the query all / query one commands to operate on libraries or applications . - breaks up the monolithic appcreate and loadlibrary functions and have these call subroutines that operate on the common components . - fix race conditions in app request processing state machine . - pr # <number> - adds <allcaps> sbr </allcaps> module which includes message map and routing table . the access apis are on the sb side which still owns the destination logic - removes passing of route index or pointers being . everything is now based on route and message id - oversized the hash message map ( 4 x) to minimize collisions - added debug event for collisions during add - dropped routing push / pop , dropped "" key "" in direct implementation - hash designed for <number> bit , a change in cfe_sb_msgid_atom_t size may require implementation updates - deletes unused code cfe_sb_findglobalmsgidcnt - fixes variable declaration violations of coding standard - individual events for deleting destinations when deleting a pipe removed to avoid a race condition - around a <number> - <percent> performance hit to hash via rough comparison on a linux box , no memory impact <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> part of < <url> <section> none <section> <user> <user>"
"fix # <number> , strncpy warning <section> adjust <code> call to avoid warning fixes # <number> <section> build with <code> , confirm warning is fixed . re - run unit tests ( no changes ) . <section> none <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update padding in <allcaps> cds </allcaps> registry struct <section> makes the <number> bytes of padding here explicit rather than implicit . <section> build and sanity check <allcaps> cfe </allcaps> issued cfe_es_dump_cds_registry_cc command and ensure it is working as expected <section> none <section> ubuntu <number> <section> depends on the previous change for # <number> ( pr # <number> ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , update startup script names <section> startup script reflects names fixed in sample_app and sample_lib . fixes # <number> . <section> boot <allcaps> cfe </allcaps> and verify startup works correctly with new names . <section> n / a . <section> ubuntu <number> <section> need this at the same time as nasa / sample_app # <number> and nasa / sample_lib # <number> . must be merged in same cycle as the those two . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , reorganize es public <allcaps> api </allcaps> + msg definitions <section> put all es typedefs which are shared across <allcaps> api </allcaps> and telemetry messages into the <code> file . put all es typedefs which define the telemetry interface into the <code> file . also include structures which define the output of commands that write data files into this group ( query all apps , query all tasks , query all <allcaps> cds </allcaps> ) . removes some localized definitions and replace with <allcaps> mission </allcaps> scope definitions where appropriate / necessary . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior ( should not change any binary formats ) <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"add stubs for software bus routing module apis and update sb unit tests <section> stubs not implemented yet , directly linking module to sb for first stage of testing . <section> add stubs , update sb to use them <section> none . <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , provide library <allcaps> api </allcaps> <section> fixes # <number> provide library <allcaps> api </allcaps> similar to app <allcaps> api </allcaps> allows the existing <code> structure to be extended to libraries as well as applications by introducing a new value ( <number> ) for the type field . allows libraries to be queried via <allcaps> api </allcaps> calls similar to app <allcaps> api </allcaps> . also extends the query all / query one commands to operate on libraries or applications . fixes # <number> break up the monolithic appcreate and loadlibrary functions and have these call subroutines that operate on the common components . fixes # <number> fix race conditions in app request processing state machine . <section> build and sanity check operation of <allcaps> cfe </allcaps> confirm able to restart / reload sample_app via command as expected run all unit tests <section> adds library <allcaps> api </allcaps> . query commands that previously worked only on apps can now be used on apps or libs <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci : <url> <section> pr # <number> <section> ubuntu <section> part of < <url> <section> none <section> <user>
add in incremental read routine and unit test . ref <hashtag> nasa </hashtag> / cfe / issues / <number> see issue <url> this is an implementation with unit - test code added .
"fix # <number> and # <number> - modularize software bus routing , add msg map hash <section> fix # <number> - refactor sb and move routing to a module fix # <number> - adds message map hash implementation partial # <number> - fixed double lock potential key concepts : - added <allcaps> sbr </allcaps> module - message map and routing table are in <allcaps> sbr </allcaps> , access apis on sb side - sb still owns destination logic - no more route index or pointers being passed around , all route id and message id based - hash message map "" oversized "" ( 4 x) to minimize collisions ( only ~ <percent> single collisions on the real system with a full routing table ) - added debug event for collisions during add - dropped routing push / pop , dropped "" key "" in direct implementation - around a <number> - <percent> performance hit to hash via rough comparison on a linux box , no memory impact from message id "" space "" , just based on needed routes ( with overhead ) - hash designed for <number> bit , a change in cfe_sb_msgid_atom_t size may require implementation updates remaining work : - unit test stubs ( could split into new pr ) , <number> related todos in code also - deletes unused code cfe_sb_findglobalmsgidcnt - note writes to file not protected by lock ( before or after refactor ) - cfe_sb_sendprevsubs is not really protected by the lock . <repeated> might be worth removing the locks completely ( they do not really solve anything , double lock potential eliminated - could just use the private cfe_sbr_foreachrouteid without a lock instead of messages and reduce all the extra logic - whitespace / alignment is very difficult to work with - excessive comments ( in my opinion ) - violates declare variables at the start of function coding standard , all observed violations fixed <section> - all unit tests pass , rough performance testing , spot checked routing table size impacts on core with nominal ( <number> ) , <number> , and <number> . <number> causes dropped subscriptions / full table and was useful for observing collisions ( ~ <percent> one level seen ) on a realistic set of message ids . everything performed as expected . - passed bundle ci at <url> <section> - individual events for deleting destinations when deleting a pipe removed to avoid a race condition - it ' s resource intensive to try to report message id map in message id order ( either search or brute force ) for any significantly sized map on an unsorted routing table , allowing out of order makes this reasonable again and gets rid of the need for foreachmsgid <allcaps> api </allcaps> . need to trade out of order vs implementing a search . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , # <number> and # <number> , improve resource id management <section> fixes # <number> fixes # <number> fixes # <number> provides a consistent name - id translation <allcaps> api </allcaps> for all resource types . enforces consistent argument / name validation on all resource types , and also enforces name uniqueness where relevant . also includes an enhancement to use the full <number> bits of resource id space , which avoids repeating id values that have already been used . this significantly decreases the likelihood that a previously deleted id will alias a newly allocated / valid id . <section> build and sanity test <allcaps> cfe </allcaps> ensure all unit tests pass <allcaps> also </allcaps> - run a continuous loop of "" restart "" commands , to continually restart the sample_app . confirmed that after each restart , the app is assigned a new id , different than the old id , and never aliases any other valid ids . <section> - complete / consistent <allcaps> api </allcaps> to translate between names and ids , for all resource types which have a name - ids are not re - issued after deletion , helping ensure safety as previously deleted ids will not validate . <section> ubuntu <number> <section> these two fixes are combined into a single pr as they have dependencies ( would be a merge conflict if pulled separately ) <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> <section> see bundle pr - <url> <section> pr # <number> - rather than having a second pool implementation only for <allcaps> cds </allcaps> , use the generic pool implementation . this also uses the abstract resource identifiers to identify <allcaps> cds </allcaps> blocks , rather than a direct reference . pr # <number> - add the system - specific module suffix ( . o , . so , . obj , etc ) and the default <allcaps> cfe </allcaps> core executable name to the configdata structure . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , add module suffix and core name to configdata <section> add the system - specific module suffix ( . o , . so , . obj , etc ) and the default <allcaps> cfe </allcaps> core executable name to the configdata structure . this information has several useful purposes . fixes # <number> , but related to previous issues # <number> and nasa / psp # <number> <section> build and sanity check <allcaps> cfe </allcaps> on native / pc - linux , <allcaps> rtems </allcaps> <number> , and vxworks <number> confirm using inspection of command line that the correct data is used for the new fields . on linux : - dcfe_default_core_filename <annoyed> "" core - cpu1 \ "" - dcfe_default_module_extension <annoyed> "" . so \ "" on <allcaps> rtems </allcaps> : - dcfe_default_core_filename <annoyed> "" core - cpu1 . exe \ "" - dcfe_default_module_extension <annoyed> "" . obj \ "" on vxworks : - dcfe_default_core_filename <annoyed> "" core - cpu1 . exe \ "" - dcfe_default_module_extension <annoyed> "" . o \ "" nothing uses this data at runtime ( yet ) but i also confirmed with <allcaps> gdb </allcaps> that the "" global_configdata "" indeed has the correct info . <section> none . just making new information available . <section> ubuntu <number> ( native ) , <allcaps> rtems </allcaps> <number> , vxworks <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor <allcaps> cds </allcaps> to use generic pool implementation <section> rather than having a second pool implementation only for <allcaps> cds </allcaps> , use the generic pool implementation . this also uses the abstract resource identifiers to identify <allcaps> cds </allcaps> blocks , rather than a direct reference . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> confirm all unit tests working also tested / confirmed that the <allcaps> cfe tbl </allcaps> critical table registry is correctly restored when booting in a processor reset mode . in this case the data is successfully restored from <allcaps> cds </allcaps> . <section> no impact to behavior . <section> ubuntu <number> <section> this consolidates and simplifies a bunch of code in the <allcaps> cds </allcaps> access area . note that previously there was a separate mutex for the <allcaps> cds </allcaps> pool and <allcaps> cds </allcaps> registry . however almost all accesses needed both , because pool access and registry access go together . so this is simplified to one mutex now . <section> joseph hickey , vantage systems , inc ."
stub for cfe_sb_sendmsg does not always save msgptr argument value <section> if a negative value is set for the return from cfe_sb_sendmsg stub the msgptr argument is not saved to the context . the passed in message cannot be verified for forced negative results . <section> steps to reproduce the behavior : <number> . write a test giving cfe_sb_sendmsg a context and that forces cfe_sb_sendmsg to return a negative value <number> . check that the context contains the expected pointer - <allcaps> fail </allcaps> <number> . change the return value to >= <number> <number> . check that the context contains the expected pointer - <allcaps> pass </allcaps> <section> no matter the forced return value the msgptr should be copied to the context . the check for status >= <number> appears to be leftover from the previous use of : <code> <section> <url> <section> <allcaps> rhel </allcaps> <number> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> see bundle : <url> <section> pr # <number> - adds the field <code> to track whether an "" unregistered "" event was generated , un - overloading the <code> field to serve its primary purpose of counting actual events generated from a valid / registered appid . pr # <number> - move the appid lookup execution to be early in the cfe_sb_sendmsgfull implementation . this avoids double locking between sb + es and avoids a block - scope local variable . pr # <number> - instead of identifying a memory pool by its memory address , use a resource id . ids are a constant size , regardless of whether the host machine is <number> or <number> bits . - ids can be put into commands / telemetry and maintain a more consistent format with consistent alignment requirements . - ids can be independently verified without dereferencing memory . previously the only way to validate a memory pool was to read the address pointed to , which results in a segfault if the address was bad . pr # <number> - change from <code> defines to appropriately - scoped <allcaps> cfe </allcaps> defines for array sizing pr # <number> - this creates the new <code> typedef for function ' s return status codes . also adds a note to <code> since its behavior will likely change in the future in the hopes of not having a non - zero "" info "" status . <section> bundle ci - <url> <section> part of <url> <section> none <section> <user> <user> <user>"
"fix # <number> , update cfe_error . h to use the cfe_status_t type <section> - fix # <number> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
""" senderreporting "" from sb private "" global "" - removed the global variable removed because is only set once and never used ."
"reorder cfe_sb_destinationd_t and cfe_sb_routeentry_t to minimize size <section> both structures get unnecessary implicit padding on a <number> bit system , and route entry has implicit padding on <number> bit now that the message id is always <number> bit . could impact efficiency ( increase cache swapping if a search is performed on the routing table ) , and impacts memory size ( impact scaled by the size of the routing table and number of descriptions ) . likely not a significant impact , but trivial to fix . <section> improve structure layout to minimize padding <section> none . <section> if routing table search is implemented (# <number> ) , this may help a little . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , perform appid lookup early <section> move the appid lookup to be early in the cfe_sb_sendmsgfull implementation . avoids double locking between sb + es and avoids a block - scope local variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run unit tests <section> none . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add send message with status <allcaps> api </allcaps> <section> fix # <number> - add send message with status <allcaps> api </allcaps> <section> built with tests , ran tests , passes <section> added <allcaps> api </allcaps> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> supports cf message flow control <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add typedef for function return status codes closes # <number> <section> this adds a typedef for return status codes for functions . i have also added a brief comment to cfe_tbl_getstatus as it ' s behavior will likely change in the future in the hopes of not having a non - zero "" info "" status . <section> make install <section> no impact to behavior <section> ubuntu <number> <section> <email>"
"add a cfe_sb_sendmsg version that provides send status <section> send status is not available to the sender , which would help senders manage critical messages or flow control ( if not sent , try again next cycle ) . <section> cfe_sb_sendmsggetstatus ( msg , & sendstatus ) where sendstatus could be an enumeration - no subscribers , sent to none , sent to some , sent to all then update sendmsgfull to include the status ( no change needed to the other apis ) <section> overload the return status <section> could be used to support cf flow control <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( one approach that could be taken to resolve a stakeholder request ) <user> <user> <user>"
"fix # <number> , use resource id for memory pools <section> instead of identifying a memory pool by its memory address , use a resource id . ids are a constant size , regardless of whether the host machine is <number> or <number> bits . - ids can be put into commands / telemetry and maintain a more consistent format with consistent alignment requirements . - ids can be independently verified without dereferencing memory . previously the only way to validate a memory pool was to read the address pointed to , which results in a segfault if the address was bad . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> , run all unit tests confirm code coverage up to par . <section> the <code> type is no longer a direct <allcaps> cpu </allcaps> address . instead it is an abstract resource identifier . this should fix issues with unexpected padding of <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> messages that contain memory pool handles . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <section> fairly extensive changes in the memory pool implementation to support abstract handles , but the <allcaps> api </allcaps> exposed to applications should be backward compatible , so long as apps did not rely on the specific pool layout . the downside is that there is a limit to the total number of abstract identifiers that can exist , which is a new platform config limit . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add a new <code> that can replace <code> for all id storage and manipulation . initially this is just an alias to <code> for backward compatibility . <section> ubuntu - ci <section> <url> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes dependency on <allcaps> ccsds </allcaps> version define . pr # <number> - removes old name and id defines . pr # <number> - <code> default stub behavior . pr # <number> - replaces calls to <code> and <code> pr # <number> - replaces <code> with <code> pr # <number> - updates variable checks in <code> <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"use cfe_sb_messagestringset for setting strings with two different sizes <section> anywhere that the name , entrypoint , or filename members are filled in telemetry should use cfe_sb_messagestringset - which is similar to strncpy but takes both a source and dest length . it is intended for this use case where the local / platform and global / mission sizes might be different and this handles padding / termination issues . <section> use cfe_sb_messagestringset whenever sring sizes could be different . <section> use standard patterns to avoid unterminated strings ( force a <allcaps> null </allcaps> ) . <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update variable checks in read_targetconfig <section> cmake script was using a "" <allcaps> defined </allcaps> "" test to check if these variables were set . problem discovered is that this is always true because "" <allcaps> simulation </allcaps> "" is a cache var set from an environment variable , so it <allcaps> always </allcaps> defined , it is just empty if not being used . fix is to use <code> rather than <code> which should only be true if the string is not empty , as intended . also applying this to <code> so if someone does e . g . <code> then it will not try to use that empty string either . fixes # <number> <section> build for vxworks <number> using <allcaps> gsfc </allcaps> build machine build for native using both <allcaps> simulation </allcaps> = native and without <allcaps> simulation </allcaps> ( using toolchain - cpu1 . cmake ) <section> builds without <allcaps> simulation </allcaps> directive work as expected <section> - vxworks <number> using <allcaps> gsfc </allcaps> build machine - native on ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add cfe_sb_getuserdata padding check <section> fix # <number> - this adds checks to see that cfe_sb_getuserdata works with all payload data types . illustrates the issue in # <number> - as expected it fails for <number> bit payload in a telemetry packet because of implicit padding added between the header ( <number> bytes ) and the 6 4 bit payload ( requires 6 4 bit alignment . <repeated> so pads to <number> bytes ) . cmds are only ok because the default header is <number> bytes . also note - i expect these tests would also throw cast - align errors for an alignment sensitive build , since there ' s a cast from a structure with 6 4 bit alignment to 3 2 bit alignment . <section> build and run unit tests . <repeated> currently failing due to implicit padding . <section> none , except shows the current issue with our header definitions . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : main bundle + this commit <section> depends on nasa / osal # <number> ( address equal assert ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe defines to size arrays <section> fixes # <number> , also a similar issue in <allcaps> tbl </allcaps> change from os_max * defines to <allcaps> cfe </allcaps> defines for array sizing <section> built and ran unit tests , passed . visually confirmed sizes matched . <section> no impact as long as the sizes are the same . now scoped appropriately such that os ' s can be configured differently and will not break cfe ( as long as the cfe defines are max of the set ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , <allcaps> evs </allcaps> unregistered appid <section> do not overload the <code> field to track whether an "" unregistered "" event was generated , which by definition comes from a different app than the one that might be actively using this same table entry . this just makes a separate field to track that state , leaving the <code> to serve its primary purpose of counting actual events generated from a valid / registered appid . fixes # <number> <section> temporarily modified / hacked "" sample_app "" to send several events _before_ calling <code> . confirmed that one ( and only one ) "" unregistered "" event is reported e . g . : <allcaps> evs </allcaps> port1 <number> / <number> / cfe_evs <number> : app sample_app not registered with event services . unable to send event . also confirmed that this "" unregistered "" event did not change the valid <code> in the <allcaps> evs </allcaps> telemetry data . <section> no more incrementing a counter for another app . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add resource id type <section> add a new typedef <code> that can replace <code> for all id storage and manipulation . initially this is just an alias to <code> for backward compatibility . convert all apis that accept an id to use the new typedef . this also reserves the value "" <number> "" as an undefined id , and gives a separate base value for each resource type . therefore even though the type is still fundamentally a uint32 , the different resource ids can still be distinguished . fixes # <number> <section> build and run , sanity test <allcaps> cfe </allcaps> , ensure apps and libs are loaded ok spot - check various commands that operate on apps / appids by sending using <code> . confirmed commands that write to data files ( e . g . query_all ) has the correct appids in the file ( e . g . 0x0 2 1 1 0 0 0 0 instead of 0x0 0 0 0 0 0 0 0 for cfe_evs ) . confirmed that commands that operate on app name ( start / stop / restart etc ) still work fine . <section> <section> this should not matter so long as the id is treated as opaque , and only manipulated via the es apis . this matters if an app is using the id as a table / array index . all instances of this usage in <allcaps> cfe </allcaps> itself has already been fixed , and initial review of <allcaps> cfs </allcaps> apps did not show any concerns . otherwise , no change to behavior as long as ids are treated as opaque and only stored / used per <allcaps> api </allcaps> . <section> ubuntu <number> <section> an optional add - on can make the id type into a struct so it triggers a compiler error if / when used as an integer . this can aid in updating apps that might still use <code> . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , replace calls to os_open and os_creat <section> use <code> , which has an <allcaps> api </allcaps> consistent with the rest of <allcaps> osal </allcaps> . <code> and <code> will be deprecated in nasa / osal # <number> . fixes # <number> <section> build <allcaps> cfe </allcaps> and run unit tests sanity test <allcaps> cfe </allcaps> by sending commands that use files ( e . g . <code> ) using cmdutil and verify functionality is not changed . <section> no impact to behavior . <section> ubuntu <number> <section> note that os_open and os_creat were already just backward compatibility wrappers around <code> that mimicked the historical <allcaps> api </allcaps> . this just bypasses the wrapper . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , cfe_es_calculatecrc default stub behavior <section> fix # <number> - cfe_es_calculatecrc updated to default return behavior . <section> built and ran unit tests , passed . <section> now setting the return code ( and deferred return code ) works for cfe_es_calculatecrc . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit . <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - sets revision to <number> for development build . pr # <number> - installs unit test to target directory . pr # <number> - returns processor id to default to unbreak toolchain pr # <number> - applies the appid / taskid / counterid pattern to library resources . <section> ubuntu - ci <section> <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"strawman for # <number> - return code for cfe closes # <number> - - not like this strawman will close it , but just creating the linkage <section> this is a strawman for return code typedef for cfe . <section> code builds <section> returns for cfe functions now typedef ' d in headers ( . h ) , not in the source ( . c ) . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - deconflict <code> and <code> eids pr # <number> - scrub all <allcaps> cfe </allcaps> references / uses of <allcaps> osal </allcaps> ids to use the proper <code> type . any place that an <allcaps> osal id </allcaps> is stored in memory or passed in an <allcaps> api </allcaps> call are changed to the <code> type , rather than <code> . conversions between this and other types ( e . g . bare integer ) is done using the <allcaps> osal </allcaps> - supplied conversion helpers . pr # <number> - after the changes implemented in # <number> , there may be routing table entries with no subscribers ( routeptr - > listheadptr would be <allcaps> null </allcaps> . ) this could cause a seg - fault . also , even if there are entries in the routing table , there will be no event generated if the unsubscribe does not find a matching route entry . pr # <number> - adds debug message . pr # <number> - applies the appid / taskid pattern to generic counter resources . pr # <number> - adds test for sb subscribe / unusubscribe / unsubscribe . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . chris knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps>"
"fix # <number> , add test for sb subscribe / unusubscribe / unsubscribe <section> this adds a test to cover the issue in # <number> , and verify # <number> fixed it fix # <number> <section> build and ran unit test on main branch , confirmed it produced a seg fault ( as expected per # <number> this should pass once # <number> is checked in . <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , adds name to struct / union / enum typedefs closes # <number> <section> this adds names to <code> , <code> , and <code> types , some tools find this helpful . <section> make install & & make test <section> no behavior change <section> debian <number> <section> <email>"
"fix # <number> , use osal id typedef <section> scrub all <allcaps> cfe </allcaps> references / uses of <allcaps> osal </allcaps> ids to use the proper <code> type . any place that an <allcaps> osal id </allcaps> is stored in memory or passed in an <allcaps> api </allcaps> call are changed to the <code> type , rather than <code> . conversions between this and other types ( e . g . bare integer ) is done using the <allcaps> osal </allcaps> - supplied conversion helpers . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests also specifically spot check various <allcaps> cfe </allcaps> commands that save data to file ( e . g . perf log , query all tasks , etc ) to confirm these files are being properly created - as these previously used the <code> type to store the file handle and necessitated a bigger change . <section> no impact to behavior . since the <code> is initially a typedef to <code> , this should be effectively no change except to future proof . <section> ubuntu <number> <section> depends on nasa / osal # <number> which provides the typedef and conversion helpers ( currently in ic ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , simplified cfe_evs_sendevent macros closes # <number> <section> macros for more compact calls to cfe_evs_sendevent , making the type be part of the fn name . <section> <email>"
"<allcaps> hotfix </allcaps> - <number> , fix sb unit test setup issue <section> fix integration - candidate - there was some convoluted test setup logic which actually caused some of the tests to be skipped and the cleanapp <allcaps> api </allcaps> test wasn ' t proceeded by a test reset so the event count did not match expected . caused a <allcaps> ttf </allcaps> . basically just straightened out the setup ( no actual test changes . ) <section> make , make test - passed <section> tests pass , no <allcaps> ttf </allcaps> . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle ic + this change <section> nasa / cfs # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> - unsub of a message id that is already unsubbed closes # <number> <section> after the changes implemented in # <number> , there may be routing table entries with no subscribers ( routeptr - > listheadptr would be <allcaps> null </allcaps> . ) this could cause a seg - fault . also , even if there are entries in the routing table , there will be no event generated if the unsubscribe does not find a matching route entry . <section> ran unit test ( with updated event count . ) <section> repeated unsubscriptions should function fine , generating an informational event if there is not a current subscription . <section> debian <number> <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - in the next major <allcaps> cfe </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . pr # <number> - the <code> function had an unusual loop control structure with mixed types of signed and unsigned . this has the possibility of being infinite if the <code> is zero due to the way the end condition is structured . simplify to be like other loops and use unsigned int control variable . pr # <number> - fixes the cast - align error ( use the aligned msg since it ' s available already ) . <allcaps> hotfix </allcaps> - <number> - fix sb unit test setup issue . <allcaps> hotfix </allcaps> <number> - update documentation links for deprecated symbols . <allcaps> hotfix </allcaps> <number> - fix sb test_cleanupapp_api appid . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"fix # <number> , spacecraft id sample set to historical value ( 0x 4 2 ) <section> this is a copy of # <number> but targeting <number> ( main development branch via the integration - candidate ) fix # <number> - set spacecraft id in sample targets . cmake to 0x 4 2 <section> nominal build and test <section> spacecraft id back to historical value ( some toolchains depend on it ) . verified at <allcaps> psp </allcaps> startup , reported as <number> ( 0x 4 2 ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( w / cfe / osal main ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor internal table / id management <section> introduce wrapper / accessor functions to look up table entries by id for es & <allcaps> evs </allcaps> subsystems . __do not use appid as a table index__ . note - this does not change existing external apis and appids are still zero - based uint32 . this only changes the internal structures to remove use of id as an array index , and to use a lookup function to locate the table entry from an id . all entry access is then performed via the table entry pointer , rather than as an array index . this provides the groundwork for abstract ids without actually changing anything fundamental about resource ids . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> - start up apps and send commands , confirm normal operation run all unit tests . <section> no impact to behavior - internal refactoring only . <allcaps> api </allcaps> additions to support more abstract resource ids . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , avoid infinite loop in <allcaps> cds </allcaps> registry find <section> the cfe_es_findcdsinregistry function had an unusual loop control structure with mixed types of signed and unsigned . this has the possibility of being infinite if the maxnumregentries is zero due to the way the end condition is structured . simplify to be like other loops and use unsigned int control variable . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior so long as <allcaps> cfe </allcaps> was configured where the number of <allcaps> cds </allcaps> entries is not zero . if configured to be zero , this avoids an infinite loop . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"apply # <number> to bootes , set revision to <number> for development build # # describe the contribution fix # <number> for bootes # # testing performed built and ran locally based on bundle tag for bootes - rc1 built in ci , see <url> # # expected behavior changes revision version number now reports <number> during development versions . es housekeeping data reports <date> in the version string . # # system ( s ) tested on built and ran on docker container . # # additional context approved for main branch in < <url> see also < <url> # # third party code none # # contributor info _all information <allcaps> required </allcaps> for consideration of pull request_ gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , set revision to <number> for development build <section> fix # <number> <section> <section> revision version number now reports <code> during development versions . es housekeeping data reports <code> in the version string . <section> built and ran on docker container . <section> also see nasa . osal # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"hotfix ic - <number> : remove deprecated doxygen references <section> hotfix ic - <number> , removes deprecated doxygen references from osalmain . dox to fix cfs bundle build errors <section> generated doxygen files and ensured there were not errors or warnings <section> cfs dev server os : ubuntu <number> <section> add any other context about the contribution here . <section> yasir majeed khan , emergent space tech"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - removes reference from documentation . pr # <number> - cfe_sb_sendmsg stub now behaves the same as cfe_sb_timestampmsg ( copies message pointer from local ) . no longer need to emulate cfe_sb_initmsg from test code , set the <allcaps> api </allcaps> / stub data buffers directly . pr # <number> - removed iterator modification from within the loop . <repeated> replaced with break . pr # <number> - resolves loop iterator size too small for comparison . pr # <number> - replaced <code> use with <code> and updated unit test <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , spacecraft id hex , add to bootes <section> fix # <number> - set spacecraft id in sample targets . cmake to 0x 4 2 <section> nominal build and test <section> spacecraft id back to historical value ( some toolchains depend on it ) . verified at <allcaps> psp </allcaps> startup , reported as <number> ( 0x 4 2 ) . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( w / cfe / osal main ) + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
unsafe macro in cfe_version . h <section> unsafe macro ( violates coding standard ) <url> <section> add parentheses <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"<allcaps> hotfix </allcaps> - no longer add unit tests from within unit tests in msg ut <section> <allcaps> hotfix </allcaps> - unit tests added from within unit tests will not execute , replaced this pattern with direct calls to the main subtest setup routine . <section> build unit tests and ran , all tests ( including subtests ) ran . <section> all tests run <section> - hardware : cfs dev server - os : ubuntu <number> - versions : integration candidate bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"<allcaps> hotfix </allcaps> : deprecated time format verify logic fix <section> <allcaps> hotfix </allcaps> - changes the time format compile time verification logic . old logic would report error if none of the defines exist , new logic only reports error if the time format is not the default ( also works if neither are defined ) . <section> built with time format set to default , time format defines not defined , and time format set to non - default . responded as expected . <section> no longer reports error if defines are removed ( as is the case in the sample config ) <section> - hardware : cfs dev server - os : ubuntu <number> - versions : integration candidate bundle + this change <section> fix to pr # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> : updated the initial test to include the es info <allcaps> api </allcaps> calls and renamed … … the source file to es_info_test . c . <section> added additional <allcaps> es api </allcaps> tests using ut_assert and printing info structures returned from app and task info calls . <section> testing was done based upon the expected returns from these <allcaps> api </allcaps> functions . <section> no impact <section> - cfe bootes release candidate <section> walt moleski <allcaps> gsfc </allcaps> code <number>
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add msg stubs , update <code> to use them , and remove msg module include from unit tests pr # <number> - collapses time options down to just <number> bit second , <number> bit subsecond , always big endian . removes old defines , and triggers an error if the configuration is set to a format that was removed . pr # <number> - enables source selection and out - of - tree mission - defined overrides in the msg directory <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , resolve int size mismatch in loop comparison <section> fix # <number> - resolves loop iterator size too small for comparison <section> build and unit test passed . <section> resolves <allcaps> lgtm </allcaps> warning <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"review function , snprintf , to avoid buffer overflow <section> snprintf , is used which may cause overflow issues . not urgent . <section> review functions for security reasons . if needed , use a safer function such as sprintf_s . <url> <section> <url> <url> <url> <url> <url> <section> references : - <url> - <url> - <url> - <url> - <url> - <url> - <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"fix # <number> , remove all deprecated code <section> in the next major <allcaps> cfe </allcaps> release , this code will be no longer supported at all . it should be removed early in the cycle to avoid needing to maintain this compatibility code . fixes # <number> <section> build and run , sanity check <allcaps> cfe </allcaps> . run all unit tests . <section> removes code previously deprecated . identical to previous build if the <code> flag was set during configuration . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> also depends on nasa / to_lab # <number> - should be merged in same cycle . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle test - <url> <section> pr # <number> - deprecates <code> <allcaps> api </allcaps> by introducing new <code> tag pr # <number> - documentation update remove deleted requiremements pr # <number> - add a new *cfe_assert* module for functional testing by making it possible to load the ut assert object code as a <allcaps> cfe </allcaps> library . these are compiled as separate , independent modules and only loaded on demand . also includes a draft example for cfe testing , which calls some basic es appid functions . <section> bundle ci - <url> <section> part of nasa / cfs # <number> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"revert "" fix # <number> , add cfe assert and example lib "" reverts nasa / cfe # <number> testing a revert to see if it will update the status on the original pr ."
"fix # <number> , add cfe_assert library and test module <section> provides ability to load ut assert as a <allcaps> cfe </allcaps> app , and an example of using this to test some basic <allcaps> cfe es </allcaps> functions . this introduces a separate library for the basic ut assert functions ( cfe_assert ) and an app that executes the test ( cfe_testrunner ) rather than combining these into a single module . fixes # <number> also adds a small "" howto "" document to provide an example of the lines that need to be added to <code> to make this run , and document the dependencies between these modules . <section> build and run <allcaps> cfe </allcaps> , confirm tests execute and pass . <section> implements functional test framework ( same as pr # <number> ) <section> ubuntu <number> <section> this replaces my original pr # <number> - which had the same but as a single <code> app . the problem with this was that it did not guarantee the init routine completed before the subsequent test cases were loaded , because app init is run in a separate thread , where as lib init is run synchronously within the main startup thread . this approach requires two entries in the startup script rather than one , but does ensure that the init is race - free . <section> joseph hickey , vantage systems , inc ."
"rename <allcaps> omit </allcaps> deprecated flags with cfs codename instead of cfe version <section> nomenclature for deprecation can be confusing <section> create new deprecated flag for bootes and maybe replace the deprecate 6 _7 with deprecate aquila <section> keeping the current nomenclature <section> originally suggested in nasa / cfe # <number> > does deprecate_6_8 means that <number> was the last version which supports this function ? > > yes , that is the paradigm we have been using up to this point - - the number reflects the last release were it was _not_ deprecated . the idea of putting a version number in the tag was so we ' d know which ones had "" aged out "" in a future release and should be taken out completely . > > however as i mentioned before now that we have a codename for <allcaps> api </allcaps> compatibility then maybe we should consider using that instead . _originally posted by <user> in <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - add missing include path to the target / h and wrn / coreip directory . set and clarify difference between wind_home and wind_base variables . remove unrelated comment about <allcaps> cexp </allcaps> ( remnant from <allcaps> rtems </allcaps> ) . <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc ."
fix # <number> - deprecates getlastsenderid ( ) <section> fixes # <number> - deprecates cfe_sb_getlastsenderid ( ) <allcaps> api </allcaps> . fixes # <number> <section> make with and without omit_deprecated defined . <section> debian <number> <section> <email>
"fix # <number> , add cfe assert and example lib <section> add a module for functional testing called "" cfe_assert "" . this is using the ut assert object code and linking it with some <allcaps> cfe </allcaps> glue so it is loadable as a <allcaps> cfe </allcaps> library . also included is the start of an example for <allcaps> cfe </allcaps> testing , which just calls some basic es appid functions . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> . load these new test apps / libs and confirm all tests pass . <section> this is all <allcaps> new </allcaps> test code which is compiled as separate modules and only loaded on demand . it is independent of existing <allcaps> fsw </allcaps> or other software modules . <section> ubuntu <number> <section> a similar example for testing <allcaps> psp </allcaps> will be included in <allcaps> psp </allcaps> repo , and apps / libs can provide the same with the app / lib . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , implement cmake name based targets <section> allow targets to be configured in <code> by name , rather than a numeric index . this is more user friendly , allows more configuration flexibility , and cleans up a bunch of extra logic too . fixes # <number> <section> build system , sanity check <allcaps> cfe </allcaps> , and run all unit tests testing not fully completed - initially submitting pr for design review / feedback . <section> no change to <allcaps> fsw </allcaps> , but changes the way targets are defined in <code> . this includes backward compatibility for existing files / configs , however . <section> ubuntu <number> <section> also related to # <number> , this cleans up hardcoded <allcaps> cpu </allcaps> ids that were in the platform config header file . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not generate empty include file <section> detect the condition where no files were present to fulfill an config include file requirement , and report as an error rather than generating an empty file . fixes # <number> <section> create a test config that refers to a nonexistent platform config called "" foobar "" by setting this in <code> : <code> _without_ this change , <code> still ( seemingly ) completes successfully but the <code> is actually empty , which results in a later compiler error . <section> after applying this change , the issue is reported as a <code> error instead , along with a list of files it checked for . example : <code> no <allcaps> fsw </allcaps> changes - just reporting this configuration error . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , specify processorid in targets . cmake <section> - fix # <number> allow explicitly setting of the processor id in <code> <section> build and sanity - check <allcaps> cfe </allcaps> build and run all unit tests . confirm that <code> now returns the expected value . <section> the <code> setting in <code> will be passed to the final build / link of <allcaps> cfe </allcaps> core as the <allcaps> cpu id </allcaps> . if unspecified then the cmake index value is used instead ( backward compatible ) . <section> ubuntu <number> <section> minimal / simple fix that at least should address part of the problem . note this value is not passed to <code> for table builds at the moment , this only affects the <allcaps> cfe </allcaps> runtime value of processor id . at least on pc - linux one can still provide the value on the command line which takes precedence over anything in the build . <section> joseph hickey , vantage systems , inc ."
cfe_sb_getlastsenderid ( ) future deprecation note a short note that the cfe_sb_getlastsenderid ( ) is to be deprecated in a future release . <section> <email>
"resolve # <number> , add baseline and buildnumber to version . h <section> resolve # <number> <section> steps taken to test the contribution : built on top of current integration candidate built with other integration candidates as well as with nasa / osal # <number> and nasa / psp # <number> <section> new macros defined . startup reporting now looks like < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> < img width = "" <number> "" alt = "" screen shot <number> - <number> - <number> at <number> <number> <number> am "" src = "" <url> <section> docker ubuntu - based gcc image on <allcaps> osx </allcaps> <section> also tested with nasa / osal # <number> and nasa / psp # <number> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , use os_read_only , not o_rdonly <section> calls to os_open ( ) must use the <allcaps> osal </allcaps> - defined symbol , not the <allcaps> posix </allcaps> symbol . this was a long - standing bug but happened to work because they are both zero . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> build and run unit tests <section> none . <section> ubuntu <number> <allcaps> rtems </allcaps> <number> . <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> resolve # <number> <section> bundle ci - <url> <section> pr # <number> - update <code> to save the message pointer argument <code> so that unit tests can check it pr # <number> - only affects build system . fully backward compatible . the defaults are applied if a user has nothing specifically configured in their <code> . the defaults will select osal , cfe - core , and psp as before . the user now has the option to explicitly configure and control the inclusion of these modules and also provide mission - specific search paths to override them as desired . pr # <number> - note this only affects ut stubs . change the internal names of some stub arguments to match prototype . ensure that : - all functions in the <allcaps> cfe </allcaps> public <allcaps> api </allcaps> have a stub function implemented - all parameters to the stub function are registered in the context object , so the values will be available to hook functions . - the names of all parameters match the prototype / documentation , so hook functions that use name - based argument value retrieval will work . pr # <number> - adds to table search path in <code> pr # <number> - calls to os_open ( ) now use the <allcaps> osal </allcaps> - defined symbol , not the <allcaps> posix </allcaps> symbol . pr # <number> - defines new macros to report the build number and build baseline and new strings containing the version number of cfe and a combined string with the version number for <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , and <allcaps> cfe </allcaps> . pr # <number> - allow explicitly setting of the processor id in <code> . the <code> setting will be passed to the final build / link of <allcaps> cfe </allcaps> core as the <allcaps> cpu id </allcaps> . if unspecified , then the cmake index value is used instead ( backward compatible ) . pr # <number> - cmake now detects conditions where no files were present to fulfill an config include file requirement and reports an error during <code> lists the files it checked for rather than generating an empty file . <section> ubuntu - ci <section> part of <url> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . gerardo cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> - removes getlastsenderid ( ) fixes # <number> fixes # <number> removes <code> , which is supremely broken . <section> sb_ut passes <section> removes the cfe_sb_getlastsenderid ( ) <allcaps> api </allcaps> . <section> debian <number> <section> <email>"
"fix # <number> , scrub of all <allcaps> cfe ut </allcaps> stub functions <section> scrubs all <allcaps> cfe </allcaps> unit test functions to ensure that : <number> . all functions in the <allcaps> cfe </allcaps> public <allcaps> api </allcaps> have a stub function implemented <number> . all parameters to the stub function are registered in the context object , so the values will be available to hook functions . <number> . the names of all parameters match the prototype / documentation , so hook functions that use name - based argument value retrieval will work . fix # <number> fix # <number> <section> build and run all <allcaps> cfe </allcaps> unit tests sanity check on <allcaps> cfe </allcaps> execution ( but this does not change any <allcaps> fsw </allcaps> code ) . <section> no impact to current behavior - except it does change the internal names of some stub arguments to match prototype . note this only changes ut stubs . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> - removes cfe_sb_getlastsenderid ( ) and adds cfe_sb_rcvmsgsenderid ( ) fix # <number> <section> this removes the significantly - broken <code> function and adds a new variant <code> that returns ( via an out parameter ) the appid of the application that sent the message being read off the pipe . note that , to reduce the redundant code , <code> calls <code> with a null pointer . it may be better to use a <hashtag> define </hashtag> macro for improved performance , or deprecate the rcvmsg ( ) <allcaps> api </allcaps> eventually . <section> built and ran updated unit tests . <section> debian <number> <section> getlastsenderid ( ) is basically broken , i suggest this be merged into <number> , removing the function entirely ( no deprecation ) . it will break any users of getlastsenderid ( ) , obv . ( <allcaps> sbn </allcaps> being the only one i am aware of . ) <section> <email>"
"fix95 , ci build multiple targets <section> added a cpu2 as a second target to the build configuration to ensure build system is functioning properly with travis ci for multiple targets . also added the following files : - cpu2_cfe_es_startup . scr - cpu2_platform_cfg . h - cpu2_msgids . h resolves : cfs bundle ' s issue <number> < <url> <section> steps taken to test the contribution : went through the build steps from "" build and run "" section of < <url> <section> expected to see cpu2 in the exe directory , but it did not appear ; still only cpu1 was made for me . however , this worked for chris knight after he cloned cfs and pulled from my fork ( cpu1 and cpu2 were made ) . <section> - hardware : mac os - os : ubuntu <number> via virtualbox <section> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
create build . yml add build . yml as test
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - adds "" \ <number> "" in the cfe_tbl_filedef ( ) macro so that if a string is exactly the size of the field , it will produce a compiler error . pr # <number> - added cfe user ' s guide reference to <allcaps> readme </allcaps> . md pr # <number> - removes old license <section> ubuntu : bionic <section> part of <url> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , remove obsolete license <section> removes old license . fix # <number> <section> ci , comment change only <section> none <section> n / a ( ci only ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake mission dependency cleanup <section> put more dependencies into the "" mission_defaults . cmake "" file for more visibility and ease of configuration . this now includes all "" implicit "" modules such as cfe - core , osal , and psp . also push the calls to "" generate_config_includefile "" to a sub - script which can be distributed with each app and evaluated as part of the build . this reduces dependencies on special naming conventions like <code> and <code> , and app developers can explicitly manage the files that users are expected to override . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> and sanity test build and execute all unit tests <section> no impact to behavior , affects build system only . should be fully backward compatible - in that the defaults are applied if a user has nothing specifically configured in their <code> file . the defaults will select osal , cfe - core , and psp as they always have . however , the user now has the option to explicitly configure / control the inclusion of these modules and also provide mission - specific search paths to override them as desired . <section> ubuntu <number> <section> related to previous pr # <number> , # <number> , and # <number> . not easy to separate this out from those so this is currently based on a merge of those previous changes . hopefully the combined solution can be acceptable . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - getlastsenderid now returns appid fix for # <number> - this removes the cfe_sb_senderid_t struct and , instead , the cfe_sb_getlastsenderid ( ) function now takes a pointer to an appid ( uint32 ) that it uses as an out parameter for the call . <section> built with enable_unit_tests <section> significantly changes the getlastsenderid ( ) function , will break any users of this <allcaps> api </allcaps> ( particularly <allcaps> sbn </allcaps> . ) <section> debian <number> <section> this obviates # <number> and i recommend closing that ticket with this fix . <section> <email>"
"fix # <number> - update lastsender in pipe description and add appid to buf … <section> fix # <number> this adds appid to the buff description ( used by <code> ) and updates the lastsender field in the cfe_sb_piped_t struct for each pipe that receives the message . <section> built and ran in debugger to inspect values . <section> adds a field to the cfe_sb_senderid_t struct , properly populates the cfe_sb_piped_t private struct ( which is used for hk tlm . ) <section> debian <number> <section> <email>"
"fix # <number> , update cfe_sb_timestampmsg to save the message pointer argument … ut_stub_copyfromlocal so that unit tests can check it <section> a clear and concise description of what the contribution is . fixes # <number> <section> wrote test that failed when using original version of sb stub cfe_sb_timestampmsg . <code> changed to have stub ut_stub_copyfromlocal passed in argument . <code> <section> passed in argument value is now available to a test that uses ut_setdatabuffer for cfe_sb_timestampmsg . <section> - hardware : pc - os : rhel7 <number> . <number> - <number> . <number> . el7 . x86_64 - versions : cfe <number> <section> none . <section> none . <section> alan gibson , <allcaps> gsfc </allcaps> - <number>"
"cfe_sb_getlastsenderid ( ) returns a pointer to a shared data location <section> cfe_sb_getlastsenderid ( ) in cfe_sb_api . c returns a pointer to shared data location which is risky . the function description also warns of some unpredictable or at least inconsistent behavior . <section> i think the use cases for this function should be identified and a safer & behaviorally consistent implementation should be implemented . are the use cases ? <number> . determine if app x send the last message <number> . determine whether the last message sent is from a lsit of apps a couple of options are <number> . caller passes in the name of an app or a list of apps to sb determines whether the last message sent is a match . <number> . the current type implementation copies the last message information rather than returning a pointer . <section> n / a <section> david mccomas , <allcaps> nasa </allcaps> emeritus"
"sb pipe info ' lastsender ' field is unused <section> the lastsender field in in the file produced by a sb ' send pipe info to file ' command is always zero . after doing some seraches it appears that this field defined in cfe_sb_piped_t in cfe_sb_priv . h is never set . <section> <number> . send a sb cfe_sb_send_pipe_info_cc command <number> . transfer the file to the ground <number> . decode the binary file <section> the structure definition does not have any comments as to what to expect in this field . i would expect the appid of the of the sender of last message send to the particular pipe . <section> n / a <section> wndows vm running ubuntu <number> cfe <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> none <section> david mccomas , <allcaps> nasa </allcaps> emeritus"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , continue cleanup of sb unit test <section> bundle ci : <url> <section> pr # <number> - sb unit use of the ut assert framework is closer to original design intent <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , added cfe user ' s guide reference to <allcaps> readme </allcaps> . md <section> added a reference to the cfe user ' s guide ( <url> in the cfe <allcaps> readme </allcaps> . md . the reference was placed toward the top of the document , above the "" version history "" section . resolves : # <number> <section> n / a <section> n / a <section> n / a <section> this is a simple document enhancement . <section> n / a <section> contribution by : jandlyn bentley , <allcaps> nasa gsfc </allcaps>"
"fix # <number> , add global module list and mission default file <section> add more hooks for additional flexibility when adding modular code blobs into the build . three new directives are added : - <code> : for modular components which are direct dependencies of <allcaps> cfe </allcaps> core and / or extend its functionality . - <code> : for applications / libraries which should be built for every target , as if they were listed in every <code> setting . - <code> : same as above but for the <code> setting . this also simplifies / reworks the search path to remove some logic that was never really utilized . fixes # <number> also fixes # <number> ( supercedes / includes previous pr # <number> ) <section> build , sanity check <allcaps> cfe </allcaps> and unit test . tested adding modules to the new lists and confirm the modules are found and built as expected . <section> users have additional flexibility when configuring / customizing their <allcaps> cfe </allcaps> build . <section> ubuntu <number> <section> the initial intent with <code> is to provide a simple place for something like # <number> . the initial intent with <code> is that we can easily tack on extra libraries when unit testing is enabled , e . g . <code> this will automatically build the assert library for every target when unit testing is turned on , but it is still up the user to actually load it , but that can be done at runtime - it does not change the core <allcaps> cfe </allcaps> environment . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - adds null to filedefs <section> fix # <number> - adds "" \ <number> "" in the cfe_tbl_filedef ( ) macro so that if a string is exactly the size of the field , it will produce a compiler error . <section> <email>"
"fix # <number> , continue cleanup of sb unit test <section> makes the sb unit test closer to recommended ut assert patterns - do not keep a separate <code> state variable outside ut assert . - do not report separate status messages from the asserts . use ut assert . - do not "" reset "" in the middle of a test routine , split into separate test routines where this is done . - no need for <code> and <code> or <code> macros . ut assert has messages for these test actions . each block should be a separate test routine and then these are unnecessary . fixes # <number> <section> run all unit tests and confirm passing . no <allcaps> fsw </allcaps> code changes here , only ut . <section> sb unit tests now use the ut assert framework more as intended . <section> ubuntu <number> <section> this changes some items that were only reported on failure to a normal assert statement , which means its always reported . the side effect is that there are now about <number> "" test cases "" in the sb test . most of that is from remaining validation of the length field , in particular the user length test , which validates every possible uint16 value ( <number> ) , for each of the <number> header structures (x 4 ) , for both the return value and packet content (x 2 ) totalling <number> test cases for this one function . there are similar examples for cmd code but as this is only an <number> - bit field it only results in a few thousand cases . if it is not desirable to have so many test cases , recommendation is to change the unit test to _not_ loop through every possible value . no other functions are tested this way i . e . we do not call other apis accepting a uint16 with every representable value . <section> joseph hickey , vantage systems , inc ."
"fix # <number> - adds padding to cfe_tbl_filedef_t <section> adds a uint32 padding ( initialized with <number> ) to cfe_tbl_filedef_t to ensure that the filename is null - terminated . <section> builds fine with "" sample_app_table . tbl "" as the filename ( which is exactly the length of the filename field . ) <section> debian <number> <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> <url> <section> pr # <number> - <allcaps> api </allcaps> change : cfe ut_sb_stubs now has cfe_sb_deletepipe available . behavior change : app unit tests requiring this will not fail to build due to undefined reference to <code> pr # <number> - hook functions may now use the <code> form and obtain the full set of variable arguments passed to <code> and variants . pr # <number> - replace all direct references to data types defined in <code> with the abstract type defined in <code> . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc . alan gibson , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , implement config - based target builds <section> the existing build system built target executables grouped by toolchain as a proxy for <allcaps> cpu </allcaps> architecture + machine options / flags . the app binaries would be built once and copied to any / all targets sharing that toolchain . the side effect of doing this is that the application needs to be written in an <allcaps> cpu </allcaps> - agnostic manner , performing its subscriptions and configurations from runtime table data rather than hardcoded / fixed values . unfortunately most apps are not coded that way , so workarounds were needed . this changes the top level process to include the "" platform "" within this target build logic , effectively treating different platform configs as entirely different builds , even if they share the same toolchain file . as a result , binaries will only be shared between targets that explicitly set the <code> setting in <code> to the same value . fixes # <number> <section> build <allcaps> cfe </allcaps> and unit test + sanity check ( default config ) add cpu2 configuration using default platform settings ( different ) and unit test + sanity check . cpu2 is built separately from cpu1 , all <allcaps> osal </allcaps> , <allcaps> psp </allcaps> , <allcaps> cfe </allcaps> , and app binaries are re - built . add cpu2 configuration sharing the same platform config settings and unit test + sanity check . cpu2 is built like the previous implementation where binaries are built once and copied to both installations . <section> no impact to behavior , only affects build . this does affect the build tree adding an extra subdirectory at the architecture level . for instance rather than <code> it becomes <code> . sample makefile is updated so <code> works with the default . <section> ubuntu <number> <section> as a side effect this makes all platform configs available to all apps , no real scope separation . so inclusion of <code> from an app will no longer trigger an error , even though i ' d still recommend against actually doing that . a future improvement might be to build <allcaps> osal </allcaps> + <allcaps> psp </allcaps> separately and only do the <allcaps> cfe </allcaps> + <allcaps> apps </allcaps> per config , using an imported target . <section> joseph hickey , vantage systems , inc ."
"multiple targets - not able to see cfe_msgids . h when building tables <section> when building for multiple targets , app tables fail to build , reporting "" cfe_msgids . h : no such file or directory "" . <section> <code> <section> builds . <section> debian <number> vm <section> <email>"
"fix # <number> , separate secondary header access functions <section> fix # <number> - separates header manipulation and definitions for easier mission customization fix # <number> - fixes validate checksum description to match implementation fix # <number> - fixes get msgid logic to not override bits fix # <number> - removes local endian <allcaps> sid </allcaps> macros fix # <number> - by adding an <allcaps> api </allcaps> that does support maximum msg size reporting , note also fixes limit in cfe_sb_initmsg by the same means . fix # <number> - fixes set / get message id logic to not override bits - enables source selection and out - of - tree mission defined overrides in the msg directory . <allcaps> note </allcaps> - there are follow - on tickets to finalize and clean up after this change . <section> ran unit tests for version <number> and version <number> header formats , all pass except sample_app due to a different bug ( nasa / sample_app # <number> ) <section> this just enables override . no actual changes in behavior other than the bug fixes . some name changes in structure fields , but apps should not be directly accessing those fields to begin with . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle + this commit ( and the other branch configured to override ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"( <allcaps> wip </allcaps> ) trivial header redefine <section> partially address # <number> just does the trivial redefine of a header since no source selection , requires all the elements that are referenced to still exist but allows moving , adding , etc . once source selection is available , can redefine handling or remove fields ( update <allcaps> api </allcaps> implementations ) . note , depends on apps actually using the real sb header definitions for this to work ( size will fail if using cfe_sb_cmd_hdr_size ) . <section> - this actually shows an example of redefining header , do not merge ! <section> built with redefined header , used updated cmdutil to test that the field was added as expected . <section> just an example , but adds a field to the header <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle + this commit , updated cmdutil <section> see # <number> for context <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add user - specified extra modules to build <section> add a new setting that can be set in targets . cmake , to enable users to add extra custom functions / modules to <allcaps> cfe </allcaps> core executable . this can be used , among other things , for future support of a modular / customizable message header structure . fixes # <number> <section> build and execute <allcaps> cfe </allcaps> , confirm normal operation / sanity check . build and execute all unit tests , confirm passing . <section> any user - supplied library can be added to the build . <section> ubuntu <number> <section> this general concept can also be used to provide replacement implementations of core modules ( e . g . <allcaps> tbl </allcaps> , fs ) with some additional tweaking to exclude those modules from the subsequent build of <allcaps> cfe </allcaps> core . <section> joseph hickey , vantage systems , inc ."
"<allcaps> wip </allcaps> : modular message format <section> work in progress for review / discussion regarding modular message formats related to # <number> <section> very little . it builds and runs . <section> users can choose framing formats via an external library <section> ubuntu <number> <section> <allcaps> not </allcaps> ready for actual merge , this is mainly for discussion . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , added stub for cfe_sb_deletepipe in ut_sb_stubs . c <section> fixes # <number> . added stub for cfe_sb_deletepipe . stub takes pipeid argument and using ut_stub_copyfromlocal , saves it into the data buffer . <section> steps taken to test the contribution : <number> . build steps : ' make enable_unit_tests = <allcaps> true simulation </allcaps> = native ' execution steps : <number> . created simple unit test in cfs_cf calling cfe_sb_deletepipe directly . <number> . pipeid was set as the data buffer pointer and given an initial value . <number> . expectedpipeid given a different value than pipeid <number> . utassert_true used to show they are not equal ( fails ) <number> . call to cfe_sb_deletepipe with expectedpipeid as argument <number> . utassert_true used to show they are equal ( pass ) <number> . ran unit test from build / native / apps / cfs_cf / unit - test please note : this test was not saved to any repo . output : [ <allcaps> begin </allcaps> ] <number> test_check_sb_stubs [ <allcaps> fail </allcaps> ] <number> cf_app_tests . c : <number> - pipeid = 0x0 0 0 0 0 0 0 5 , exp = 0x0 0 0 0 0 0 0 6 [ <allcaps> pass </allcaps> ] <number> cf_app_tests . c : <number> - pipeid = 0x0 0 0 0 0 0 0 6 , exp = 0x0 0 0 0 0 0 0 6 [ <allcaps> end </allcaps> ] <number> test_check_sb_stubs <allcaps> total </allcaps> : : <number> <allcaps> pass </allcaps> : : <number> <allcaps> fail </allcaps> : : <number> <allcaps> mir </allcaps> : : <number> <allcaps> tsf </allcaps> : : <number> n / a : : <number> <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : cfe ut_sb_stubs now has cfe_sb_deletepipe available . - behavior change : app unit tests requiring this will not fail to build due to undefined reference to ` cfe_sb_deletepipe ' <section> - hardware : pc - os : <allcaps> rhel </allcaps> - <number> ( maipo ) linux <number> . <number> - <number> . <number> . el7 . x86_64 - versions : cfe <number> <section> none . <section> none . <section> alan gibson , <allcaps> nasa </allcaps> , <allcaps> gsfc </allcaps> - <number>"
"fix # <number> , full context info for <allcaps> evs </allcaps> event stubs <section> create a va_list object to capture the full set of variable arguments passed to cfe_evs_sendevent and variants ( timedevent , withappid ) . use the variable argument form of the stub implementation to pass all info through to a ( possible ) hook function . fixes # <number> <section> build all unit tests and confirm normal operation , all passing . <section> hook functions may now use the va_list form and obtain the full context info . <section> ubuntu <number> <section> see also nasa / osal # <number> , nasa / sample_app # <number> for other related enhancements . <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - using ut stubs cfe_evs_sendevent and cfe_es_writetosyslog , the register buffer will have the correct size . access to register buffer element will exist pr # <number> - both the main task and the child task ( s ) are successfully deleted and restarted after the exception occurs . pr # <number> - fixes doxygen warnings for the tbl subsystem . pr # <number> - no compiler warnings or errors on cross build . pr # <number> - fixes a typo pr # <number> - changes message key from uint16 to uint32 to avoid rollover and system hang <section> bundle ci - ubuntu : bionic <section> part of nasa / cfs # <number> see prs for detailed changes and more testing information <section> jose tovias , <allcaps> caci </allcaps> - <allcaps> lzt </allcaps> technology joseph hickey , vantage systems , inc . christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> jacob hageman - <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , add location to push <allcaps> ctf </allcaps> scripts and plugins <section> fix # <number> adds locations to push <allcaps> ctf </allcaps> scripts and plugins <section> steps taken to test the contribution : <number> . ensured that the editor launches nominally <number> . built and executed <number> test scripts <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"update tbl_ut . c to macros <section> now that the ut macros (# <number> ) have been merged into master , and as there ' s a big number of changes expected (# <number> ) , now ' s a good time to re - do tbl_ut . c to use the new macros . <section> <email>"
fix <number> sb ut <section> fixes for sb_ut . c <section> <email>
"( <allcaps> wip </allcaps> ) fix # <number> , refactor of sb_ut updates to use macros <section> this is a refactor for # <number> , which isolates the sb_ut updates . note # <number> brought in the macros now independently . fix # <number> <section> <allcaps> tbd </allcaps> - <allcaps> wip </allcaps> <section> no behavior change , just simplified sb_ut <section> <allcaps> tbd </allcaps> - <allcaps> wip </allcaps> <section> # <number> , # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> code implemented by <user>"
"fix # <number> , add ut macros <section> this is a refactor of # <number> to just include the macros fix # <number> <section> ci - <allcaps> tbd </allcaps> <section> none , but allows for shorter uts <section> - ci <section> see # <number> for original commits and reviews suggesting fasttrack ( code has been reviewed multiple times ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> note - code implemented by <user>"
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> fix # <number> , deprecate decompress fix # <number> , rework exception handling in <allcaps> cfe </allcaps> fix # <number> , deprecate output to shell commandfix # <number> , add ut macros fix # <number> , deprecate <allcaps> cfs </allcaps> / fs time conversion apis fix # <number> , sb subscription report control on separate <allcaps> mid </allcaps> fix # <number> , remove duplicate cfe_time_local1hzisr prototype fix # <number> , resolve doxygen warnings fix # <number> , stubs must not depend on real msgid implementation fix # <number> , remove old cfe_arinc653 - related tests fix # <number> , remove es_app_debug functionality fix # <number> , string operations on gcc9 fix # <number> , <allcaps> tbl </allcaps> events update fix # <number> , change message definitions to ensure alignment fix # <number> , reference to deprecated cfe_spacecraft_id <section> see prs bundle ci - <url> <section> pr # <number> - no longer automatically decompresses apps / libraries as part of load pr # <number> - deletes now unused cfe_es_countobjectcallback and cfe_es_listresourcesdebug . flags were unused pr # <number> - removes all conditional preprocessing blocks related to cfe_arinc653 . pr # <number> - ensure clean build , no warnings on string operations using <allcaps> gcc </allcaps> <number> . <number> . pr # <number> - when <code> attempt to send output to shell command will result in command error counter increment ( unrecognized function code ) pr # <number> - <allcaps> sbn </allcaps> will need to init command with new <allcaps> mid </allcaps> pr # <number> - documentation links and references will now work properly pr # <number> - <allcaps> api </allcaps> cfe_es_processcoreexception is removed , replaced with async event . pr # <number> - removed duplicate prototype in cfe_time_utils . h pr # <number> - removes unused defines and adds documentation to <allcaps> tbl </allcaps> event defines . pr # <number> - deprecates cfe_time_cfe2fsseconds and cfe_time_fs2cfeseconds . pr # <number> - unit tests now build and run when message_format_is_ccsds_ver_2 is configured . pr # <number> - build now works with both extended headers and omit_deprecated options set . pr # <number> - no more alignment warnings pr # <number> - adds new unit test macros <section> see prs <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> leor bleier , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . guillaume lethuillier , self"
"fix # <number> , alignment warnings in unit test <section> resolve remaining alignment warnings in the unit test and stub code . <section> build with enable_unit_tests = true for native arch and a cross target with strict alignment requirements . confirm no warnings on either build , all unit tests pass . <section> no compiler warnings or errors on cross build . <section> ubuntu <number> ( host , little endian , <number> - bit , lax alignment ) <allcaps> mips </allcaps> via <allcaps> qemu </allcaps> ( cross target , big endian , <number> - bit , strict alignment ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , align all software bus message definitions <section> replace uint8 [ ] arrays which reserve space for the header with an instance of the header struct as defined by sb . note this structure was the basis for the array size , so it is the same size , but by actually using the structure the resulting message will have the correct alignment . fixes # <number> <section> execute all unit tests and confirm passing sanity check on <allcaps> cfe </allcaps> , builds and runs and processes commands also build and run on <number> - bit platform with strict alignment and confirm no warnings / issues <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> ( native , little endian <number> bit ) <allcaps> mips </allcaps> <number> - bit via <allcaps> qemu </allcaps> ( big endian , strict alignment requirements ) <section> just applies the same fix from # <number> to all messages . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , validate table handle prior to use <section> fixes a bug where a table handle is used prior to validation ( used in the variable initialization at the top of cfe_tbl_load ( ) . ) fix # <number> <section> <email>"
"fix # <number> , order of cleanuptaskresources <section> when cleaning up a task the child task resources should be cleaned first , followed by the main task resources . this is because child tasks are also associated with the original creator within <allcaps> osal </allcaps> and will be found through <allcaps> osal </allcaps> foreachobject , and also via links within the es task table . by cleaning child tasks first , this avoids attempting to delete the child task twice . fixes # <number> <section> hack "" sample_app "" to create a child thread <allcaps> and </allcaps> trigger an exception after period of time . confirmed the original bug report where the attempt to clean up the sample_app resources results in <code> in the unmodified master branch . then apply this patch and re - test , and confirm that "" sample_app "" is successfully restarted . also confirm unit tests passing . <section> both the main task and the child task ( s ) are successfully deleted and restarted after the exception occurs . <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , whole - archive unrecognized when compiling with vxworks spar … … c compiler in start_whole_archive and stop_whole_archive , it is missing "" - wl , "" when compiling for vxworks . <section> a clear and concise description of what the contribution is . - include explicitly what issue it addresses [ e . g . fixes <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
"fix # <number> , alignment of <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> message definitions <section> define the sb message headers such that they are aligned appropriately for casting to / from a <code> type . note this should not affect the size of these structures on a <number> - bit machine with the default configuration , as they are already multiples of <code> . <repeated> then change only the <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> definitions which were generating warnings on the <number> - bit build to use this correct definition , rather than a <code> array to reserve space for the header . again in these cases this should not change the size or padding because it already was multiples of <code> . this just makes it so the compiler will appropriately align the overall buffer . fix # <number> <section> build for <number> + <number> bit platforms with strict alignment settings and confirm that the warnings are gone . confirm all tests pass . <section> no impact to behavior . <section> ubuntu <number> <allcaps> mips </allcaps> yocto / poky embedded linux ( <number> - bit big endian processor with strict alignment requirements ) <allcaps> rtems </allcaps> on <allcaps> qemu </allcaps> ( i686 - rtems4 . <number> ) <section> joseph hickey , vantage systems , inc ."
"whole - archive - unrecognized i can work this issue . <section> in start_whole_archive and stop_whole_archive , it is missing "" - wl , "" when compiling for vxworks . i am using a sparc compiler and i get the following error : linking c executable core - plss_cws cd . <repeated> - g cmakefiles / core - plss_cws . dir / src / target_config . c . obj - o core - plss_cws - - whole - archive . <repeated> / cfe_core_default_plss_cws / libcfe_core_default_plss_cws . a . <repeated> / psp / ut700 - vxworks6 . <number> / libpsp - ut700 - vxworks6 . <number> . a . <repeated> / osal / libosal . a - - no - whole - archive sparc - wrs - vxworks - gcc : error : unrecognized command line option ' - - whole - archive ' sparc - wrs - vxworks - gcc : error : unrecognized command line option ' - - no - whole - archive ' to fix the error see below in code snips : <section> steps to reproduce the behavior for <allcaps> xemu plss </allcaps> project : <number> . go to plss_cws_mission <number> . source setvars . sh <number> . mcrv <number> . see error <section> no error . a clean build . <section> i updated cafe / cmake / target / cmakelists . txt if (""$ { cmake_c_compiler_id } "" <allcaps> strequal </allcaps> "" <allcaps> gnu </allcaps> "" ) # the option pair for <allcaps> gnu </allcaps> gcc / ld tools if ( "" ${ <allcaps> cpu </allcaps> } "" <allcaps> strequal </allcaps> "" <allcaps> sparc </allcaps> "" ) set ( start_whole_archive "" - wl , - - whole - archive "" ) set ( stop_whole_archive "" - wl , - - no - whole - archive "" ) else ( ) set ( start_whole_archive "" - - whole - archive "" ) set ( stop_whole_archive "" - - no - whole - archive "" ) endif ( ) : # the linker option prefix may or may not be needed , see below set ( compiler_linker_option_prefix "" - wl , "" ) else ( ) # other toolchain options may be added here endif ( ) <section> - hardware - os : centos <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , chksm <number> - vxworks6 . <number> <section> add any other context about the problem here . <section> jose tovias <allcaps> caci </allcaps> / <allcaps> lzt </allcaps> technology"
"fix # <number> , stubs must not depend on real msgid implementation <section> this makes the sb stubs which access message structures into actual stubs , not a replica of the normal implementation . stubs manipulate a local ( stored in the ut framework ) out - of - band buffer to hold the metadata about the message . this removes the dependency on the actual definition of msgid used by the mission and makes them agnostic to the setting of extended headers . this revealed a few other minor issues in test cases where they were depending on values sitting in globals ( also fixed ) . fixes # <number> <section> build unit tests with <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> with and without configuration for extended headers . confirm passing . <section> unit tests now build and run when <code> is configured . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog add missing ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog . this will create the correct register buffer size . <section> add missing ut_stub_registercontext to cfe_evs_sendevent and cfe_es_writetosyslog . this will create the correct register buffer size . - fixes # <number> <section> steps taken to test the contribution : travis ci passed : <url> <section> a clear and concise description of how this contribution will change behavior and level of impact . - behavior change : - using ut stubs cfe_evs_sendevent and cfe_es_writetosyslog , the register buffer will have the correct size - access to register buffer element will exist <section> - hardware : pc and ut700 - os : centos <number> and vxworks6 . <number> - versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , chksm <number> <section> none . <section> none . <section> jose tovias / <allcaps> caci </allcaps> - <allcaps> lzt </allcaps> technology / <allcaps> jsc </allcaps> - <allcaps> jsc </allcaps> b32 : r205 / <email> / <phone> / <allcaps> nasa </allcaps> contract # nnj14ha04b / task order <number> : exploration extravehicular mobility unit ( xemu ) software development and engineering support - <allcaps> hand signed </allcaps> company <allcaps> cla </allcaps> has been emailed to <email> . copy sent : gsc_18128_corp_cla_form_1219_josetovias_for_cfe6 . <number> . pdf <url>"
"integration candidate : fast track <section> fixes # <number> <section> see <url> bundle ci - <url> <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the osconfig . h file . <section> see pr bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , <allcaps> tbl </allcaps> events update <section> removes unused defines ( recently added ) , adds documentation to <allcaps> tbl </allcaps> event defines . fix # <number> <section> make doc , examined output <section> <email>"
"fix # <number> , remove duplicate cfe_time_local1hzisr prototype <section> removed duplicate prototype in cfe_time_utils . h fix # <number> <section> standard make w / unit tests <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : master bundle w / this commit <section> bigger time service cleanup referenced in # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake - based <allcaps> osal </allcaps> config <section> rather than <allcaps> cfe </allcaps> generating an osconfig . h file directly , it just needs to select file ( s ) from the defs directory and pass them to <allcaps> osal </allcaps> for the config . this makes it compatible with the upcoming nasa / osal # <number> change ( in pr nasa / osal # <number> ) fixes # <number> <section> build code with default provided and confirm that <allcaps> osal </allcaps> generates the correct config ( osconfig . h ) and the build succeeds <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the <code> file . <section> ubuntu <number> <allcaps> lts </allcaps> <section> correlates with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove compiler added padding in tlm packets <section> fix # <number> removes compiler added padding by padding ccsds_tlmsechdr_t such that the payload will always start on a <number> - bit boundary . also adjusts packet alignment such that packets with <number> bit variables are aligned correctly . related to nasa / cfs - groundsystem # <number> intended to be delivered with nasa / cfs - groundsystem # <number> <section> steps taken to test the contribution : <number> . modified groundsystem . py to display raw packets as they are being decommed <number> . bit busted packets to ensure no compiler added padding is being applied . <number> . ran unit tests . <section> compiler added padding will no longer be applied to packets . <section> oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"cfe_sb_setmsgtime sets ccsds_tlmsechdr_t time field in native endianness <section> cfe_sb_setmsgtime populates the ccsds_tlmsechdr_t time field with native endianness format instead of using macros . ccsds . h definition of the time headers are network byte order . <section> define actual standard , confirm across stakeholders and fix . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cmake - based <allcaps> osal </allcaps> config <section> rather than <allcaps> cfe </allcaps> generating an osconfig . h file directly , it just needs to select file ( s ) from the defs directory and pass them to <allcaps> osal </allcaps> for the config . this makes it compatible with the upcoming nasa / osal # <number> change ( in pr nasa / osal # <number> ) fixes # <number> <section> build code with default provided and confirm that <allcaps> osal </allcaps> generates the correct config ( osconfig . h ) and the build succeeds <section> users must now select <allcaps> osal </allcaps> options via the cmake file in their defs directory , rather than the <code> file . <section> ubuntu <number> <allcaps> lts </allcaps> <section> correlates with nasa / osal # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , rework exception handling in <allcaps> cfe </allcaps> <section> move exception handling to a <allcaps> psp </allcaps> function . in this approach the <allcaps> cfe </allcaps> only logs data after the event as a background job . replaces the cfe_es_processcoreexception with a simple notification that causes the es background job to run , which in turn polls the <allcaps> psp </allcaps> for logged exceptions and writes entries to the <allcaps> es er </allcaps> log . both the <allcaps> psp </allcaps> execption scan and the er log file dump are converted to background jobs . fixes # <number> fixes # <number> <section> validate <allcaps> cfe </allcaps> exception handling behavior on <allcaps> posix </allcaps> and vxworks ( not implemented on <allcaps> rtems </allcaps> ) . add divide by zero "" bug "" to sample_app for testing . confirm exception is logged correctly confirm er dump to file works <section> no change from <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> perspective <allcaps> api </allcaps> <code> is removed , replaced with async event . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit vxworks <number> on mcp750 <section> needs corresponding changes in <allcaps> psp </allcaps> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> , # <number> , # <number> , # <number> , # <number> <section> see prs bundle ci - <url> <section> pr # <number> - upon power on reset , default system log mode set to overwrite . upon processor reset , default system log mode set to discard . pr # <number> - no longer locks while locked ( no issue observed on linux / posix , but user reported issue on freertos <number> ) pr # <number> - internal <code> <allcaps> api </allcaps> changed slightly to add appname as a parameter . return value from <code> no longer relevant for event generation . pr # <number> - updates <code> such that it now checks the ' used flag ' prior to calling <code> for a given tblhandle . also sets the appid to <code> after removing the access descriptor link from linked list . pr # <number> - removed <code> from <code> <section> see prs bundle ci - ubuntu : bionic <section> <url> <section> jacob hafgeman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> christopher d . knight <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , resolve doxygen warnings <section> fixes # <number> , resolving all doxygen warnings <section> steps taken to test the contribution : <number> . fixed warnings as listed in <code> <number> . built documentation using <code> <number> . observed relevant documentation working correctly <section> a clear and concise description of how this contribution will change behavior and level of impact . - documentation links and references will now work properly <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - leor bleier <allcaps> nasa gsfc </allcaps> \ code <number>"
"fix # <number> , deprecate shell output command <section> deprecates the shell output command fix # <number> fix # <number> see # <number> for approaches to replacing "" list "" functionality ( list apps , list tasks , list resources ) that was implemented as "" special "" shell commands . <section> build and ran tests locally with <allcaps> simulation </allcaps> = native , enable_unit_tests = true with and without omit_deprecated , passed <section> when deprecated attempt to send output to shell command will result in command error counter increment ( unrecognized function code ) . <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : based on integration branch since it had critical fixes + this branch . can rebase once integration branch is merged . <section> # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci - <url> <section> <number> . pr # <number> - changes to cmake syntax might improve behavior in ides <number> . pr # <number> - documentation only <number> . pr # <number> - none , reduces user confusion due to duplicate defines <number> . pr # <number> - none , deprecates additional items <number> . pr # <number> - none , except if someone defines this value as unsigned it will not break . <repeated> <number> . pr # <number> - no impact to <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interface or <allcaps> api </allcaps> . internal changes only . <number> . pr # <number> - exposes the <code> for application usage . <number> . pr # <number> - <code> will now detect if it is being called prior to a message being sent on a given pipe . <number> . pr # <number> - mismatches between <allcaps> psp </allcaps> / <allcaps> bsp </allcaps> / os are now detected and warned about during make prep . only the <code> is actually required to be specified for a <allcaps> cfe </allcaps> build now . others can be omitted . <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems inc . jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> daniel knutsen , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> stanislav pankevich , <allcaps> pts </allcaps> gmbh"
"fix # <number> , define <allcaps> bsp </allcaps> type in sample config <section> update of osal_system_bspname to osal_system_bsptype in sample toolchains . fix # <number> <section> steps taken to test the contribution : <number> . readme build steps <section> builds out of the box with sample config <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : master bundle + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , separate <allcaps> syslog </allcaps> configurable defaults for power on and proc … describe the contribution fix # <number> . separates configurable defaults for power on and processor reset . default power on set to overwrite and default processor reset to discard . added an additional unit test to cover the path added to cfe_es_taskinit . testing performed : ran unit tests expected behavior changes upon power on reset , default system log mode set to overwrite . upon processor reset , default system log mode set to discard . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , replace os_fs_ * return codes with common definitions describe the contribution removed the following os_fs * defines from osapi - os - filesys . h : os_fs_success , os_fs_error , os_fs_err_invalid_pointer , os_fs_err_no_free_fds , os_fs_err_invalid_fd , and os_fs_unimplemented fixes # <number> used sed to perform a bulk find / replace on each one to swap with common definitions . testing performed steps taken to test the contribution : ran unit tests . expected behavior changes none system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , add check for usedflag and sets <allcaps> apid </allcaps> to cfe_tbl_not_owned describe the contribution updates cfe_tbl_cleanupapp such that it now checks the ' used flag ' prior to calling cfe_tbl_removeaccesslink for a given tblhandle . also sets the appid to cfe_tbl_not_owned after removing the access descriptor link from linked list . fix # <number> testing performed : <number> . modified cfe_es_runloop such that if appsate = = cfe_es_appstate_waiting , then it will not return false . this was done to allow the restart command to work . <number> . created a test app that uses tables . <number> . modified table noop command such that it prints out table access descriptor data when received . <number> . ran the following test - note that i sent a noop after each step to review data ( test results attached ) a . started <allcaps> cfe </allcaps> b . deleted test app c . restarted sample app d . restarted sample app ran test twice - once to ensure i could recreate the error . once to ensure changes corrected error . <number> . ran unit tests expected behavior changes will no longer receive ' cfe_tbl : removeaccesslink - putpoolbuf [ <number> ] fail ' error . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard issue_121_w_fix . txt <url> issue_121_wo_fix . txt <url>"
"fix # <number> , avoid deadlock in cfe_es_creatobjects <section> now uses cfe_es_syslogwrite_unsync inside shared data lock fixes # <number> <section> <number> . ci - <url> <section> no longer locks while locked ( no issue observed on linux / posix , but user reported issue on freertos <number> ) <section> - hardware : ci - os : ubuntu <number> - versions : bundle w / this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"duplicate <allcaps> cfe </allcaps> error codes <section> while coding fixes for another ticket , happen to stumble upon two <allcaps> cfe es </allcaps> error codes with the same value . <url> <section> should have unique / distinguishable values <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fixes # <number> , # <number> , # <number> , and # <number> see bundle ic at <url> <section> see prs bundle ci - <url> <section> pr # <number> - builds without error . pr # <number> - no changes , exposes cfe_sb_getpkttype and adds the stub . pr # <number> - use the <code> and <code> properties from the osal target and apply them to the entire <allcaps> cfe </allcaps> build as a directory - scope property . no impact until these are set in <allcaps> osal </allcaps> . pr # <number> - coverage data ( make lcov ) again includes the <allcaps> cfe </allcaps> core code <section> see prs , bundle ci - ubuntu : bionic <section> joseph hickey , vantage systems , inc . jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
<allcaps> osal </allcaps> coverage report includes unit tests <section> coverage numbers include the actual unit test code <section> exclude unit test code from coverage results <section> none <section> nasa / osal # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix # <number> , update coverage compile / link flag options <section> <allcaps> osal </allcaps> now sets these as ut_coverage_compile_flags , ut_coverage_link_flags . building and linking the ut executable needs a corresponding update . fixes # <number> <section> build with <code> and confirm that all unit tests are building <section> coverage data ( <code> ) now includes the <allcaps> cfe </allcaps> core code again <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> similar change will be needed in apps ( forthcoming ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , updates cfe_sb_getlastsenderid to check if message has been sent on pipe <section> updates cfe_sb_getlastsenderid to check if a message has been sent on the associated pipe prior to setting the receivers pointer to the associated address of ' sender ' in the buffer descriptor . includes associated unit test addition to cover the additional path added to cfe_sb_getlastsenderid . includes an addition of a sb status code and event id . fix # <number> <section> <number> . ran unit tests . <number> . reviewed coverage test results to ensure that additional path added is covered with the updated unit test . <section> cfe_sb_getlastsenderid will now detect if it is being called prior to a message being sent on a given pipe . system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"fix # <number> , expose isvalidmsgid and partially address # <number> consistent use of msgid types <section> fixes # <number> this exposes the <code> in the <allcaps> cfe sb </allcaps> public <allcaps> api </allcaps> , rather than confining it to the private / internal <allcaps> api </allcaps> . partially addresses # <number> this also includes a number of internal changes to make <allcaps> cfe </allcaps> core apps consistent in their use of the cfe_sb_msgid type and with the <allcaps> cfe sb api </allcaps> . this employs the appropriate <allcaps> cfe sb </allcaps> abstraction <allcaps> api </allcaps> whenever any of the following needs to happen : - use of a cfe_sb_msgid_t value within a printf ( event , syslog , etc ) . - initialization of a cfe_sb_msgid_t from an integer value - comparison of two cfe_sb_msgid_t values - checking if a cfe_sb_msgid_t value is within the valid set notable exception to integer conversion rules is for the <allcaps> mid </allcaps> <code> values , which are not changed for backward compatibility reasons . these are still defined as integers , and used directly in the code . also worth noting - this replaces the switch / case constructs used in message dispatch with a nested if / else based on cfe_sb_msgid_equal ( ) , as the switch statement can only be used with an integer . a few new macros are introduced , mainly because the inline functions that already existed for this purpose cannot be used where evaluation must be done at compile time ( e . g . constants , struct initialization ) . these are initially just typecasts , but could become more interesting in future revisions . <section> build with <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> - run all unit tests and confirm passing - run sanity check on <allcaps> cfe </allcaps> , boot up and issue commands to each core app using <code> . ensure no changes to message routing / processing for every core app . <section> this exposes the <code> for application usage . no other <allcaps> api </allcaps> or behavior changes . all other changes are transparent . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> this is a step in the direction of related issue # <number> but does not do anything that would affect backward compatibility with the way the <allcaps> mid </allcaps> integers are currently defined and used . it does introduce a few of the macros that will become more relevant / necessary ( i . e . so they can evolve beyond a simple typecast / passthrough ) . <section> joseph hickey , vantage systems , inc . * <allcaps> edit </allcaps> * added reference for msgid handling"
"fix # <number> - cfe_tbl_load ( ) errors - strawman for <allcaps> ccb </allcaps> consideration <section> moved cfe_tbl_loadfromfile ( ) code into cfe_tbl_load ( ) , lots new <allcaps> eid </allcaps> ' s , some new status codes , removed syslog calls from load ( ) <section> builds and runs , just no ut code changes yet . <section> cfe_tbl_load ( ) now produces events instead of writing to syslog ( and generating a generic event ) . also removed cfe_tbl_loadfromfile ( ) as it was only called by cfe_tbl_load ( ) ( and the ut code , which will have to be adapted to call load ( ) . ) <section> debian <number> <section> <email>"
"fix # <number> and # <number> , resolve app table scanning race conditions <section> fixes # <number> fixes # <number> partially addresses # <number> - runloop now increments task counter instead of main app execution counter create a new background job to handle the maintenance tasks that had been performed in the es main task as part of the <code> routine . all app state changes , including those invoked by messages , are now handled by this job . this also slightly changes the semantics of cfe_es_runloop and cfe_es_exitapp . now , the cfe_es_runloop routine no longer requires a runstatus buffer . instead , the only thing that matters is the runstatus value that is eventually passed to cfe_es_exitapp after the shutdown is complete . this should be mostly backward compatible , as the recommended app pattern would pass the same value to both functions . this commit also fixes # <number> , as the value passed to cfe_es_exitapp will not override a request that was already pending . <section> build with enable_unit_tests = <allcaps> true </allcaps> for native (x 8 6 - <number> linux ) and <allcaps> rtems </allcaps> ( i686 - rtems4 . <number> ) - run unit tests and confirm all passing - check coverage report ( lcov ) and confirm no reduction in coverage for modified functions , and newly added functions are fully covered . - run <allcaps> cfe </allcaps> and send various restart / reload / delete requests for sample_app - confirm that sample_app exits itself and is restarted / reloaded / deleted correctly by es . - confirm that if sample_app does not exit itself , it is still forcibly deleted by es - confirm same behavior on <allcaps> rtems </allcaps> <section> no impact to <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> interface or <allcaps> api </allcaps> . internal changes only . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit ( native ) - <allcaps> qemu </allcaps> ( i686 - rtems4 . <number> ) <section> this reuses the background task concept introduced in pull # <number> . will rebase this changeset as soon as that pull request makes it into a stable baseline . <section> joseph hickey , vantage systems inc ."
"fix # <number> , perf log threading and concurrency issues <section> replaces the <code> with a standard <allcaps> osal </allcaps> mutex for protecting the shared / global perflog data structure . this may introduce unexpected task switches when contention occurs , but it ensures proper exclusion with respect to the data structures . removes the temporary child worker task that was spawned for writing the log data to a file , and replace with a more generic <allcaps> cfe es </allcaps> background task . the background task is started at boot and pends on a semaphore until there is work to do . the background performance log dump is implemented as a state machine which is called repeatedly over time from the background job task . this performs a limited amount of work on each invocation , and resumes where it left from the previous invocation . fixes # <number> fixes # <number> <section> build <allcaps> cfe </allcaps> with enable_unit_tests = <allcaps> true </allcaps> confirm all unit tests pass confirm near <percent> coverage on all newly added / modified code run <allcaps> cfe </allcaps> and send commands to start performance logging send other <allcaps> cfe </allcaps> commands to generate performance log activity send command to stop performance log and generate a dump file confirm validity of dump file by opening with java tool . no errors reported when opening file . <section> no impact to behavior . previously the perf log dump file frequently contained errors due to out of order or otherwise corrupted entries , which is now fixed . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> - bit ( native ) - <allcaps> mips </allcaps> <number> target running in <allcaps> qemu </allcaps> ( big endian ) <section> joseph hickey , vantage systems , inc ."
"fix # <number> , expose cfe_sb_getpkttype <section> fix # <number> note this only exposes and adds the stub . requirement (# <number> ) / functional test / coverage test still in work . <section> steps taken to test the contribution : <number> . built with <allcaps> simulation </allcaps> = native and enable_unit_tests = true <number> . tests passed <number> . ran with cfs - groundstation and observed reported sequence counter that wasn ' t reporting actual sequence count <number> . note it does pass the sequence count test , which is what sb uses getpkttype for <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : bundle w / this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , opaque cfe_sb_msgid_t values <section> ensures that all <allcaps> cfe </allcaps> core apps outside of sb itself treat the <code> type as an opaque / abstract value and do not assume it is an integer . this pull request is primarily a concept / preview of this idea in action for <allcaps> ccb </allcaps> discussion . it does work though and could be merged as - is although i expect some change requests . currently the type safe enforcement is enabled based on a compile definition <code> . this could be moved into the "" omit deprecated "" switch instead rather than a new switch . the type - safe enforcement switches cfe_sb_msgid_t from being a simple integer value to a structure wrapper , so it cannot be implicitly exchanged with other integers , nor can it be involved in any arithmetic calculation . however , this is a breaking <allcaps> api </allcaps> change due to the way most apps specify their msgid values as integers via <code> macros . fixes # <number> <section> build <allcaps> cfe </allcaps> for <allcaps> simulation </allcaps> = native ( <number> bit linux ) execute all unit tests sanity check <allcaps> cfe </allcaps> by booting and sending commands with cmdutil in particular check all <allcaps> cfe sb </allcaps> routing info , map info commands and compare file output before and after change to make sure data is the same . <section> no externally - visible changes ( i . e . <allcaps> cmd </allcaps> / <allcaps> tlm </allcaps> , files , tables , etc ) . <allcaps> api </allcaps> changes when building with enforcing mode : - all <allcaps> cfe sb api </allcaps> operations that accept or return a cfe_sb_msgid_t ( subscribe , etc ) must be supplied with an instance of <code> only , not an integer . passing or assigning to a bare integer triggers a compiler error . - macros / conversions are provided to bridge the gap , and allow printing as integer for syslog / events as well as converting from an integer - no longer can <code> on a msgid - - must use <code> and a nested if . - this also exposes cfe_sb_ismsgidvalid ( ) in the public <allcaps> api </allcaps> . <section> - ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc ."
"integration candidate - <number> - <number> - <number> <section> integration candidate fixes # <number> , # <number> , # <number> , and # <number> <section> see prs bundle ci see <url> test log : <url> <section> pr # <number> - cmd code ( and checksum ) are always in the same place ( matches <allcaps> gsfc </allcaps> spec for command secondary header ) pr # <number> - no travis - ci configuration warnings pr # <number> - document change only , updates the interrupt handler section to note <allcaps> osal </allcaps> deprecation pr # <number> - no impact to behavior . previously the perf log dump file frequently contained errors due to out of order or otherwise corrupted entries , which is now fixed . <section> see prs bundle ci - ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , propagate the <allcaps> osal </allcaps> compile definitions to <allcaps> cfe </allcaps> build <section> use the <code> and <code> properties from the osal target and apply them to the entire <allcaps> cfe </allcaps> build as a directory - scope property . at this time , the <allcaps> osal </allcaps> library build does not use / export these properties so this is effectively a no - op for the <allcaps> cfe </allcaps> build and can be merged with no effect . however , in a future version ( specifically after nasa / osal # <number> gets fixed ) , the <allcaps> osal </allcaps> library will export these interface properties and this will become important . fixes # <number> <section> built for all three test platforms ( ppc - vxworks6 . <number> , i686 - rtems4 . <number> , native / x86 - <number> linux ) . sanity check <allcaps> cfe </allcaps> build boots and runs , unit tests run . <section> no impact to behavior - build is identical because these properties are currently empty / not set in the current <allcaps> osal </allcaps> build . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit . <section> also locally tested against a version of <allcaps> osal </allcaps> + <allcaps> psp </allcaps> that includes all the latest proposed changes and confirm that this still works . <section> joseph hickey , vantage systems , inc ."
"fix # <number> : shell unsigned pkt length bug <section> fix # <number> really just avoids problems if users mistakenly define cfe_mission_es_max_shell_pkt as an unsigned value ( 2 0 0 0 u , for example ) <section> steps taken to test the contribution : <number> . ci suggest requester ( <user> ) confirm it works as requested <section> none , except if someone defines this value as unsigned it will not break . <repeated> <section> - hardware : <allcaps> amd </allcaps> - os : ubuntu <number> - versions : bundle + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate all cfe_os error codes <section> see discussion on # <number> , cfe_os error codes are an unnecessary abstraction . no plan to translate between the two , so no need to abstract . <section> deprecate and just use the <allcaps> osal </allcaps> error codes directly . <section> see discussion in # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fixes # <number> <section> bundle ci see pr # <number> <section> no behavior changes . this change only enables future transition to using the <allcaps> osal bsp </allcaps> <section> bundle ci - ubuntu : bionic <section> joseph hickey - vantage systems , inc . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , removes message_format_is_ccsds ifdefs from code <section> fixes # <number> , removes message_format_is_ccsds ifdefs from <allcaps> cfs </allcaps> code testing performed ran unit tests system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , contributor info dan knutsen <allcaps> nasa </allcaps> / goddard"
"integration candidate <number> - <number> - <number> <section> integration candidate <number> - fix # <number> fixes : # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> documentation scrubs and a makefile change to report branch coverage <section> tested in bundle ci - see <url> <section> see related prs : # <number> # <number> # <number> <section> ci ubuntu : bionic <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate - <number> <section> fixes # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> also adds pr # <number> <section> see prs # <number> , # <number> , # <number> , # <number> ci on cfs - bundle integration candidate , see <url> <section> pr # <number> - prevents the call to file ( to_native_path . <repeated> ) from building its own path with content identical to src_local_path . pr # <number> - <allcaps> pdf </allcaps> users guide can be generated by make process pr # <number> - removes dependencies on cfe_platform_cfg . h from the unit test stub code . fixes a name collision where different configs exist within the same architecture . pr # <number> - documentation only <section> see prs above ci : ubuntu : bionic <section> see prs above <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> elizabeth timmons - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> joseph hickey - vantage systems , inc . ( <allcaps> cla </allcaps> on file ) andrei - costin zisu - planetary transportation systems gmbh ( <allcaps> cla </allcaps> on file )"
"apis missing unit tests <section> the following apis need to have additional unit tests added : cfe_es_api . c : cfe_es_deleteapp - should test on boundary conditions for appid cfe_es_api . c : cfe_es_getappidbyname - don ’ t see where this is ever called in unit test cfe_es_api . c : cfe_es_reloadapp - should test on boundary conditions for appid cfe_es_api . c : cfe_es_restartapp - no success path test cfe_esmempool . c : cfe_es_getmempoolstats - no success path test cfe_sb . h : cfe_sb_msgid_equal - don ’ t see where this is ever called in unit test cfe_sb . h : cfe_sb_msgidtovalue - don ’ t see where this is ever called in unit test cfe_sb . h : cfe_sb_valuetomsgid - don ’ t see where this is ever called in unit test cfe_sb_api . c : cfe_sb_subscribefull - there are <number> cases where cfe_sb_bad_argument can get returned … ut should test each one individually . also this is outside the scope of the argument validation audit , but there are <number> additional return codes not tested in the unit test . cfe_sb_api . c : cfe_sb_subscribelocal - consider subscribing to message with limit greater than cfe_platform_sb_default_msg_limit cfe_tbl_api . c : cfe_tbl_dumptobuffer - no success path test cfe_tbl_api . c : cfe_tbl_getaddresses - should test on boundary conditions for numtables cfe_tbl_api . c : cfe_tbl_getstatus - don ’ t see a success path test cfe_tbl_api . c : cfe_tbl_releaseaddresses - no success path test . also , should test on boundary conditions for numtables cfe_tbl_api . c : cfe_tbl_update - don ’ t see a success path test cfe_tbl_api . c : cfe_tbl_validate - no success path test cfe_time_tone . c : cfe_time_local1hzisr - don ’ t see where this is ever called in unit test <section> unit tests test all success / error paths <section> na code review / audit <section> dan knutsen <allcaps> nasa </allcaps> goddard"
"ic <number> <section> integration candidate <number> fixes # <number> , # <number> , and # <number> see prs # <number> , # <number> , and # <number> for more info <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> # <number> - no longer requires sed "" hack "" to change the setting in default_config . h # <number> - clean build # <number> - none <section> ci <section> see prs # <number> , # <number> , and # <number> for more info <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> daniel knutsen - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , build failure in ut stubs with multiple cpus <section> fix # <number> removes dependencies on <code> from the unit test stub code . the behavior of the stubs should not be dependent on the <allcaps> fsw </allcaps> runtime config . this also fixes a duplicate name collision where different configs exist within the same architecture , causing a conflict on the ut target names . <section> build with enable_unit_tests = <allcaps> true </allcaps> for both native and cross environments , with both a default config ( single <allcaps> cpu </allcaps> / config ) and a more complex two <allcaps> cpu </allcaps> config . execute unit tests and confirm all passing in all configs . <section> the two <allcaps> cpu </allcaps> config originally fails and now builds and runs ut with this change . no changes to <allcaps> fsw </allcaps> , only ut . <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit cross build for <number> - bit architecture <section> joseph hickey , vantage systems , inc . ( <allcaps> cla </allcaps> on file )"
"fix # <number> , link <allcaps> cfe </allcaps> core with <allcaps> osal bsp </allcaps> <section> link the <allcaps> cfe </allcaps> core target with the <allcaps> osal bsp </allcaps> library by including this in the final link library list . fixes # <number> <section> build and run unit tests on native (x 8 6 - <number> ) and pc - <allcaps> rtems </allcaps> . confirm <allcaps> cfe </allcaps> runs normally , no change . <section> no behavior changes . this change only enables future transition to using the <allcaps> osal bsp </allcaps> rather than duplicating startup logic in the <allcaps> cfe psp </allcaps> . initially the linker should drop / ignore the content of this library . <section> - ubuntu <number> <allcaps> lts </allcaps> , <number> bit ( native ) - pc - <allcaps> rtems </allcaps> using i686 - rtems4 . <number> cross build <section> this depends on the related change in nasa / osal # <number> which defines the separate <code> target . it should be merged at the same time ( or after ) the <allcaps> osal </allcaps> change is merged . <section> joseph hickey , vantage systems , inc ."
"<allcaps> cfe </allcaps> core build should link with the <allcaps> osal bsp </allcaps> library <section> the <allcaps> cfe psp </allcaps> has historically duplicated some logic that was also in the <allcaps> osal bsp </allcaps> . in an effort to consolidate this and have only one basic <allcaps> bsp </allcaps> implementation , the <allcaps> cfe psp </allcaps> should be an extension of the <allcaps> osal bsp </allcaps> rather than duplicating the logic . <section> the first step to accomplish this is to have the <allcaps> cfe </allcaps> final link also include the <code> library in the final link . <section> including <code> should not affect existing builds as long as it is included _after_ the <allcaps> psp </allcaps> , so the linker will not pull in duplicate symbols . it should be effectively a no - op / ignored in the current build but enables a future transition to using the osal - provided <allcaps> bsp </allcaps> for startup . <section> joseph hickey , vantage systems , inc ."
"ic - <number> describe the contribution fix # <number> , # <number> , # <number> , # <number> , and # <number> requirement and documentation scrubs # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , and # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes pr # <number> , pr # <number> , pr # <number> pr # <number> , pr # <number> pr # <number> , pr # <number> , pr # <number> - requirement scrubs . pr # <number> - updated <allcaps> api </allcaps> documentation pr # <number> - removed references to device drivers in both code and documentation . pr # <number> - fixes incorrect debug messages in <code> pr # <number> - numofchildtasks will now be decremented when a child task is deleted . system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"deprecate / delete cfe2fsseconds and fs2cfeseconds <section> cfe2fsseconds and fs2cfeseconds never clearly required / defined . <section> remove unrequired functionality . <section> define explicit use case , requirement , and testing within cfe context . <section> see # <number> and # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> describe the contribution fix # <number> , # <number> , and # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> passes after adding # <number> expected behavior changes # <number> - adds a new function , cfe_sb_getpipeidbyname , which retrieves the pipe id given a name of a pipe . # <number> - improvement in error reporting when using a pipe name that is already in use , or when the queue limit has been reached . system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cfe_time_print format fix describe the contribution fix # <number> , cfe_time_print format fix testing performed build process : - make distclean - make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep - make - make install verified nominal / clean build . ran unit tests . expected behavior changes clean build system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , remove obsolete * . mak files <section> fix # <number> <section> steps taken to test the contribution : <number> . make prep <number> . make <number> . make install no issues observed <section> none <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : current bundle with this change <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"warnings issued when building on ubuntu - <number> <section> the warnings contained in the attached file are issued when building on ubuntu - <number> . <section> nominal build process <section> clean build <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> , <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix , # <number> , fix # <number> , fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - resolve doxygen warnings - add omit_deprecated flag - add strict warnings and enforce - always increment sequence counter - fix comments - add code coverage test to evs <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix , # <number> , fix # <number> , fix # <number> , fix # <number> <section> steps taken to test the contribution : <number> . current ci passes <number> . enhanced ci in # <number> passes debug / with deprecated elements testing <section> - resolve doxygen warnings - add omit_deprecated flag - add strict warnings and enforce - always increment sequence counter - fix comments - add code coverage test to evs <section> - ci : ubuntu <number> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , numofchildtasks not decremented <section> fixes # <number> , numofchildtasks not decremented <section> steps taken to test the contribution : <number> . nominal build process . <number> . ran unit tests . <section> numofchildtasks will now be decremented when a child task is deleted . <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> merge # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> , # <number> fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> , fix # <number> fix # <number> <section> <number> . checked out ic bundle <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed <number> . make osalguide to confirm it built <number> . ran core - cpu1 ( cfs ) , no errors / warnings / failures observed <section> os timer test should now always pass <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic branches <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove device driver references in code <section> reference pull request <url> update remove reference to driver <section> anh van , <allcaps> nasa </allcaps> goddard"
"the difference in linking behavior on linux vs macos results in build errors on macos <section> i am getting the following build error when building on macos ( more complete log below ) : <code> let us take a <code> symbol for a typical example : it is a symbol from <code> which does not exist yet at the moment when the <code> above is linked . this works on linux because it seems to allow this kind of a forward declaration but it does not on macos which fails immediately . what macos expects here is an explicit <code> to be added to the compilation line above : <code> i recognize that <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> uses a two - stage cmake generation process when one cmake tree calls to the second which builds the cpu1 - related code and at this point , it looks like on linux the <code> is compiled from the first tree and then with its dependencies forward - declared it gets linked to a final executable when built in the second tree and that ' s where its undefined symbols are resolved . i have created a minimal example that demonstrates this difference in the linking behavior on linux and macos on github ] ( <url> and asked [ a question on stackoverflow <url> to see if i can make macos / clang to match the behavior of <allcaps> gcc </allcaps> / linux but so far i am not aware of what could be done to resolve this . <section> this issue makes me think that the order of how things are built by <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> could be changed . macos linking errors indicate that we are building something in the first cmake tree that depends on a cpu1 - specific code that is built from the second cmake tree . i could see it practical to move the compilation and linkage of all cpu1 - specific code to the second stage so that the order of dependencies is strictly direct and there are nowhere any forward - declared undefined symbols of this kind in the binaries . <section> - i will try to see if i can find any linker flags in <code> that could activate the linux - like linking behavior but i am not sure if such flags exist . - i can create my custom set of cmakelists . txt files to streamline the build process and eliminate the need in "" forward declarations "" but this will result in my own custom build system for <allcaps> cfs </allcaps> / <allcaps> cfe </allcaps> which i would rather like to avoid . <section> please check the stackoverflow question above . <section> stanislav pankevich - - - full build error log : <code>"
"fix # <number> , remove reference to device driver <section> remove reference to device driver . <section> steps taken to test the contribution : <number> . make prep <number> . make install <number> . run cfs <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - ubuntu <number> - cfe <number> , osal <number> . 2 a <section> anh van , <allcaps> nasa </allcaps> goddard"
"cmake : minor changes to improve the clion <allcaps> ide </allcaps> cmake experience <section> this is needed when <allcaps> cfe </allcaps> ' s root cmakelists . txt is not the highest level cmakelists . txt in the project . my <allcaps> ide </allcaps> is clion and it works best when there is the highest level cmakelists . txt in the root of a project ' s source code . this changeset enables a necessary indirection : from <code> to <code> and this allows building the project with the cmakelists . txt file in the top - level mission source directory . <section> i have cloned the root cfs repository and have cloned all submodules . <section> i have created a cmakelists . txt file in the cfs folder with the following contents : <code> <section> i have made the changes from this changeset . after this sequence of steps , the clion <allcaps> ide </allcaps> picks up the root - level cmakelists automatically and i can already start building targets , such as <code> , <code> etc . and the only parameter i need to configure cmake is : <code> . <section> please see the steps above . <section> with this change , getting <allcaps> ide </allcaps> to recognize the cfs build targets is way easier if your <allcaps> ide </allcaps> is clion . <section> - os : macos <number> . <number> - versions cfe and cfs , latest master ( <url> and <url> <section> stanislav pankevich ( <allcaps> pts </allcaps> gmbh , private german space company ) . <section> > you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted the corporate <allcaps> cla </allcaps> has been signed on <date> and sent to the email address as specified in the <allcaps> cla </allcaps> document ."
"fix # <number> , unit test for cfe_evs_task . c <section> add additional coverage test for cfe_evs_task . c <section> steps taken to test the contribution : <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make install <number> . make test <number> . make lcov <number> . verify <number> percent coverage for cfe_evs_task . c <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> , es performance debug messages <section> fixes issue # <number> , es performance debug messages have incorrect parameter <section> <number> . built with updated cfe_es_perf . c . <number> . sent setperffiltermaskcmd & setperftriggermaskcmd commands . <number> . verified messages are now correct . <number> . ran unit tests . <section> <allcaps> debug </allcaps> messages are now correct . <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , resolve doxygen obsolete warning <section> resolve doxygen obsolete warning <section> steps taken to test the contribution : <number> . make prep <number> . make osalguide / usersguide / doc <number> . verify warning is gone <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> # <number> , add compile flag abstractions <section> fixes # <number> , fixes # <number> adds strict_no_warnings and omit_deprecated prep options for ci and as example build <section> built with strict_no_warnings = true , false , and undefined built with omit_deprecated = true , false , and undefined ( note sample_app fails ) confirmed flags get globally applied ( not great scoping , but ensures flag coverage ) <section> simplifies / enables ci based on abstracted flags , see <url> <section> - cfs dev server <number> - os : ubuntu <number> - versions : master bundle with this change <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update tone leap variable <section> fixes # <number> update attoneleaps to attoneleapseconds when cfe_platform_time_cfg_bigendian is defined to match the updates for ! cfe_platform_time_cfg_bigendian . <section> <allcaps> tbd </allcaps> <section> now will build / execute with cfe_platform_time_cfg_bigendian defined <section> - cfs dev server <number> - os : ubuntu <number> - versions : current master bundle <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , clean up table services comments / references <section> fixes # <number> note that there were a couple cases where function prototypes were defined in the wrong header files . this was also cleaned up as part of this issue . <section> testing consisted of building / running the software and re - running the unit tests . <number> . build steps : make prep make make install <number> . ran software : . / core - cpu1 <section> none <section> oracle vm virtualbox os : ubuntu - <number> version : cfe <number> . <number> ; <allcaps> osal </allcaps> <number> . <number> ; <allcaps> psp </allcaps> <number> . <number> <section> none <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"fix # <number> , improve sb create pipe error reporting <section> improves error reporting for cfe_sb_createpipe ( ) <section> standard build process , ran sb unit tests . <section> improvement in error reporting when using a pipe name that is already in use , or when the queue limit has been reached . <section> debian <number> <section> add any other context about the contribution here . <section> <email> <section> n / a"
"fix issue # <number> - cfe_time_tone . c implements fix for : cfe time var name changed in . h but not in code # <number> <section> fixes issue <number> . <section> steps taken to test the contribution : <number> . modified cpu1_platform_cfg . h such that i could reproduce the error : <hashtag> un def </hashtag> cfe_platform_time_cfg_bigendian - - > <hashtag> define </hashtag> cfe_platform_time_cfg_bigendian <number> . after reproducing error , corrected cfe_time_tone . c via replacing all instances of attoneleaps variable with attoneleapseconds . <number> . recompiled software - make prep - make - make install <number> . ran software to ensure that the issue was fixed . - . / core - cpu1 <section> the software will compile and run successfully if cfe_platform_time_cfg_bigendian is defined . <section> - oracle vm virtualbox - os : ubuntu - <number> - version : cfe <number> . 0 a ; <allcaps> osal </allcaps> <number> . 2 a <section> none <section> dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps> <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"integration candidate <number> <section> fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"recommended lgtm issues : classes with too many fields <section> lgtm issue classes with too many fields : cfe_tbl_task . h <code> inc / cfe_sb_msg . h <code> inc / cfe_tbl_msg . h <code> fs / cfe_fs_decompress . h <code> inc / cfe_es_msg . h <code> inc / cfe_es . h <code> inc / cfe_time_msg . h <code> sb / cfe_sb_priv . h <code> time / cfe_time_utils . h <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"recommended lgtm issues <section> recommended issues from lgtm : es / cfe_es_shell . c <code> cfe_es_apps . c <code> cfe_es_start . c <code> cfe_es_task . c <code> cfe_sb_task . c <code> cfe_time_task . c <code> root / cfe / cmake / target / src / target_config . c <code> es / cfe_es_api . c <code> evs / cfe_evs_task . <code> tbl / cfe_tbl_task_cmds . c <code> sb / cfe_sb_api . c <code> cfe_fs_decompress . c <code> cfe_sb_msg_id_util . c <code> inc / cfe_tbl_filedef . h <code> <section> anh van , <allcaps> nasa </allcaps> goddard"
"lgtm issue <section> cfe_es_perf . c <code> cfe_fs_decompress . c <code> cfe_es_perf . c /* enable interrupts */ <code> cfe_sb_task . c <code> cfe_tbl_internal . c <code> cfe_time_api . c <code> <section> steps to reproduce the behavior : <number> . build against lgtm <section> anh van , <allcaps> nasa </allcaps> goddard"
"issue # <number> , resolve cpp check <section> fix cppcheck warning <section> steps taken to test the contribution : <number> . make prep <number> . make <number> . make install <number> . verify still run <section> - hardware - ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"restart app delete ' s app prior to missing file check ( requirement failure ) <section> requirement ces1007 . <number> - if the original cfe application file is not found then the cfe shall reject the command , increment the invalid command counter , and generate an event message . rationale : can not restart the application if the original file has been removed . in this case , the application will continue without a restart . if you send a restart now with the file remove , the app exits prior to the restart failing . <section> steps to reproduce the behavior : <number> . normal startup ( with sample_app ) <number> . remove sample_app . so <number> . send es restart app for "" sample_app "" <number> . observe error : <code> <section> behavior matches description , likely due an update to move behavior in rationale to requirement . should just check for file existing prior to delete of app . <section> <url> <url> <section> - cfs dev server - os : ubuntu <number> - versions : current dev cfe <number> . <number> <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , istar implementation <section> istar implementation . <section> steps taken to test the contribution : <number> . modify sample app to call istar <number> . make <number> . make install <number> . run and verify result . <section> - hardware - os : ubuntu <number> - <allcaps> cfe </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"istar implementation <section> implement istar <allcaps> api </allcaps> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix for # <number> <section> a clear and concise description of what the contribution is [ e . g . fixes issue <hashtag> x </hashtag> ] <section> steps taken to test the contribution : <number> . build steps ' . <repeated> ' <number> . execution steps ' . <repeated> ' <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : x <elongated> ( if applicable ) - behavior change : x <elongated> ( if applicable ) - or no impact to behavior <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] <section> add any other context about the contribution here . <section> full name and company / organization of all contributors ( required for acceptance ) <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"cfe_sb_deletepipefull event uses appid instead of taskid <section> near the end of cfe_sb_deletepipefull , it generates an event on successful deletion of the pipe . as part of the message , it ' s supposed to report the "" owner "" but it calls cfe_sb_getapptskname ( owner , fullname ) where owner is the appid , not a ( valid ) taskid . this causes cfe_sb_gettaskinfo ( ) to generate a syslog error and return an error code . <section> delete a pipe . <section> should produce a proper event . unsure if it should report the task name or the app name . also should see if unit test should have caught this bug . <section> cfe_sb_api . c # <number> - cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_eventtype_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , ( int ) pipeid , cfe_sb_getapptskname ( owner , fullname ) ); <section> debian vm <section> add any other context about the problem here . <section> <email>"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes . - doxygen / cppcheck warning / error cleanup - lcov update - removal of old test results <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
table decompression <section> compressed tables could save space in nv - rams . <section> the decompression feature ( implemented already for apps ) can be extended to tables . <section> none . <section> n / a <section> onur <allcaps> turhan </allcaps>
"first draft of <allcaps> contributing </allcaps> . md <section> the contribution is a draft of "" <allcaps> contributing </allcaps> . md "" <section> opened md in browser to confirm proper formatting . <section> folks will start following the guidance . <section> windows <number> laptop . <section> chris knight , <allcaps> nasa </allcaps> ames research center ."
missing cfe deployment guide <section> the <code> named in the <code> is not included in the repository and is not easy to find . <section> marco a . feliu - * national institute of aerospace *
"fix - <number> - remove_pipename changes <section> removes the pipename field from the cfe_sb_piped_t struct . <section> make install make test <section> a clear and concise description of how this contribution will change behavior and level of impact . - <allcaps> api </allcaps> change : internal change to cfe_sb_getpipename - behavior change : reduced memory impact of the cfe_sb_piped_t table <section> - hardware : vm - os : linux - versions : "" master "" <section> chris knight , <allcaps> nasa </allcaps> ames research center"
"fix # <number> - resolve explicit link <section> fix # <number> , resolving explicit link and any remaining misc . warning . <section> steps taken to test the contribution : <number> . make usersguide <number> . verify warning is gone <section> - hardware - ubuntu <number> - rc - <number> - <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"fix # <number> : add script to apply style <section> fixes # <number> , adds script to apply style <section> <number> . ran against ci_lab repo , confirmed acceptable style <section> no functional changes <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> : exclude unit tests from lcov report <section> fixes # <number> , exclude unit - test files from lcov report <section> steps taken to test the contribution : <number> . build / test / run lcov <code> <number> . processed files no longer include unit test code , confirmed processed file list against repo <number> . coverage from <number> . <number> was <code> with unit test files included , now <code> <section> valid coverage of flight code now reported <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , cpp check warning <section> fix # <number> , resolve cpp check warning <section> steps taken to test the contribution : <number> . cppcheck - - force . <number> . verify warning is gone <section> hardware <number> ) ubuntu18 . <number> <number> ) cppcheck <number> , cfe <number> . <number> , osal <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , fix misc . doxygen <section> fix # <number> , fix misc . doxygen issue . did not fix cfe_es . h : <number> , and cfe_sb_msg . h : <number> . classify as different issue . <section> steps taken to test the contribution : <number> . make usersguide <number> . verify warning is gone . <section> - hardware - ubuntu <number> - doxygen <date> , rc - <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> : remove test results from <allcaps> fsw </allcaps> path <section> fixes # <number> <section> steps taken to test the contribution : <number> . checked out master bundle with this change , nominal setup ( from <allcaps> readme </allcaps> ) <number> . make enable_unit_tests = true <allcaps> simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test ( timer test failed as expected , rest passed ) <number> . make lcov no issues ( and none expected since this wasn ' t a code change ) <section> - no impact to behavior <section> - hardware : cfs dev server - os : ubuntu <number> - versions : master bundle with this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fixes # <number> , fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings <section> resolved potential lockup bug resolved anomalous messages produced during app delete <section> - cfs dev server - os : ubuntu <number> - versions : bundle with <allcaps> osal </allcaps> and cfe ic - <number> branches <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add capability to build <allcaps> osal </allcaps> code coverage tests as part of build <section> currently code coverage testing for <allcaps> osal </allcaps> is not integrated with the cfe build system . it ' s possible to build separately , but then care has to be taken to match configurations and extra steps are required . <section> build <allcaps> osal </allcaps> code coverage ( of the shared and target <allcaps> osal </allcaps> ) executables for the host when "" enable_unit_tests "" is true , using the osconfig . h defined for the build ( vs default in the <allcaps> bsp </allcaps> ) . <section> it ' s possible to build stand alone , but not trivial . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add vxworks example toolchain <section> fixes # <number> , add vxworks sample toolchain <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> bundle and standard setup per <allcaps> readme </allcaps> <number> . added <code> to targets . cmake <number> . set up vxworks build environment <code> <number> . <code> <number> . <code> <number> . <code> <number> . loaded test executable to target <number> . executed all test executables ( all passed except sem - speed - test with exception at interrupt level , and <number> of the timer tests returned slightly out of tolerance values ) <section> able to build for cfs lab vxworks setup <section> - hardware host : cfs dev server , target : mcp750 - os host : ubuntu <number> . <number> <allcaps> lts </allcaps> , target : vxworks <number> - versions rc - <number> . <number> bundle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> n / a"
"integration candidate <number> - <number> - <number> <section> integration candidate for pull requests approved at <number> - <number> - <number> <allcaps> ccb </allcaps> covers the following pull requests : # <number> - ensure table naming consistent across cpus # <number> - fix infinite loop when gz file is truncated # <number> - update obj creation failure requirement <section> build code for native host ( <allcaps> simulation </allcaps> = native ) with unit test enabled execute <allcaps> cfe </allcaps> core , issued various test commands from cmdutil execute all unit tests and confirm passage . <section> none <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> na <section> joseph hickey , vantage systems , inc ."
"fix # <number> : correct mutex around log file write the mutex for the log file write during the writelogfilecmd excution was held longer than it should have been . this lock must * <allcaps> not </allcaps> * be held during evs_sendevent , as this will cause deadlock . this moves the mutex to protect only the area that actually accesses the log data , and it moves all send event calls to be <allcaps> after </allcaps> the mutex is released . <section> built all code using default config and start <allcaps> cfe </allcaps> externally issue the writelogdatafile command with a valid output file - confirmed that the log data file is generated successfully externally issued the writelogdatafile command with a invalid output file ( where os_creat fails ) - confirmed that the expected error event is generated with no deadlock or issues <section> no longer deadlocks in the case of an error during the file operations <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"fix # <number> : cfe_es_gettaskinfo must be passed a task id fix <number> areas where the cfe_es_gettaskinfo ( ) function could have been passed an app id rather than a task id , which would create an incorrect result and generate an error in the syslog <section> steps taken to test the contribution : - set <allcaps> evs </allcaps> default configuration to enable all events ( including <allcaps> debug </allcaps> ) by default - built all for pc - linux from a clean slate - run <allcaps> cfe </allcaps> core and confirm all startup ok - externally issue stopapp command for "" sample_app "" - confirmed that all debug events are correct - confirmed that the original error is not generated - externally issue shell command for "" es_listtasks "" - confirmed that no bad task id errors are shown - confirmed that the file output is correct <section> the invalid task errors shown in the logs prior to this change are <allcaps> not </allcaps> generated after this change . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update obj creation failure requirement <section> fixes # <number> , updates obj creation failure requirement to platform defined response <section> none - document update <section> none <section> none <section> platform defined response now matches cfs <allcaps> psp </allcaps> model . note - requirements transitioned to new tracking system with minor typo fixes throughout and new output format which changes every line . "" version tracking "" is really accomplished in the requirements management tool , not the * . md file . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"test condition needs verification - cfe_fs_decompress - insize temporary become <number> <section> test cases where insize might temporarily hit <number> during a normal decompression . reference issue <number> . <section> anh van , <allcaps> nasa </allcaps> goddard ."
"fix # <number> , fix infinite loop when gz file is truncated <section> fix issue # <number> , when cfe_fs_decompress goes into infinite loop when gz file is truncated . fix # <number> <section> <number> . build <number> . pass in truncated file as parameter to cfe_fs_decompress . corgi2 . jpg . gz <url> <number> . verify the return status : <code> <number> . gzip good file <number> - f6736880 - e6ad - 1 1 e9 - 9 8 ac - ce321d6d495a <img> <number> . pass as parameter and verify output . <section> - hardware - ubuntu <date> - cfe <number> . <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
update <code> to include application_list <section> solves issue # <number> . <section> enables missions to slowly roll out new applications without updating include lists in each table provided application each time a new one is included . <section> john p . lucas - <allcaps> nasa gsfc </allcaps>
problem with createpipeerr the app cnt ( controller ) is not starting because of a pipe problem . image <img>
"application list in ' sample_defs ' <section> the <code> file in each application that utilizes tables ( hk , <allcaps> sch </allcaps> , to , etc . ) requires mission specific applications to be added to the <code> statement . <section> i suggest we use a single <code> variable declared in <code> that can be used for multiple target app lists and in the applications as well so that the mission specific code and tables remain separate . <section> none <section> none <section> jplucas from babelfish"
"update platform and mission config to use c99 true and false currently using <allcaps> true </allcaps> and <allcaps> false </allcaps> , fails build with deprecated elements removed . blocking for <number> . <number> release ."
remove fsw / mission_inc and fsw / platform_inc ( classic build support ) directories are only used by classic build and duplicate defines in sample_defs . should be removed . targeted for <number> since it will break classic build ( deprecated in <number> ) .
"remove <allcaps> osal </allcaps> last - gen compatibility complexity next gen <allcaps> osal </allcaps> is the only option with this release , remove conditionally compiled code related to supporting last gen ."
"move stdint . h test to higher level make recipe , or default to having it ( warn if not ! ) currently the test for stdint . h and setting of _have_stdint_ is done in <allcaps> osal </allcaps> , but other repos include common_types . h . noticed the failure on a centos <number> platform for which sizeof ( long ) = = <number> , and elf2cfetbl recipe did not include _have_stdint_ . as a general fix moving this test and the higher in the chain would catch issues for all repos . also could flip the logic , set no_stdint if it does not exist and warn that attempting fixed length defines locally which makes assumptions outside the standard ."
table name sizing logic and associated definitions inconsistent default_osconfig . h - defines os_max_api_name as <number> sample_mission_config . h - defines cfe_mission_max_api_len as <number> - defines cfe_mission_tbl_max_name_length as <number> - defines cfe_mission_tbl_max_full_name_len as ( cfe_mission_tbl_max_name_length + cfe_mission_max_api_len + <number> ) cfe_tbl_msg . h - uses cfe_mission_tbl_max_full_name_len in command definitions cfe_tbl_task_cmds . c - uses cfe_tbl_max_full_name_len in command processing cfe_tbl . h - defines cfe_tbl_max_full_name_len as cfe_mission_tbl_max_full_name_len cfe_tbl_task . h - uses cfe_tbl_max_full_name_len for storing name in registry and critreg cfe_tbl_api . c in cfe_tbl_register : - uses os_max_api_name for appname character string - uses cfe_tbl_max_full_name_len for tblname character string <allcaps> note </allcaps> - tblname is appname . tablename ( where tablename is input name below ) - checks input table name against cfe_mission_tbl_max_name_length ( this is just the table part of the name ) - uses cfe_tbl_max_full_name_len for saving tblname in registry - uses cfe_tbl_max_full_name_len for saving tblname in critical registry
resolve klocwork issues found in <number> . <number> see attachment
enforce network byte order on extended <allcaps> ccsds </allcaps> header the extended header ( <allcaps> apid </allcaps> qualifiers ) needs to be read / written in network byte order .
potential alignment errors when allocating cfs tables . the buffers allocated for tables force a <number> bit alignment when the over all memory buffer is <number> bit aligned . if a <number> bit variable is the first data type an alignment error will be reported . if the first two variables in the data structure bd _t in the file cfe_esmempool . h are allocated as <number> instead of <number> the alignment of the table will match the buffer . the workaround is to rearrange the table items to fall on what ever alignment is necessary .
default to next - gen <allcaps> osal </allcaps> update the sample toolchain * . make files to use next gen posix .
"sample app should be consistent with app developer ' s guide the sample_app provided with the cfe is not consistent with the example app documented in the application developer ' s guide . the app developer ' s guide should documented recommended styles and practices . similarly the sample_app should implement them . i do not think sample app needs to cover all of the potential app features like critical data stores , child tasks , etc . just the basics to get someone started ."
"<allcaps> evs </allcaps> document event ids as being unique <allcaps> ccb </allcaps> <date> - discussed relative to # <number> documentation should clearly state event ids are intended to be unique to each "" event "" also helpful to note base id ' s are often passed in to libraries to keep them unique there is likely a higher level requirement somewhere that events need to be uniquely identifiable ."
deprecate classic build deprecate classic build in favor of cmake .
"cfe_es_reloadapp ( ) and cfe_es_deleteapp ( ) missing range check on appid these two functions are defined in <code> and therefore available for external applications and libraries to call . these accept a passed in <code> parameter which is used as a table index , but they do not check the range of the value prior to using it as an array index . if the value is out of range , this will cause undefined behavior and possibly a crash ."
"ut_assert example app is broken in <number> release as of commit 0 4 c0cc342415575f855dc00960afc8daedd8a46e ( <allcaps> head </allcaps> of master on <date> ) , the ut assert code and associated example does not compile . first , the example app unit test makefile does not seem to be correct ( include paths are wrong , some object files are not necessary , etc . ) . second , the <allcaps> es api </allcaps> stubs in the ut_assert source do not match the actual <allcaps> es api </allcaps> . i checked out a copy of the above commit , and made updates to fix these issues . i have included the following diffs with the changes that i made to fix the problems . 0 0 _fix - stub - function - def - mismatch - in - es - <allcaps> api </allcaps> . diff - updates the ut_assert es stub source files ( pretty self - explanatory ) 0 1 _update - example - ut - makefile - inc - and - src - paths . diff - removed unnecessary includes , - removed unnecessary ut_objs , - reorganized path variables , - updated compiler opts for <number> - bit system - i am not sure if you will want to include this . 0 2 _fix - print - format - warnings - on - uint32s . diff - this fix wasn ' t required , but it cleaned up a lot of warnings that were getting in my way of seeing errors . this was likely only necessary because the last diff changed the compiler opts to a <number> - bit build make . out - this is the new output from the makefile . there are still two warnings that i wasn ' t familiar enough with to resolve ."
cfs performance monitor ( <allcaps> cpm </allcaps> ) update jfreechart which is used by <allcaps> cpm </allcaps> made some <allcaps> api </allcaps> changes that are not compatible with java <number> & <number> . kevin made some updates and the new <allcaps> cpm </allcaps> works with all current versions of java . the new <allcaps> jar </allcaps> is attached and will be posted on an open source website .
"update cfe_sb_sendmsgfull ( ) to match latest <allcaps> sbn </allcaps> function prototype reported by astrobotic <date> via email . the <allcaps> sbn </allcaps> product has a prototype of int32 cfe_sb_sendmsgfull ( cfe_sb_msg_t * msgptr , uint32 tlmcntincrements , uint32 copymode , cfe_sb_senderid_t * senderptr ) ( <number> variables ) the sb prototype has <number> int32 cfe_sb_sendmsgfull ( cfe_sb_msg_t * msgptr , uint32 tlmcntincrements , uint32 copymode ) ; there is a conflict between the header files ."
"<allcaps> evs </allcaps> : treat "" eventtype "" as a severity indicator currently , while eventtype is an enumerated type with numeric value that increases in "" severity "" ( <allcaps> information </allcaps> - > <allcaps> debug </allcaps> - > <allcaps> error </allcaps> - > <allcaps> critical </allcaps> ) , the type filtering functions take a bit mask . there ' s little reason to filter higher - severity events and not lower - severity types , and this <allcaps> api </allcaps> confuses the model and makes the code for changing and evaluating the filter overly - complex . eventtype filters should be a numerical comparison operator . ( filter all events of severity lower than x . )"
sb : remove pipename from cfe_sb_piped_t pipename in cfe_sb_piped_t is redundant with the <allcaps> osal </allcaps> queue name and should be removed .
"<allcaps> evs </allcaps> : generalize filter design the current "" binary "" filter is very limited , only capable of filtering based on the number of events sent by an app with a particular event id . in order to support a variety of filter paradigms , <allcaps> evs </allcaps> should be redesigned to accept filter function pointers so that applications can define their own filters that <allcaps> evs </allcaps> calls to determine whether ( or how ) to filter the message . additionally , <allcaps> evs </allcaps> should be capable of being configured at start time ( via a table or config file , a - la es ) or run time ( via commands ) to load system - wide filters such as the binary filter ."
"remove "" type "" from event id ' s cfs code should avoid conflating event types and id ' s . for example ( in the ci application ) there are a number of id ' s such as "" ci_init_err_eid "" that includes "" <allcaps> err </allcaps> "" in the name which could be interpreted as a type ( as in "" all events with this <allcaps> eid </allcaps> are error events . "" . ) however , <allcaps> evs </allcaps> events have both an id and a type ( separate from the id ) . for example , this should be renamed as "" ci_init_eid "" so that informational messages about the command length could be produced ."
"es apprecord_t - - collapse recordused into staterecord . appstate currently , there are actually two variables that indicate the state of an application , recordused ( a boolean ) and staterecord . appstate ( an int32 enum ) . this could be simplified by having es look for the first table entry with the state of "" <allcaps> undefined </allcaps> "" ( <number> ) and using that table entry and any other state would be considered "" used "" ."
fix cfe <number> ut_assert
"es functions that take application id need consistent bounds checking many functions in cfe_es_api . c use an appid parameter . some of these functions do not bounds check this . ( e . g . cfe_es_setappstate ) others do , but do not generate an error on failure ( cfe_es_restartapp returns cfe_success if appid is out of bounds ) all functions in es should probably be inspected for issues like these and corrected ."
"have mission ( or platform ? ) defined bounds for stack size es should validate the stack size against a valid range . the range should be defined by the mission ( and / or the platform ) . vxworks will likely barf on a stack size of <number> , unless you really do not use the stack ; and adding too many zeros would likely overflow flight hardware memory ."
"es option to shut down cfs if it fails to load an app currently if es fails to load an app , it generates error events but continues on . <repeated> these errors may get lost in the shuffle . a compile - time option should be added to change es ' s behavior to shut down the cfe system if an app fails to load so that the user knows immediately something ' s wrong ."
cfe <number> fortify analysis results <allcaps> nasa iv </allcaps> & v ran cfe <number> through the fortify static code analysis tool . the findings are contained in the attachment .
"incorrect call to cfe_sb_getapptskname issue found in <allcaps> cfe </allcaps> <number> . <number> in cfe_sb_api . c line <number> , cfe_evs_sendeventwithappid calls cfe_sb_getapptskname with owner as first argument . owner is the appid , not the taskid . cfe_sb_getapptskname expects the taskid as the first argument . current : { { { cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , pipeid , cfe_sb_getapptskname ( owner , fullname ) ); } } } suggested : { { { uint32 onwertskid = <number> ; os_taskgetidbyname ( & ownertskid , cfe_sb . pipetbl [ pipetblidx ] . appname ) ; cfe_evs_sendeventwithappid ( cfe_sb_pipe_deleted_eid , cfe_evs_debug , cfe_sb . appid , "" pipe deleted : id % d , owner %s "" , pipeid , cfe_sb_getapptskname ( ownertskid , fullname ) ); } } }"
"enforce strict <allcaps> ascii </allcaps> in sample makefile update "" makefile . sample "" in the sample cmake configuration area to include rules that allow running the "" badchar "" tool , to find nonportable text glyphs in files that we intended to be plain text ."
"update cfe version number for <number> . <number> release this ticket will be used to update the version header file to update the version number to <number> . <number> for test and release . once cfe version <number> . <number> has been populated to the master branch , this ticket will be used to set the version number to <number> . <number> to indicate the code is development code retrieved from the "" development "" branch ."
"typedef for status code types most of the <allcaps> cfe </allcaps> code returns a status ( e . g . cfe_success , cfe_error ) and the function prototypes have return values of type "" int32 "" . it would greatly improve readability if the functions were defined to return a <allcaps> cfe </allcaps> typedef ( cfe_status_t ? ) this would also allow for changing the type ( int8 for low - resource environments ? ) but this is primarily aimed at code readability ."
"expose sb usecount for my voter app , i am currently poking into the sb bufferd_t header on the buffers to increment / decrement the usecount so that i can be assured that the buffer will not be reused . ( this is only done during the vote , note between calls into the voter . ) needless to say , there may be other uses for marking a buffer as being in use by code outside of sb ."
"clean up unit tests to fully use new ut assert the unit tests in <allcaps> cfe </allcaps> were ported to use ut assert by "" bridging "" the existing code structure to the ut assert framework using some adaption layers , keeping the same basic <allcaps> api </allcaps> calls in the tests themselves . this worked for the time but created a fairly ugly and confusing situation , with a number of wrappers . also , many global variables still remain that are no longer necessary , they are only remnants of the bridge logic . the <allcaps> ghaps </allcaps> project has done quite a bit of work to clean up the unit test code and remove the unnecessary glue logic , making the test code much cleaner . it also provides a usable base for <allcaps> cfs </allcaps> application unit tests ."
"compile - time option to have cfe_sb_sendmsgfull ( ) set timestamp i ' d like to know ( as accurately as possible ) when a message was actually sent to the sb . currently senders are responsible for setting the message timestamp prior to sending the message , so the timestamp may not have been set immediately prior to calling sendmsg ( ) . a compile - time option to configure sendmsgfull ( ) to set the timestamp would be useful in some environments ( such as when testing in a realtime os . )"
"sb : compile - time option for routing table as a hash we have discussed how to handle a large number of subscriptions , one option would be to have the routingtbl be a hash instead . this does have a performance impact on code that is heavily used , but in some environments memory is less of a concern so a large hash table could support a very large subscription base . while i do not feel it would be wise to switch whole - hog , i propose that a compile - time option be available to configure the software bus to use a hash for the routing table , which gives users with larger subscription needs the option ."
"dummy ticket for trac admin change check filing this dummy ticket to assure that adding someone to the default cc list for the a component actually causes them to get copies of the bug . this is necessary because , for some reason , the components edit panel in trac is presenting many duplicate entries and not adding the name to both duplicates ."
add software bus structures reference diagram to doxygen users guide the attached sb structures reference diagram should be made available in the user ' s guide .
update cfe unit tests for cfe version <number> . <number> update the tests using those from cfe <number> . <number> to run with cfe <number> . <number> . ensure that all lines of code and all branch paths are covered ( or are documented if not ) .
"cfe_es_deletechildtask syslog message / comments are misleading the cfe_es_deletechildtask function validates the input parameter ostaskid to ensure that it is an active task id and a task id that is in range . this validation is performed in a single if statement . if the validation fails , the sys log message ( reported on line <number> ) is not clear as to whether or not the failure was due to the id being out of range or inactive . the sys log message should state "" invalid task id "" vs . "" task id is not active "" . also , the comment starting on line <number> should remove the "" ( too large ) "" , as the out of range handling is now performed on lines <number> - <number> ."
es unit test code coverage incomplete in apps . c cfe_es_apps . c - <percent> coverage ( <number> lines of code <allcaps> not </allcaps> executed ) in cfe_es_appcreate : - : <number> : else /* not a dynamic load - app must be statically linked into current exe */ - : <number> : { # <number> <number> : staticentryptr = ( cfe_es_appstaticmoduleapi_t <wink> entrypointdata ; # <number> <number> : startaddr = staticentryptr - > ptrs . entryfuncaddr ; # <number> <number> : moduleid = <number> ; - : <number> : } <number> : <number> : if ( staticentryptr ! = <allcaps> null </allcaps> ) - : <number> : { - : <number> : /* leave entry point / filename blank if static load entry */ # <number> <number> : cfe_es_global . apptable [ i ] . startparams . entrypoint [ <number> ] = <number> ; # <number> <number> : cfe_es_global . apptable [ i ] . startparams . filename [ <number> ] = <number> ; - : <number> : } in cfe_es_loadlibrary : - : <number> : else /* not a dynamic load - library must be statically linked into current exe */ - : <number> : { # <number> <number> : staticentryptr = ( cfe_es_appstaticmoduleapi_t <wink> entrypointdata ; # <number> <number> : functionpointer = staticentryptr - > ptrs . libinitfunc ; # <number> <number> : moduleid = <number> ; - : <number> : } these lines of code can be covered in unit testing .
"redundant assignments and unread variables one common anti - pattern in cfs is to call functions that return potential error codes , store the return values in variables , then never bother to check the value of the variable . cppcheck reports this as a redundant assignment . current cases in <allcaps> cfe </allcaps> : ( redundantassignment ) { { { cfe / fsw / cfe - core / src / evs / cfe_evs_task . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . cfe / fsw / cfe - core / src / evs / cfe_evs_task . c : <number> : performance : variable ' status ' is reassigned a value before the old one has been used . } } } ( unreadvariable ) { { { cfe / fsw / cfe - core / src / es / cfe_es_start . c : <number> : style : variable ' status ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_api . c : <number> : style : variable ' returncode ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_api . c : <number> : style : variable ' status ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_apps . c : <number> : style : variable ' returncode ' is assigned a value that is never used . cfe / fsw / cfe - core / src / es / cfe_es_apps . c : <number> : style : variable ' returncode ' is assigned a value that is never used . } } } not sure how we missed this in the <number> - <number> - <number> sweep ."
cfe <number> verification testing required for release this ticket will be used to document the cfe <number> . <number> verification testing that will be performed at each center and capture the results of each test .
use the <allcaps> osal </allcaps> configuration file loader library the es currently uses a combination of a simple file parser and calls to scanf . <allcaps> osal </allcaps> ticket <number> ( <url> introduces a configuration file loading <allcaps> api </allcaps> . es should move to using this <allcaps> api </allcaps> and ditch the awful scanf . this is related to ( instigated by ) <allcaps> trac </allcaps> # <number> .
"cppcheck a vxworks build i need to go through the somewhat manual ( for now ) process of grinding out some cppcheck results for "" development "" cfs on our lab machine that has vxworks capability ."
"es - recursive exit application error message es will continually send out event message # <number> - "" es_proccontrolreq : unknown state ( % d ) application %s "" , with the unknown state set to <number> , when an application exits via the cfe_es_exitapp ( ) <allcaps> api </allcaps> function call . see attached email thread for more details ."
cfe does not meet double floating point alignment requirements on ppc440x5 book e architecture ( <allcaps> gsfc dcr </allcaps> <number> ) the ppc440x5 architecture requires double floating point values to not cross <number> - byte boundaries . the cfe services use <number> - byte alignment and forces dfps to be non <number> - byte aligned .
"table services name buffer overflow table services adds an asterick character to the end of the table name whenever a table is modified . if a table is modified often , the name grows to fill up the table services name buffer . it is recommended to only place one asterick character followed by an incrementing counter to indicate the number of times the table has been modified . this solution should be discussed and agreed to by the <allcaps> ccb </allcaps> ."
"<allcaps> tbl </allcaps> - update table services to send messages to notify applications of pending table updates ( <allcaps> gsfc dcr </allcaps> <number> ) table services requires applications to periodically call an <allcaps> api </allcaps> function to perform a check for a possible table update or validation request . polling for changes to tables can be <allcaps> cpu </allcaps> intensive , especially for applications containing a large number of tables such as the stored command application . table changes should be event driven . it is recommended to update table services to send a software bus message ( s ) that applications would subscribe to to be notified when there is a pending table update or validation request . this update will require an additional message id for each application using a table ."
<allcaps> evs </allcaps> - add configuration to output events upon command message vs . function call ( <allcaps> gsfc dcr </allcaps> <number> ) the <allcaps> gsfc mms fsw </allcaps> team ran into a problem when several events were being output by high priority tasks . a recommended solution to this problem is to create a configuration for <allcaps> evs </allcaps> to send a specified number of events at a specified periodic rate . adding additional event filtering capabilities should to address this issue should also be looked into .
"add support to allow <allcaps> sbn </allcaps> to pass sender information across the network ( <allcaps> gsfc dcr </allcaps> <number> ) a cfe interface is needed to allow <allcaps> sbn </allcaps> to pass sender information ( processorid , application name ) across a network . one proposed change is a new private function called cfe_sb_passmsgwithsenderid . this function will be needed by <allcaps> sbn only </allcaps> . the <allcaps> ccb </allcaps> should discuss how this function can be used by <allcaps> sbn </allcaps> and blocked from being called / used by other applications . analysis is needed to determine the best solution ."
"es - registeredtasks counter does not decrement when child tasks are exited ( <allcaps> gsfc dcr </allcaps> <number> ) the <allcaps> gsfc gpm </allcaps> project team reported that the es "" registeredtasks "" counter was not decrementing when a child task exited . the cs code was examined to ensure the needed <allcaps> es api </allcaps> calls were being made . it was confirmed the cs child tasks make the <allcaps> es api </allcaps> call to cfe_es_exitchildtask . the cfe_es_exitchildtask <allcaps> api </allcaps> function does decrement the registeredtasks counter on line <number> however , this step is performed only if conditional checks are passed ."
"executive services always creates tasks with floating point enabled ( <allcaps> gsfc dcr </allcaps> <number> ) cfe es calls the os_taskcreate to create a cfe task or child task . os_taskcreate takes a parameter called "" flags "" that currently supports os_fp_enabled . this flag will tell the host os that the task should be created with a floating point context . in each place where the cfe es app calls os_taskcreate , it hard - codes os_fp_enabled . some tasks and applications may not be able to use a floating point context , so we need to examine why this flag is not an option and what can be done to fix it ."
"cfe_es_processcoreexception and cfe_es_resetcfe are not <allcaps> isr </allcaps> safe ( <allcaps> gsfc dcr </allcaps> <number> ) the functions cfe_es_resetcfe and cfe_es_processcoreexception are not <allcaps> isr </allcaps> safe . they must be called from the context of a running task . in <allcaps> gsfc </allcaps> ' s <allcaps> mms fsw </allcaps> , sometimes and exception can occur from an <allcaps> isr </allcaps> . when this happens , the cfe_es_processcoreexception code will not work , since it has multiple calls to take a semaphore . similarly , the cfe_es_resetcfe cannot be called from an <allcaps> isr </allcaps> to reset the system , as it will hang . this needs to be addressed with a long term solution or strategy for current and future platforms . for <allcaps> mms </allcaps> , it may be fixed by simply handling the exception completely within the <allcaps> psp </allcaps> . for future releases of the cfe we need to look at possibly re - writing the cfe_es_processcoreexception and cfe_es_resetcfe functions to be <allcaps> isr </allcaps> safe ."
es does not check cfe_psp_memread8 return code the <allcaps> es api </allcaps> functions need to properly alert users of errors . the cfe_es_calculatecrc <allcaps> api </allcaps> function will not alert users if an error code was returned from the call to the cfe_psp_memread8 .
"make compiles with - - std =c 9 9 work <allcaps> cfe </allcaps> has historically attempted to be strict <allcaps> ansi </allcaps> c90 , with obvious exceptions for cases where the code needed to use a facility that did not yet exist . compile with - - std =c 9 0 if you want to see these . the default compilation we do now does not specify that the code should be strictly conformant to any standard , so what we get in practice is <allcaps> gcc </allcaps> ' s c90 with extensions . turning up all the warnings using { { { gcc - w - wall - wextra - pedantic } } } will include a large number of very useful static code analysis checks , but will warn about the use of c99 facilities that we want to use . what i propose to do is to run a set of trial builds where the build script adjusts the compiler flags , on the fly ( no commits ) , to be : { { { gcc - - std =c 9 9 - o3 - g - w - wall - wextra - pedantic } } } this asks <allcaps> gcc </allcaps> to do as thorough a job as it can do to report any of our code that deviates from <code> . our code does require use of facilities not specified in c99 , and these facilities should be enabled , where necessary , by the use of the appropriate option feature macros . i anticipate that this will only require certain specific source files to have an annotation ( before the <code> lines ) that they are to be considered to contain <code> or <code> standard sources at a specific level of those standards . see also <allcaps> osal </allcaps> ticket [ cfs_osal : <number> ]"
"cfs . mak assumes directories , fails with git ( working with sourceforge release . ) the cfe / build / cfs . mak file assumes that some empty directories already exist and fails when they do not . git does not allow empty directories to be committed ( without special help ) . this problem is hit when the sourceforge cfe tarball is put under a git repo . the proposed patch below removes this assumption and makes the build more robust . { { { - - - a / cfe / build / cfs . mak + + + b / cfe / build / cfs . mak @ @ - <number> + <number> @ @ cfs_copy_core_incs : : <user> "" > > > [ <allcaps> pre </allcaps> - <allcaps> build </allcaps> ] <allcaps> copying header files from </allcaps> <cfs_mission> <allcaps> core </allcaps> < < < "" <user> "" "" <user> "" copying <cfe_fsw> / mission_inc / * . h to <cfs_mission_inc> "" + <user> - p $( cfs_mission_inc ) @ - cp - f $( cfe_fsw ) / mission_inc / * . h $( cfs_mission_inc ) <user> "" copying <cfe_fsw> / platform_inc / <cfe_core_platform_inc_src> / cfe_platform_cfg . h to . / inc "" + <user> - p . / inc @ - cp - f $( cfe_fsw ) / platform_inc / $( cfe_core_platform_inc_src ) /* . h . / inc <user> "" copying < <allcaps> osal </allcaps> > / build / inc / osconfig . h to . / inc "" @ - cp - f $( <allcaps> osal </allcaps> ) / build / inc / osconfig . h . / inc @ @ - <number> + <number> @ @ cfs_copy_app_shared_incs : : <user> "" > > > [ <allcaps> pre </allcaps> - <allcaps> build </allcaps> ] <allcaps> copying header files from </allcaps> <cfs_app_src> / <allcaps> inc </allcaps> < < < "" <user> "" "" <user> "" copying <cfs_app_src> / inc / * . h to <cfs_mission_inc> "" + <user> - p $( cfs_mission_inc ) @ - cp - f $( cfs_app_src ) / inc / * . h $( cfs_mission_inc ) # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - } } }"
"cfe build makefile does not copy core binary i am using a makefile to build a platform and then copy the build products to another location off the build_path . i set the build_path , cfe_exe , cfs_prom , cfs_prom_apps , and cfs_ram makefile variables . the build proceeds and the cfe <allcaps> apps </allcaps> and tables are properly copied to the desired locations . but not the actual core cfe binary , it was ignored . a prior version of this ( or another ? ) build makefile used to properly copy the core binary . ( i am using the sourceforge release . ) for consideration , the fix i made in my ( disconnected project ) was : { { { diff - - git a / cfe / build / cfs . mak b / cfe / build / cfs . mak @ @ - <number> + <number> @ @ cfs_copy_installs : : - chmod <number> $( cfs_exe ) /* . scr <user> "" "" <user> "" > > copy files < < "" + - cp - f $( cfs_exe ) /* . $( cfe_core_exe_type ) $( cfs_prom_apps ) - cp - f $( cfs_exe ) /* . $( cfs_app_exe_type ) $( cfs_prom_apps ) - cp - f $( cfs_exe ) /* . tbl $( cfs_prom_apps ) <user> "" "" } } }"
"update <allcaps> cfe </allcaps> version number we are committing to <allcaps> cfe </allcaps> release <number> . <number> containing # <number> # <number> # <number> ( with small adjustments and rebasing to master ) . when building the hotfix branch , we need to update the version header file to update the version number ."
implement bamboo builds of cfs <allcaps> cfe </allcaps> tree need to construct a bamboo plan that builds everything that can be built in <code> and runs all of the local test programs that are suitable for fast turnaround automatic test cycles .
<number> - <number> - <number> integration candidate <allcaps> ccb </allcaps> meeting on <number> - <number> - <number> authorized integration testing for merging into development of the current set of changes contained in joe ' s merge at [ changeset : 1 1 4 c641 ] .
"review use of cfe_psp_memcpy / cfe_psp_memset these wrapper functions may be over used in the <allcaps> cfe </allcaps> code . in some cases the standard c library implementations might be preferred . using a <allcaps> psp </allcaps> - supplied wrapper function makes sense when reading / writing from "" special "" memories that are truly platform - dependent , such as an <allcaps> nvram </allcaps> or any other type of memory that is either not directly mapped or has some type of access restriction ( e . g . <number> bit only , paged access , etc ) . however , for memories that __are__ directly mapped into the current process space ( and will always be ) such as copying one structure variable to another or clearing out a local stack variable , using the <allcaps> psp </allcaps> implementations is generally not necessary . every c library will have memcpy / memset as these were defined all the way back to c89 . usually , the c library implementation is already implemented as optimized assembly code tailored to the current <allcaps> cpu </allcaps> . in some circumstances using an extra wrapper might prevent some optimizations that would be done if the c library call were used directly - for instance , some c implementations might inline the function if used directly . at the least , the wrapper adds the overhead of another function call ."
"implement "" bootstrap "" script although the git repositories established on babelfish so far appear to work well enough for our development model , it is rather complicated to set up a build from a clean slate using them . in order to do so you need to clone ( at least ) <number> repos and also make sure you get compatible versions / branches from all <number> , then set up your build , which may involve copying some files around , which then have to go into the mission - specific version control . i suspect that real missions / users would __not__ want to keep these repos separate even though they are distributed separately ; it is much more effort to manage it when each subdirectory comes from a different repo and it is very easy to "" break "" the build by grabbing incompatible branches . instead , a project using these would probably want to set up a single git repo for their mission that has everything included . there are a couple ways to do this in git such that compatibility with the "" upstream "" repo is retained , but it does require some of the more esoteric git features to do this right . a script could do most of this work to simplify deployment and make sure it is done right ."
"remove references to coreflightsystem . org since it is now a malware site <section> this repo has several references to coreflightsystem . org . the current owner of that domain is using it for spreading malware ( i got a prompt to install a firefox malware addon ) . <section> steps to reproduce the behavior : <number> . go to <url> <number> . click on the links to coreflightsystem . org <number> . get prompted to install malware , or with spam links . <section> no links to malware sites <section> not applicable <section> firefox on chrome ( probably applies to other browsers and platforms )"
"release candidate <number> merge to master <section> bulk merge to <number> , plus bug fix # <number> and version update <section> steps taken to test the contribution : <number> . checked out cfs rc - <number> . <number> , updated to latest cfe / <allcaps> osal </allcaps> / <allcaps> psp </allcaps> rc branches and setup / built via standard instructions <number> . ran cfe and observed version update <code> <section> minor behavior changes will be documented in the <allcaps> vdd </allcaps> upon release ( no major / requirements updates ) <section> - cfs development server - ubuntu <number> . <number> , <number> . <number> - <number> - generic , x64 - <number> . <number> bundle <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> none <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"ensure table name length is consistent across cpus <section> to ensure consistency in the size of the cfe_tbl_filehdr_t struct , this should be constrained to use only mission - scope definitions . also simplifies the structure definitions by _not_ padding strings out to <number> bit multiples . the default size of the strings are already <number> bit multiples so this is just unnecessary complexity . there is also no major issue if not <number> bit aligned , as the compiler will add it automatically where needed . add a note in the related cfe_mission_cfg . h descriptions to affected values , that these should be kept as a multiple of <number> to maintain alignment . fixes # <number> <section> built <allcaps> cfe </allcaps> using default / sample config verified no build issues , <allcaps> cfe </allcaps> and unit tests all run as expected ( no change ) . <section> no impact to behavior , but this may change the size of telemetry packets in some cases depending on the mission config . <section> ubuntu <number> ( <number> bit ) <section> full name and company / organization of all contributors ( required for acceptance ) <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"<allcaps> tbl </allcaps> services using platform - scope values in table header definition <section> the <code> size definition , which is used as part of the <code> structure , is partly based on the <code> value . the problem is that this value is platform scope and thereby configurable on a per - cpu basis . therefore , the <code> value can be ( validly ) different on each <allcaps> cpu </allcaps> in a multi - cpu deployment . this , in turn , means the table definition headers may be different on each <allcaps> cpu </allcaps> . tools like <code> and <code> do not account for this possibility ; when reading or writing the table header , they use a single definition . the definition that they use may or may not even match what the flight code uses at all , depending on how the mission is configured . <section> configure a mission with two cpus , and specify a different osconfig . h for each one ( i . e . set tgt2_platform to something other than default ) . change the value of <code> for the second <allcaps> cpu </allcaps> , and build all software . observe that the <code> is now also different on cpu2 vs . cpu1 . tables generated by <code> and the <allcaps> crc </allcaps> computed by <code> only work in cpu1 . cpu2 will not be able to load tables because of the incompatible header . <section> the <code> should remain consistent regardless of the platform - scope values used , because this is an external format shared between ( at least ) between ground systems and flight code . the <code> macro is a better choice here . it was introduced in a previous version of <allcaps> cfe </allcaps> for telemetry packets , but table files are effectively the same issue . <section> the problem definition is : <code> furthermore , as this definition is only really for the header struct , it should be in cfe_tbl_filedef . h , not cfe_tbl . h . this allows external tools to include this definition without having to pull in the rest of <allcaps> cfe </allcaps> headers implicitly . <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic <section> joseph hickey , vantage systems , inc ."
"fix <number> strlen <section> fixes issue # <number> <section> build and run <allcaps> cfe </allcaps> , verify that version information event is generated as expected . <section> no more undefined behavior <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic , gcc <number> . <number> <section> joseph hickey , vantage systems inc ."
"incorrect calls to strlen in cfe_es_taskinit <section> the function calls strlen as : <code> <section> this is undefined behavior but probably works by accident most of the time , so long as the byte before eventbuffer is not null . this also generates a compiler warning which somehow was never noticed before in previous reviews of this code ( gcc <number> . <number> with - wall switch ) <section> it probably was meant to be : <code> <section> ubuntu <number> ( <number> - bit ) , kernel <number> . <number> - <number> - generic , gcc <number> . <number> - 1 ubuntu1 ~ <number> . <number> <section> joe hickey"
make install - no rule to make target ' install ' . i get the following error when doing a make install - it fails on mission - install . <code>
"incorrect <allcaps> scid </allcaps> field length cfe_mission_cfg . h shows a note circa line <number> that ' <allcaps> ccsds </allcaps> allocates <number> bits for this field in the standard <allcaps> vcdu </allcaps> ' . newer <allcaps> ccsds </allcaps> versions actually allocate <number> - bits for this field - this seems like a minor thing but could potentially have implications elsewhere in the code . per <user> , maybe to , ds , and cf ?"
fix code markup in readme
"support for <allcaps> osx </allcaps> is the cfs version that is available on the master branch compatible with <allcaps> osx </allcaps> ? looking through the files , it seems like cfs uses a lot of the extended posix functionalities ( e . g . timers , thread prioritization and certain real time signals ) that are not available on <allcaps> osx </allcaps> . although <allcaps> osx </allcaps> is posix compliant , it does not support extended posix functionalities . from a development standpoint , support for <allcaps> osx </allcaps> is desirable . i have developed some patches that can be applied to some osal and psp src files to enable compilation on <allcaps> osx </allcaps> ( including a reimplementation of the timer <allcaps> api </allcaps> using the grand central dispatch on <allcaps> osx </allcaps> ) . if the cfs developers are interested in looking into this , i can integrate these patches and submit a pull request ."
possibly add <allcaps> cfpd </allcaps> <url>
"submodule updates fail while attempting to build this project , the submodule update process fails on <code> <code> it looks like the recent commit in . gitmodules <url> added new apps and used ssh instead of <allcaps> https </allcaps> . i presume changing them to the form of <code> will prevent this issue for others ."
""" could not load cfe application "" error - - yet <code> file exists cfe refuses to load my custom app . i built it from the <code> provided , and it compiles correctly . moreover <code> will create the expected <code> and place them in the expected locations ( i . e . <code> and <code> ) . furthermore , the header of these dynamic libraries confirms that they compiled for the correct target when compared to the other default libraries which load . any hint is greatly appreciated as i have been struggling with this issue for several long hours now . here ' s the relevant log : <code> and the full boot - up log : <code>"
"need default included mission configuration for unit tests you can run the following as a script if you find that easier : <code> then it complains about needing a <code> directory . when i create an empty directory , <code> , for that , it complains about <code> not existing . is there a default mission config that i can use ? i want to build this with a custom compiler , but i need a method to build it with <code> first and get unit tests running ."
add ci and to when available <url> <url>
make config fails make config returns the following error : <code> <code> <code> <code> returns <code> full output of make config <code>
"service not logging under systemd when ran on <allcaps> posix </allcaps> systems with systemd , cfe ' s log does not show up on <code> , the default logging service . it records all stdout by default . a test with a standard hello world c program on infinite loop showed that the stdout wasn ' t being buffered or detached . any help would be greatly appreciated"
"suggestion : modular platform and app makefiles one major improvement that could be made to cfe is the ability to specify which apps to build and which platforms to build for at runtime , instead of by changing the makefiles . <allcaps> cactus </allcaps> has a rudimentary implementation of this ( see <url> so that we can declare <code> as an environment variable . i think it would be a huge improvement to the build process to be able to optionally declare the_apps , <allcaps> psp </allcaps> , <allcaps> bsp </allcaps> , and more at the make command line , i . e . <code> some tricks may need to be done to allow this to propagate to make sub - tasks , as those variables would only be accessible in the makefile in the directory the command is run ."
"documentation is being improperly recognized as code on github hi flight software folks ! first off , great to see the project is finally being hosted somewhere other than sourceforge ! i noticed that because of all of the documentation present in the repository , github is falsely identifying the project as <allcaps> html </allcaps> - based . for my university project ' s fork of cfe ] ( <url> we edited our [ . gitattributes <url> to tell github ' s linguist software to interpret . htm , . html , and . css files in this project as being part of the documentation . this should give the repository the proper language statistics ."
