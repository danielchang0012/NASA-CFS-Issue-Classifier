text
"fix # <number> , move cmds and utils into separate files <section> - fixes # <number> - moves the command and utility functions into their own separate source files . <section> github ci actions all passing successfully . local testing confirms <percent> of cfs suite tests passing ( incl . sample app tests ) and coverage unaffected . prior to changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> after changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> no change to behavior . the sample app now more closely matches the recommended structure / style for cfs apps . <section> debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs bundle . <section> avi weiss <user>"
"sample_app integration candidate : caelum - rc4 + dev45 <section> - pr # <number> . addresses issue # <number> <section> cfs bundle checks <url> <allcaps> psp </allcaps> checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , update cmake recipe <section> prefer target - scope properties over directory scope where applicable fixes # <number> <section> build and run tests , sanity check <section> no impact <section> debian <section> joseph hickey , vantage systems , inc ."
"update cmake script to use current best practices <section> build recipes should publish the module ' s include directories via the <code> in property in cmake . this is what <allcaps> cfe </allcaps> modules do , but some of the framework apps are still using directory - scope include directories ( old way ) . also , table names should match the app names they are associated with , unless there is a good reason not to . <section> change these to target - scope include directories ( use <code> , not <code> ) <section> notably this is important in order to be able to easily provide an alternative table content via the mission - provided files . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , zero out global data structure during initialization <section> - fixes # <number> - added a <code> to zero out the global data structure at the beginning of the app ' s initialization . <section> github ci actions passing successfully and local test confirms all tests passing and no change to coverage due to these changes . <section> no change to behavior . the entire struct is now assured to start out initialized to zero . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"fix # <number> , add test for missing branch in sample_app_process ( ) <section> - fixes # <number> - tests added to cover missing branch . - the test calls <code> with a seeded failure from <code> . - the desired branch flow is confirmed by checking for the expected <number> additional calls to <code> ( in this function , only this specific path would add <number> additional calls to <code> ) . <section> github ci actions all passing successfully . tested locally confirming extra branch covered now , increasing branch coverage slightly ( from <number> / <number> to <number> / <number> branches ) and line cover to <percent> . prior : image <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> with these changes : screenshot <number> - <number> - <number> <number> <number> <number> <img> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> tests now cover an additional branch . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"missing test for one branch in sample_app_process ( ) <section> the tests for <code> are missing one of the branches - specifically , the branch where the call to <code> fails . <section> screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> tests should cover this branch - easy fix to add failing path . <section> avi weiss <user>"
"fix # <number> , refactor sample_app_init / process to remove multiple returns <section> - fixes # <number> - <code> and <code> were refactored to now have a single exit point . the sample app now exhibits the preferred pattern of cfs more closely - encouraging new users to follow the same guidelines . a few spelling inconsistencies and spacing issues were rectified as well . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . tested locally - coverage level unchanged by this pr ( testing still misses <number> branches in sample_app as per the main branch ) . <section> behavior unchanged - failures during these <number> functions will fail subsequent checks of <code> and fall through to the exit point at the end of the function to return the relevant error code . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main branch of cfs . <section> avi weiss <user>"
"refactor sample_app_init and sample_app_process to remove multiple returns <section> <code> and <code> use multiple returns to manage control flow . <section> the sample app should exhibit / encourage best practice ( according to the cfs ) , of which multiple returns does not comply . given that it is unnecessary in this case , would be worth refactoring to the recommended pattern with a single exit point from the function . <section> avi weiss <user>"
"fix # <number> , update add_cfe_tables app_name parameter <section> - fixes # <number> - corrects first parameter of <code> cmake function . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . confirmed locally with start - up test and ground - system commands . <section> no change to behavior with current implementation . <section> avi weiss <user>"
"fix # <number> , remove component - specific cfe header <hashtag> includes </hashtag> <section> - fixes # <number> - removes the component - specific cfe headers which are pulled in by the all - inclusive <code> . <section> tested with local cfs build + run , confirmed successful start - up . <section> none . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) current main of the cfs bundle . <section> avi weiss <user>"
"component - specific cfe headers not required ( all are pulled in by cfe . h ) <section> the component - specific cfe header files ( <code> , <code> etc . ) are all already pulled by the all - inclusive <code> . <section> remove unnecessary header <code> ' s . <section> <url> <section> avi weiss <user>"
"fix # <number> , moves interface definition files to inc <section> - fixes # <number> <section> github workflows <section> no expected behavior change . <section> - ubuntu <number> <section> depends on <url> <section> n / a <section> - justin figueroa , vantage"
"move interface definition files to "" inc "" location <section> the interface definition files of all open source apps currently exist in the "" src "" directory . <section> create an "" inc "" dir to go with the "" src "" dir . move the interface definitions into this location : "" _msg . h "" , "" _msgdefs . h "" , "" _tbldefs . h "" , and "" _events . h "" . consider moving header files in both "" platform_inc "" and "" mission_inc "" to "" inc "" <section> leaving as is . <section> n / a <section> justin figueroa , vantage systems"
"fix # <number> , align use of table / tbl mnemonics <section> fixes # <number> aligns use of table / tbl mnemonics in sample_app . the macros and function parameters that used ' table ' have been converted to ' tbl ' . i left the table struct ( <code> ) as is for now , because this is the more common convention in cfs . <section> github ci actions ( incl . build + run , unit tests etc . ) all passing successfully . <section> no impact on behavior . <section> avi weiss <user>"
"fix # <number> , add check for success of cfe_tbl_load ( ) during initialization <section> - fixes # <number> - adds check for success of <code> , if unsuccessful reports <code> and returns early with error code returned from <code> . <section> tested using same steps as <user> used in raising the issue ( start cfs without the sample app table file present in the / cf directory ) . confirmed action of new code as per screenshot below : screenshot <number> - <number> - <number> <number> <number> <number> <img> <section> sample app will exit during initialization if return value of <code> is not <code> . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 sample app v1 . <number> - rc4 + dev35 <section> avi weiss <user>"
"fix # <number> , apply consistent event id names to common events <section> - fixes # <number> - consistent event ids have been applied to the inconsistent cases to align them with a common event id naming convention . <section> only github ci actions . <section> no impact on code behavior ( no logic changes ) . consistent event id names for the events which are common to all / most cfs components and apps will improve consistency and ease make code review / debugging easier . <section> avi weiss <user>"
"inconsistent event id naming <section> copy of <url> after finding that there were <number> different event ids to indicate the same thing ( invalid message id ) in <url> i scrubbed the other common commands ( e . g . task initialisation [ <allcaps> init </allcaps> ] , <allcaps> noop </allcaps> , reset counters etc . ) and found the same issue there - almost every component / app had their own variation of the event id name for the exact same event . <section> apply consistent event id names to the events which are common to all / most components and apps . <section> invalid message id : <code> <code> <code> <code> <code> <code> <code> <code> <code> initialization : <code> <code> <code> <code> <code> <code> <code> <allcaps> noop </allcaps> : <code> <code> <code> <code> <code> <code> reset counters : <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> <code> etc . <section> avi weiss <user>"
"fix # <number> , rename commandcode variable to fcncode <section> - fixes # <number> - rename the commandcode variable in sample_app_processgroundcommand ( ) to fcncode to better align with the cfe <allcaps> api </allcaps> . <section> standard cfs bundle tests all passed . build / run cfs and test <allcaps> noop </allcaps> and other commands with the groundsystem tool . all working fine . <section> no impact on behavior . improves code clarity and consistency in the lab apps . <section> intel ( r ) celeron ( r ) n4100 <allcaps> cpu </allcaps> @ <number> . 1 0 ghz x86_64 debian <allcaps> gnu </allcaps> / linux <number> ( bullseye ) cfe v7 . <number> - rc4 + dev197 , <allcaps> osal </allcaps> v6 . <number> - rc4 + dev143 , <allcaps> psp </allcaps> v1 . <number> - rc4 + d sample app v1 . <number> - rc4 + dev35 ci lab app v2 . <number> - rc4 + dev39 to lab v2 . <number> - rc4 + dev31 <section> avi weiss <user>"
"sample_app integration candidate : caelum - rc4 + dev25 <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> <section> - pr # <number> , remove redundant comments - pr # <number> , create <allcaps> changelog </allcaps> . md <section> cfs bundle checks <url> sample_app checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user>"
"fix # <number> , remove redundant comments <section> fixes # <number> removes redundant comments ( incl . <code> , <code> , function name in function header comments ) . empty lines before the final closing brace of functions were removed as well , as they were triggering the ci checks . <section> none ( comment changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"sample_app integration candidate : caelum - rc4 + dev23 <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url> <section> - pr # <number> , misaligned comments - pr # <number> , remove unnecessary parentheses around return values . - pr # <number> , remove ' return ; ' from last line of void functions . <section> cfs bundle checks <url> sample_app checks <url> <section> see prs <section> ubuntu <number> <section> add any other context about the contribution here . <section> if included , identify any third party code and provide text file of license <section> <user> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md <section> fixes # <number> <section> none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove ' return ; ' from last line of void functions . <section> fixes # <number> removes all cases of redundant "" return ; "" statements on the last line of void functions . <section> none , prior to submission . <section> no impact on behavior . <section> <user>"
"remove "" return ; "" from last line of void functions <section> "" return ; "" at last line in void function is redundant . copy of <url> <section> remove <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . <section> fixes # <number> removes parentheses in return statements in sample_app that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements <section> unnecessary parentheses around return values in sample_app copy of <url> <section> <user>
"fix # <number> , misaligned comments <section> fixes # <number> - minor comment formatting issues . <section> none <section> no impact on behavior . <section> n / a <section> <user>"
"minor comment formatting issue <section> noticed some minor comment formatting issues - trival stuff , but i did not want to ignore it for no reason . apparently introduced in re - org of commit ade058c3ca500e1779d5dda23772c9b5edaec268 it ' s just a few out of place closing comment slashes : <url> <section> align comments for improved readability and consistency . <section> n / a <section> <user>"
"fix # <number> , remove registration of empty event filters <section> - fix # <number> <section> ci <section> none , just removes registration of empty filters <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , update codeql workflow for reusable updates <section> - fix # <number> <section> ci <section> none , just fixes codeql workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_app integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> standardize version information <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize versioning information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use preferred ut patterns <section> - fix # <number> <section> build / run unit tests , passed <section> slight change to ut output <section> - hardware : i5 / docker - os : ubuntu <number> - versions : bundle main + this commit <section> also updated ut guide in cfs / unit testing / files ( not public ) <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_app integration candidate : caelum - rc4 + dev1 <section> pr nasa # <number> from jphickey / fix - <number> - messagetype - conv - fix nasa # <number> , use cfe_msg_ptr conversion macro <section> sample_app checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <number> <allcaps> rtems </allcaps> <number> <allcaps> rtems </allcaps> <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> sample_app codeql reuse : <url> sample_app format check reuse : <url> sample_app static analysis reuse : <url> <section> sample_app will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"workflows overly restrictive run , missing duplicate check , format job name incorrect , remove - - quiet from cppcheck <section> branch restriction unnecessary : <url> branch restriction unnecessary , missing duplicate check , incorrect job name : <url> branch restriction unnecessary , missing duplicate check : <url> remove <code> flag to report files processed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use cfe_msg_ptr conversion macro <section> updates conversions to cfe_message_t to use the <allcaps> msg </allcaps> macro this also uses consistent naming - telemetryheader rather than tlmheader fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all tests <section> none <section> ubuntu <section> depends on nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sample_app integration candidate : <number> - <number> - <number> <section> pr # <number> - fix # <number> , apply cfe_sb_valuetomsgid where required <section> cfs bundle checks < <url> sample_app checks < <url> <section> see pr <section> ubuntu <allcaps> rtems </allcaps> ( qemu ) <section> part of <url> <section> none <section> <user>"
"fix # <number> , apply cfe_sb_valuetomsgid where required <section> whenever an integer value is used as a cfe_sb_msgid_t , it should go through the explicit conversion using the supplied inline function . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> allows sample_app to be built when cfe_sb_msgid_t is an opaque / non - integer type . none with default config ( where cfe_sb_msgid_t is an integer type ) . <section> ubuntu <section> joseph hickey , vantage systems , inc ."
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> created for # <number>"
"fix # <number> , correct typos in documentation , print statements , and comments <section> - fix # <number> fixed a few minor typos in the _text_ of : - <allcaps> readme </allcaps> . md - <allcaps> security </allcaps> . md . <repeated> and in the _comments_ of : - unit - test / cmakelists . txt . <repeated> and in an _assert error message_ string of : - unit - test / coveragetest / coveragetest_sample_app . c <section> only automated checks . <section> none ( minor markdown doc , comments changes , and assert error string changes that do not interact with any max lengths etc . ) . <section> n / a <section> n / a <section> n / a"
"sample_app integration candidate : <number> - <number> - <number> # # context part of < <url> # # authors <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard in codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"first parameter to <code> should be app name <section> the <code> function is declared as follows in arch_build . cmake : <code> the first parameter was intended to be the application name that the table is associated with , but historically any string was accepted since the string just served to make a unique target name . <section> sample_app always passes the string <code> here . <section> should pass <code> as first argument . <section> <url> <section> ubuntu <section> no major issue with the _current_ build system , but will may become an issue if / when nasa / cfe # <number> is implemented , and may also become an issue if directory - scope include directories are removed . <section> joseph hickey , vantage systems , inc ."
"implement coding standard rules in codeql <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_app integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , remove app registration fix # <number> , scrub header guards <section> sample_app checks < <url> bundle checks < <url> # # expected behavior changes # # # pr # <number> removes app registration call , <code> since applications do not need to register themselves . # # # pr # <number> apply standard header guard on all header files by removing leading underscore . convert file - scope block comments to doxygen format . # # additional context part of < <url> # # third party code none # # authors <user>"
"fix # <number> , add timeout to sb receive <section> apps should not pend forever on software bus receive , because they should also periodically check <code> even if no commands were received . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , confirm sample_app runs correctly <section> sample app will check cfe_es_runloop ( ) ( and therefore respond to a request from es ) even if it does not get any message on the software bus . <section> ubuntu <number> <section> as a "" best practice "" all apps should do something like this , instead of pending forever . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , scrub header guards <section> use a consistent header guard on all sample app header files . also convert file - scope block comments to doxygen format . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> <section> none , just changes comments and ifdef guard strings <section> ubuntu <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , remove app registration <section> it is not necessary for applications to register themselves , this is all done automatically . fixes # <number> <section> build and sanity check , run unit tests <section> none <section> ubuntu <number> <section> needs to be merged with nasa / cfe # <number> <section> joseph hickey , vantage systems , inc ."
"sample_app integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , convert from < > to "" for local includes fix # <number> , added a contributing guide that links to the main cfs contributing guide . fix # <number> , add context to the values for msgids # # testing performed see < <url> # # expected behavior changes # # # pr # <number> replaces <code> with <code> in local includes # # # pr # <number> adds <code> that links to the main cfs contributing guide . # # # pr # <number> adds a description for the requirements of command and telemetry message ids to explain why the msg ids have those requirements in documentation . # # additional context part of < <url> # # third party code none # # authors <user> <user> <user>"
"fix # <number> , use quotes for local includes <section> fix # <number> - convert from <code> to <code> for local includes <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , add context to the values for msgids <section> fixes # <number> add description for the requirements of command and telemetry message ids <section> no impact to behavior <section> ubuntu <number> <section> part of nasa / cfe # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
explain msg id values <section> message id ' s seem like they can be anything but in the sample app cmd and tlm need to be formatted to 0x 1 8 xx and 0x0 8 xx . <section> add some info to better explain why the msg ids have those requirements . <section> part of <url> <section> alex campbell <allcaps> gsfc </allcaps>
sample_app integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , simplify build to use wrappers and interface libs <section> use the wrapper functions now provided by <allcaps> cfe </allcaps> to simplify the build recipe and work with interface libraries fixes # <number> <section> build and run <allcaps> cfe </allcaps> unit tests <section> unit test targets are named a little differently when using the wrapper functions , but transparent if running via ctest . the filename is different if running manually though . <section> ubuntu <number> <section> requires nasa / cfe # <number> and must be merged before nasa / cfe # <number> to avoid breaking ut <section> joseph hickey , vantage systems , inc ."
"update build to work with interface libraries <section> as part of nasa / cfe # <number> and pr nasa / cfe # <number> the directory structure of <allcaps> cfe </allcaps> is changing . the sample_app build script was directly referencing certain <allcaps> cfe </allcaps> paths that will need an update after this merge . <section> utilize additional wrapper functions and interface libraries to facilitate the path change and avoid issues in the future . <section> see also nasa / cfe # <number> to add wrapper functions that will help with the unit test aspect <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sample_app , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , correct cfe_tbl_getaddress return code check fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities pr # <number> - resolves bug where success code was reported as an error for <code> . pr # <number> - rename <code> as <code> given change from < <url> <section> ubuntu <number> <section> part of <url> <section> none <section> <user> <user> <user>"
removed comments .
"fix # <number> , correct cfe_tbl_getaddress return code check <section> fix # <number> - only status < cfe_success is an error since cfe_tbl_getaddress has multiple "" success "" codes <section> built , ran , sent sample app process command to confirm it works <section> resolves bug where success code was reported as an error <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , refactor ut_clearforcefail to ut_cleardefaultreturnvalue <section> fixes # <number> rename ut_clearforcefail to ut_cleardefaultvalue <section> build and run unit test <section> no impact to behavior <section> ubuntu <number> <section> dependant on nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>"
change ut_clearforcefail to ut_cleardefaultreturnvalue <section> ut_clearforcefail was refactored to ut_cleardefaultreturnvalue for nasa / osal # <number> . it needs to have its name changed here as well . <section> part of nasa / osal # <number> <section> alex campbell <allcaps> gsfc </allcaps>
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , apply message alignment pattern <section> see < <url> <section> pr # <number> - aligns messages according to changes in cfe < <url> uses the "" raw "" message cmd / tlm types in definition <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"sample_app integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue <section> see events for "" github actions test "" at <url> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , remove non - portable os_pack <section> fix # <number> - removes os_pack ( not portable ) <section> did not confirm offsets , but checked size before and after and there was no change ( <number> ) . cfs - groundsystem does not display the message , but passed unit tests and ran a few commands through the system . <section> no impact , but removes undesirable pattern <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> will update other patterns to match # <number> in a separate commit / pr . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , use <allcaps> msg </allcaps> apis fix # <number> , remove non - portable os_pack <section> bundle ci on astrogeco : <url> <section> pr # <number> - replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> pr # <number> - no impact , removes undesirable pattern use of <code> <section> <section> part of <url> <section> none <section> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on nasa / osal # <number> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , use <allcaps> msg </allcaps> apis <section> replaces deprecated <allcaps> sb api </allcaps> ' s with <allcaps> msg </allcaps> fix # <number> <section> built and ran , enabled telemetry , checked noops <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , standardize to sample_app_ namespace prefix <section> see framework - bundle ci : < <url> <section> pr # <number> - no behavior changes . all identifiers now use the prefix <code> . changes the name of the main function from sample_appmain to sample_app_main which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu ci <section> <url> <section> none <section> <user>"
"fix # <number> , standardize to sample_app_ namespace prefix <section> replace inconsistent sample_ and sample_app name prefixes , now all identifers should start with sample_app_ . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior , but this also changes the name of the main function from sample_appmain to sample_app_main which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu <number> <section> noticed a bug in the process of this name change - the <code> field was hardcoded at <number> bytes , and this change ( adding <number> chars ) made the name too long , which overran the buffer . furthermore it was set with <code> , not <code> - so it clobbered the next field . this has also been fixed in this pr - changed to use <code> and <code> . this also requires a corresponding update in sample_lib as well as <allcaps> cfe </allcaps> startup script to fix the entry point names . <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - unit test <allcaps> mid </allcaps> string format now 3 2 bit pr # <number> - installs unit test to target directory pr # <number> - checks only format string in ut event test <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> bundle ci - <url> <section> pr # <number> - applies standard coding style . pr # <number> - removes test code call of cfe_sb_initmsg and sets the <allcaps> api </allcaps> / stub buffers directly . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , apply style <section> fix # <number> - applies standard coding style ran <code> <section> ci only , whitespace . <section> none <section> ci <section> redoing <url> which was accidentally merged and fixing to avoid conflicts <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , apply style <section> fix # <number> - applies standard coding style <section> ci only , whitespace . <section> none <section> ci <section> redoing <url> which was accidentally merged <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample tests should not use cfe_sb_initmsg stub to initialize a message <section> cfe_sb_initmsg is used in coveragetest_sample_app . c to initialize a message so that the cfe_sb_sendmsg stub has a valid message to use . this is not proper form . a unit test should not be calling a stub to provide this setup . stubs are to be used by production code in place of the actual calls in order for a unit test to isolate the code under test , they should not be used as utility functions for the unit tests . <section> see code snips . <section> provide a ut_assert utility that has the functionality to create a cfs message for use by a unit test . <section> <url> <section> <allcaps> rhel </allcaps> <number> <section> this is related to a cfe issue . if the cfe_sb_sendmsg stub worked as described in there , most situations where this is used would not even be required ( just verifying the message pointer instead of the actual message itself ) . <url> <section> alan gibson <allcaps> nasa gsfc </allcaps> / <number>"
"close # <number> , add build number and baseline <section> close # <number> <section> built bundle and confirmed sample_app reports development version . <section> version report now uses the version string . see excerpt from cfs log : <code> <section> ubuntu docker on mac <allcaps> os x </allcaps> <section> add any other context about the contribution here . <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - install unit test as part of cmake recipe . sample app test runner now shows up in expected install directory pr # <number> - add build number and baseline to version report <section> ubuntu ci <section> part of nasa / cfs # <number> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"coverage tests are actually coverage + functional tests <section> the current "" coverage "" tests are much like the unit tests in other cfs repositories , where stubs are configured to cause errors and the return values and events are checked . this is , in my opinion , intermixing functional and coverage testing . changing the type of event generated for an error condition will not affect coverage , but will require changing the unit test code which would fail , given that it was expecting the previous error condition . for example , instead of : <code> it could be written more simply as : <code> no need to check return or events . <section> one option would be to keep it as it is , but i suggest renaming it back to ( more ambiguous ) unit tests . or split the code into true coverage tests ( which would exercise every path ) and functional tests ( which would focus on nominal operation and significant error handling ) . <section> <email>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci : <url> <section> pr # <number> - move the table to fsw / tables and renames "" sample_table "" to "" sample_app_table "" . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> none <section> christopher d . knight , <allcaps> nasa </allcaps> - <allcaps> arc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"add reference to skeleton_app in sample_app <allcaps> readme </allcaps> <section> the sample_app <allcaps> readme </allcaps> should have a reference to the skeleton_app . <section> add the reference . <section> n / a <section> n / a <section> jandlyn bentley , <allcaps> nasa gsfc </allcaps>"
"test command message should use cfe_sb_cmdhdr_t <section> testmsg uses cfe_sb_msg_t , where it should use cfe_sb_cmdhdr_t for a zero parameter command <section> switch to cfe_sb_cmdhdr_t <section> none <section> allows the changes being worked in nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> fix # <number> <section> <url> <section> pr # <number> - test cases now compare an expected event string with a string derived from the spec string and arguments that were output by the unit under test . pr # <number> - replace references to <code> types with the <code> - provided type . <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> <section> integration candidate <allcaps> combined </allcaps> <number> - <number> - <number> and <number> - <number> - <number> fix # <number> , fix # <number> , fix # <number> <section> see prs bundle ci - <url> <section> pr # <number> - applies the cfe_sb_msgidtovalue ( ) and cfe_sb_valuetomsgid ( ) routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <hashtag> define </hashtag> values . pr # <number> - no more format conversion error in <allcaps> rtems </allcaps> build <section> see prs <section> part of nasa / cfs # <number> <section> elizabeth timmons , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> joseph hickey , vantage systems , inc ."
"sample_defs / tables source files will not compile without table header file include <section> if we want to put all tables source files in global * _defs directory in a tables dir inside * _defs they need to be able to access * _table . h which would be in the respective app ' s src directory . <section> steps to reproduce the behavior : <number> . create directory in sample_defs called "" tables "" <number> . move sample_table . c into sample_defs / tables directory <number> . build cfs ( make <allcaps> simulation </allcaps> = native prep , make ) <number> . build will fail because sample_table . c can not find sample_table . h <section> need to be able to provide includes to sample_defs / tables . as a "" hack "" i add a "" include_directories ( fsw / src ) "" in cmakelists . txt in apps / sample_app which allows sample_table . c to compile from sample_defs / tables . <section> - linux ubuntu <number> <allcaps> lts </allcaps> - native linux cfs build - versions cfe <date> , <allcaps> osal </allcaps> <date> , <allcaps> psp </allcaps> <date> <section> joe mahoney - <allcaps> lta </allcaps> research"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> bundle ci - <url> <section> pr # <number> - coverage data from <code> includes the sample_app code <section> see prs ci - ubuntu : bionic <section> part of nasa / cfs # <number> <section> joseph hickey , vantage systems , inc ."
"fix # <number> , incorrect conversion specifier <section> corrects a format mismatch warning on some platforms . fixes # <number> <section> build for i686 - rtems4 . <number> and confirm warning is fixed <section> no impact to behavior <section> i686 - rtems4 . <number> cross build <section> joseph hickey , vantage systems , inc ."
"fix # <number> , refactor to implement command and utility functions in separate files <section> addresses ticket # <number> . specifically adds new sample_app_cmds . c / . h and sample_app_utils . c / . h files , moves functions out of sample_app . c into the new cmds and utils files . updates unit tests . this change makes sample_app a better reference application - structure more closely matches other apps . <section> steps taken to test the contribution : <number> . app compiles <number> . app unit tests complete successfully <section> no change to sample app behavior . minor changes to unit test behavior ( more test cases ) . <section> - hardware : pc - os : ubuntu <number> - versions : cfe <date> <section> add any other context about the contribution here . <section> n / a <section> elizabeth timmons / <allcaps> nasa </allcaps>"
"unit tests need to link with ut_coverage_compile_flags / ut_coverage_link_flags <section> nasa / osal # <number> cleans up the compiler flag management , and as part of this it exports two variables , ut_coverage_compile_flags and ut_coverage_link_flags , rather than a single ut_c_flags value . <section> the unit tests need to use these variables , not ut_c_flags . <section> needs to be included with the nasa / osal # <number> merge . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , opaque cfe_sb_msgid_t values <section> apply the <code> and <code> routines where compatibility with an integer msgid is necessary - syslog prints , events , compile - time <allcaps> mid </allcaps> <code> values . fixes # <number> <section> unit test execute <allcaps> cfe </allcaps> and sanity - check normal operation - send commands to app using <code> and confirm commands are processed normally . <section> no impact to behavior . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> in future versions of <allcaps> cfe sb </allcaps> the msgid type might not be a simple integer , so this is one step in the direction of avoiding this assumption in apps . <section> joseph hickey , vantage systems , inc ."
integration candidate <number> - <number> - <number> <section> fixes # <number> <section> see pr # <number> bundle ci - pass <url> <section> add cfe_tbl_releaseaddress after access of table data <section> bundle ci - ubuntu : bionic <section> anh van - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"fix for # <number> - skeleton version of sample_app <section> this is the skeleton version of the sample_app , i developed this as a "" pull request "" for comparison purposes . i am * <allcaps> not </allcaps> * asking that this be pulled into the mainline as - is , either i can create a new app repository for "" skeleton_app "" or i can put all of this into a subfolder or branch in github . com / nasa / sample_app . <section> built and ran . does nothing but loads and reports loaded in log . <section> provides a simplified version of sample_app without the event registration and without the table or sample_lib integration . <section> debian linux vm <section> also wondering if i should pull the perfmon code , as this is not *required* for an app . <section> none <section> <email>"
"integration candidate <number> - <number> - <number> <section> fix # <number> and # <number> <section> see pr # <number> and # <number> bundle ci , see <url> <section> pr # <number> , adds a complete example unit test to the sample application . pr # <number> , sample_table . c is no longer included within the link of sample_app . so . <section> ci ubuntu : bionic <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"fix # <number> , release table address <section> fix issue # <number> , release table after use . <section> steps taken to test the contribution : <number> . build <number> . run <allcaps> cfs </allcaps> <number> . run groundsystem <number> . send "" process_app_process_cc "" <number> . verify output / everything works <section> - ubuntu <number> - groundsystem <number> . <number> . 0 a , cfs <number> <section> anh van , <allcaps> nasa </allcaps> goddard"
"ic <number> <section> integration candidate <number> fixes # <number> and # <number> see pr # <number> for more details <section> ci and raspbian <section> # <number> - builds in raspbian os # <number> - consistent naming conventions <section> <section> see pr # <number> for more details <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
ic - <number> describe the contribution fix # <number> testing performed steps taken to test the contribution : current ci passes test <number> in enhanced ci in <url> expected behavior changes # <number> - clean build when omit_deprecated = true system ( s ) tested on ci : ubuntu <number> additional context n / a third party code n / a contributor info - all information <allcaps> required </allcaps> for consideration of pull request gerardo e . cruz - ortiz - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"general <allcaps> sample </allcaps> app cleanup <section> fixes # <number> fixes # <number> applies a consistent naming convention for all symbols in <allcaps> sample </allcaps> app to be consistent with the published <allcaps> cfe </allcaps> naming convention and other <allcaps> cfe </allcaps> / <allcaps> cfs </allcaps> modules . <section> build code with <code> and confirm that code builds without error or warnings . also build on raspberry pi and confirm the cast align warnings are gone . execute <allcaps> cfe </allcaps> and confirm nominal operation - all apps load and respond to basic commands as expected . <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit raspberry pi 3 b + <section> this single pull requests addresses multiple issues because they cannot be parallelized without introducing conflicts ( the latter depends on the former ) . the fixes are kept as separate commits for review purposes . <section> joseph hickey , vantage systems , inc ."
"fix # <number> , do not use aux_source_directory in sample build script <section> fix # <number> do not use <code> in the build script , but rather list out each file explicitly . in particular this avoids incorrectly including the <code> file in the app build . <section> build software with <code> and confirm that <code> is no longer included within the link of <code> . execute <allcaps> cfe </allcaps> and confirm basic normal operation <section> no impact to behavior <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc ."
"consistent naming in <allcaps> sample app </allcaps> <section> to adhere to the patterns established in other modules , the <allcaps> sample </allcaps> app should employ a consistent pattern to its local variables and functions . there is currently a mixture of different styles . <section> - all global scope items should start with <code> ( not <code> or otherwise ) - all runtime data should be inside a global struct ( already is for the most part ) - members of the global struct do _not_ use the <code> prefix ( name is already qualified / namespace protected ) . - command handling functions should match the name of the command <section> joseph hickey , vantage systems , inc ."
"fix # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed describe the contribution fixes # <number> , build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed testing performed nominal build process : make distclean make prep make make install followed by building with omit_deprecated = true make distclean make omit_deprecated = true prep make make install confirmed clean build in both cases . expected behavior changes clean build when omit_deprecated = true system ( s ) tested on oracle vm virtualbox os : ubuntu - <number> . <number> versions : cfe <number> . <number> , <allcaps> osal </allcaps> <number> . <number> , <allcaps> psp </allcaps> <number> . <number> additional context there is a total of three pull requests to address issue_35 : nasa / to_lab nasa / sample_app nasa / sch_lab all three are intended to be delivered together . contributor info dan knutsen <allcaps> gsfc </allcaps> / <allcaps> nasa </allcaps>"
"integration candidate <number> <section> fix # <number> , fix # <number> , fix # <number> , fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"avoid compile warnings due to printf format <section> fix # <number> when using printf - style format conversions one must generally cast the argument to the intended type , as it does not happen implicitly with variable - argument functions . in particular the existing code worked on the default ( native ) build but generated warnings when building on <allcaps> rtems </allcaps> for a <number> - bit x86 target . <section> build for i686 <allcaps> rtems </allcaps> and x86 - <number> ( native ) and ensure no warnings on either platform <section> none . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit build machine , and i686 - rtems4 . <number> cross target . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> : check return of cfe_tbl_getaddress <section> fix # <number> . the code must not dereference the pointer unless the call returned cfe_success , otherwise the pointer is not valid . <section> execute <allcaps> cfe </allcaps> under simulation , send processcc command and ensure no change to nominal behavior <section> no change in the nominal case , where the command operates normally and the table address is valid . the sample_processcc function now does not dereference the table pointer in case the cfe_tbl_getaddress function fails , which is confirmed in the unit test . <section> ubuntu <number> <allcaps> lts </allcaps> , <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"reverse command and error counts <section> fix # <number> telemetry values were being copied to the telemetry packet backwards . trivial fix . <section> build code using <allcaps> simulation </allcaps> = native and default config . send a command to sample_app and verify that the command counter , not the error counter , has incremented in the telemetry packet . <section> the command and error counters are correct , not reversed <section> ubuntu <number> <allcaps> lts </allcaps> , <number> bit <section> joseph hickey , vantage systems , inc ."
"invoke sample_function as part of process command <section> fix # <number> adds a call to the <code> provided by sample_lib as part of the example command processing . this is to demonstrate two things : - for <allcaps> fsw </allcaps> , it shows that runtime linking is working as expected , not just for functions provided in the core / base ( e . g . <allcaps> cfe </allcaps> , <allcaps> osal </allcaps> , <allcaps> psp </allcaps> ) but also for dynamically loaded libraries - for unit test , it provides a use - case for linking with stubs provided by an external library <section> build with enable_unit_tests = <allcaps> true </allcaps> , both with <allcaps> simulation </allcaps> = native and for a <number> - bit raspberry pi target . execute <allcaps> cfe </allcaps> code , and confirm that everything starts normally . sample_lib is loaded first , and sample_app is loaded next and no runtime linking issues are reported . log snippet : <code> send the "" process_cc <code> ` <code> ` ` <section> the process_cc command now makes a call into the sample library . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , how to guide for setting up cmake for coverage - test <section> how to guide for minimum needed to setup cmake for coverage - test <section> steps taken to test the contribution : <number> . create cmakelists . <number> . cmake . <number> . make <number> . make test <number> . test ran with assert successfully <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
""" how to "" guide for setting up cmake for coverage test <section> guide for minimum setup needed for coverage test . <section> anh van , <allcaps> nasa </allcaps> goddard"
"integration candidate <number> <section> fixes # <number> <section> steps taken to test the contribution : <number> . checked out bundle with ic - <number> branches <number> . make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep <number> . make <number> . make install <number> . make test built without warnings , all tests passed except osal_timer_ut ( nominal result on linux ) executed cfe , successful startup with no warnings confirmed passed ci ( with cppcheck enforced ! ) <section> no functional changes , removed duplicate table definition . <section> - cfs dev server - os : ubuntu <number> - versions : bundle ic - <number> branch <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
fix # <number> : add table header file <section> fixes # <number> <section> steps taken to test the contribution : <number> . nominal checkout and build of bundle with this change <number> . ran code and sent sample app process command code to verify table worked <code> <section> - no impact to behavior <section> - hardware : cfs dev server ( vm ) - os : ubuntu <number> - versions : master bundle w / this change <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"simplify table path in cmakelist . txt <section> fsw / src is ignored in : <url> <section> remove path , since it implies a specific file , when the build system actually searches the * _defs first for a matching file . <section> none <section> see the guide in elf2cfetbl <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> covers the following changes : - # <number> - match dev guide , add table and <allcaps> crc </allcaps> ( <allcaps> fasttracked </allcaps> ) - <allcaps> hotfix </allcaps> : add table to cmakelists . txt <section> steps taken to test the contribution : <number> . followed standard build / run steps with permissive mode on cfs development server <section> now uses cfe table services and reports <allcaps> crc </allcaps> <section> - cfs development server - ubuntu <number> . <number> <allcaps> lts </allcaps> , <number> . <number> - <number> - generic - versions : ic - <number> bundle ( all ic - <number> branches ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file"
"fix # <number> , update to dev guide , add table , add <allcaps> crc </allcaps> output <section> updated to dev . guide , added sample table , added <allcaps> crc </allcaps> output <section> steps taken to test the contribution : <number> . build <number> . send ground command <number> . verify results <code> output from tblcrctool : <code> <section> no impact to behavior <section> - hardware - os : ubuntu <date> - versions <allcaps> cfs </allcaps> <number> <section> anh van , <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"fix # <number> , update sample app to developer guide <section> updated sample app to follow developer ' s guide . added sample table . <section> <number> . build cfs <number> . run groundsystems <number> . verify <number> commands : <code> <section> no impact to behavior <section> - hardware - os : ubuntu <date> - cfe <number> , groundsystem <number> . 0 9 a <section> anh van . <allcaps> nasa </allcaps> goddard <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sample_app included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - performance id updated but no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags removed <allcaps> mks </allcaps> flag for sample_app"
