text
sample_lib integration candidate : caelum - rc4 + dev30 <section> pr # <number> - pr # <number> . addresses issue # <number> <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>
"fix # <number> , add newline at end of sample_lib . c <section> - fix # <number> - removes a stray swap file <section> ci , also built w / clang and it resolves the warning <section> no clang warning , no impact for gnu compilers <section> ci and w / clang <number> <section> related to : - nasa / cfe # <number> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_lib integration candidate : caelum - rc4 + dev25 <section> pr # <number> - fix # <number> , remove redundant comments pr # <number> - fix # <number> , create <allcaps> changelog </allcaps> . md <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , remove redundant comments testing performed * * none ( comment changes only ) . <section> no impact on behavior . these updates will reduce clutter and inconsistency in the code , improving readability . <section> <user>"
"redundant comments (/* end of function */ , /* end if */ etc . ) expected behavior * * remove redundant comments to reduce clutter and inconsistency in the code , and improve readability . <section> <user>"
"sample_lib integration candidate : caelum - rc4 + dev23 <section> pr # <number> - fix # <number> , remove unnecessary parentheses around return values . <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <section> none <section> <user>"
"fix # <number> , create <allcaps> changelog </allcaps> . md testing performed * * none . <section> minimizes unnecessary clutter in <allcaps> readme </allcaps> . md <section> <user>"
"use a changelog to keep track of changes instead of having them in the readme copy of <url> <section> the version history in the readme file clutters useful information <section> move the "" version history "" from <code> to <code> <section> <user>"
"fix # <number> , remove unnecessary parentheses around return values . fixes # <number> removes parentheses in return statements in sample_lib that return a single value / term . this is aligns these return statements with the predominant style of cfs . <section> none , prior to submission of the pull request . <section> no impact on behavior . <section> <user>"
scrub use of ( ) in return statements reporter info * * <user>
"fix # <number> , codeql workflow name update <section> - fix # <number> <section> ci <section> just fixes workflow <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"codeql workflow broken due to name change <section> merging <url> broke the components ' codeql workflow as expected . need to update the codeql workflows to match the patterns implemented in <url> <section> see failed workflows - <url> <section> workflow executes <section> none <section> github actions <section> use <code> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_lib integration candidate : caelum - rc4 + dev7 <section> pr # <number> - fix # <number> , update copyright header pr # <number> - <allcaps> hotfix </allcaps> # <number> , standardize version information <section> sample_lib checks < <url> cfs bundle checks < <url> <section> see prs <section> ubuntu <allcaps> rtems </allcaps> <section> part of nasa / cfs # <number> <section> none <section> <user> <user>"
"<allcaps> hotfix </allcaps> # <number> , standardize version information <section> per conversation in <allcaps> ccb </allcaps> : <number> - <number> - <number> and in <url> ensuring <allcaps> revision </allcaps> number is set to <number> and mission_rev = 0 xff <section> text and documentation only <section> no behavior change <section> n / a <section> <url> <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>"
"fix # <number> , update copyright header <section> - fix # <number> <section> documentation only , but built / ran unit tests <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove explicit filename doxygen comments <section> - fix # <number> <section> make doc , observe no filename warnings <section> none <section> - hardware : i5 / wsl - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , apply header guard standard <section> - fix # <number> <section> ci <section> none <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
update build baseline to cfs - caelum - rc4 <section> update baseline to cfs - caleum - rc4 : v1 . <number> - rc4 update mission rev to use 0 xff for development version <section> - sample_lib checks < <url> - cfs bundle checks < <url> <section> none <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>
"fix # <number> , reuse codeql , static analysis , and format check <section> fixes # <number> <section> sample_lib codeql reuse : <url> sample_lib format check : <url> sample_lib static analysis reuse : <url> <section> sample_lib will reuse codeql , static analysis , and format checker that are held in cfs . these workflows will not work until nasa / cfs # <number> is merged . <section> ariel adams , <allcaps> asrc </allcaps> federal"
"reuse codeql , format checker , and static analysis workflows <section> when needing to change workflows , one must create an issue and pr for each submodule . this feature would reduce duplication . <section> to reuse workflows , the targeted workflow must include workflow_call and inputs as seen below . <code> <section> keep it as is . <section> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> cfe codeql reuse build : <url> tested in <allcaps> osal </allcaps> , <allcaps> osal </allcaps> codeql reuse build : <url> cfs codeql reuse : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"static analysis workflow missing duplicate check , restricting to main push , remove - - quiet <section> missing duplicate check , overly restrictive to main push : <url> also should remove <code> flag so files processed will be listed : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"format check workflow missing duplicate check , restricting to main push , job name does not match <section> missing duplicate check , restricting to main , and named wrong : <url> <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"fix # <number> , remove codeql workflow pr branch restriction <section> - fix # <number> removes main branch restriction on pull requests . <section> none <section> runs on all pr ' s <section> none <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
codeql analysis workflow restricted to pull request main branch <section> overly restrictive on pull requests here : <url> <section> remove branch restriction <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>
"typos in documentation , print statements , and comments <section> found multiple typos throughout the codebase <section> correct grammar and spelling errors <section> none <section> retroactive issue for # <number>"
"sample_lib integration candidate : <number> - <number> - <number> # # context part of < <url> # # author <user> # # description # # # pr # <number> fix # <number> , implement coding standard codeql"
"fix # <number> , implement coding standard codeql <section> fix # <number> added the duplicate jobs action to avoid duplicate jobs from running . added a separate job for coding standard queries . created two configuration files , one for default queries and security queries and another for jpl rules . removed push on main branch so when users push code to their forked repos , the workflow runs . added main branch to pull request , so codeql runs on pull request made in the main branch . this is the same logic used in the cfs bundle repo . <section> testing done on cfe forked repository , arielsadamsnasa / cfe which used the same files , but with different configuration paths . jobs were failing when the entire path of the configuration file were not used . have to use nasa / cfe / . github / codeql / config - name <user> - name . the branch must be included in the path . the codeql analysis workflow will fail for this pr since it is calling for a configuration file in main the main branch . it will not work until the configuration files are merged into main . in the screenshot is the same workflow as in this pull request , but the configuration path is changed to the forked repo and tested branch . image <img> <section> there should be one job for security queries and one job for <allcaps> jpl </allcaps> and <allcaps> misra </allcaps> queries . <section> can allow all branches to run codeql for pull requests as seen in cfe and <allcaps> psp </allcaps> instead of just the main branch like cfs . <section> skip duplicate workflows license : <url> codeql license : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"implement coding standard rules in codeq <section> codeql does not use <allcaps> jpl </allcaps> rules , which is used in the upcoming coding standard . <section> implement <allcaps> jpl </allcaps> rules for codeql . continue using the security queries , but keep them separate from the <allcaps> jpl </allcaps> results . can use two different workflows , one for the coding standard and one for the security queries . <section> might be able to use one workflow , as long as the results can be easily identified as a coding standard issue or security issue . <section> <allcaps> jpl </allcaps> queries are found here : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal"
"sample_lib integration candidate : <number> - <number> - <number> # # description # # # pr # <number> fix # <number> , replace direct ref to argptr with macro the ut_hook_getargvaluebyname macro provided by ut assert is the preferred way to get an argument in the current version . reading the pointer directly is not advised as it depends on how the stub was actually implemented , whereas the macro should produce consistent results . hook will continue to work even if stub implementation changes . using macro is more readable , more future proof , and reflects current best practice for ut assert hooks . # # context part of < <url> # # testing sample_lib tests < <url> cfs bundle tests < <url> # # authors <user>"
"fix # <number> , replace direct ref to argptr with macro <section> the ut_hook_getargvaluebyname macro provided by ut assert is the preferred way to get an argument in the current version . reading the pointer directly is not advised as it depends on how the stub was actually implemented , whereas the macro should produce consistent results . fixes # <number> <section> build and run all unit tests , confirm sample_lib test works <section> hook will continue to work even if stub implementation changes . <section> ubuntu <number> <section> using macro is more readable , more future proof , and reflects current best practice for ut assert hooks . <section> joseph hickey , vantage systems , inc ."
"replace direct ref to ut assert structure with macro <section> a test in sample_lib is directly referencing the <code> member inside the <code> object from the hook call . since the time this was initially implemented , the ut assert framework has improved , and now offers a <code> macro get this value . directly referencing the value is not a good design and is likely to break as ut assert continues to evolve . <section> this should be updated to use the preferred macro , <code> , which is more future - proof and reflects current best practice / recommendations for new tests . <section> <url> <section> ubuntu <number> <section> the specific thing pointed to by <code> depends on how the stub was implemented , and the macro abstracts this detail to give a consistent result to the caller . this is why it is important to use the macro . <section> joseph hickey , vantage systems , inc ."
"sample_lib integration candidate : <number> - <number> - <number> # # describe the contribution fix # <number> , use "" for local includes fix # <number> , added a contributing guide that links to the main cfs contributing guide . # # testing performed see <url> # # expected behavior changes # # # pr # <number> replace <code> with <code> for local includes # # # pr # <number> adds <code> that links to the main cfs contributing guide . <section> - hardware : [ e . g . pc , sp0 , mcp750 ] - os : [ e . g . ubuntu <number> , <allcaps> rtems </allcaps> <number> , vxworks <number> ] - versions : [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps or tools ] # # additional context part of <url> # # third party code * * none # # authors <user> <user>"
"fix # <number> , use quotes for local includes <section> fix # <number> - uses <code> for local includes <section> build / run unit tests , passed <section> none <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - if <allcaps> nasa </allcaps> civil servant employee or <allcaps> gsfc </allcaps> contractor on <allcaps> ses ii </allcaps> - address / email / phone and contract / task information ( if applicable ) must be on file - else if company - <section> company <allcaps> cla </allcaps> must be on file ( once per release ) : company <allcaps> cla </allcaps> <url> - else if individual - <section> individual <allcaps> cla </allcaps> must be on file ( once per release ) : individual <allcaps> cla </allcaps> <url>"
sample_lib integration candidate : <number> - <number> - <number> <section> pr # <number> pr # <number> <section> ci <section> none <section> ci <section> none <section> none <section> <user> <user>
"fix # <number> , simplify build to use wrappers and interface libs <section> use the wrapper functions now provided by <allcaps> cfe </allcaps> to simplify the build recipe and work with interface libraries fixes # <number> <section> build and run <allcaps> cfe </allcaps> unit tests <section> unit test targets are named a little differently when using the wrapper functions , but transparent if running via ctest . the filename is different if running manually though . <section> ubuntu <number> <section> requires nasa / cfe # <number> and must be merged before nasa / cfe # <number> to avoid breaking ut <section> joseph hickey , vantage systems , inc ."
"update build to work with interface libraries <section> as part of nasa / cfe # <number> and pr nasa / cfe # <number> the directory structure of <allcaps> cfe </allcaps> is changing . the sample_lib build script was directly referencing certain <allcaps> cfe </allcaps> paths that will need an update after this merge . <section> utilize additional wrapper functions and interface libraries to facilitate the path change and avoid issues in the future . <section> see also nasa / cfe # <number> to add wrapper functions that will help with the unit test aspect <section> joseph hickey , vantage systems , inc ."
"fix # <number> , add codeql analysis to workflow <section> fix # <number> - adds codeql analysis differences from bundle - just builds sample_lib , has timeout <section> ran on fork <section> adds code ql analysis on push to main and pull requests ( to main ) <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"sample_lib integration candidate : <number> - <number> - <number> <section> fix # <number> , create security policy <section> see <url> <section> pr # <number> - documentation : add <code> with instructions on reporting vulnerabilities <section> ubuntu <number> <section> part of <url> <section> none <section> <user>"
"sample_lib integration candidate : <number> - <number> - <number> <section> fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue <section> see events for "" github actions test "" at < <url> <section> pr # <number> - rename <code> to <code> since some functions that retain more than <number> value are not necessarily failing <section> ubuntu <number> <section> part of < <url> <section> none <section> <user>"
"fix # <number> , refactor ut_setforcefail to ut_setdefaultreturnvalue describe the contribution fixes # <number> by changing ut_setforcefail to ut_setdefaultreturnvalue testing performed build and run unit test expected behavior changes no impact to behavior system ( s ) tested on ubuntu <number> additional context dependant on nasa / osal # <number> contributor info - all information <allcaps> required </allcaps> for consideration of pull request alex campbell - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> , standardize to sample_lib_ namespace prefix <section> see framework - bundle ci : <url> <section> pr # <number> - no behavior changes . all identifiers now use the prefix <code> . changes the name of the init function from sample_libinit to sample_lib_init which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu ci <section> part of <url> <section> none <section> <user>"
"fix # <number> , standardize to sample_lib_ namespace prefix <section> replace inconsistent sample_ and sample_lib prefixes , now all identifiers should start with sample_lib_ . fixes # <number> <section> build and sanity test <allcaps> cfe </allcaps> run all unit tests <section> no impact to behavior , but this also changes the name of the init function from <code> to <code> which affects the <allcaps> cfe </allcaps> startup script . <section> ubuntu <number> <section> needs to be merged with nasa / sample_app # <number> <section> joseph hickey , vantage systems , inc ."
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> bundle ci - <url> <section> pr # <number> - installs unit test to target directory . <section> ubuntu - ci <section> <url> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"close # <number> , add build number and baseline to version file <section> close # <number> <section> build with bundle <section> version report now shows development build number <code> <section> ubuntu on docker on <allcaps> osx </allcaps> <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> close # <number> <section> bundle ci - <url> <section> pr # <number> - install unit test as part of cmake recipe . sample lib test runner now shows up in expected install directory pr # <number> - add development build number and baseline to version reporting <section> ubuntu <section> part of nasa / cfs # <number> <section> none <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fix # <number> <section> see pr # <number> bundle ci - <url> <section> none <section> ubuntu : bionic <section> part of nasa / cfs # <number> <section> jacob hageman , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate : <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - coverage data <code> includes the sample_lib code <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> joseph hickey , vantage systems , inc ."
"integration candidate <number> - <number> - <number> <section> fixes # <number> <section> see prs bundle ci - <url> <section> pr # <number> - no doxygen warnings should be generated <section> see prs bundle ci - ubuntu : bionic <section> part of <url> <section> leor bleir , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> - <number> - <number> <section> fix # <number> <section> bundle testing on ci see <url> <section> see pr # <number> <section> ci ubuntu : bionic <section> joseph hickey , vantage systems , inc . gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>"
"integration candidate <number> <section> fix # <number> <section> <number> . checked out all ic <number> branches <number> . built and ran cfs unit tests and <allcaps> osal </allcaps> coverage ( vxworks and shared ) <number> . all passed ( although osal_timer_ut occasionally still fails due to a test issue ) <number> . make cmdutils where cfs - groundsystem expects it <number> . cd tools / cfs - groundsystem / subsystems / cmdutil <number> . make <number> . started ground system <number> . python3 groundsystem . py <number> . enabled commands to <number> . <number> <number> . confirmed telemetry packets received <number> . sent es and <allcaps> time </allcaps> noop commands , confirmed noop message from cfs on port <number> <number> . sent es power on reset and observed cfs exit <section> see related pull requests <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> branches <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>"
"add logic to sample_lib for ut <section> fix # <number> in order to make a useful library unit test example , the sample_lib itself needs to perform some more interesting work . in particular it needs at least one external function call on which a code path decision is made , such that the example ut code will have more than one code path to demonstrate . additionally , the library should have some internal "" global "" structure ( like real libs would ) that contains its state , that the ut can also test / query . both objectives can be accomplished with a small string buffer that gets populated with a <code> call during init , and printed with the "" process "" command . other minor updates for correctness : - the entry point ( <code> ) is not really a "" private "" function . it is called from es when starting up . as such it should be considered part of the public <allcaps> api </allcaps> . this moves the prototype to the public <allcaps> api </allcaps> and corrects the comments so it is _not_ labeled as a private function . note this is also relevant for unit tests , because the ut will invoke the entry point too . - corrects a missing newline on the os_printf during startup . this was a long - standing pet peeve . <section> built code using <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> confirmed no build issues , execute <allcaps> cfe </allcaps> and confirm that sample_lib starts up as normal . force a call to the "" sample_function ( ) "" <allcaps> api </allcaps> and confirm that the printf now includes the buffer contents , as such : <code> <section> no changes of substance . added display of the buffer contents to the os_printf . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> joseph hickey , vantage systems . inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted"
"added auto build capabilities using travis - ci <section> auto build capabilities added using travis - ci <section> steps taken to test the contribution : <number> . verified auto build performed when new code is pushed to github <section> - auto build will be performed whenever new code is pushed to github <section> - github - linux xenial distribution <section> a branch , specified by environment variables in the buildvars . sh file , will be checked out and this application will be build in the context of that cfs tree <section> travis wheatley - emergent space technologies <section> work performed for <allcaps> nasa </allcaps> "" task <number> """
"integration candidate <number> <section> merge of <allcaps> ccb </allcaps> <number> approved commits . fixes # <number> , fixes # <number> <section> steps taken to test the contribution : <number> . setup and build per <allcaps> readme </allcaps> instructions ( no build warnings observed ) <number> . start up cfe with sample_lib included by default and observed : <code> <number> . sent tlm_enable command , verified hk packet telmetry reception , sent es processor reset ( ' <number> ' ) to exit cfe <section> a clear and concise description of how this contribution will change behavior and level of impact . - no behavior updates <section> - cfs development server - os : ubuntu / linux <number> . <number> - <number> - generic - versions : bundle rc - <number> . <number> <section> none <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps> <section> <allcaps> cla </allcaps> on file ."
"fix # <number> , remove classic build remove for_build folder ."
"fix # <number> , remove <allcaps> mks </allcaps> flags remove <allcaps> mks </allcaps> flags"
