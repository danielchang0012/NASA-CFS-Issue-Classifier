text,label
registration of events with 0x0 0 0 0 filters is not all that helpful <section> registration of all events with <code> filters just loads the system without actually filtering anything . also fills the event filter buffer for the app and likely drops some since default limit is <number> . <section> remove zero entries from initialization and add a filter when / if needed ( or operationally via command ) . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
apply latest copyright header <section> updated copyright header <section> update <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,1
apply header guard standard formatting <section> nonstandard guard used <section> apply standard <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"overrun for cfe_msg_message_t <section> out - of - bounds access ( <allcaps> overrun </allcaps> ) . overrunning struct type cfe_msg_message_t of <number> bytes by passing it to a function which accesses it at byte offset <number> using argument 4 0 ul . <section> fix overrun <section> <url> <section> coverity : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",2
"check return value of cfe_sb_createpipe <section> calling cfe_sb_createpipe without checking return value ( as is done elsewhere <number> out of <number> times ) . <section> check return value of cfe_sb_createpipe . should also check return value of cfe_evs_register and cfe_sb_subscribe as seen in sample_app . <section> <url> <section> coverity : <url> <section> examples of how return value is checked for cfe_sb_createpipe : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",2
"update cfe_msg_message_t conversions to use cfe_msg_ptr macro <section> in nasa / cfe # <number> introduces a <code> macro which converts a cmd / tlm header object to a <code> pointer , which is intended to be used rather than assuming a specific member name ( e . g . <code> ) . <section> use the macro instead of assuming <code> member name . <section> required when using generated headers , as the member name may not be "" msg "" or may be further encapsulated . <section> joseph hickey , vantage systems , inc .",2
"improve consistency in application of cfe_sb_msgidtovalue / valuetomsgid conversions <section> a <code> value , like other ids , is supposed to be a unique type / opaque value that identifies a message within the sb application context . although it is currently implemented using an integer ( <code> specifically ) application should not assume this . instead , a set of macros and inline conversion functions ( cfe_sb_msgidtovalue and cfe_sb_valuetomsgid ) are provided for when the application needs to interpret the value as an integer for a valid purpose . <section> add conversions where they are currently missing <section> see nasa / cfe # <number> for full info . a separate issue + pr will be submitted for each framework app . <section> joseph hickey , vantage systems , inc .",2
"remove references to cfe_es_registerapp <section> as part of nasa / osal # <number> and nasa / cfe # <number> the registration apis are getting fully deprecated and removed . applications no longer need to call os_taskregister , cfe_es_registerapp , or cfe_es_registerchildtask . <section> remove references to these functions . <section> will be required with nasa / osal # <number> and nasa / cfe # <number> <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , add contributing guide <section> fix # <number> added a contributing guide that links to the main cfs contributing guide . <section> users should be able to view the contributing guide contents easily from the ci_lab repo . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add contributing guide <section> add a contributing guide for the <allcaps> osal </allcaps> repo . <section> create a contributing guide markdown file . in the guide , add a link to the ci_lab contributing guide . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"applications should use all - inclusive "" cfe . h "" header <section> the <allcaps> cfe </allcaps> documentation recommends that applications use the supplied <code> header which in turn provides all <allcaps> cfe </allcaps> core , <allcaps> psp </allcaps> , and <allcaps> osal </allcaps> apis as well as mission config . because some header names are getting changed in nasa / cfe # <number> , including the headers individually becomes a problem . <section> change to using the <code> all - inclusive header , which makes ci_lab work with the new directory structure , and should avoid future issues , and it matches what the documentation recommends . <section> change <code> - > <code> <section> needed for nasa / cfe # <number> <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , add testing tools to the security policy <section> fix # <number> updated the security policy to include the type of testing done for ci_lab or the cfs bundle under a new section titled "" testing "" . provided a disclaimer that under the apache license , liability is not provided . added that security reports should be emailed . <section> users should now be aware of the type of testing ci_lab or the cfs bundle undergoes . <section> references : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add testing tools to the security policy <section> users are unaware of how cfs / ci_lab is tested . by providing this information , transparency is provided to the community which promotes trust . <section> the security policy should inform users what tools are being used to test cfs / ci_lab while being cautious of liability issues . to do so , we can state explicitly that our software does not provide liability under the apache license . the security policy should inform users that they may view the <allcaps> lgtm </allcaps> results . the policy would state that the alerts from <allcaps> lgtm </allcaps> may not be accurate , since they cannot be dismissed . add that security report should be emailed . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"refactor ingest to utilize zero copy ( can reduce two copy to one ) <section> ci copies the data into a local buffer and then uses cfe_sb_transmitmsg ( which does a second copy into the sb buffer ) : <url> <section> could use zero copy to get a buffer , write directly to the buffer and cfe_sb_transmitbuffer ( single copy ) <section> none <section> we do not have a functional example of zero copy , just documentation . this would support user request for a working example as well as improve performance . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ( from stakeholder request )",2
"add codeql analysis to workflow <section> codeql analysis not implemented in submodules <section> add so alerts are generated on pull requests to submodules <section> none <section> codeql is run at the bundle ( nasa / cfs ) level , but link to code in submodules does not work . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> could add release / omit_deprecated build , but this would break when / if there are cross - repo dependent changes . does get checked during merge processing as a bundle , and can be checked by pushing a test branch to cfs so it ' s debatable if it ' s worth implementing locally . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
ci updates - add static analysis and format in workflow <section> travis - ci not transitioned to github actions <section> transition ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , create security policy <section> fix # <number> created a draft of a security policy markdown file for ci_lab . the purpose of a security policy is to inform users on how to submit bugs or vulnerabilities . it is ideal to include a section for supported versions . <section> optional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"implement a security policy <section> create a security policy for users on how to report security vulnerabilities . <section> the security policy should instruct users on how to report security vulnerabilities and provide them additional contact information for questions and concerns . <section> additional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
check message length vs bytes received before publishing <section> command ingest does not verify message length ( from header ) matches bytes received . <section> verify prior to publishing to sb ( stop the error at the source ) . <section> leave as is - command sources should be sending one valid message per datagram <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,0
"update for suggested alignment enforcement pattern ( nasa / cfe # <number> ) <section> see nasa / cfe # <number> , inconsistent pattern <section> match suggestion in nasa / cfe # <number> , use the "" raw "" message cmd / tlm types in definition . <section> none <section> nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
remove use of os_pack <section> os_pack should not be used . <section> remove it . <section> none <section> nasa / osal # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,0
remove dependencies on deprecated sb apis <section> sb apis deprecated in nasa / cfe # <number> <section> update to use <allcaps> msg </allcaps> module . <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"update ci_lab to use osal_id_t typedef <section> ci_lab is using <code> type to hold its <allcaps> osal </allcaps> socket id . <section> should use the <code> typedef instead . <section> part of ongoing effort to update all framework code to use the typedef for <allcaps> osal </allcaps> ids . <section> joseph hickey , vantage systems , inc .",2
"report version when responding to noop comand to match sample app template <section> the noop command response in ci_lab is currently <code> while sample app and others usually include the app version as a response . <section> use the noop response template provided in ci_lab <section> change the template so noops do not respond with the version . or create and enforce a noop <allcaps> api </allcaps> at the cfe level . <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"add build name and build number to version . h <section> need a better way to describe versions during development <section> add build name and build number to version . h as discussed , we will add a a build name string and a continuously incrementing build number to <code> <section> see notes from <allcaps> ccb </allcaps> : < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"fix # <number> , remove references to <allcaps> ccsds </allcaps> types <section> replace references to <code> types with the <code> - provided type . fixes # <number> <section> build and sanity check <allcaps> cfe </allcaps> , run all unit tests <section> no impact to behavior <section> ubuntu <number> <section> joseph hickey , vantage systems , inc .",2
"remove references to "" <allcaps> ccsds </allcaps> "" structures <section> applications should <allcaps> not </allcaps> refer to the "" <allcaps> ccsds </allcaps> "" data types and macros , as there should be no assumption of a particular message framing type at this level . <section> use the abstract types provided in <code> rather than directly using <code> types . <section> related to nasa / cfe # <number> <section> joseph hickey , vantage systems , inc .",2
"app should treat cfe_sb_msgid_t values as opaque <section> for compatibility going forward , code should not assume that <code> is an integer . <section> when dealing with an integer , such as when printing in events / messages or for backward compatibility with <allcaps> mid </allcaps> <code> ' s , the code may use <code> and <code> conversion routines . <section> architecturally , the <code> is supposed to be an opaque / abstract value that identifies an endpoint on the software bus routing domain . the specific meaning of integer values is already different in an "" extended header "" ( <allcaps> ccsds </allcaps> v2 ) build vs . the standard header build . therefore apps should never make assumptions regarding the specific integer values , and all introspection of <code> values should be through the <allcaps> cfe sb api </allcaps> only . <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , clang - format - <number> fails in travis ci <section> fix # <number> <section> ran ci <section> ci builds no more warnings in config section of travis <section> ci - ubuntu bionic <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"clang - format - <number> fails in travis ci <section> travis ci fails with message : > the command "" sudo apt - get install clang - format - <number> "" failed and exited with <number> during . see <url> also has some warnings for deprecated tags in the <allcaps> yaml </allcaps> file : > root : deprecated key sudo ( the key <code> has no effect anymore . ) language : unexpected sequence , using the first value ( c ) root : missing os , using the default linux see <url> <section> force a run of current master branch in travis ci <section> ci finishes set up and works . no travis warnings <section> travis ci , ubuntu - bionic <section> gerardo e . cruz - ortiz <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"<allcaps> ci lab </allcaps> fails when running more than one instance on the same host <section> with a <allcaps> cfe </allcaps> project that uses more than one target ( multi - cpu ) , it is common during development to run more than one <allcaps> cfe </allcaps> core process on the same physical machine ( i . e . when simulating on native ) . but ci_lab unconditionally binds to port <number> so if more than one of those <allcaps> cfe </allcaps> core process is running ci_lab then it fails to bind because the port is in use . <section> ci_lab should at least modify its port number based on the <allcaps> cpu </allcaps> number from the <allcaps> psp </allcaps> . this would allow all cfe - core instances from the same mission to avoid conflict , and not require a custom build of ci_lab for each <allcaps> cpu </allcaps> . <section> containers would also theoretically solve this too but it is complicated to set up and also makes debugging more complex which is generally the objective of doing a native build in the first place . <section> suggest using ( base_port + cpu_number ) as the port to which ci_lab binds , so each <allcaps> cpu </allcaps> gets a different port . also suggest setting the base port to <number> instead of the current value of <number> , so that cpu1 ends up getting the same number . so this way the "" cmdutil "" still works with the same default port and will go to cpu1 . <section> joseph hickey , vantage systems , inc .",0
"ci_lab should put all global variables into a global structure <section> ci_lab has several global variables , which are inconsistently named . most have a <code> prefix but the prefix should at least be <code> to match the module name . <section> all globals should all be put into a single top - level global structure , similar to the way other modules isolate their global variables . this consolidates everything and also provides namespace protection . <section> joseph hickey , vantage systems , inc .",2
"ci_lab should split message handlers into separate functions <section> the "" process ground command "" routine in ci_lab processes some commands "" inline "" . this does not match the current / recommended style which is to put command handling into a separate function . <section> putting each command into a separate function is the preferred <allcaps> ccb </allcaps> style and it improves modularity of the code . <section> all <allcaps> cfe </allcaps> core apps the sample_app all implement the preferred pattern . ci_lab should be consistent . <section> joseph hickey , vantage systems , inc .",2
fails to build in raspbian <section> building ci_lab under raspbian ( a debian variant for raspberry pi <allcaps> sbc </allcaps> ' s ) fails due to alignment issues . <code> <section> build ci_lab on raspbian . <section> should build without error . <section> raspberry pi zero w <section> add any other context about the problem here . <section> <email>,0
"apply standard coding style <section> fixes # <number> <section> standard build / run from ic - <number> bundle ( with this change ) , confirmed ci starts up nominally <section> readability <section> - cfs dev server <number> - os : ubuntu <number> - versions : ic - <number> versions with this branch <section> first commit was auto changes 2 nd was hand cleanup for comment alignment re - applied auto format and confirmed no differences <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
apply standard coding style <section> inconsistent coding style <section> apply standard style to code ( see also # <number> for enforcement ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"remove <allcaps> cfdp pdu </allcaps> introspection features <section> <allcaps> cfdp pdu </allcaps> introspection is old debug code . remove to simplify ci_lab . also subject of recommended issues from lgtm : ci_lab_app . c <code> <section> anh van , <allcaps> nasa </allcaps> goddard",2
"fix # <number> and release updates <section> fix # <number> - updated <allcaps> readme </allcaps> - removed custom license document - added standard apache <number> - updated copyright release version cfe <number> - > <number> <section> <number> . standard build , unit test and execute <section> - no impact to behavior <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : cfe <number> . <number> related versions and <allcaps> osal </allcaps> <number> . <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
update copyright for cfe <number> release <section> copyright update ( comment change only ) <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"enforce standard coding style in ci <section> inconsistent formatting <section> once <url> is in , enforce in ci <section> tried <code> but did not support editor integration settled on clang - format , requires version <number> for define alignment <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
update to use <allcaps> osal </allcaps> socket <allcaps> api </allcaps> <section> currently uses cfe supplied network_includes . h and not the abstracted <allcaps> osal </allcaps> calls <section> update to use <allcaps> osal </allcaps> <section> none <section> see osapi - os - net . h and / or <allcaps> osal api </allcaps> . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"replace deprecated cfe refs , # <number> fixes # <number> submitted by <user> , <allcaps> cla </allcaps> on file testing : - make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep - built on linux with - dcfe_omit_deprecated_6_6 with no build errors - make test passed ( except osal_timer_ut which occasionally fails on linux ) - cfs executes and loads apps with no issues",2
remove dependencies on deprecated cfe elements with : <code> build errors : <code>,2
"enhanced version reporting use ci_lab_version from cfecfs_version_info . h if available and report on <allcaps> noop </allcaps> and startup ( along with classic version numbering "" classic version numbering can then just be updated on release , vs for every commit .",2
remove classic build support only supporting cmake build going forward .,2
"remove old <allcaps> mks </allcaps> flags from comments $ id , $ date , $ revision , $ log , etc all no longer useful and slightly misleading since they do not get updated .",2
confirm valid perf_id use originated by abrown4 ( <number> on babelfish ) : cfe reserves <number> - <number> perf - ids . need to confirm ci_lab does not use these .,2
"split out ci_lab platform config from app header originated by abrown4 ( <number> on babelfish ) : the platform - specific config ( that i need to change for a deployment ) is in the ci_lab_app . h , and thus common to all ci_lab builds . however , i want to build and deploy multiple cfs instances , each with a ci_lab . [ it _is_ simple and handy . ] propose moving the platform - specific info into ci_lab_platform_cfg . h , like the other apps .",2
"<allcaps> ci lab </allcaps> "" pdumsgid "" checking depends on sb macro originated by jphickey ( <number> on babelfish ) : the <allcaps> ci lab </allcaps> application attempts to verify that the pdumsgid is within range by comparing it to the cfe_sb_highest_valid_msgid macro . unfortunately , this is a configuration macro that is specific to the sb implementation and may not be available in future builds . it makes assumptions about the way sb dispatches / handles messages that ci really should not be making . this check also does not provide any real benefit - if the msgid is out of range there is no major problem , it simply will not match any packets . to improve compatibility with future sb improvements this extra check should be removed . calling this a "" defect "" as it actually does break the build with the <allcaps> eds </allcaps> branch .",2
