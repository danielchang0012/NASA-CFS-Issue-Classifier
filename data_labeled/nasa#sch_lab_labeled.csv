text,label
sch_lab does not support sending commands with arguments <section> sch_lab does not support sending commands with arguments . this is needed when scheduling messages such as lc ' s sample action point command & hk ' s send combined packet command . <section> sch_lab supports sending commands with arguments . <section> dan knutsen <allcaps> nasa </allcaps> goddard,2
resolve static analysis uninitialized variable warnings <section> warning from static analysis ( license restricts publishing results ) <section> fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
apply header guard standard formatting <section> nonstandard guard used <section> apply standard <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"allow sch_lab to schedule faster than 1 hz <section> some <allcaps> fsw </allcaps> apps require a wakeup event faster than 1 hz . when debugging these apps it is not ideal to be forced to deploy the full <allcaps> sch </allcaps> , since its configuration is much more involved . <section> keep using <allcaps> sch lab </allcaps> which is intended for debugging apps , but be able to send wakeups faster than 1 hz . <section> deploy full <allcaps> sch </allcaps> ( complicated , and a distraction from the real objective of debugging some other app ) . <section> if cf is run at only 1 hz wakeup it would take a long time to transfer files . <section> joseph hickey , vantage systems , inc .",2
"update cfe_msg_message_t conversions to use cfe_msg_ptr macro <section> in nasa / cfe # <number> introduces a <code> macro which converts a cmd / tlm header object to a <code> pointer , which is intended to be used rather than assuming a specific member name ( e . g . <code> ) . <section> use the macro instead of assuming <code> member name . <section> required when using generated headers , as the member name may not be "" msg "" or may be further encapsulated . <section> joseph hickey , vantage systems , inc .",2
"improve consistency in application of cfe_sb_msgidtovalue / valuetomsgid conversions <section> a <code> value , like other ids , is supposed to be a unique type / opaque value that identifies a message within the sb application context . although it is currently implemented using an integer ( <code> specifically ) application should not assume this . instead , a set of macros and inline conversion functions ( cfe_sb_msgidtovalue and cfe_sb_valuetomsgid ) are provided for when the application needs to interpret the value as an integer for a valid purpose . <section> add conversions where they are currently missing <section> see nasa / cfe # <number> for full info . a separate issue + pr will be submitted for each framework app . <section> joseph hickey , vantage systems , inc .",2
"infinite loop if initialization fails for any reason <section> sch_lab does not exit / abort if its initialization fails - it will continue into its main loop anyway . in turn , it is possible that the "" cmdpipe "" was not initialized when this task calls <code> . this will return an error , but it just repeats the loop , forever . <section> delete or do not install the <allcaps> sch lab </allcaps> table file , so the loading of the table will fail . sch_lab then enters an infinite loop , because the cmdpipe is not valid , continually generating this error event : <code> <section> if it did not successfully initialize itself , <allcaps> sch lab </allcaps> should skip the remainder of its main function , since behavior is non - deterministic if not fully and successfully initialized . <section> the "" while "" loop here should probably be moved to an "" else "" block , so it will only be entered if initialized successfully . <url> <section> ubuntu <section> joseph hickey , vantage systems , inc .",0
"using void * * reference <url> according to this reference <url> , we should use the cfe_tbl_getaddress like : <code> the c reference recommends this instead of ( void * <wink> casting .",2
"remove references to cfe_es_registerapp <section> as part of nasa / osal # <number> and nasa / cfe # <number> the registration apis are getting fully deprecated and removed . applications no longer need to call os_taskregister , cfe_es_registerapp , or cfe_es_registerchildtask . <section> remove references to these functions . <section> will be required with nasa / osal # <number> and nasa / cfe # <number> <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , add contributing guide <section> fix # <number> added a contributing guide that links to the main cfs contributing guide . <section> users should be able to view the contributing guide contents easily from the sch_lab repo . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add contributing guide <section> add a contributing guide for the sch_lab repo . <section> create a contributing guide markdown file . in the guide , add a link to the cfs contributing guide . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add testing tools to the security policy <section> fix # <number> updated the security policy to include the type of testing done for sch_lab or the cfs bundle under a new section titled "" testing "" . provided a disclaimer that under the apache license , liability is not provided . added that security reports should be emailed . <section> users should now be aware of the type of testing sch_lab or the cfs bundle undergoes . <section> references : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add testing tools to the security policy <section> users are unaware of how cfs / sch_lab is tested . by providing this information , transparency is provided to the community which promotes trust . <section> the security policy should inform users what tools are being used to test cfs / sch_lab while being cautious of liability issues . to do so , we can state explicitly that our software does not provide liability under the apache license . the security policy should inform users that they may view the <allcaps> lgtm </allcaps> results . the policy would state that the alerts from <allcaps> lgtm </allcaps> may not be accurate , since they cannot be dismissed . add that security report should be emailed . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"transmit messages with sequence number updates <section> currently the <code> function invokes <code> to send the messages but the <code> parameter is set to <code> . this means that all commands generated from sch_lab have the same sequence number - whatever was in the table , probably <number> . <section> should increment sequence counter so the recipient sees a properly incrementing count on each message . this can be used to detect a missed message among other things . <section> suggesting just changing this line ( 2 nd parameter ) from false to true : <url> <section> joseph hickey , vantage systems , inc .",2
"add codeql analysis to workflow <section> codeql analysis not implemented in submodules <section> add so alerts are generated on pull requests to submodules <section> none <section> codeql is run at the bundle ( nasa / cfs ) level , but link to code in submodules does not work . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
ci updates - add static analysis and format in workflow <section> travis - ci not transitioned to github actions <section> transition ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , create security policy <section> fix # <number> created a draft of a security policy markdown file for sch_lab . the purpose of a security policy is to inform users on how to submit bugs or vulnerabilities . it is ideal to include a section for supported versions . <section> optional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"implement a security policy <section> create a security policy for users on how to report security vulnerabilities . <section> the security policy should instruct users on how to report security vulnerabilities and provide them additional contact information for questions and concerns . <section> additional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"update for suggested alignment enforcement pattern ( nasa / cfe # <number> ) <section> see nasa / cfe # <number> , inconsistent pattern <section> match suggestion in nasa / cfe # <number> , use the "" raw "" message cmd / tlm types in definition . <section> none <section> nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
remove dependencies on deprecated sb apis <section> sb apis deprecated in nasa / cfe # <number> <section> update to use <allcaps> msg </allcaps> module . <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , add header guard to sch_lab_sched_tab . h <section> fix # <number> - add header guard ( the other warning on the ticket was already resolved ) <section> built cleanly <section> none , good coding practice <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main ( + cfe / osal main ) + this change <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
""" standard "" table organization <section> sch_lab should use cfs standard table organization , to better facilitate per - target tables , etc . right now , the table source is in fsw / src and the table header definition includes ci and to header files which are only needed by the table . <section> <number> . move the table source to fsw / tables <number> . remove the <hashtag> includes </hashtag> in sch_lab_sch_tab . h <number> . rename sch_lab_sch_tab . h to sch_lab_table . h <section> none <section> see <url> for another example of how this would be structured . <section> <email>",0
"add build number and baseline to version file <section> need a better way to describe versions during development <section> add build name and build number to version . h as discussed , we will add a a build name string and a continuously incrementing build number to <code> <section> see notes from <allcaps> ccb </allcaps> : < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"fix # <number> , update table comments / instructions <section> fix # <number> <section> none ( ci ) , comment update only . <section> none <section> ci <section> none <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"clarify schedule table guidance <code> has some guidance for creating the scheduling table , including "" make sure the table is terminated by the sch_lab_end_of_table entry "" <url> . but in looking at the file history , it does not look like the default schedule table has included a <code> entry ever in the past year , which is as far back as that file history goes . should that guidance be removed ?",0
"fix # <number> , apply standard style <section> whitespace changes only . fix # <number> <section> ci - <url> <section> none <section> - hardware : ci - os : ubuntu <number> - versions : bundle w / all whitespace change commits <section> note - not enforcing , just a single cleanup since there ' s no pending activity in this repo . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"app should treat cfe_sb_msgid_t values as opaque <section> for compatibility going forward , code should not assume that <code> is an integer . <section> when dealing with an integer , such as when printing in events / messages or for backward compatibility with <allcaps> mid </allcaps> <code> ' s , the code may use <code> and <code> conversion routines . <section> architecturally , the <code> is supposed to be an opaque / abstract value that identifies an endpoint on the software bus routing domain . the specific meaning of integer values is already different in an "" extended header "" ( <allcaps> ccsds </allcaps> v2 ) build vs . the standard header build . therefore apps should never make assumptions regarding the specific integer values , and all introspection of <code> values should be through the <allcaps> cfe sb api </allcaps> only . <section> joseph hickey , vantage systems , inc .",2
build fails with deprecated cfe / <allcaps> osal </allcaps> elements removed # <number> describe the bug build fails on <number> undeclared errors : errors . txt to reproduce make omit_deprecated = true prep ( requires nasa / cfe # <number> ) expected behavior clean build system observed on : cfs dev server <number> os : ubuntu <number> versions : mostly <number> ( + commit above ) reporter info jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,0
"sch_lab should consolidate its globals into a single structure <section> other <allcaps> cfe </allcaps> core apps all use a single global structure to keep its runtime state . this is preferable because the structure acts as a "" namespace "" and keeps the globals separate from those of other apps . <section> replace individual globals with a single <code> structure which contains all the global variables as members . <section> this is particularly important on systems where globals go into a "" common "" section and strange behavior can happen if a name collision occurs . <section> joseph hickey , vantage systems , inc",2
"fails to build on raspbian <section> building sch_lab under raspbian ( a debian variant for raspberry pi <allcaps> sbc </allcaps> ' s ) fails due to alignment issues . <code> <section> build on raspbian . <section> error - free compile . <section> if applicable , add references to the software . <section> raspberry pi zero w . <section> add any other context about the problem here . <section> <email>",0
apply standard code style <section> inconstant style <section> see <url> and <url> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"improve table handling <section> does not actually allow table management within the task loop <section> actually follow the table management pattern , allowing updates ( should be a decent example ) <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"cfe_tbl_getaddress ( ) may return cfe_success <section> the code is testing the return code for only <code> . however the <code> function may return <code> as well , per the documentation and implementation . <section> either <code> or <code> should be accepted as valid returns . <section> <url> <section> joseph hickey , vantage systems , inc .",0
"improper calls to cfe_es_writesyslog <section> at some point some extra writes to the syslog were added , for example : <code> there are two issues : <number> . use of the "" line - continuation "" backslash to split across lines - - note this does _not_ remove the leading whitespace on the next line , so the actual literal result will have a large space in it . <number> . lack of a cast on the parameter . this causes build failure on platforms where <code> is actually a <code> , not <code> . <section> build for a <number> - bit platform . triggers a warning about the incorrect argument type . <section> should build cleanly on a <number> - bit platform . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit build host , building for i686 - rtems4 . <number> target . <section> joseph hickey , vantage systems , inc .",0
"fix # <number> , release prep <section> fix # <number> - updated <allcaps> readme </allcaps> - removed custom license document - added standard apache <number> - updated copyright release version cfe <number> - > <number> <section> <number> . standard build , unit test and execute <section> - no impact to behavior <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : cfe <number> . <number> related versions and <allcaps> osal </allcaps> <number> . <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
release prep <section> updates for release : - updated <allcaps> readme </allcaps> - removed custom license document - added standard apache <number> - updated copyright release version cfe <number> - > <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"sch_lab table definition uses cfe_sb_msgid_t type without including header for it <section> all code compilation units should explicitly <code> the headers for all types / macros / functions which are directly used by that unit . the "" sch_lab_sched_tab . h "" defines a structure that depends on <code> , but it does not include the header that provides this type . <section> compilation fails when building with the <code> branch , which includes a change that causes the definition of <code> to no longer be implicitly included . <code> <section> the build should complete successfully . <section> ubuntu <number> . <number> <allcaps> lts </allcaps> <number> bit ( build host ) <section> joseph hickey , vantage systems inc .",0
"schedule app not using <allcaps> cfe </allcaps> table <section> no <section> schedule lab app is not using cfe table service . recommend implementing cfe table service . <section> none <section> none <section> anh van , <allcaps> nasa </allcaps> goddard",2
"replace deprecated cfe refs , # <number> fixes # <number> submitted by <user> , <allcaps> cla </allcaps> on file testing : - make enable_unit_tests = <allcaps> true simulation </allcaps> = native prep - built on linux with - dcfe_omit_deprecated_6_6 with no build errors - make test passed ( except osal_timer_ut which occasionally fails on linux ) - cfs executes and loads apps with no issues",2
remove dependencies on deprecated cfe elements with : <code> build errors : <code>,2
"enhanced version reporting use sch_lab_version from cfecfs_version_info . h if available and report on <allcaps> noop </allcaps> and startup ( along with classic version numbering ) classic version numbering can then just be updated on release , vs for every commit .",2
remove classic build support only supporting cmake build going forward .,2
"remove <allcaps> mks </allcaps> flags from comments $ id , $ date , $ revision , $ log , etc all no longer useful and slightly misleading since they do not get updated .",2
confirm valid perf_id use originated by abrown4 ( <number> on babelfish ) : cfe reserves <number> - <number> perf - ids . need to confirm ci_lab does not use these .,0
