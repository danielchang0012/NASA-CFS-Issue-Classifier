text,label
"missing newline at end of sample_lib . c <section> clang throws an error about the missing newline at the end of sample_lib . c <section> add a new line , they are pretty cheap these days . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
apply latest copyright header <section> updated copyright header <section> update <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,1
"remove explicit file name references in doxygen file comments to avoid warnings <section> file comment without a filename implies the comments apply to the current file . adding the file name makes doxygen try to match that file . the issue is there ' s multiple files with the same name , so doxygen gets confused unless you add full path . really it ' s just overhead since the point is to comment the current file . sample warning if you <code> from the bundle : ` ` <code> os - impl - binsem . c ' supplied as the second argument in the \ file statement matches the following input files : / home / jhageman / cfs / cfs - github / osal / src / os / posix / src / os - impl - binsem . c / home / jhageman / cfs / cfs - github / osal / src / os / rtems / src / os - impl - binsem . c / home / jhageman / cfs / cfs - github / osal / src / os / vxworks / src / os - impl - binsem . c please use a more specific name by including a ( larger ) part of the path ! ` ` ` <section> easiest to just remove the name since for every case the comment applies to the current file <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
"fix # <number> , correct minor markdown and comment typos <section> - fix # <number> fixed a few minor typos in the text of <allcaps> security </allcaps> . md , and in the comments of : - unit - test / cmakelists . txt - libc_string_stubs . c <section> none ( non - executable code ) . <section> none ( minor markdown doc and comments changes only ) . <section> n / a <section> n / a <section> n / a",1
fix non - compliant header guards <section> leading <code> is reserved : <url> <url> <url> <url> <section> match cfs standard pattern : <url> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"add a functional test example <section> apis should have functional tests that verify implementation within operational context ( full stack , not stubs ) . coverage tests can not fully exercise intended functionality since they utilize stubs . <section> add example use of the cfe functional test framework <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"add input and output parameters to sample_lib_function to show more advanced generic stubs / hooks <section> sample_lib_function takes no parameters , so can not show example of registering them and using a hook . <section> add parameters ( both pass by value and reference ) , update stubs to use suggested pattern : <code> follow on add a hook ( likely from sample_app ) , register and show use of <code> . <section> there are plenty of implementations in core already , but hard to tell what the "" gold standard "" is . need to trade complexity / simplicity though . <repeated> <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add contributing guide <section> fix # <number> added a contributing guide that links to the main cfs contributing guide . <section> users should be able to view the contributing guide contents easily from the sample_lib repo . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add contributing guide <section> add a contributing guide for the sample_lib repo . <section> create a contributing guide markdown file . in the guide , add a link to the cfs contributing guide . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"scrub for include < > vs "" "" use ( < > should be system only ) <section> < > used on non - system header includes . example : <url> <section> full scrub / fix <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add testing tools to the security policy <section> fix # <number> updated the security policy to include the type of testing done for sample_lib or the cfs bundle under a new section titled "" testing "" . provided a disclaimer that under the apache license , liability is not provided . added that security reports should be emailed . <section> users should now be aware of the type of testing sample_lib or the cfs bundle undergoes . <section> references : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add testing tools to the security policy <section> users are unaware of how cfs / sample_lib is tested . by providing this information , transparency is provided to the community which promotes trust . <section> the security policy should inform users what tools are being used to test cfs / sample_lib while being cautious of liability issues . to do so , we can state explicitly that our software does not provide liability under the apache license . the security policy should inform users that they may view the <allcaps> lgtm </allcaps> results . the policy would state that the alerts from <allcaps> lgtm </allcaps> may not be accurate , since they cannot be dismissed . add that security report should be emailed . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add codeql analysis to workflow <section> codeql analysis not implemented in submodules <section> add so alerts are generated on pull requests to submodules <section> none <section> codeql is run at the bundle ( nasa / cfs ) level , but link to code in submodules does not work . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add static analysis and format check <section> fix # <number> - adds static analysis and format check into github workflow , includes badges in readme <section> ci <section> basic ci works again <section> ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
ci updates - add static analysis and format in workflow <section> travis - ci not transitioned to github actions <section> transition ci <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , create security policy <section> fix # <number> created a draft of a security policy markdown file for sample_lib . the purpose of a security policy is to inform users on how to submit bugs or vulnerabilities . it is ideal to include a section for supported versions . <section> optional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"implement a security policy <section> create a security policy for users on how to report security vulnerabilities . <section> the security policy should instruct users on how to report security vulnerabilities and provide them additional contact information for questions and concerns . <section> additional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
refactor ut_setforcefail describe the bug ut_setforcefail was refactored to ut_setdefaultreturnvalue for <url> it needs to have its name changed here as well . expected behavior change ut_setforcefail to ut_setdefaultreturnvalue additional context part of <url> reporter info alex campbell,2
"rename files , functions , and variables to match libname_ * pattern <section> naming convention in sample_lib is not entirely consistent - some names start with <code> , others just <code> . <section> all variables , functions , and other identifiers should use a <code> prefix . <section> a clear and concise description of any alternative solutions or features you have considered . <section> see nasa / sample_app # <number> . when fixing that , noted some issues in here too . <section> joseph hickey , vantage systems , inc .",0
"fix # <number> , install unit test to target directory <section> fix # <number> , install unit test to target directory <section> make unit tests , install , observe they install in correct directory <section> correct install directory <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main + this commit <section> none . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"coverage test not installed in correct directory <section> coverage test not installed in correct directory - see nasa / cfe # <number> <section> make unit tests , make install , observe unit test in build directory . <section> should go in target directory ( build / exe / cpu1 for sample config ) <section> <url> <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"fix # <number> , install unit test <section> fix # <number> - install unit test as part of cmake recipe <section> normal build with enable_unit_tests = true , with make install , and ran sample lib unit test from install dir ( passed ) <section> sample lib test runner now shows up in expected install dir <section> - hardware : cfs dev vm - os : ubuntu <number> - versions : current bundle development branch <section> none . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
unit test does not get installed <section> missing unit test from install directory <section> install <section> n / a <section> same as nasa / sample_app # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,0
"add build name and build number to version . h <section> need a better way to describe versions during development <section> add build name and build number to version . h as discussed , we will add a a build name string and a continuously incrementing build number to <code> <section> see notes from <allcaps> ccb </allcaps> : < <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"fix # <number> , apply standard style <section> whitespace changes only . fix # <number> <section> ci - <url> <section> none <section> - hardware : ci - os : ubuntu <number> - versions : bundle w / all whitespace change commits <section> note - not enforcing , just a single cleanup since there ' s no pending activity in this repo . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , update coverage compile / link flag options <section> <allcaps> osal </allcaps> now sets these as ut_coverage_compile_flags , ut_coverage_link_flags . building and linking the ut executable needs a corresponding update . fixes # <number> <section> build with <code> and confirm that all unit tests are building <section> coverage data ( <code> ) now includes the sample_lib code again <section> ubuntu <number> <allcaps> lts </allcaps> <number> bit <section> joseph hickey , vantage systems , inc .",0
"unit tests need to link with ut_coverage_compile_flags / ut_coverage_link_flags <section> nasa / osal # <number> cleans up the compiler flag management , and as part of this it exports two variables , ut_coverage_compile_flags and ut_coverage_link_flags , rather than a single ut_c_flags value . <section> the unit tests need to use these variables , not ut_c_flags . <section> needs to be included with the nasa / osal # <number> merge . <section> joseph hickey , vantage systems , inc .",0
"fix # <number> , fix doxygen warnings <section> fixes # <number> to resolve doxygen warnings <section> steps taken to test the contribution : <number> . corrected lines that generated warnings <number> . rebuilt documentation with <code> <number> . observed no warnings generated <number> . viewed relevant page ( s ) to verify correctness <section> changes to documentation only ; no code impact <section> leor bleier , <allcaps> nasa </allcaps> \ <allcaps> gsfc </allcaps>",1
fix doxygen warnings <section> warnings are generated when building the documentation . <section> steps to reproduce the behavior : <number> . do <code> from the cfs directory <number> . observe the warnings in <code> <section> no warnings should be generated <section> leor bleier <allcaps> gsfc </allcaps> \ <number>,0
apply standard code style <section> inconstant style <section> see <url> and <url> <section> n / a <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , release prep <section> fix # <number> - updated <allcaps> readme </allcaps> - removed custom license document - added standard apache <number> - updated copyright release version cfe <number> - > <number> <section> <number> . standard build , unit test and execute <section> - no impact to behavior <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : cfe <number> . <number> related versions and <allcaps> osal </allcaps> <number> . <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
release <number> . <number> prep <section> updates for release : - updated <allcaps> readme </allcaps> - removed custom license document - updated copyright release version cfe <number> - > <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"fix # <number> , unit test for <allcaps> sample </allcaps> lib <section> fixes # <number> implements a coverage test for sample_lib code as well as a stub library to facilitate unit test of external code that calls functions within sample_lib . <section> build with <allcaps> simulation </allcaps> = native enable_unit_tests = <allcaps> true </allcaps> confirm normal <allcaps> cfe </allcaps> operation is unaffected confirm unit tests all pass , including new test of "" sample_lib "" confirm "" lcov "" report now includes sample_lib , and coverage is <percent> <section> this adds a new test for "" sample_lib "" which is part of the make test target , and the line coverage reports now include sample_lib . <section> ubuntu <number> <allcaps> lts </allcaps> <number> - bit <section> the coverage test cases are written assuming that previous pull request # <number> is already merged . that is , they exercise / test the logic that was added in this . therefore this commit is a child of the commit for the previous pull request . <section> joseph hickey , vantage systems , inc . <section> you must attach a signed <allcaps> cla </allcaps> ( required for acceptance ) or reference one already submitted",2
"add unit test example for sample_lib <section> the <allcaps> sample </allcaps> library does not implement any unit test . actual <allcaps> cfe </allcaps> libraries would typically need to do this . <section> a unit test should be implemented to provide a template for implementing a library unit test ( code coverage ) using the current framework . <section> the unit test for an application ( e . g . in sample_app , as in nasa / sample_app # <number> ) is slightly different , as the application typically would not need to expose stubs but a library would . therefore both sample_app and sample_lib should implement unit tests . <section> joseph hickey , vantage systems , inc .",2
"add at least one conditional for unit testing <section> in the process of providing useful examples for unit testing , the sample lib should contain at least one "" if "" statement to demonstrate how the alternate paths can be exercised in ut . <section> add a call to a simple c library function during <code> , and have an alternate return code ( not cfe_success ) as based off the result . unit test can then force the alternate path to execute . <section> n / a <section> this will add considerable value to the ut examples <section> joseph hickey , vantage systems , inc .",2
"enhanced version reporting use ci_lab_version from cfecfs_version_info . h if available and report on <allcaps> noop </allcaps> and startup ( along with classic version numbering ) classic version numbering can then just be updated on release , vs for every commit .",2
remove classic build support only supporting cmake build going forward .,2
"remove old <allcaps> mks </allcaps> flags from comments $ id , $ date , $ revision , $ log , etc all no longer useful and slightly misleading since they do not get updated .",2
