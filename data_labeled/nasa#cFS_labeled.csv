text,label
"fix # <number> , removes error on format style differences <section> - fixes # <number> - removes the exiting logic such that the workflow can not fail due to a claang difference . <section> observed that error does not happen when format - check is called and there is a claang - format - <number> style difference . <section> no error on style differences <section> - os : ubuntu <number> <section> n / a <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> justin figueroa , vantage",2
missing <allcaps> pus </allcaps> lib repo can anyone let me know where is the repository for cfs <allcaps> pus </allcaps> application - it used to be in the following location : <url>,3
"add option for "" build - run - app "" reusable workflow to include dependent libraries <section> currently the "" build - run - app "" reusable workflow only checks out the app into the "" apps "" directory . however , some cfs applications , such as bp , also require inclusion of a support library ( e . g . bplib ) in order to build and run . <section> add an additional workflow input to specify additional library dependencies , which can be checked out and included in the build . <section> typically these would only libraries ( not other apps ) . <section> joseph hickey , vantage systems , inc .",2
"allow users to pass project args to the "" static - analysis "" cppcheck reusable workflow <section> the issue observed in nasa / osal # <number> is due to the fact that cppcheck is being executed in each c source file in isolation . in this case it does not see the definition of <code> and thus does not know how to examine this line . <section> cppcheck allows command line options to specify various project - specific preprocessor settings , such as <code> and <code> options to specify if a macro is set or unset , respectively , as well as <code> option ( s ) indicating where to find include files . furthermore , with cmake , the <code> option causes cmake to export a json file containing the full include path being used , which can then be passed to cppcheck via the <code> option . with this , the code will be examined using the configuration that is actually being compiled . <section> <number> . skip checking of ut stubs in general ( but stubs could have bugs like uninitialized vars and things that cppcheck could flag ) <number> . remove use of <code> , as this will not be checkable unless the definition of this macro is also supplied . <section> using <code> causes cppcheck to be much more thorough in its results . in particular , it now "" sees "" the <code> file and the ifdef macros that exist in there , and it will check each macro both ways . the upside to this is it finds more potential issues , particularly with ifdef branches that are not regularly used , but the downside is that it significantly increases the runtime of cppcheck as it tests all the permutations . this may need to be limited if it becomes excessive . <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , fetch documentation archives * ] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> fixes # <number> <section> tested on fork image <img> tested locally in docker . <section> the issue is thrown at random times . thrown here : <url> but not here : <url> <section> fixes failing cfs documentation and guides workflow . it had an issue installing <allcaps> pdf </allcaps> generation dependencies . same behavior . <section> ariel adams , <allcaps> mcsg </allcaps> tech",1
"issues : questions cfs cannot find unit - test excecutables when attempting to run unit - tests on a cfs project with <number> custom application modeled closely after the sample_app template the output of running "" make test "" fails as it cannot find the test executable ' s . it would be great to know if the steps i am following below are insufficient to properly run the unit tests , or if the error in my log files below indicates another issue ? <section> steps to reproduce the behavior : <number> . make distclean <number> . make <allcaps> simulation </allcaps> = native enable_unit_tests = true prep <number> . make <number> . make test <section> all unit - tests pass . <section> - os : vmware ubuntu <number> - versions : cfs v6 . <number> . 0 a <section> the actual output i receive is the following for every possible test : lcov - - capture - - initial - - directory build / native - - output - file build / native / coverage_base . info capturing coverage data from build / native subroutine read_intermediate_text redefined at / usr / bin / geninfo line <number> . subroutine read_intermediate_json redefined at / usr / bin / geninfo line <number> . subroutine intermediate_text_to_info redefined at / usr / bin / geninfo line <number> . subroutine intermediate_json_to_info redefined at / usr / bin / geninfo line <number> . subroutine get_output_fd redefined at / usr / bin / geninfo line <number> . subroutine print_gcov_warnings redefined at / usr / bin / geninfo line <number> . subroutine process_intermediate redefined at / usr / bin / geninfo line <number> . found gcov version : <number> . <number> using intermediate gcov format scanning build / native for . gcno files . <repeated> geninfo : <allcaps> warning </allcaps> : no . gcno files found in build / native - skipping ! finished . info - file creation ( cd build / native & & ctest - o ctest . log ) test project / home / daniel / fp_cfs_vrcs / build / native start <number> : bin - sem - flush - test could not find executable bin - sem - flush - test looked in the following places : bin - sem - flush - test bin - sem - flush - test release / bin - sem - flush - test release / bin - sem - flush - test debug / bin - sem - flush - test debug / bin - sem - flush - test minsizerel / bin - sem - flush - test minsizerel / bin - sem - flush - test relwithdebinfo / bin - sem - flush - test relwithdebinfo / bin - sem - flush - test deployment / bin - sem - flush - test deployment / bin - sem - flush - test development / bin - sem - flush - test development / bin - sem - flush - test unable to find executable : bin - sem - flush - test <number> / <number> test # <number> : bin - sem - flush - test . <repeated> * * * not run <number> sec start <number> : bin - sem - test <section> <percent> tests passed , <number> tests failed out of <number> total test time ( real ) = <number> sec the following tests <allcaps> failed </allcaps> : <number> - bin - sem - flush - test ( not run ) <number> - bin - sem - test ( not run ) <number> - bin - sem - timeout - test ( not run ) <number> - count - sem - test ( not run ) <number> - file - api - test ( not run ) <number> - mutex - test ( not run ) <number> - osal - core - test ( not run ) <number> - queue - timeout - test ( not run ) <number> - sem - speed - test ( not run ) <number> - symbol - api - test ( not run ) <number> - timer - test ( not run ) <number> - osal_core_ut ( not run ) <number> - osal_loader_ut ( not run ) <number> - osal_filesys_ut ( not run ) <number> - osal_file_ut ( not run ) <number> - osal_network_ut ( not run ) <number> - osal_timer_ut ( not run ) <number> - my_app - my_app ( not run ) <number> - cfe_core_default_cpu1_es_ut ( not run ) <number> - cfe_core_default_cpu1_sb_ut ( not run ) <number> - cfe_core_default_cpu1_evs_ut ( not run ) <number> - cfe_core_default_cpu1_tbl_ut ( not run ) <number> - cfe_core_default_cpu1_time_ut ( not run ) <number> - cfe_core_default_cpu1_fs_ut ( not run ) errors while running ctest output from these tests are in : / home / daniel / fp_cfs_vrcs / build / native / testing / temporary / lasttest . log use "" - - rerun - failed - - output - on - failure "" to re - run the failed cases verbosely . make : * * * [ makefile : <number> : test ] error <number>",3
"use custom container for workflows * [ ] i performed a cursory search to see if the feature request is relevant , not redundant , nor in conflict with other tickets . <section> the documentation workflow and a couple of others keep failing sporadically due to dependency install failures . <section> a custom cfs - dependencies container that has the following toolkit - cmake - gcc - gcov - lcov - doxygen - latex - graphviz - etc . this will help with both dependency management and maybe even speed up some of our builds that install dependencies with every run . another benefit is that we can encourage the community to use these containers as their development environment . <section> use a standard doxygen container image for the documentation workflow <section> none <section> gerardo e . cruz - ortiz | <allcaps> nasa </allcaps>",2
"update <allcaps> cla </allcaps> information in apache <number> cfs app repositories <section> have new clas given the change in <url> with the combined <allcaps> cla </allcaps> , <section> - [ ] update the instructions in each app ' s contributing . md - [ ] delete old <allcaps> cla </allcaps> pdfs - [ ] update pr and issue templates as needed <section> none <section> none <section> gerardo e . cruz - ortiz",1
"add combined <allcaps> cla </allcaps> for cfs app repos <section> we just received updated clas for the apache <number> licensed applications . <section> need to upload the new clas , add them to contributing . md and then add links to the new forms in each app repository . <section> migrate to new org and set up shared community info <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>",1
"fix # <number> , add links to <allcaps> readme </allcaps> <section> - fix # <number> skimmed the <allcaps> nasa </allcaps> repos and added links ( including <allcaps> sbn </allcaps> - client ) <section> none , doc only <section> n / a <section> n / a <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
"fix # <number> , updated broken links in <allcaps> readme </allcaps> * x] i reviewed the [ contributing guide <url> . * x] i signed and emailed the appropriate [ contributor license agreement <url> to <email> and copied <email> . <section> updated the urls of the cfe and <allcaps> osal </allcaps> user guides in the <allcaps> readme </allcaps> file . - fix # <number> <section> clicked the links in the <allcaps> readme </allcaps> <section> no impact to behavior <section> browser <section> add any other context about the contribution here . <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) - note clas apply to only software contributions .",1
add <allcaps> sbn </allcaps> - client to <allcaps> readme </allcaps> references <section> <url> may be a useful reference <section> add it to top level <allcaps> readme </allcaps> <section> none <section> none <section> jacob hageman / <allcaps> nasa gsfc </allcaps>,1
cfe and <allcaps> osal </allcaps> user guides links from the <allcaps> readme </allcaps> file are broken cfe and <allcaps> osal </allcaps> user guides links in the <allcaps> readme </allcaps> file are broken after recent update .,1
"update reusable workflow documentation and diagram * ] i reviewed the [ contributing guide <url> . * ] i reviewed the [ cfs <allcaps> readme </allcaps> . md file <url> to see if the feature is in the major future work . * [ ] i performed a cursory search to see if the feature request is relevant , not redundant , nor in conflict with other tickets . <section> as we add new workflows we should keep documentation up to date <section> new diagrams and updated workflow summaries <section> remove documentation and maintain with each file <section> none <section> gerardo e . cruz - ortiz",1
"add guidance for coverage tests in contributing guide <section> when improving coverage for code we should update the minimum coverage checks in the appropriate github workflow . <section> add a section to contributing guide <section> do nothing . include in wiki or other document <section> see yml change in <url> <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps>",1
"add document build and deploy reusable workflow <section> all apps will need a document build and deploy workflow <section> avoid duplication by implementing reusable workflow from cfs , also use it in cfs to avoid duplication in current documentation workflow . <section> none <section> - # <number> rather than duplicating workflow logic for another doc , just use the reusable workflow for each document . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
"fix # <number> # <number> , deploy mission document from workflow by using reusable workflow <section> - fix # <number> - fix # <number> note # <number> already added enforcement , so this just adds deployment . <section> ci that included nasa / cfe <user> , forced the deployment , and used current branch to get the reusable workflow results at <url> <section> deploys mission doc on push to main <section> ci <section> depends on nasa / cfe # <number> <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
"apply latest contributor license agreements <section> updated contributor license agreements and adds links in the pull request template to these contributor license agreements . <section> update <section> none <section> justin figueroa , <allcaps> asrc </allcaps> federal",1
"fix workflow documentation directory for <allcaps> osal </allcaps> dox updates <section> nasa / osal # <number> simplifies doxygen documentation build directory structure , documentation workflow impacted <section> fix reference <section> none <section> nasa / osal # <number> and nasa / cfe # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
"update standard "" development "" version indicator to use 0 xff <section> historically , setting the revision number to "" <number> "" indicates that the source code in question is a "" development "" version and thus has not been fully tested . in <url> we put this information in the mission_rev instead and set it to "" 0 xff "" . this pattern has a couple of problems : - it is not standard , cfe documentation needs to be updated - if a user changes the mission_rev while building on top of a development version , there is no way to know what the original version was by looking at source code . ( eg x . y . z . <number> is changed by a user to x . y . z . <number> ) kudos to <user> for this observation - older telemetry or "" ground "" systems may be used to the two - character legacy number of "" <number> "" instead of "" 0 xff "" and convert the value into a two - character string thereby cutting off the value . <section> <number> . revert to using the revision number <number> . move from <number> to 0 xff <number> . communicate the change to users <section> keep revision = <number> <section> need to open related issues in other cfs component repositories <section> gerardo cruz - ortiz , <allcaps> nasa </allcaps>",2
"the "" setvars . sh "" file is missing in v7",3
where are the new - app - generation scripts ? ( that used to exist in / tools ),3
"<allcaps> cfs </allcaps> make error <number> * ☑ ] i reviewed the [ contributing guide <url> . * [ ☑ ] i performed a cursory search to see if the bug report is relevant , not redundant , nor in conflict with other tickets . <section> i am trying to work on this repository for the <allcaps> nasa cfs cs </allcaps> challenge and i am implementing it using ubuntu and debian operating system . i am getting a make error when i follow the below steps . i have uploaded the picture of the error for your reference . thanks . <section> steps to reproduce the behavior : <number> . git clone <url> <number> . cd cfs_checksum_patched / cfs / <number> . git submodule update - - init - - recursive <number> . make <number> . make install <section> - raspberry pi / beagleboneblack - ubuntu <number> / debian <number> <section> kaushik varma rudraraju colorado state university make error <number> <img>",3
"fix # <number> , combine deploy documentation jobs * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> combines users guide and osal guide build jobs . combines users guide and osal deployment jobs . <section> tested on fork : <url> documents : <url> <section> no race condition <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , use <allcaps> svg </allcaps> image for workflows <allcaps> readme </allcaps> * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> use <allcaps> svg </allcaps> image instead of <allcaps> png </allcaps> <section> tested on fork : <url> <section> no change in behavior <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"use <allcaps> svg </allcaps> image for workflows readme <section> the <allcaps> readme </allcaps> . md for cfs / . github / workflows / uses an image that may not be easily edited . <section> convert the image to <allcaps> svg </allcaps> . <section> keep as is . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
update rc4 tag descriptions to include equivalent dev tags <section> need a mapping between tags and build numbers to reduce confusion <section> include rc information in update history on readme and tag description <section> finish official release and add official numbers <section> raised in stakeholder meeting <section> <user>,1
"fix # <number> , updated <allcaps> readme </allcaps> training link * [ na ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> - fix # <number> <section> none - documentation only . <section> none <section> na <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
update cfs training package link <section> new slide package available at <url> <section> update <allcaps> readme </allcaps> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,1
"cfs submodules refer to "" master "" branches it seems the . gitmodules file still lists "" branch = master "" for cfe and osal . should switch to "" main "" . ( surprised "" master "" still works , given that branch is long gone ! guessing git defaults to "" <allcaps> head </allcaps> "" if the branch specified no longer exists . ) <url>",2
"fix # <number> , add ci status badge in <allcaps> readme </allcaps> * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> <section> tested badges locally : <url> <section> adds badges for cfs - build and rtems five . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fixed minor typos in the cfs docs <section> fixed a few minor typos ( misspelling of words ) in <allcaps> readme </allcaps> . md , <allcaps> contributing </allcaps> . md and <allcaps> security </allcaps> . md . <section> none ( non - executable code ) . <section> none ( markdown doc changes only ) . <section> n / a <section> n / a <section> n / a",1
add functional tests step to continuous integration <section> the cfe repository has a suite of functional tests . these tests can sometimes fail when introducing new osal dependencies . these failures can be shown to be fixed at the bundle level when combining the right set of submodule references . <section> port the functional test workflow as an extra job to the build test and run workflows . <section> make a separate workflow <section> none,2
"fix # <number> , add discussions in the contributing guide * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> add information on where to submit discussions , questions , and ideas . <section> users should know to submit discussions , questions , and ideas in the discussions tab of the cfs repository instead of creating an issue . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add discussions in contributing guide <section> cfs now uses discussions as a way to ask questions or request information . this is not in the contributing guide . <section> add that users may start discussions or ask questions in the discussions tab of cfs under ways to contribute in the contributing guide . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , generate documentation in all scenarios * x] i reviewed the [ contributing guide <url> . * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> remove <code> from <allcaps> pdf </allcaps> generation installs and <allcaps> pdf </allcaps> generation . add <allcaps> pdf </allcaps> generation installs and <allcaps> pdf </allcaps> generation steps to the previous job , so that deploy is a separate job . <section> n / a <section> pdfs will generate no matter what while deployment is based on if it is pushed on main . <section> may require cache pr for successful deployment : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , no file found documentation workflow * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> workflow was failing due to files not persisting between jobs . used cache action . <section> tested on fork : <url> <section> pdfs should generate . <section> pdfs will generate when push on main branch . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"generate documentation <allcaps> pdf </allcaps> in all scenarios regardless of whether it will be pushed or not . # # problem we could have caught the latest error <url> in the documentation build and push job if we built the pdfs every time . # # proposed solution only keep this condition in the "" push "" step of the job ; remove it from the dependencies and document generation steps . <code>",1
"no file found for documentation and guides workflow <section> the <allcaps> osal </allcaps> and cfe users guide <allcaps> pdf </allcaps> documentation are not generating due to errors in the workflow . <section> see <url> <section> the <allcaps> osal </allcaps> and cfe users guide <allcaps> pdf </allcaps> documentation should generate and upload to gh - pages . <section> <code> <section> github actions workflows <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , exclude <allcaps> lgtm </allcaps> false positives * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> excludes cpp / string - copy - return - value - as - boolean <section> none <section> no longer run against string - copy - return - value - as - boolean <section> ariel adams , <allcaps> asrc </allcaps> federal",2
"fix # <number> , run documentation and guides on push * [ ] i signed and emailed the appropriate contributor license agreement to <email> and copied <email> . <section> fixes # <number> pdfs only generates on push for main branch . workflow will run on push rather than pull request . <section> tested on fork . image <img> <section> pdfs will generate . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"run documentation and guides on push for main <section> pdfs are not generating for the documentation and guides workflow . <section> <url> <section> pdfs will generate if the event is pushed to main . <section> <code> <section> > the problem with skipping pull requests is that it will not test the merge commit . need to skip push if it is not to the main branch . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"changelog workflow failing <section> the changelog workflow does not work due to a syntax error . <section> remove total issues as this is not a valid option in the workflow . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add workflow <allcaps> readme </allcaps> <section> fixes # <number> add a <allcaps> readme </allcaps> in . github / workflows <section> users will know what each workflow does . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , documentation duplicate check <section> a clear and concise description of what the contribution is . fixes # <number> . used with <url> skips individual steps for the <allcaps> osal </allcaps> and cfe jobs . does not skip the last three steps that generates the pdfs . <section> tested locally on forked repo . pdfs were updated in gh - pages branch . image <img> <section> the documentation workflow should generate and update the cfe and <allcaps> osal </allcaps> user guides . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"provide <allcaps> readme </allcaps> in . github / workflows <section> users may not know where to find detailed information about the workflows . <section> provide a description of workflows , how to use them , and how to modify them in a <allcaps> readme </allcaps> . md file . provide a link to this file in the contributing guide . <section> do not create a new <allcaps> readme </allcaps> . md file and instead add detailed descriptions of the workflows in the contributing guide . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"documentation deployment is being skipped as part of duplicate check , documents stale <section> see <url> documents are months stale . <section> always run the <allcaps> pdf </allcaps> generation and deployment on a push to main on github . <section> none <section> # <number> - possible race in deployment <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> ping <user> <user>",1
"error installing cfs bootes <section> hi , i am trying to install cfs bootes and i am getting an error while installing it . i tried installing the cfs normal version and it installed successfully but , when i try bootes it is giving the error as shown below . <section> steps i followed : git clone - - recursive <url> cd cfs git checkout checksum - bootes - working export <allcaps> simulation </allcaps> = native make prep make install ( the error shows up here ) <section> pi <user> : ~ / cfs $ make install make - - no - print - directory - c "" build "" <allcaps> destdir </allcaps> =""/ home / pi / cfs / build "" mission - install [ <percent> ] building c object tools / elf2cfetbl / cmakefiles / elf2cfetbl . dir / elf2cfetbl . c . o in file included from / home / pi / cfs / cfe / modules / core_api / fsw / inc / cfe_tbl_extern_typedefs . h : <number> , from / home / pi / cfs / cfe / modules / core_api / fsw / inc / cfe_tbl_filedef . h : <number> , from / home / pi / cfs / tools / elf2cfetbl / elf2cfetbl . c : <number> : / home / pi / cfs / cfe / modules / core_api / fsw / inc / cfe_es_extern_typedefs . h : <number> <time> : error : ‘ cfe_mission_es_cds_max_full_name_len ’ undeclared here ( not in a function ) ; did you mean ‘ cfe_mission_es_cds_max_name_len ’ ? char name [ cfe_mission_es_cds_max_full_name_len ] ; /* *< \ brief processor unique name of <allcaps> cds </allcaps> */ ^ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ cfe_mission_es_cds_max_name_len / home / pi / cfs / cfe / modules / core_api / fsw / inc / cfe_es_extern_typedefs . h : <number> <time> : error : ‘ cfe_mission_es_pool_max_buckets ’ undeclared here ( not in a function ) ; did you mean ‘ cfe_mission_es_perf_max_ids ’ ? cfe_es_blockstats_t blockstats [ cfe_mission_es_pool_max_buckets ] ; /* *< \ cfetlmmnemonic \ es_blkstats ^ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ cfe_mission_es_perf_max_ids make4 <url> [ tools / elf2cfetbl / cmakefiles / elf2cfetbl . dir / build . make : <number> : tools / elf2cfetbl / cmakefiles / elf2cfetbl . dir / elf2cfetbl . c . o ] error <number> make3 <url> [ cmakefiles / makefile2 : <number> : tools / elf2cfetbl / cmakefiles / elf2cfetbl . dir / all ] error <number> make2 <url> [ cmakefiles / makefile <time> <number> : cmakefiles / mission - install . dir / rule ] error <number> make1 <url> [ makefile : <number> : mission - install ] error <number> make : * * * [ makefile : <number> : install ] error <number> <section> - hardware : raspberry pi <number> - os : raspbian <section> name : kaushik varma rudraraju college : colorado state university",3
"add ci workflow / configuration that enables strict type checking <section> the cfs ci scripts currently build with lax / weak type checking , which is the distribution default ( in sample_defs ) as it is more backward compatible . <section> at least one ci build should enable this in <code> to enable strict type checking : set ( mission_resourceid_mode <allcaps> strict </allcaps> ) <section> it ' s easy to add code that will fail w / strict type checks , unless this is enabled in ci to catch it . <section> joseph hickey , vantage systems , inc .",2
"fix # <number> , correct links to community mailing list <section> fixes # <number> the mailing list system migrated to a new server resulting in a new subscription process . <section> tested subscription method from separate personal emails . users should receive an email looking like the screenshot below upon subscription . - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - cfs - community_confirmation_email <img> - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - <section> no behavior changes on cfs codebase <section> n / a <section> streamlined subscription method , new system only requires a single email interaction as opposed to a request / approve / confirm loop <section> none",1
"fix # <number> , add workflow descriptions in <allcaps> contributing </allcaps> . md <section> fix # <number> added short descriptions to each of our workflows . <section> users should now know what our workflows are used for . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add description of workflows in contributing guide <section> users may not know the purpose of each workflow we use . <section> provide a short description of each workflow . <section> n / a <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"possible race condition in documentation deploy workflow <section> since the github actions jobs run in parallel there might be a case of two git commits trying to be pushed "" at the same time "" i suggest moving the multiple deploy stages from the separate doc build jobs into a separate deploy job that depends on the successful builds of all docs . could potentially do something fancy by deploying to separate "" local "" git branches and then merging them on the deploy branch . <section> see <url> <section> all documentation can be deployed <section> add any other context about the problem here . <section> full name and company / organization if applicable",0
"create separate app and libraries directories <section> having libraries in the apps folder can be confusing especially for beginners . <section> new directory called "" lib "" or "" libs "" where libraries can "" live "" <section> add documentation justifying why it "" makes sense "" to keep libraries in the apps directory",2
"update all community email management references for new service - x] i reviewed the [ contributing guide <url> . - x] i reviewed the [ cfs <allcaps> readme </allcaps> . md file <url> to see if the feature is in the major future work . - [x ] i performed a cursory search to see if the feature request is relevant , not redundant , nor in conflict with other tickets . <section> community email system is transitioning ( currently <date> target ) , which changes join / leave process . <section> update instructions in sync with system change over : <code> <section> # <number> <section> note a web interface is pending . not clear if it will support review of archives by members . <section> jacob hageman",1
"guide to adding new toolchains hi , is there a guide anywhere for adding new toolchains ? i want to add an aarch64 linux toolchain , but i am confused by the example toolchains . for example : - what do these mean ? - cmake_find_root_path_mode_program - cmake_find_root_path_mode_library - cmake_find_root_path_mode_include - cmake_prefix_path - what needs to be added , and what not ? the arm - cortexa8_neon - linux - gnueabi example only specifies the compilers , whereas the i686 - rtems example specifies <code> , <code> , <code> , <code> , <code> , <code> and <code> too . does anyone already have a toolchain script for linux on aarch64 ? many thanks , jack",3
"fix # <number> , add instruction on how to use workflows in contributing . md <section> fixes # <number> - added instructions on how to view errors from failed workflows - added instructions on how to view workflow results in the actions tab and in pull requests - added a list of our workflows and the status of them - added information on how to configure workflows and where to find them <section> users should know how to use our workflows . <section> used reference : <url> used example : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add instructions on how to use workflows in contributing . md <section> users may not know how to use our github actions workflows . <section> add instructions on how to use our github actions workflows under writing high quality code . instructions includes where workflows can be found , how to analyze or interpret results , how to run and configure workflows . provide links for additional information on each workflow . <section> this can be added in a new section . <section> reference : <url> example : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , rename getting started in contributing . md <section> fixes # <number> - renamed getting started to quick links to submodules - linked the report bugs and feature requests sections in quick links to submodules - linked quick links to submodules in the report bugs section - linked quick links to submodules in the feature requests sections <section> tested links locally . <section> users should know all the submodules where bugs or feature requests may be reported . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add instructions on how to squash and amend commits <section> fixes # <number> - added how to squash commits . - added how to amend commits . - added that users may use the format <code> for commit messages if necessary . - added to create a commit message per topic and provided an example . - added reference to <url> <section> users should know how to squash and amend commits . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"sb message data hello everyone , sorry for the basic question . i ’ m new to cfs - i ’ ve tried for a few days now and having a some difficulty with sb messages . i ’ ve read through the development guide and <allcaps> api </allcaps> - and i can ’ t figure out how to properly attach data to a sb message . i can send and receive messages , but when i mount the pointer to a variable - all the data assigned in my structs are empty . how do i properly mount custom data to my sb messages ? corey carter - <allcaps> nasa </allcaps> pathways",3
"add links or instructions to pull request squash and ammend section <section> <code> <section> add links to instructions of "" how "" to squash a commit using git rebase or how to ammend a commit <section> leave as is and address with users on a one - on - one , per pr basis",1
"fix # <number> , add checklist to pull request template <section> fix # <number> added a checklist to the pull request template to enforce users to review the contributing guide and ensure they sign the contributor agreement . <section> the checklist helps enforce our standards when submitting pull requests . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add checklist to feature request template <section> fix # <number> added a checklist to the feature request template to enforce users to review the contributing guide , ensure their feature is not in future work , and ensure that their feature is is relevant , not redundant , nor in conflict with other tickets . <section> the checklist helps prevent redundant or irrelevant feature requests from being submitted . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add checklist to bug report template <section> fix # <number> added a checklist to the bug report template to enforce users to review the contributing guide and ensure that their bug report is is relevant , not redundant , nor in conflict with other tickets . <section> the checklist helps prevent redundant or irrelevant issues from being submitted . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add writing high quality code <section> fix # <number> add writing high quality code to the contributing guide <section> users should know how to write high quality code and how to use the github action workflows . <section> the writing high quality code provides instructions for only the two static code analyzers used in github actions . should we add instructions for both deprecated and omit_deprecated build , test , and run workflows ? they only run when code is pushed to the main branch . if we want to add this , either the workflow needs to change so it is trigger for all branches or additional instructions must be provided for users so they can manually change the workflow files . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , create separate document for code of conduct <section> fix # <number> created a separate document for code of conduct . added a link to code of conduct in the contributing guide . moved the getting started section to the bottom of the page . <section> the contributing guide is not as crowded or long . the code of conduct is in a separate document . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"create separate document for code of conduct <section> the code of conduct takes up a lot of space in the contributing guide . <section> create a separate document for the code of conduct and link to it in the contributing guide . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"provide a checklist for pull requests is your feature request related to a problem ? please describe . to ensure our standard of creating a pull request is enforced , checklists can be used . describe the solution you ' d like implement a checklist feature for pull requests . for example , a checklist can ensure that users follow the naming conventions , tested the code , signed the contributor licenses , etc . additional context references : <url> requester info ariel adams , <allcaps> asrc </allcaps> federal",1
"provide a checklist for feature request template <section> to ensure our standard of creating a new issue is enforced , checklists can be used . <section> implement a checklist feature for the feature request template . for example , a checklist can ensure that users checked for similar existing requests before submitting a new issue , ensure users checked that the request is not in our <allcaps> readme </allcaps> . md under major future work , and ensure users are submitting the issue in the correct repo . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"provide a checklist for bug report template <section> to ensure our standard of creating a new issue is enforced , checklists can be used . <section> implement a checklist feature for the bug report template . for example , a checklist can ensure that users checked for similar existing issues before submitting a new issue and ensure users are submitting the issue in the correct repo . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"complete writing high quality code for contributing . md <section> provide instructions to users on how to write high quality code . <section> complete the writing high quality code section to add to the contributing guide . <section> the draft so far : # # writing high - quality code <number> . follow cfs code conventions ( formatting , symbol naming , file naming , etc ) but do *not* change / reformat existing code except to address your changes . <number> . for any new <allcaps> api </allcaps> ' s , add unit tests to cover nominal and off - nominal conditions . <number> . add / edit stubs to the unit test codebase for any new / modified functions . <number> . for any changes to existing <allcaps> api </allcaps> ' s , alter the unit tests to cover the changes ( and remove tests made irrelevant due to your changes ) . <number> . test your code , on a linux platform ( at minimum ) - - _todo : _ specific distros / versions / <allcaps> cpu </allcaps> architectures of linux ? <number> . build your code , including unit tests . _todo : _ need "" standard "" build process . <number> . run the unit tests ( all passed , yes ? ) _todo : _ need "" standard "" test procedure . <number> . run the main cfs executable ( no errors reported , yes ? ) _todo : _ need "" standard "" test procedure , including targets . cmake recommendations . <number> . ? <repeated> do we expect contributors to run coverage ? <repeated> guessing no . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"rpi3 buffer warning / make error . <code> given its just a warning i tried to suppress it with the ol ' <code> and this pops <code> trying to compile on raspberry os with a <allcaps> rpi </allcaps> 3 b works on ubuntu <number> following the same steps . any help is appreciated tried main and integration - candidate new to git sorry if i missed anything , .",3
some github actions workflows not running in some branches and forks <section> workflows only run in the <code> branch of a forked repo for submodules ( and maybe the bundle as well ) <section> <number> . create a new branch in nasa repo or fork <number> . push a change to the branch <number> . observe github action workflow dashboard and notice that workflows <allcaps> do not </allcaps> run for your new branch <section> workflows should run for branches in forks and in nasa repo <section> probably due to this section in our workflows <code> <section> ubuntu <number> ( github workflows runner ) <section> can be worked around by creating a pull request on your fork that targets the branch you are working on <section> full name and company / organization if applicable,0
"fix # <number> , create changelog github actions workflow <section> fix # <number> created a changelog github actions workflow that is triggered manually . the workflow organizes issues for each release in the sections , closed issues , breaking changes , implemented enhancements , fixed bugs , deprecated , removed , and security fixes . pull requests are not displayed . <section> when the user manually triggers the workflow , a changelog . md file is created . <section> tested on my forked repo . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"document changes across releases <section> create a changelog entry that documents noteworthy differences , often across multiple commits , and communicate them clearly to end users . <section> a github actions workflow that is triggered manually to create a changelog . md file . <section> examples : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , fix contributions spelling error in pr template <section> fix # <number> changed code contibutions to code contributions to fix the spelling error in the pr template . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix spelling error in pull_request_template . md <section> code contibutions is misspelled . <section> change code contibutions to code contributions . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , add testing tools to the security policy <section> fix # <number> updated the security policy to include the type of testing done for cfs under a new section titled "" testing "" . provided a disclaimer that under the apache license , liability is not provided . <section> users should now be aware of the type of testing cfs undergoes . <section> references : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add testing tools to the security policy <section> users are unaware of how cfs is tested . by providing this information , transparency is provided to the community which promotes trust . also , when adding a new issue , there are three templates to chose from . one of the templates is report a security vulnerability . when clicking this template , it redirects the user to the security policy which states to use the bug report template . i think this is redundant and making the user do extra unnecessary steps . <section> the security policy should inform users what tools are being used to test cfs while being cautious of liability issues . to do so , we can state explicitly that our software does not provide liability under the apache license . the security policy should inform users that they may view the <allcaps> lgtm </allcaps> results . the policy would state that the alerts from <allcaps> lgtm </allcaps> may not be accurate , since they cannot be dismissed . for the template issue , an easy solution is to have the bug report state that this includes security vulnerabilities and get rid of the report a security vulnerability template . <section> another option is to allow the report a security vulnerability template to redirect the user to the security policy , but change the policy to say something along the lines of emailing us for security vulnerabilities . then we would have to define what is considered a security vulnerability , which i believe to be a vulnerability dealing with authorization , authentication , and encryption issues . <section> references : <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"fix # <number> , create contributing . md <section> fix # <number> the contributing . md file contains a table of contents and instructions on how to report bugs , request features , view security vulnerabilities , create pull requests , participate in discussions and ask questions , and how to write high - quality code . <section> i would like to collaborate as a team on this file . please review my main concerns and questions . feedback is appreciated . code of conduct example : <url> main concerns / questions <number> . i would like to finish the section "" writing high - quality code "" . it was written by <user> and <user> . thoughts / feedback on how it should look like ? <number> . what format do we want to use for commit message convention and pr convention . there are three different formats that were used throughout our documentation . - <code> - <code> - <code> <number> . do we want to enforce a name convention for branches ? i have not seen developers using this . > create a new branch in your fork to work on your fix . please name your branch fix - issue_number - <fix_summary> . <number> . for the discussions and questions section , it would be great to explore how cfs can allow for more discussions from the community . some ideas include using gitter . im , discourse , or a discussions template to submit in the issues along with an appropriate label . thoughts / feedback ? <number> . i would also like to work together to create a code of conduct before publishing this document . thoughts on what it should look like ? <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"create contributing . md <section> create a contributing . md file so users know how to engage with cfs . <section> include instructions on how to report bugs , request a feature , participate in discussions , create pull requests , and view security vulnerabilities . <section> i would like to create a code of conduct for this file . i would also like to explore how cfs could allow more discussions from the community such as using gitter . im , discourse , or a discussions template to use in issues . <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"question : getting cfs to communicate with ground station running on different host hey , so this may have a simple solution , but i am new to cfs and i am trying to figure out how to get a ground station running on a vm to communicate with a cfs instance running on a raspberry pi to communicate . i can see the packets being received by the cfs instance but it does not send any data . there are no firewalls blocking anything . i am also running the sample makefile and sample_defs . i know i need to modify the ci_lab and to_lab files , but i am not sure what to modify . ryan",3
"solved question : how do i ensure that the ground system sends a command with the correct secondary header ? i have copied my first test app from the sample app in the bundle . i have now been able to add my commands , but <code> always returns <code> because <code> . for the sample app commands , <code> , but of course those commands were already pickled , so i do not know where the problem lies . does the ground station or the <code> script add the headers automatically ? how is this worked out ? i have been just adding three <code> s to my command .",3
"add realistic timeouts to workflows <section> workflows could run up to the default <number> minutes <section> add realistic timeouts , avoids delayed reports when there really is an issue ( test hang , etc ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"apply codeql to every branch <section> codeql only scans the main branch on push and pull - request . <section> scan every branch on push and pull - request using codeql . <section> ariel adams , <allcaps> asrc </allcaps> federal",2
"remove "" debug "" build in codeql workflow from comment in # <number> > release test would be sufficient in my mind . <repeated> always with omit_deprecated > _originally posted by <user> in <url>",2
"implement a security policy <section> create a security policy for users on how to report security vulnerabilities . <section> the security policy should instruct users on how to report security vulnerabilities and provide them additional contact information for questions and concerns . <section> additional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
documentation has not been pushed since transition to github actions <section> see <url> links are <number> months old <section> publish the guides from github action ( add to the build ) <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,1
"fork - originated pull requests not running github actions workflows <section> the current setup for the workflow runs on <code> instead of <code> events so the tests are not running on pull requests from forks . <section> create a pull request from a fork . see "" checks "" section for that pull request . you will notice that the "" build and test "" workflows are not activated . <section> "" build and test "" workflows are activated on pull requests and changes to them . <section> if applicable , add references to the software . <section> add any other context about the problem here .",0
"main user guide build warnings ( and they were not caught by actions ) <section> warnings generated when building user ' s guide <section> i did standard setup , and <code> but likely exists for any config . then <code> , observe warnings in build / doc / warnings . log : <code> <section> no warnings . also the new github actions should have caught this . <user> note the warnings file at <url> is not empty . <repeated> not clear why this did not trigger a failure . <section> none yet . <section> - hardware : cfs dev server - os : ubuntu <number> - versions : bundle main <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
missing cppcheck in github actions workflow <section> cppcheck test is no longer checked in continuous integration after migrating from travisci <section> a step that runs cpp check before compiling <section> none,0
"why i could not update cfs dear , i clone the repository using git clone , cd to the directory then git submodule init , but when update it , it could not get the cfe , is there any wrong ? thanks i can update the cfe repository . sincerely",3
"fix # <number> , create security policy markdown <section> fix # <number> created a draft of a security policy markdown file . the purpose of a security policy is to inform users on how to submit bugs or vulnerabilities . it is ideal to include a section for supported versions . <section> optional sections that may be included : - what to expect security - wise such as what type of testing is done - address privacy concerns - supported versions - license - known vulnerabilities references to public security policies : <url> <url> <url> <section> ariel adams , <allcaps> asrc </allcaps> federal",1
"add a github actions workflow to replace travis ci <section> travis ci billing change is hindering our continuous integration flows <section> a service that does not limit our runs <section> running all tests locally , paying for travis or another service <section> none",2
"can not run unit tests <section> i can build and run the application , but when i try to run unit tests i am told "" no tests were found "" . probably i am not following instructions properly , some parts seem a little vague to me . <section> after setup , i followed the instructions in "" build and run "" which were make <allcaps> simulation </allcaps> = native prep make make install cd build / exe / cpu1 / . / core - cpu1 and i got results that looked reasonable . the instructions then said "" unit tests can be added with enable_unit_tests = true , run with make test , and coverage reported with make lcov . "" so , i tried "" make <allcaps> simulation </allcaps> = native enable_unit_tests = true prep "" followed by make make test and also just "" make enable_unit_tests = true prep "" followed by make make test i guess the instructions are not clear to me . ( i tried another few combinations , too , but these seemed the most reasonable ) . <section> a clear and concise description of what you expected to happen . <section> if applicable , add references to the software . <section> - hardware - os : [ e . g . linux <number> ] - versions [ e . g . cfe <number> , <allcaps> osal </allcaps> <number> , <allcaps> psp </allcaps> <number> for mcp750 , any related apps ] <section> add any other context about the problem here . <section> full name and company / organization if applicable",3
"help : could not load cfe application file hi , i am working on an app that uses a library for an <allcaps> imu </allcaps> . my app compiles without errors but when i run the core - cpu1 , i get : <code> my app directory is called imu and it contains : / imu - - - fsw ( which contains the usual mission_inc , platofrm_inc . <repeated> etc ) - - - imu_lib - - - - - - build - - - - - - - - - obj - - - - - - - - - - - - vn ( which includes a bunch of . o files ) - - - - - - - - - libvnc . a ( contains the . o files ) - - - - - - include - - - - - - - - - vn ( which includes a bunch of . h files ) - - - cmakelists . txt here is the cmakelists . txt <code> any help is appreciated . thanks",3
"sample "" real - life "" implementation of a cfs mission build . <section> from the cfs mailing list : > it would be nice to see a fully completed project to decipher why certain features are used . the how is easy to digest from the documentation but a real - world example would help clarify each feature ’ s intended purpose . > > i know a lot of this code may be internal to <allcaps> nasa </allcaps> / other organizations but it would be really helpful to have a completed demo to reference from time to time . <section> a how - to guide or a complete docker image with a mission - like cfs implementation . <section> the current bundle , partnering with open - sat kit <section> also from the mailing list > i have also been pulling apart the training vm provided by the cfs - <number> repo . it would be incredibly helpful if anyone had any open source projects that i could see , it just always seems that looking through an already completed project is the best way to learn new things and their intricacies . <section> <user>",1
"minor spelling edits to <allcaps> readme </allcaps> . md <section> minor spelling edits to <allcaps> readme </allcaps> . md <section> no impact to behavior <section> full name and company / organization / center of all contributors ( "" personal "" if individual work ) kolby heacock ( personal contribution )",1
"travis is truncating logs again ( repeat of # <number> ) <section> # <number> repeat . <repeated> the full log does not always get retained for review . <section> observe a travis log . <repeated> for example <url> <section> should not trucate <section> previously was "" resolved "" by adding : <url> <section> - travis - ci . com <section> # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"run - time error on the docker container built with s390x / ubuntu hi , i have built cfs v6 . <number> on my host computer with ubuntu18 . <number> and was able to run it communicating with cosmos . also i was able to build a docker container for cfs v6 . <number> with s390x / ubuntu ( <allcaps> ibm </allcaps> zseries based linux , big endian <allcaps> cpu </allcaps> ) , but i have an error when i build cfs in the docker container and run it . root <user> : ~ / cfs / build / exe / cpu1 # . / core - cpu1 cfe_psp : default reset subtype = <number> cfe_psp : default <allcaps> cpu id </allcaps> = <number> cfe_psp : default spacecraft id = <number> cfe_psp : default <allcaps> cpu </allcaps> name : cpu1 os_posix_tablemutex_init ( <sad> <number> : error : pthread_mutex_init failed : operation not supported os_api_init ( <sad> <number> : os_api_impl_init ( 0x 1 ) failed to initialize : - <number> os_api_init ( <sad> <number> : warning : microsecs per sec value of <number> does not equal <number> ( microsecpertick : <number> tickspersecond : <number> ) cfe_psp : os_api_init ( ) failure aborted ( core dumped ) the error occurs in osal / src / os / posix / src / os - impl - common . c . <allcaps> osal </allcaps> : development build : <number> . <number> + dev247 but if i build the docker container by changing to i686 / ubuntu or i386 / ubuntu ( little endian <allcaps> cpu </allcaps> ) in the same dockerfile , i have no run - time errors and can run cfs with problems . i wonder if anyone had the same problem with s390x and found a way to fix this error . if you know another big endian <allcaps> cpu </allcaps> that i can build a docker container with , please let me know . thank you ! harry kim",0
"add information about planned component versions to caelum roadmap <section> the caelum plan does not have information on the component version targetted for inclusion in that release <section> add a list of planned component versions for caleum to the readme . for example <code> <section> have a separate file , roadmap . md , that details the plans <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",1
"reflect ci status in different badges on the readme . <section> the current ci compiles the code , runs unit tests , builds the documentation and executes cfs all in one script . if the script fails at the documentation build the only way to figure out why it fails is to go into the travis dashboard and read through the log which takes time and is not transparent to our users . <section> have at - a - glance information that reflects what specific part of ci failed . <section> none <section> none <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"question : do you notify contributors when their contribution first takes flight ? i am thinking of finding something simple to fix for fun , and this would be a huge motivation 😄",3
attitude control i am looking for the attitude control system or gn & c . is there any documentation that can point me to where the code is ?,3
"document branch / tag / release strategy <section> community not clear on how to get what they want ( latest development version , latest official release , latest release candidate , etc ) . <section> document the current process . especially critical based on new bundle branches that may be showing up soon to track latest named release versions . <section> none . <section> frequent topic on community email list . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"how can i include a prebuilt library as a <allcaps> cfs </allcaps> library ? hi , i would like to include the cubesat space protocol library <url> as a library in <allcaps> cfs </allcaps> . i am new to <allcaps> cfs </allcaps> so i am unsure the correct way to approach this . my goal is to use the <allcaps> csp </allcaps> functionality within the ci / to applications in order to send to / receive from <allcaps> can </allcaps> . i would like to use the waf build system included with <allcaps> csp </allcaps> to build the library , then link the output library to <allcaps> cfs </allcaps> so the ci / to apps can use the <allcaps> csp </allcaps> functionality by including the appropriate headers . as a prereq i have added the libcsp repo to <code> . it is my understanding that adding libcsp to my <code> <code> is not ideal , because that would attempt to build the libcsp code ; however , in this case it would have already been built using the waf build system . i have tried the following : <number> . building libcsp as a shared library using the waf build system <number> . adding an include directive for the <allcaps> csp </allcaps> headers in the to application <number> . adding <code> in <code> <number> . copying the waf - built <code> to the target install directory <code> <number> . adding <code> to my target startup script as a result , the library fails to load at startup . i also tried : <number> . building libcsp as a shared library using the waf build system <number> . adding an include directive for the <allcaps> csp </allcaps> headers in the to application <number> . adding <code> in <code> <number> . adding <code> to <code> before the final executable is installed as a result , the to application fails to load . any help would be appreciated . i am unsure of the feasibility of using two separate build systems to build the code for my target , although i would like to avoid having to convert the waf build script to a cmake build if possible . thanks for your help . stephen",3
"add issue template for questions <section> i have been advised to submit questions through the github issue system , but questions do not fit into the feature request or bug report issue template options . it would be nice if there was a third template to capture questions . <section> add a template for users to formulate questions about the software . <section> users could choose not to use any of the templates . <section> n / a <section> keegan moore / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"fix # <number> , add ut failures to ci log <section> fix # <number> failure now reported and test stops : <code> <section> ran with failure ( and without ) , see output above . <section> just reports failure in ci log <section> - ci with current bundle <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"better failure reporting for unit tests in travis ci log <section> current log is not all that useful , for example : <code> <section> exit the test and record the failure to the log <section> could do more complex storing of results , but just writing out the failure is better than nothing . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add new installation instructions to the readme the following additions were made to improve novice user installation experience in the cfs <allcaps> readme </allcaps> . md . <section> added a brief introductory statement describing cfs to the top of the page . added prerequisite software ( make , cmake , gcc , and git ) instruction to the setup section . added a statement specifying a possible third dependency , libcanberra - gtk - module , for the groundsystem under the send commands receive telemetry section . additionally , some typos were corrected . resolves : # <number> <section> jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",1
"add new installation instructions to the <allcaps> readme </allcaps> . md <section> several user experience improvements can be made to the general cfs <allcaps> readme </allcaps> . md to help brand new cfs users ( like interns who have never encountered cfs before ) through the installation process . <section> <number> . add in a brief introductory statement at the very top explaining what cfs is . <number> . under the "" setup and build and run "" sections add a list of prerequisite software that should be preinstalled before cloning cfs ( i . e . make , cmake , gcc , and git ) . <number> . under the "" send commands , receive telemetry section "" add in the specific installation commands for pyqt5 , zmq , and libcanberra - gtk - module from the ground system ' s readme ( i and some of my fellow interns ran into issues with installation because cfs was very picky in how these three were installed ) . <section> submitted by : jandlyn bentley , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",1
"no tests were found <section> <code> on a freshly cloned repository does not find any tests . <section> steps to reproduce the behavior : <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <number> . <code> <section> <code> <section> tests run and pass . <section> virtualbox <number> running linux mint <number> , kernel : linux <number> . <number> - <number> - generic , architecture : x86 - <number>",3
"where is the "" main loop "" in cfs ? hello everyone , i am trying to calculate the loop time for cfs for future debugging purposes . if anyone could let me know where the main loop for cfs exists , i would appreciate it ! thank you , evan fitzgerald",3
ci - add test build / run with elevated privileges <section> ci only builds / runs with user privileges <section> add an elevated privileges build / run <section> none . <section> see # <number> for additional update request <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"publish html version of users guide and leverage github pages <section> the current deploy of the documentation is a pdf that while useful , could be better implemented as a webpage which doxygen already generates . <section> leverage github pages to host a "" live "" version of the users guide . <section> figure out how to get doxygen to generate markdown instead of html and use jekyll or another static site generator <section> gerardo e . cruz - ortiz , <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",1
"either fm unit testing is incorrect or an <allcaps> osal </allcaps> enumeration is incorrect <section> i do not know if this an fm bug or an <allcaps> osal </allcaps> bug . i do not know what the intent on either side was . fm is failing unit tests . the first error indicates before <allcaps> osal </allcaps> <number> . <number> - bv , fm determined if a directory entry was a directory by using the s_ifdir macro directly , but had an <hashtag> if def </hashtag> that allowed it to use an <allcaps> osal </allcaps> defined macro instead . <code> with <allcaps> osal </allcaps> <number> . <number> - bv , the os_filestat_isdir macro is defined and fm is using the os_filestat_isdir macro . the unit test sets the filestatus . filemodebits to <number> ( 0x 4 0 0 0 ) , but the os_filestat_isdir tests equality against os_filestat_mode_dir ( 0x 1 0 0 0 0 ) so the unit tests fail . i do not know if the <allcaps> osal </allcaps> developer intended to use the value expected by fm ( 0x 4 0 0 0 ) , or if the fm should be : from : <code> to : <code> making the change above fixes these errors , but so does changing the enumeration from : os_filestat_mode_dir = 0x 1 0 0 0 0 to os_filestat_mode_dir = 0x 4 0 0 0 <section> steps to reproduce the behavior : <number> . build fm unit tests with the ut_assert , hooks , and stubs from cfe <number> . 0 a <number> . run fm unit tests <section> fm unit tests should pass . <section> - virtualbox - ubuntu <number> - fm <number> . <number> , <allcaps> osal </allcaps> <number> . <number> - bv , app ut_assert , hooks , and stubs from cfe <number> . 0 a <section> mathew benson windhover labs , <allcaps> llc </allcaps> <email>",0
"update pyqt4 to pyqt5 in <allcaps> readme </allcaps> <section> updates documentation to match implementation <section> n / a <section> docs - only change <section> web browser <section> none <section> none <section> evan fitzgerald , canadian space agency - note clas <allcaps> only </allcaps> apply to software contributions .",1
"fix # <number> , add a reference to skeleton_app in <allcaps> readme </allcaps> . md <section> added a reference to the skeleton_app ( <url> in the cfs bundle ' s <allcaps> readme </allcaps> . md . in this reference i provided a short description of the skeleton app with a link to its repository . this reference was placed under the "" other cfs related elements / tools / apps / distributions "" section , under the "" other apps "" category . resolves : # <number> <section> n / a <section> n / a <section> n / a <section> this is a simple documentation enhancement . <section> n / a <section> contribution by : jandlyn bentley , <allcaps> nasa gsfc </allcaps>",1
"fix # <number> , added the references ( links ) to the cfe and <allcaps> osal </allcaps> user guides from the … <section> added the cfe and <allcaps> osal </allcaps> user guides ' references ( links ) from the gh - pages branch to the cfs bundle <allcaps> readme </allcaps> . md . resolves : # <number> <section> contributed by jandlyn bentley , <allcaps> nasa gsfc </allcaps>",1
"boolean type not defined ? i am new to cfs and trying to slowly add the applications i will need for my mission . i am trying to add the to , <allcaps> sch </allcaps> , and hk apps but keep running into the same problem . it appears that in many app codes such as sch_msg . h , sch_app . h , etc . there is use of ' boolean ' . it does not appear that the boolean type has been defined anywhere in the cfs code . am i missing something or does it have to be manually added in ? <section> - vm running ubuntu <number> . <number> 6 4 bit - versions running all the current versions of cfs bundle , cfs apps , and cfe / osal / psp paula",3
ci - build multiple targets <section> the build process becomes increasingly more complex when building for multiple targets . ci should build for at least two targets to ensure that the build system is functioning properly . <section> have ci create relevant build configuration to build for multiple targets . <section> <email>,2
"fix # <number> - update lgtm . yml to exclude ui files <section> fixes # <number> to exclude files in cfs - groundsystem with the <code> prefix <section> steps taken to test the contribution : pending lgtm run <section> lgtm analysis should not include <code> files <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> leor bleier , <allcaps> nasa gsfc </allcaps> \ code <number>",2
"small hiccup when installing the cfs bundle in following the steps laid out in the cfs bundle ' s readme , everything up through the "" build and run "" section worked fine . however , there was a small hiccup that occurred in the "" send commands , receive telemetry "" section after installing pyqt5 ( instead of the prescribed pyqt4 ) and pyzmq . i changed directory back to the main cfs location , and tried to follow the next insruction : cd tools / cfs - groundsystem / subsystems / cmdutil , but i got this error message : no such file or directory . i tried installing cmdutils via pip3 , then re - tried the cd tools / cfs - groundsystem / subsystems / cmdutil command again and still the same error occurred . skipping to the next line : python3 groundsystem . py was unsurprisingly met with : pythons3 : can ’ t open file ‘ groundsystem . py ’ : [ errno <number> ] no such file or directory . i tried closing out the terminal and opening a new one , and re - tried cd tools / cfs - groundsystem / subsystems / cmdutil , but still no luck . later after trying a new terminal again , i thought maybe pyqt5 instead of pyqt4 was a problem ( but nothing changed ) . and finally , trying a new terminal window one last time , i was able to get cd tools / cfs - groundsystem / subsystems / cmdutil and all of the subsequent commands to work , and launch the ground system gui . i am not sure why , after changing nothing from the last attempt , it would work this time . this was attempted on a linux vm with ubuntu <number> .",3
"fix # <number> , only inline empty functions <section> fix # <number> <section> ran against related repos , confirmed style update . <section> none - whitespace <section> - hardware : cfs dev server <number> - os : ubuntu <number> - versions : master bundle + this commit . <section> none . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"code style update - only inline empty functions <section> complaints about single line functions being inline <section> do not . <section> ignore complaints . <section> none , whitespace . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> , per <url>",2
create directory structure for pushing <allcaps> ctf </allcaps> scripts <section> need to create a location to push <allcaps> ctf </allcaps> scripts and plugins to . <section> dan knutsen <allcaps> nasa </allcaps> goddard,2
"fix # <number> , add <allcaps> git sha </allcaps> <section> adds <allcaps> git sha </allcaps> ' s to travis log . <section> checked the travis log for this branch . <section> <email>",2
"report submodule <allcaps> sha </allcaps> in travis job log <section> it would be helpful to know exactly what versions of everything travis is doing a ci against . <section> adding "" git submodule "" and "" git rev - parse <allcaps> head </allcaps> "" to the travis script . <section> <email>",2
"consider using "" <allcaps> reuse </allcaps> "" for license / copyright banner management currently copyright headers and the like are all over the map , this software would help automatically check that all of our copyright and license information is correct in every file in the cfs tree . see : <url> <section> <email>",2
"fix # <number> , add sleep after script to avoid truncated log <section> added after_script sleep to ci fix # <number> <section> ci - see <url> <section> full job log now available on travis <section> - hardware : ci - os : ubuntu <number> - versions : master bundle + this commit <section> none <section> the cfs repository is provided to bundle the cfs framework . it is utilized for bundling submodules , continuous integration testing , and version management and does not contain any software . code contributions should be directed to the appropriate submodule . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"travis truncating job logs <section> likely related to <url> and similar reports the job log output gets truncated , often around the final documentation warning checks <section> see build logs , for example <url> <section> full log should be shown to debug errors <section> n / a <section> ci <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",0
"cfs header definition version <number> ci <section> certification configuration is <allcaps> ccsds </allcaps> extended header , 3 2 bit . default config is currently <allcaps> ccsds </allcaps> primary only , <number> bit . <section> ci with cfs header definition v2 , and any other minor tweaks for cert config . <section> leaning towards adding a v2 config that maps to the cert configuration to ci will not be the full ci until related issues get resolved . <section> will need to resolve any related v2 issues ( cmdutil does not support it , etc ) , issues in implicit packet padding differences , etc . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , <allcaps> lgtm </allcaps> build now omits deprecated code <section> added omit_deprecated = true to <allcaps> lgtm </allcaps> script fix # <number> <section> ci <section> should clear up some errors related to shell , decompress , etc . <section> - ci <section> built on latest ic <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
update <allcaps> lgtm </allcaps> build to omit_deprecated <section> deprecated elements included in analysis <section> remove deprecated elements from analysis <section> none . <section> will address some of the open <allcaps> lgtm </allcaps> issues . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"gui / menu / wizard configuration <section> for noobs , it can be daunting to configure a cfs environment , or to find "" that one parameter that changes the size of the pipe tables "" , for example . <section> it would be nice to have a configuration . <repeated> generator ? . <repeated> that a user could use to quickly run through the configuration options ( conditional code options , platform selection , sizing options ) and generates the appropriate cmake files , . h files , startup scripts , etc . <section> menuconfig / kconfig ( <url> is a popular option and provides a menu - based configuration system . alternatively , a "" wizard "" style configuration ( like perl ' s configure script ) that steps through all of the configuration options , asking questions and providing default answers . whatever option is chosen , it should *not* replace the existing build process but should be a front - end to it , and provide human - readable / editable files as output that are equivalent to the current files . <section> <email>",2
"add pc - linux toolchain "" cross - compile "" to ci <section> current ci uses <allcaps> simulation </allcaps> = native for all builds <section> add one non - simulation build , consider matrix model as used in osal <section> none <section> nasa / cfe # <number> - failure that wasn ' t caught <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"add reference to skeleton_app in <allcaps> readme </allcaps> <section> skeleton app added , missing reference in readme <section> add reference <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"document deprecation process <section> process not documented <section> document process and reference . - issue requesting deprecation gets reviewed by <allcaps> ccb </allcaps> , accepted / assigned or rejected - evaluate requirements / documentation / operational impacts - pull request ( s ) wraps deprecated elements in * _omit_deprecated ifndef and removes any internal dependencies - default sample configuration does not remove this code - make omit_deprecated = true prep will compile without it to check code for compliance - ideally any deprecated elements address dependency fix ( use new element , no longer supported , etc ) - elements can be deprecated in any build / release - ci tests with and without deprecated elements removed to ensure no internal dependencies - issue requesting removal of deprecated code - pull request removes deprecated elements - typically done end of cycle prior to a major release <section> wing it . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",1
reference autogenerated docs <section> see # <number> no current references to the generated documents <section> once the docs are deployed the first time ( after push of # <number> to master and ci completes ) add references from at least <allcaps> readme </allcaps> . md . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"update ci for deploy docs , warnings , and simplify <section> fix # <number> , deploy documentation fix # <number> , config warnings except for the new ones introduced by using the latest deployment version fix # <number> , removes permissive mode hack and updates <allcaps> readme </allcaps> . md adds enforce of no doxygen warnings for osal and users guide <section> steps taken to test the contribution : <number> . ci test <section> old ci script warnings resolved ( <number> remain based on using development version ) now enforces no doxygen warnings for user guides will deploy documentation to gh_pages branch on push to master <section> - ci system <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix travis - ci config warnings <section> build config validation ( from travis - ci ) - root : deprecated key sudo ( the key <code> has no effect anymore . ) language : unexpected sequence , using the first value ( c ) root : missing os , using the default linux env : key matrix is an alias for jobs , using jobs <section> see <url> <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"exclude lgtm false positives <section> sample_lib triggers a lgtm error based on checking strncpy return ( false alarm ) <section> exclude string - copy - return - value - as - boolean ( triggered by sample_lib , which is doing this on purpose ) <section> could clutter code to exclude this specific call from triggering the warning . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"add positive check to cfs execution in ci <section> ci in # <number> only checks for warn / err / fail in cfs output <section> enforce the existence of the following message : "" cfe_es_main entering <allcaps> operational </allcaps> state "" <section> any other positive check would work , above was the simplest i could think of . <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"update lgtm to include python <section> update lgtm . yml file to include python <section> anh van , <allcaps> nasa </allcaps> goddard",2
"cfe_time_gettime ( ) information seems incorrect ? a question related to the use of the time service provided by cfe . i am trying to get time information using the <allcaps> api </allcaps> provided by cfe as follows : <code> and i print it as follows : <code> but the printed year and time information seems to be incorrect . it indicates some value in <number> as : <code> . also , when i launch cfe ( core - cpu1 ) , i see the following output which indicates the time starting in <number> and then changing to some value in <number> . <code> could someone please explain how i could obtain the correct current time information using the cfe apis without having to resort to using functions in time . h ? thanks !",3
"add a mechanism to push app configurations to the mission definitions folder . after working with some of the pre - made utility apps provided by the <allcaps> cfe </allcaps> , i have noticed that at some point ( relatively early ) developers must abandon reuse in favor of clone / own which , in my opinion , is partly due to the <allcaps> cfs </allcaps> cmake build system not providing a clean method to push build configurations into the top level definitions folder . an example of an app that could benefit from additional configuration would be the ci and to lab apps . the current implementation of these apps use a hard coded port value for <allcaps> udp </allcaps> communication with only a means to change the ip listened to via a command in to lab . my solution would most likely take the form of changing . <repeated> <code> to . <repeated> <code> and having a <code> located within the missions definitions directory that contains the definition from a cmake instruction . <repeated> <code> it would be nice for the cmake build system to provide the ability to have a companion configuration folder for each app in the definitions folder . this folder could contain headers and additional . cmake files used to specify certain details about the app being built . it ' s currently possible to hijack the behavior of the <code> file and add additional instructions like <code> to inject files into the app before it attempts to build but this would clobber the files currently present in the app directory .",2
update <allcaps> readme </allcaps> and ci based on permissive update <section> will need to update process when <url> gets merged . this issue is to track getting the related cfs repo work done . <section> update based on new process <section> none . <section> also update # <number> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"update cfs - groundsystem instructions in <allcaps> readme </allcaps> <section> send commands , receive telemetry section is out of date in <allcaps> readme </allcaps> for python3 <section> update instructions or link to submodule instructions ? <section> n / a <section> see also <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , improve ci testing <section> fixes # <number> <section> see ci results <section> better ci testing coverage <section> ci <section> jobs will fail until issues are resolved . <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"improve travis ci testing <section> travis ci currently just does cppcheck and default build on the bundle <section> parallel test the following : - <allcaps> buildtype </allcaps> = release omit_deprecated = true strict_no_warnings = true - <allcaps> buildtype </allcaps> = release omit_deprecated = false ( default ) strict_no_warnings = true - <allcaps> buildtype </allcaps> = debug ( default ) omit_deprecated = true strict_no_warnings = true - <allcaps> buildtype </allcaps> = debug ( default ) omit_deprecated = false ( default ) strict_no_warnings = true and do the following tests : - add document generation ( eventually enforce no warnings ) - make doc - make usersguide - make osalguide ( dependent on <url> - build with enable_unit_tests = <allcaps> true simulation </allcaps> = native - run unit tests ( eventually enforce coverage ) - execute cfe and pipe output to file - send reset cmd from cmdutil - confirm execution output lacks error / warning / fail messages <section> none <section> eventually add nightly or triggered local builds for other environments ( pc - <allcaps> rtems </allcaps> , vxworks on a modern platform ) eventually add automated build verification ( trade ci vs local ) <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"fix # <number> , add style configuration <section> fixes # <number> <section> see as applied in <url> enforced in <url> <section> - no impact to software behavior - allows for application and enforcement of standard style <section> - cfs dev server <number> - os : ubuntu <number> ( with clang - format - <number> installed ) - versions : see related pull requests in ci_lab <url> <url> <section> to use , requires installation of clang - format - <number> ( minimum version needed for define alignment ) see . travis . yml in ci_lab pull request <url> <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"add lgtm badge to readme <section> add lgtm badge to readme <section> anh van , <allcaps> nasa </allcaps> goddard",2
"adding . lgtm . yml file <section> add lgtm . yml file . <section> anh van , <allcaps> nasa </allcaps> goddard",2
automate a deployment of docs to github pages having to build and open the documentation locally adds an extra step that could be mitigated by pushing the documentation of the current master commit to github pages . the process of uploading to github pages is documented here <url>,2
update release document links in <allcaps> readme </allcaps> . md <section> all references in <code> are broken . <section> fix links - relate to <number> release when available . <section> none <section> none <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps> email from <user>,2
cfe_es_gettaskinfo : task id not valid : <number> i get the following message when i try to publish a message on the software bus from within a call back function that is called by a timer . cfe_es_gettaskinfo : task id not valid : <number> steps to reproduce the behavior : sample_app . txt <url> - download the attached sample_app . txt - rename . txt to . c - replace apps / sample_app / fsw / src / sample_app . c with the renamed sample_app . c file - compile and run core - cpu1 . <section> please note that the time call back function in the attached sample_app is at the very end of the file . the timer is initialized within the app ' s initialization function . <section> - x86_64 - os : [ e . g . linux <number> ] - versions [ cfs repository at commit hash : 0 4 4 4 7 6 b ( current master branch as on <number> / <number> ) ] <section> <allcaps> nasa </allcaps> langley / <allcaps> nia </allcaps> any thoughts on how to resolve this is greatly appreciated .,3
add preferred style configuration <section> inconsistent style used throughout cfs <section> automated way to apply style that can be enforced by ci if desired <section> none <section> n / a <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>,2
"syntax for table dump command when attempting to dump a table the format for the python groundsystem is unclear . image <img> my attempt syntax is as follows . it appears to concatenate the table and the table file name , making it hard to discern any proper convention for the arguments of the command . image <img>",3
"syntax issue for groundsystem python table validate command i am trying to get the syntax right for the validation command . i have been running gdb to look at the contents of the message . all i get is a cryptic invalid msg length error . with the following from the cfs - groundsystem / guid , instructions , i know i am not interpreting it right . image <img> image <img> image <img> _originally posted by <user> in <url>",3
"add automated revision increment on merge to master <section> from <allcaps> ccb </allcaps> discussions , should increment master revision on merges ( except on * _version . h file ) <section> automate via github actions , template started on branch in ci_lab that triggers - still need to do update ( via script , something like attached ) - still need to figure out how to commit ( some key ? ) - may need to be done remotely , triggered by github and use a key to check back in <section> update by hand ( error prone ) <section> na <section> jacob hageman - <allcaps> nasa </allcaps> / <allcaps> gsfc </allcaps>",2
"table load failures my app , named cnt_app starts running and while there are tables in the app , it appears that cfe_tbl attempts to load those tables and fails , causing cnt_app to error out . is there a missing step that i need to perform ( load tables ? ) or is this indicative of a bug or misconfiguration ? image <img>",3
contributor license agreement template <section> unable to quickly find the contributor license agreement ( <allcaps> cla </allcaps> ) . recommend adding to <allcaps> readme </allcaps> of each repository . <section> john p . lucas - <allcaps> nasa gsfc </allcaps>,2
"improve version control , reporting , and integrity support to enhance security <section> elements could be modified between original generation and use without easily being noticed . a holistic design approach to version control , reporting , integrity should be considered to support the various use cases . currently state : <number> . repo information ( git describe in a subset of repos ) is gathered during build and reported on execution for top branch , cfe and <allcaps> osal </allcaps> - need to expand this to include all the elements ( apps , libs , psp , etc ) <number> . build information is gathered during build and reported on execution - user name and date for last full build covering cfe ( does not cover uploaded apps or elements built separately / after the original full build ) <number> . version information updated by hand and reported at execution time for most of cfs - elf2cfetbl and tblcrctool do not report version information , has not been consistently updated <number> . checksums are typically just calculated and reported at load / execution , does not cover libs , really should employ digital signatures that can be verified <section> see above suggestions <section> none , but should discuss with security experts and come up with a complete , well vetted solution . <section> likely very beneficial to community requiring a more robust security approach <section> jacob hageman / <allcaps> nasa </allcaps> - <allcaps> gsfc </allcaps>",2
"use appid with perfid for apps <section> currently apps define their perfid when using the performance logging framework , but there ' s no mechanism currently to ensure that the perfid is unique to that application and could result in confused perf logs . <section> one option would be to use the appid generated when the application is registered ( but will need to be reported somehow so that a performance analysis tool can crosswalk from runtime - generated perfid ' s to the applications . ) <section> three alternatives : <number> ) a separate perfid registry / table in memory , <number> ) some sort of compile - time tool to generate id ' s , <number> ) a textual identifier ( that can be "" namespaced "" . ) <section> discussed at <allcaps> ccb </allcaps> <number> - <number> - <number> <section> chris knight , <email> , <allcaps> nasa </allcaps> ames research center",2
"remove gen_sch_tbl submodule from framework this tool is specifically for the <allcaps> gsfc </allcaps> scheduler ( a <allcaps> gsfc </allcaps> app ) , and is maintained by <allcaps> gsfc </allcaps> not the cfs framework community .",2
"examples for application testing since the release of cfe <number> , there has not been apps that give an example of the way tests should be defined in the cmakelists file . previously , when utassert was part of the tools directory rather than being part of the <allcaps> osal </allcaps> , this definition would exist inside of the fsw / for_build / makefile but this does not cleanly translate to cfe <number> ' s cmake build system . the arch_build . cmake file located in the cmake directory seems to have a function add_unit_test_exe <url> but i could not get this to work when calling it from the simple app ' s cmakelist . txt . an explanation of what needs to be done in either the target . cmake or cmakelists file for an app or an example of an app using ut for it ' s testing would be appreciated .",2
"suggestion : documentation rework i have started working on markdown - izing documentation on my fork of this repository so it ' s easier to navigate via github ' s interface . i plan to convert all plain - text , <allcaps> pdf </allcaps> , and word documents to markdown , but leave doxygen docs intact since they are generated ( however , on that subject , on the <allcaps> cactus </allcaps> fork of cfe <url> . i can open a pr here once the conversion is complete if the cfe team would like to integrate that change in the main repo .",1
