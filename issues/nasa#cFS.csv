Title,Body,Labels,URL
IC: Caelum-rc4+dev54,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev356
osal v6.0.0-rc4+dev223


**Includes:**

*cFE*
- nasa/cFE#2416

*osal*
- nasa/osal#1397
- nasa/osal#1399

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/690/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/690
"Header Guards for C++ applications to call CFE, OSAL, PSP","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Describe the solution you'd like**
Wrap all public headers in CFE, OSAL, and PSP in hedaer guards that allow inclusion from C++ translation units:
```c
#ifdef __cplusplus
extern ""C"" {
#endif

<content>

#ifdef __cplusplus
}
#endif
```

**Describe alternatives you've considered**
The alternative is to wrap the `#includes` in the calling apps with the header guards. 

**Additional context**
- https://lists.nasa.gov/archives/list/cfs-community@lists.nasa.gov/thread/HMXU7ORGRU5ZWPAXIBNCI2MEDL5WL6RW/
- https://github.com/nasa/cFS/discussions/659
- https://lists.nasa.gov/archives/list/cfs-community@lists.nasa.gov/thread/OANSPI46GVMPNNNSB467P5LD23F274GO/
- https://lists.nasa.gov/archives/list/cfs-community@lists.nasa.gov/thread/3BRMUGGE2TOLGKIP6NIQNZV4UWTJIUAF/

**Requester Info**
Isaac Rowe, NASA JSC, Jacobs Technology",,https://github.com/nasa/cFS/issues/688
"Fast-Tracked cFE Pull Request nasa/cFE#2398, nasa/cFE#2399, nasa/cFE#2404: Resolves nasa/cFE#2393, nasa/cFE#2395. Reverts nasa/cFE#2399","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Setting this value to 0 allows it to get the same result regardless of the setting of CFE_MISSION_TIME_CFG_DEFAULT_UTC.
For a user that has customized cfe_msgids.h, this will get conflicting values. If/when users have migrated to module-specific msgid files, this will be OK, but for now this can break things.

Fixes nasa/cFE#2393, nasa/cFE#2395

**Testing performed**
Build with CFE_MISSION_TIME_CFG_DEFAULT_UTC == true
Build using override of `cfe_msgids.h` (only).

**Expected behavior changes**
Build and test succeeds
No conflicting msgids if user has overridden `cfe_msgids.h` but not `cfe_test_msgids.h`

**System(s) tested on**
Debian

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/686
Fast-Tracked cFE Pull Request: Resolves cFE#2391.,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
This allows the script to pick up the file if it was named simply ""cfe_msgids.h"" or ""cfe_platform_cfg.h"", rather than insisting it be named with a platform-specific prefix

Fixes nasa/cFE#2391

**Testing performed**
Build and run with stakeholder configuration

**Expected behavior changes**
A file named `cfe_msgids.h` is picked up by the build system, as expected.

**System(s) tested on**
Debian

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",CCB:Approved,https://github.com/nasa/cFS/pull/685
Fast-Tracked cFE Pull Request: Resolves cFE#2388.,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Reverts cFE#2356
- Fixes cFE#2388

**Testing performed**
N/A

**Expected behavior changes**
#2315 is removed.

**System(s) tested on**
N/A

**Contributor Info - All information REQUIRED for consideration of pull request**
Dylan Z. Baker - NASA GSFC","CCB:Ready, CCB:FastTrack",https://github.com/nasa/cFS/pull/682
IC: Caelum-rc4+dev53,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev342

**Includes:**

*cFE*
- nasa/cFE#2369
- nasa/cFE#2272
- nasa/cFE#2276

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/681/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@thnkslprpt",,https://github.com/nasa/cFS/pull/681
"Fix #679, Increase wait time in test workflow","**Checklist (Please check before submitting)**

* [x ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Increase the wait time required to call a test 'frozen'. This will prevent tests from erroneously being called 'frozen' and allow the tests to complete successfully..
Fixes Issue #679 

**Testing performed**
Executed tests to ensure each tests completes in the allotted time.

**Contributor Info - All information REQUIRED for consideration of pull request**
Dan Knutsen
NASA Goddard
",CCB:Approved,https://github.com/nasa/cFS/pull/680
Github workflow does not allow enough time for all Functional tests to run,"**Checklist (Please check before submitting)**

* [x ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
build-cfs-deprecated.yml and build-cfs.yml workflows need to be updated to prevent functional tests from exiting prematurely.  The current wait time of 60 seconds is not enough time to allow all of the tests to run successfully. 

**To Reproduce**
Execute the functional tests via the workflow

**Expected behavior**
Tests complete successfully.

**Reporter Info**
Dan Knutsen
NASA Goddard
",,https://github.com/nasa/cFS/issues/679
Section 1.8 of userguide.pdf has duplicate entries. ,"Very minor issue, there is a duplication of entries in 1.8 of the cfe-userguide.pdf page 52. I only mention it as I thought there was a difference in the entries and spent a few minutes trying to understand it. 
![screen](https://github.com/nasa/cFS/assets/20270893/1e2c0b07-c2a3-4b27-842b-3211134b88e1)
",,https://github.com/nasa/cFS/issues/678
IC: Caelum-rc4+dev52,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev334
osal v6.0.0-rc4+dev217

**Includes:**

*cFS*
- #680
- #676

*cFE*
- nasa/cFE#2350
- nasa/cFE#2354
- nasa/cFE#2355
- nasa/cFE#2366
- nasa/cFE#2364
- nasa/cFE#2356
- nasa/cFE#2361

*osal*
- nasa/osal#1393

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/677/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@CDKnightNASA
@chillfig",,https://github.com/nasa/cFS/pull/677
"Fix #662, Removes error on format style differences","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fixes #662
   - Removes the exiting logic such that the workflow can't fail due to a claang difference.

**Testing performed**
Observed that error does not happen when format-check is called and there is a claang-format-10 style difference.

**Expected behavior changes**
No error on style differences

**System(s) tested on**
 - OS: Ubuntu 20.04

**Additional context**
N/A

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Justin Figueroa, Vantage
","enhancement, CCB:Approved",https://github.com/nasa/cFS/pull/676
IC: Caelum-rc4+dev51,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev318
sch_lab v2.5.0-rc4+dev57

**Includes:**

*cFE*
- nasa/cFE#2336
- nasa/cFE#2338

*sch_lab*
- nasa/sch_lab#144

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/675/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@jphickey",,https://github.com/nasa/cFS/pull/675
IC: Caelum-rc4+dev50,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev312

**Includes:**

*cFE*
- nasa/cFE#2328
- nasa/cFE#2331

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/673/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@pepepr08
@jphickey",,https://github.com/nasa/cFS/pull/673
Do not know how to set CFE_SYSTEM_PSPNAME on Darwin system,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
trying to build on MacOS, the build fails as no Darwin support.

**To Reproduce**
Steps to reproduce the behavior:
try building on a MacOS platform.

**Expected behavior**
portable i would take as any platform.

**Code snips**
If applicable, add references to the software.

**System observed on:**
 Mac Pro (2013) intel xenon processor
MacOS 12.6.5

**Additional context**
ex0atmospheric@Dad-Mac-Pro cFS % make SIMULATION=native prep
mkdir -p ""build""
(cd ""build"" && cmake  -DCMAKE_INSTALL_PREFIX=/exe -DCMAKE_BUILD_TYPE=debug ""/Users/ex0atmospheric/Projects/cFS/cfe"")
-- OMIT_DEPRECATED=false: Deprecated elements included in build
-- Search path for modules: apps;libs;psp/fsw/modules;cfe/modules
-- Module 'core_api' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/core_api
-- Module 'core_private' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/core_private
-- Module 'ci_lab' found at /Users/ex0atmospheric/Projects/cFS/apps/ci_lab
-- Module 'to_lab' found at /Users/ex0atmospheric/Projects/cFS/apps/to_lab
-- Module 'sch_lab' found at /Users/ex0atmospheric/Projects/cFS/apps/sch_lab
-- Module 'cfe_assert' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/cfe_assert
-- Module 'sample_app' found at /Users/ex0atmospheric/Projects/cFS/apps/sample_app
-- Module 'sample_lib' found at /Users/ex0atmospheric/Projects/cFS/libs/sample_lib
-- Module 'es' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/es
-- Module 'evs' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs
-- Module 'fs' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/fs
-- Module 'sb' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb
-- Module 'tbl' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl
-- Module 'time' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/time
-- Module 'osal' found at /Users/ex0atmospheric/Projects/cFS/osal
-- Module 'psp' found at /Users/ex0atmospheric/Projects/cFS/psp
-- Module 'msg' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/msg
-- Module 'sbr' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/sbr
-- Module 'resourceid' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/resourceid
-- Module 'config' found at /Users/ex0atmospheric/Projects/cFS/cfe/modules/config
-- OSAL_SYSTEM_BSPTYPE not defined, no OSAL implementation will be compiled
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/core_api/config/default_cfe_mission_cfg.h for mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/sample_defs/sample_perfids.h for perfids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/core_api/config/default_cfe_core_api_interface_cfg.h for cfe_core_api_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_mission_cfg.h for cfe_es_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_interface_cfg.h for cfe_es_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_extern_typedefs.h for cfe_es_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_fcncodes.h for cfe_es_fcncodes.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_msgdefs.h for cfe_es_msgdefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_msg.h for cfe_es_msg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_msgstruct.h for cfe_es_msgstruct.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/es/config/default_cfe_es_topicids.h for cfe_es_topicids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_mission_cfg.h for cfe_evs_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_interface_cfg.h for cfe_evs_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_extern_typedefs.h for cfe_evs_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_fcncodes.h for cfe_evs_fcncodes.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_msgdefs.h for cfe_evs_msgdefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_msg.h for cfe_evs_msg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_msgstruct.h for cfe_evs_msgstruct.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/evs/config/default_cfe_evs_topicids.h for cfe_evs_topicids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/fs/config/default_cfe_fs_mission_cfg.h for cfe_fs_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/fs/config/default_cfe_fs_interface_cfg.h for cfe_fs_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/fs/config/default_cfe_fs_filedef.h for cfe_fs_filedef.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/fs/config/default_cfe_fs_extern_typedefs.h for cfe_fs_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_mission_cfg.h for cfe_sb_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_interface_cfg.h for cfe_sb_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_extern_typedefs.h for cfe_sb_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_fcncodes.h for cfe_sb_fcncodes.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_msgdefs.h for cfe_sb_msgdefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_msg.h for cfe_sb_msg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_msgstruct.h for cfe_sb_msgstruct.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/sb/config/default_cfe_sb_topicids.h for cfe_sb_topicids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_mission_cfg.h for cfe_tbl_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_interface_cfg.h for cfe_tbl_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_extern_typedefs.h for cfe_tbl_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_fcncodes.h for cfe_tbl_fcncodes.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_msgdefs.h for cfe_tbl_msgdefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_msg.h for cfe_tbl_msg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_msgstruct.h for cfe_tbl_msgstruct.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/tbl/config/default_cfe_tbl_topicids.h for cfe_tbl_topicids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_mission_cfg.h for cfe_time_mission_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_interface_cfg.h for cfe_time_interface_cfg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_extern_typedefs.h for cfe_time_extern_typedefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_fcncodes.h for cfe_time_fcncodes.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_msgdefs.h for cfe_time_msgdefs.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_msg.h for cfe_time_msg.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_msgstruct.h for cfe_time_msgstruct.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/time/config/default_cfe_time_topicids.h for cfe_time_topicids.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/msg/option_inc/default_cfe_msg_hdr_pri.h for cfe_msg_hdr.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/msg/option_inc/default_cfe_msg_sechdr.h for cfe_msg_sechdr.h
-- Using file: /Users/ex0atmospheric/Projects/cFS/cfe/modules/resourceid/option_inc/cfe_resourceid_simple.h for cfe_resourceid_typedef.h
-- Configuring for system arch: native/default_cpu1
-- OMIT_DEPRECATED=false: Deprecated elements included in build
CMake Error at cmake/arch_build.cmake:648 (message):
  Do not know how to set CFE_SYSTEM_PSPNAME on Darwin system
Call Stack (most recent call first):
  CMakeLists.txt:120 (prepare)


-- Configuring incomplete, errors occurred!
CMake Error at cmake/mission_build.cmake:492 (message):
  Failed to configure native_default_cpu1
Call Stack (most recent call first):
  CMakeLists.txt:124 (process_arch)


-- Configuring incomplete, errors occurred!
make: *** [prep] Error 1
ex0atmospheric@Dad-Mac-Pro cFS % 

**Reporter Info**
Full name and company/organization if applicable
",,https://github.com/nasa/cFS/issues/672
IC: Caelum-rc4+dev49,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev304

**Includes:**

*cFE*
- nasa/cFE#2321
- nasa/cFE#2214
- nasa/cFE#2319

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/671/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/671
IC: Caelum-rc4+dev48,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev287

**Includes:**

*cFE*
- nasa/cFE#2306
- nasa/cFE#2295
- nasa/cFE#2303
- nasa/cFE#2312

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/670/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@skliper
@havencarlson",,https://github.com/nasa/cFS/pull/670
IC: Caelum-rc4+dev47,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev276
osal v6.0.0-rc4+dev213
PSP v1.6.0-rc4+dev76

**Includes:**

*cFE*
- nasa/cFE#2299
- nasa/cFE#2300
- nasa/cFE#2298

*osal*
- nasa/osal#1383

*PSP*
- nasa/PSP#391

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/669/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@dzbaker",,https://github.com/nasa/cFS/pull/669
IC: Caelum-rc4+dev46,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev268
sch_lab v2.5.0-rc4+dev53
to_lab v2.5.0-rc4+dev45
    
**Includes:**

*cFE*
- nasa/cFE#2254
- nasa/cFE#2288
- nasa/cFE#2290

*sch_lab*
- nasa/sch_lab#136

*to_lab*
- nasa/to_lab#139

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/668/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/668
IC: Caelum-rc4+dev45,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

PSP v1.6.0-rc4+dev71
ci_lab v2.5.0-rc4+dev43
sample_app v1.3.0-rc4+dev39
sch_lab v2.5.0-rc4+dev49
to_lab v2.5.0-rc4+dev41
    
**Includes:**

*PSP*
- nasa/PSP#389

*ci_lab*
- nasa/ci_lab#136

*sample_app*
- nasa/sample_app#203

*sch_lab*
- nasa/sch_lab#136

*to_lab*
- nasa/to_lab#150

Co-authored by: Joseph Hickey <jphickey@users.noreply.github.com>

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/667/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/667
build doc run session 1980,"1980-012-14:03:44.21340 ?
```bash
OS_Posix_GetSchedulerParams():186:Policy 1: available, min-max: 1-99
OS_Posix_GetSchedulerParams():186:Policy 2: available, min-max: 1-99
OS_Posix_TaskAPI_Impl_Init():372:Selected policy 2 for RT tasks, root task = 99
OS_Posix_TaskAPI_Impl_Init():389:Could not setschedparam in main thread: Operation not permitted (1)
CFE_PSP: EEPROM Range (2) created: Start Address = 7FCCA4420000, Size = 00080000 Status = 0
CFE_PSP: Normal exit from previous cFE instance
CFE_PSP: Starting the cFE with a PROCESSOR reset.
1980-001-20:41:58.17850 CFE_ES_Main: CFE_ES_Main in EARLY_INIT state
1980-001-20:41:58.17856 CFE_ES_InitializeFileSystems: Volatile Disk has 99 Percent free space.
CFE_PSP: CFE_PSP_AttachExceptions Called
1980-001-20:41:58.17908 CFE_ES_Main: CFE_ES_Main entering CORE_STARTUP state
1980-001-20:41:58.17909 CFE_ES_CreateObjects: Starting Object Creation calls.
1980-001-20:41:58.17909 CFE_ES_CreateObjects: Calling CFE_Config_Init
1980-001-20:41:58.17914 CFE_ES_CreateObjects: Calling CFE_ES_CDSEarlyInit
1980-001-20:41:58.17924 CFE_ES_CreateObjects: Calling CFE_EVS_EarlyInit
1980-001-20:41:58.17933 CFE_EVS_EarlyInit: Event Log restored, n=0, c=20, f=1, m=1, o=9
1980-001-20:41:58.17935 CFE_ES_CreateObjects: Calling CFE_SB_EarlyInit
1980-001-20:41:58.18017 CFE_ES_CreateObjects: Calling CFE_TIME_EarlyInit
1980-012-14:03:43.71055 CFE_ES_CreateObjects: Calling CFE_TBL_EarlyInit
1980-012-14:03:43.71149 CFE_ES_CreateObjects: Calling CFE_FS_EarlyInit
EVS Port1 66/1/CFE_EVS 1: cFE EVS Initialized:  cFE DEVELOPMENT BUILD v7.0.0-rc4+dev260 (Codename: Draco), Last Official Release: cfe v6.7.0
1980-012-14:03:43.86220 CFE_SB_AppInit: Registered 4 events for filtering
EVS Port1 66/1/CFE_SB 1: cFE SB Initialized:  cFE DEVELOPMENT BUILD v7.0.0-rc4+dev260 (Codename: Draco), Last Official Release: cfe v6.7.0
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_SB
EVS Port1 66/1/CFE_ES 1: cFE ES Initialized:  cFE DEVELOPMENT BUILD v7.0.0-rc4+dev260 (Codename: Draco), Last Official Release: cfe v6.7.0
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 2: cFS Versions: cfe v7.0.0-rc4+dev260, osal v6.0.0-rc4+dev209, psp v1.6.0-rc4+dev67. cFE chksm 40253
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 91: Version Info: Mission SampleMission, version git:8527a98
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 91: Version Info: Module CORE_API, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module ES, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module EVS, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module FS, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module SB, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module TBL, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module TIME, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module OSAL, version git:draco-rc4-26-g88d4b3b6
EVS Port1 66/1/CFE_ES 91: Version Info: Module PSP, version git:draco-rc4
EVS Port1 66/1/CFE_ES 91: Version Info: Module MSG, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module SBR, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module RESOURCEID, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 91: Version Info: Module CONFIG, version git:draco-rc4-14-g7af467ef
EVS Port1 66/1/CFE_ES 92: Build 202304020949 by z@spin7, config sample
EVS Port1 66/1/CFE_TIME 1: cFE TIME Initialized:  cFE DEVELOPMENT BUILD v7.0.0-rc4+dev260 (Codename: Draco), Last Official Release: cfe v6.7.0
EVS Port1 66/1/CFE_TBL 1: cFE TBL Initialized:  cFE DEVELOPMENT BUILD v7.0.0-rc4+dev260 (Codename: Draco), Last Official Release: cfe v6.7.0
OS_FileOpen_Impl():110:open(/dev/shm/osal:RAM/cfe_es_startup.scr): No such file or directory
1980-012-14:03:44.21340 CFE_ES_CreateObjects: Finished ES CreateObject table entries.
1980-012-14:03:44.21342 CFE_ES_Main: CFE_ES_Main entering CORE_READY state
1980-012-14:03:44.21352 CFE_ES_StartApplications: Cannot Open Volatile Startup file: /ram/cfe_es_startup.scr, Trying Nonvolatile.
1980-012-14:03:44.21354 CFE_ES_StartApplications: Opened ES App Startup file: /cf/cfe_es_startup.scr
1980-012-14:03:44.21395 CFE_ES_ParseFileEntry: Loading shared library: /cf/cfe_assert.so
1980-012-14:03:44.21431 [BEGIN] CFE FUNCTIONAL TEST
1980-012-14:03:44.21433 [BEGIN] 01 CFE-STARTUP
1980-012-14:03:44.21471 CFE_ES_ParseFileEntry: Loading shared library: /cf/sample_lib.so
SAMPLE Lib Initialized. Sample Lib DEVELOPMENT BUILD v1.3.0-rc4+dev32, Last Official Release: v1.1.0
1980-012-14:03:44.21580 CFE_ES_ParseFileEntry: Loading file: /cf/sample_app.so, APP: SAMPLE_APP
1980-012-14:03:44.21662 CFE_ES_ParseFileEntry: Loading file: /cf/ci_lab.so, APP: CI_LAB_APP
1980-012-14:03:44.21729 CFE_ES_ParseFileEntry: Loading file: /cf/to_lab.so, APP: TO_LAB_APP
1980-012-14:03:44.21799 CFE_ES_ParseFileEntry: Loading file: /cf/sch_lab.so, APP: SCH_LAB_APP
EVS Port1 66/1/SAMPLE_APP 1: SAMPLE App Initialized. Sample App DEVELOPMENT BUILD v1.3.0-rc4+dev35, Last Official Release: v1.1.0
1980-012-14:03:44.26727 CI_LAB listening on UDP port: 1234
EVS Port1 66/1/CI_LAB_APP 3: CI Lab Initialized. CI Lab App DEVELOPMENT BUILD v2.5.0-rc4+dev39, Last Official Release: v2.3.0
EVS Port1 66/1/TO_LAB_APP 1: TO Lab Initialized. TO Lab DEVELOPMENT BUILD v2.5.0-rc4+dev35, Last Official Release: v2.3.0, Awaiting enable command.
SCH Lab Initialized. SCH Lab DEVELOPMENT BUILD v2.5.0-rc4+dev45, Last Official Release: v2.3.0
1980-012-14:03:44.31854 CFE_ES_Main: CFE_ES_Main entering APPS_INIT state
1980-012-14:03:44.31859 CFE_ES_Main: CFE_ES_Main entering OPERATIONAL state
EVS Port1 66/1/CFE_TIME 21: Stop FLYWHEEL
1980-012-14:04:07.25408 CFE_ES_RunExceptionScan: ExceptionID 0x1110001 in TaskID 0: Caught SIGINT
1980-012-14:04:07.25411 CFE_ES_RunExceptionScan: Processor Reset count not reached (1/2)
CFE_PSP: Exiting cFE with PROCESSOR Reset status.

CFE_PSP: Shutdown initiated - Exiting cFE
CI delete callback -- Closing CI Network socket.
TO delete callback -- Closing TO Network socket.
OS_BSP_Initialize():Maximum user msg queue depth = 10
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 66
CFE_PSP: Default CPU Name: cpu1
CFE_PSP: initializing module 'soft_timebase' with ID 0110ff00
CFE_PSP: Instantiated software timebase 'cFS-Master' running at 10000 usec
CFE_PSP: initializing module 'timebase_posix_clock' with ID 0110ff01
CFE_PSP: Using POSIX monotonic clock as CFE timebase
CFE_PSP: initializing module 'eeprom_mmap_file' with ID 0110ff02
CFE_PSP: Using MMAP simulated EEPROM implementation
CFE_PSP: initializing module 'ram_notimpl' with ID 0110ff03
CFE_PSP: Physical RAM access not implemented
CFE_PSP: initializing module 'port_notimpl' with ID 0110ff04
CFE_PSP: I/O Port access not implemented
1980
```",,https://github.com/nasa/cFS/issues/665
IC: Caelum-rc4+dev44,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev260
    
**Includes:**

*cFE*
- nasa/cFE#2259
- nasa/cFE#2263

Co-authored by: Joseph Hickey <jphickey@users.noreply.github.com>

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/664/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/664
"Revisit ""format-check"" workflow - is it needed?","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The cFS CCB should revisit the cost/benefit of enforcing the ""format-check"" workflow on every push/pull.  The original idea was that it would keep the white space formatting consistent, but in practice there are a lot of nuisances that result from this:

- Perpetually changing the alignment of variable names (in declarations) and the equal sign (in groups of assignments) causes extra merge conflicts.  This is because a single added variable or assignment might change a group of lines rather than just the single line that added it.  If another change is made in parallel nearby that causes lines to be grouped that were not grouped before, this is now a merge conflict, whereas without the formatting change it would be a trivial auto merge.
- Changes to the tool (outside our control) cause changes to the expected formatting of lines.  For example clang-format-10, which is what the workflow was originally based on, formats slightly differently than clang-format-12 and clang-format-14 do, and there is no way (via config file) to get an identical output from the newer versions.  Clang-format-10 is no longer installable in the most recent ""LTS"" distros - This means that as developer transition to newer dev environments, we will not be able to reproduce the expected formatting easily.
- The ultimate objective is to make source code most readable for humans, but the tool does not know context, and sometimes ""strict adherence"" to a set of rules yields a _less_ readable result than what a human would write.  A prime example is when a table initializer is grouped into logical rows and columns based on its context.

For examples of this, see the ""CFE_TBL_CmdHandlerTbl"" from an old version of CFE, before clang-format enforcement:
https://github.com/nasa/cFE/blob/8811c92094512975e14fd545df355705141560b2/fsw/cfe-core/src/tbl/cfe_tbl_task.c#L66-L85

Compared to the same table in the current version after clang-format messes with the column alignments, start and end braces, etc:
https://github.com/nasa/cFE/blob/98f78e8604c19415fd1e199eae94196a781539b8/modules/tbl/fsw/src/cfe_tbl_task.c#L68-L85

Other examples include the ES object table and any event registration table, where what was originally a logically aligned table became all disorganized.

- Lastly, we have a few instances of what was a perfectly ""compliant"" source (see https://github.com/nasa/FM/actions/runs/4166519343/jobs/7210962821) suddenly starts being non-compliant (see https://github.com/nasa/FM/actions/runs/4450946126/jobs/7817016323)

Note that the file that failed here (fm_child_tests.c) did _NOT_ change between these two runs.  Something else changed, but its the same version of clang-format and the same .clang-format file from what I can tell.

**Expected behavior**
Tools should be a help, not a hinderance.  Keeping up with clang-format nuisance errors might not be the best use of developer time?

**Code snips**
Provided inline

**System observed on:**
Ubuntu, Debian

**Reporter Info**
Joseph Hickey, Vantage Systems, Inc.

",CCB:Ready,https://github.com/nasa/cFS/issues/662
IC: Caelum-rc4+dev43,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev209
cFE v7.0.0-rc4+dev154

**Includes:**

*osal*
- nasa/osal#1375

*cFE*
- nasa/cFE#2256

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/661/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/661
IC: Caelum-rc4+dev42,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

*cFS*
- #657

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/658/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/658
"Fix #656, do not use --force option on sarif conversion","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Removes use of `--force` option, which appears to have been removed in a recent update (4.1.0, dropped on 2023-03-07).

This option was only to overwrite an existing file but that should not be needed in a workflow that runs in a clean environment like this.

**Testing performed**
Run workflows

**Expected behavior changes**
No longer errors on this option.

**System(s) tested on**
Github workflow

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.",CCB:Approved,https://github.com/nasa/cFS/pull/657
"OSAL workflow ""Static Analysis"" fails to convert cppcheck results to SARIF","* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.
* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).

**Describe the bug**
When running the *Static Analysis* workflow on a clone of the OSAL repository, the workflow fails at the step *Convert cppcheck results to SARIF* since about 2023-03-08 evening MET. One day before I successfully executed the same workflow without any error. The error is:

~~~
Run npx ""@microsoft/sarif-multitool"" convert ""cppcheck_err.xml"" --tool ""CppCheck"" --output ""cppcheck_err.sarif"" --force
  npx ""@microsoft/sarif-multitool"" convert ""cppcheck_err.xml"" --tool ""CppCheck"" --output ""cppcheck_err.sarif"" --force
  shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
  env:
    CPPCHECK_OPTS: --project=/home/runner/work/osal/osal/build/compile_commands.json
SARIF Multitool 4.1.0
© Microsoft Corporation. All rights reserved.

ERROR(S):
  Option 'force' is unknown.
[...]
~~~

I am new to Github workflows. Therefore, this could easily be caused by a mistake on my side. Yet, at the first glance the error messages does not look like I am guilty. On the other hand, I cannot imagine someone removed the `--force` option from a tool overnight. Maybe you can hint me towards my mistake.

I am not sure whether the links below will work for you:

* [This was a successful execution of the workflow 2023-03-07 (already with `--force` flag)](https://github.com/frank-kue/osal/actions/runs/4353883132/jobs/7613984260)
* [This is a failure of a re-run from today (2023-03-09)](https://github.com/frank-kue/osal/actions/runs/4353883132/jobs/7655733695)

**To Reproduce**
Steps to reproduce the behavior:

1. Create a clone of the OSAL repository, in the *Actions* tab enable workflows, in the *Settings* tab → open *Actions* (in the left column) → *General* → in *Workflow permissions* → tick *Read write permission* → *Save*
2. In the *Actions* tab, click on the *Static Analysis* workflow, from *Run workflow* select *Branch: main*, then click on *Run workflow*
3. Wait till the new workflow appears in the list and terminates execution (takes about one minute)
4. Click on the workflow entry in the list (the new workflow will have a red bubble in front of it)
5. In the box *Annotations* click on *Run Static Analysis*
6. A black scrolling widget with the workflow steps and their output will appear.
7. Scroll up to the place with the red bubble on the left side, titled *Convert cppcheck results to SARIF*
8. See the above error message just below of it

**Expected behavior**
The *Static Analysis* workflow should execute without errors in the steps which convert the results in other formats. 

**Code snips**
-/-

**System observed on:**
Github, clone of OSAL repository

**Additional context**
-/-

**Reporter Info**
Frank Kühndel – embedded-brains GmbH
",,https://github.com/nasa/cFS/issues/656
IC: Caelum-rc4+dev41,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev205

**Includes:**

*osal*
- nasa/osal#1371
- nasa/osal#1372

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/655/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/655
IC: Caelum-rc4+dev40,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev199
tblCRCTool v1.3.0-rc4+dev28

**Includes:**

*osal*
- nasa/osal#1327

*tblCRCTool*
- nasa/tblCRCTool#77

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/654/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt",,https://github.com/nasa/cFS/pull/654
IC: Caelum-rc4+dev39,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev250
osal v6.0.0-rc4+dev195

**Includes:**

*cFE*
- nasa/cFE#2245

*osal*
- nasa/osal#1369

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/653/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@pepepr08",,https://github.com/nasa/cFS/pull/653
missing PUS lib repo,can anyone let me know where is the repository for cFS PUS application - it used to be in the following location: https://github.com/nasa/cFS/tree/main/apps/pus.,question,https://github.com/nasa/cFS/issues/651
IC: Caelum-rc4+dev38,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev191

**Includes:**

*osal*
- nasa/osal#1352
- nasa/osal#1362

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/649/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/649
cFS Caelum Release,"Currently, the latest Caelum appears to be Release Candidate 4. Are there any plans to wrap up the final release someday?",,https://github.com/nasa/cFS/issues/648
IC: Caelum-rc4+dev37,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev184

**Includes:**

*osal*
- nasa/osal#1355

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/647/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/647
IC: Caelum-rc4+dev36,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev246

**Includes:**

*cFE*
- nasa/cFE#2236

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/646/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@chillfig",,https://github.com/nasa/cFS/pull/646
Update format check workflow to newer clang-format version,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).x
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The format check workflow is currently running on ubuntu 20.04, which in turn includes clang-format version 10 by default.

Versions of clang-format up through 12 have a bug/limitation where the `PointerAlignment` setting is not implemented.  The cFS format config has this set as ""Right"":
https://github.com/nasa/cFS/blob/7f11bdfd1b80a42c1058375f2f992ca63c96e56d/.clang-format#L50

However, in version 13 this was fixed, and it now honors this setting.  As such, if a user has a newer version, they will get format discrepancies when trying to submit a PR.  This is the case when using Ubuntu 22.04 as it includes version 14 by default.   For an example, see any struct that contains a pointer, such as:

`void *             Addr`

now needs to be:

`void              *Addr` 

due to the `PointerAlignment: Right` now taking effect.  Unfortunately, setting `PointerAlignment: Left` does not replicate the version 10 format either, it produces this instead:

`void*              Addr`

Sadly it seems there is no backward-compatible option to replicate the version 10 format with version 14 (or at least none that I could find).   Furthermore, it is not possible to install version 10 in Ubuntu 22.04 either.

**Describe the solution you'd like**
Eventually, we will have to upgrade to a newer version of clang-format, and deal with these discrepancies.  As a transition, version 14 is easily installable on Ubuntu 20.04 via the packages offered from `llvm.org` (official upstream for clang).  

Recommendation would be to change the format-check workflow to run version 14 instead of version 10, and update the code accordingly for all of the whitespace differences it produces similar to the above example.  This can be done by simply bumping the `runs-on` to be ubuntu 22.04 instead of 20.04, and changing nothing else (note that this needs to happen eventually anyway, since `ubuntu-latest` is now 22.04 on github, and 20.04 will be deprecated at some point, although this may be a while yet).

**Describe alternatives you've considered**
In the interim, it is possible to install clang-format version 12 on both Ubuntu 20.04 and 22.04, which seems to produce the same format as v10 did (at least with cFS config file).  But this is not the default version in either, and only defers the issue, because v12 depends on a version of python that is no longer available in 22.10 or newer and thus becomes non-installable in anything newer.  So this does not resolve the incompatibility, it only adds setup complexity while delaying the eventuality of having to deal with the whitespace changes.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.

",,https://github.com/nasa/cFS/issues/645
IC: Caelum-rc4+dev35,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFS-GroundSystem v3.0.0-rc4+dev43

**Includes:**

*cFS-GroundSystem*
- nasa/cFS-GroundSystem#206

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/644/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@HugoValente11",,https://github.com/nasa/cFS/pull/644
cFS Draco Release,"Hello,

We are stating a project based on the cFS framework for my company.

We noticed that the latest official release is CFE 6.7, and since then only ""release candidates"" have been released. The latest is draco-rc3 (for 2022), and we would like to use this version as our baseline to start our development.

The questions are:
- Will draco become an official release later on? If not, is there a plan for the next official release?
- Is there any reasons why since CFE 6.7 only release candidates have been published? All the documentation seems adequate (Requirements, traceabilities, unit tests and code coverage results, release notes) for each cFS core and app components, and draco-rc3 seems fully validated.

We simply wanted to confirm this point before we go ahead in using draco.

Many thanks in advance,

Guillaume",,https://github.com/nasa/cFS/issues/639
IC: Caelum-rc4+dev34,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

psp v1.6.0-rc4+dev167
osal v6.0.0-rc4+dev179

**Includes:**

*psp*
- nasa/psp#374
- nasa/psp#372

*osal*
- nasa/osal#1348
- nasa/osal#1347

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/638/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper",,https://github.com/nasa/cFS/pull/638
Question about Apache-2.0 in space,"Excerpt from the Apache-2.0 license:
... each Contributor hereby grants to You
        a perpetual, worldwide ... copyright license ...
        a perpetual, worldwide ... patent license ...

The copyright and patent grants are restricted: **worldwide**.
A satellite around Earth is arguably not included by that definition.
Or is it? What about software on the Moon or on Mars?

Is Apache-2.0 licensed software legally usable in space?",,https://github.com/nasa/cFS/issues/637
MM: Provide and use symbol name in the Memory Manager dump file,"**Describe the bug**
Found in testing for PACE mission
The memory manager file header has space for the symbol name. This should be populated whenever a symbol is used for a memory dump - otherwise the source of the file data may not be understood. It is also needed if the file is to be used for loading data by symbol.
When the symbol name is present, the data has to be loaded using the address for the symbol plus the offset present in the load file.

**To Reproduce**
1. Issue a MM dump-to-file command using a valid FSW symbol and a non-zero offset
2. Downlink and examine the file. Verify the MM header contains the correct symbol, offset and appropriate data.
3. If the items in (2) are present, issue a MM load file command and verify that the data is correctly reloaded to the specified memory location.

**Expected behavior**
No symbol name will be present in the MM header. 

**Code snips**
The PACE FSW team has corrected this in their build 3.2.3 - so should be able to provide code.

**System observed on:**
PACE DLEON processor
OS: VxWorks 6.9
Versions
cFE 6.6.05
MM 2.4.1

**Additional context**
none

**Reporter Info**
Michael Lambertson Goddard Space Flight Center Code 582 / Vantage Systems, Inc.
","CCB:Ready, Equuleus-rc2",https://github.com/nasa/cFS/issues/635
IC: Caelum-rc4+dev33,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev242
to_lab v2.5.0-rc4+dev35

**Includes:**

*cFE*
- nasa/cFE#2231
- nasa/cFE#2229
- nasa/cFE#2192

*to_lab*
- nasa/to_lab#142

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/634/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@thnkslprpt
@jphickey
@chillfig",,https://github.com/nasa/cFS/pull/634
"Fix #631, Remove README link to empty fs_lib repository","**Checklist**
* [x] I reviewed the [Contributing Guide](https://github.com/nasa/osal/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #631
Removes link to empty fs_lib repository

**Expected behavior changes**
None

**Contributor Info**
Avi Weiss @thnkslprpt",,https://github.com/nasa/cFS/pull/632
Remove link to empty repository (fs_lib),"**Checklist**
* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
fs_lib links to an empty repository - seems to have been empty for a long time according to the web archive.

**Code snips**
![image](https://user-images.githubusercontent.com/9024662/206808422-4534e728-2a03-4de2-8cd9-4bedbc105136.png)
![image](https://user-images.githubusercontent.com/9024662/206808433-6c4d866f-2503-4b23-842c-5a841b9416ab.png)

**Reporter Info**
Avi Weiss @thnkslprpt",,https://github.com/nasa/cFS/issues/631
IC: Caelum-rc4+dev32,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev233

**Includes:**

*cFE*
- nasa/cFE#2226

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/630/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen",,https://github.com/nasa/cFS/pull/630
IC: Caelum-rc4+dev31,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev173
cFE v7.0.0-rc4+dev229

**Includes:**

*cFS*
- #622
- #625
- #626
- #582

*osal*
- nasa/osal#1342
- nasa/osal#1341
- nasa/osal#1321

*cFE*
- nasa/cFE#2215
- nasa/cFE#2219
- nasa/cFE#2217
- nasa/cFE#2222

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/629/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 20.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@jphickey
@thnkslprpt",,https://github.com/nasa/cFS/pull/629
"Fix #624, add compatibility for CFS app doc build","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Explicitly pre-build the ""osal_public_api_headerlist"" target which will fix documenation workflows that have not been updated to include this dependency.

Fixes #624

**Testing performed**
Build documentation

**Expected behavior changes**
CFS app doc builds should now all work again, until they can be updated properly

**System(s) tested on**
Github hosted runner

**Additional context**
This is gated by a boolean to make it easier to run app builds WITHOUT this, in order to test the workflow after putting in the real fix.

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.
",CCB:Approved,https://github.com/nasa/cFS/pull/626
"Fix #623, show stderr output on doc build workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Tee the stderr output to the console, so if the ""Build Documentation"" step fails in this workflow, the errors will be visible in the log.

Without this, the errors are hidden in a file that is never shown nor uploaded so it cannot be seen what went wrong.

Fixes #623

**Testing performed**
Build documentation

**Expected behavior changes**
If an error occurs, the error will be visible in the workflow run log.

**System(s) tested on**
Github hosted runner

**Additional context**
This also makes a minor change to setting the applist to simplify the script and also make it a bit more robust (this does not need to update an existing line, it can just set the value, and thus does not depend on the line already being there to begin with).

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.",CCB:Approved,https://github.com/nasa/cFS/pull/625
Patch documentation build for OSAL API file,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Most CFS app documentation builds now depend on a file produced by the OSAL documentation build, but there is not (yet) a dependency encoded into the CMakeLists.txt file to ensure this gets produced before attempting the doc build.

**Describe the solution you'd like**
The correct solution is to add a dependency for the doc build into CMakeList.txt to each app that does have this dependency.

In the meantime, the failing workflow can be worked around by first forcing build of the OSAL API doxyfile.

**Additional context**
This would be just a short term patch to make the workflows run.  Should be removed once the CFS apps are fixed.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/issues/624
Documentation build does not show errors when it fails,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
When using the workflow in `build-deploy-doc.yml`, if the ""Build Document"" step fails, then the job stops there.  However, the stderr output was redirected to a file, which is not uploaded as an artifact until the next step.  Therefore, it is not possible to see what actually failed by looking at the log, because the information is in a file that is never displayed nor uploaded.

**Describe the solution you'd like**
Show the stderr output on the console so it can be seen even if artifacts are not uploaded.

**Additional context**
Adjusting the redirection should solve this.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/issues/623
"Fix #621, update action versions to v3","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Update cache, checkout, and upload-artifact actions from v2 to v3. Should be a drop-in replacement and removes a warning about node.js 12 deprecation.

Fixes #621

**Testing performed**
Run all github workflows

**Expected behavior changes**
No more warnings about node.js 12 deprecation

**System(s) tested on**
Github hosted runner

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.
",CCB:Approved,https://github.com/nasa/cFS/pull/622
Warning about node.js 12 deprecation in github actions,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Github produces a warning about node.js 12 being obsolete with every workflow run.  It has been fixed upstream, but CFS uses the old version.  This can be fixed by updating the version of the action from v2 to v3.

**To Reproduce**
Run any of the reusable github workflows that use the ""v2"" actions.

**Expected behavior**
Should not use deprecated versions of actions

**System observed on:**
Github hosted runner

**Reporter Info**
Joseph Hickey, Vantage Systems, Inc.

",,https://github.com/nasa/cFS/issues/621
IC: Caelum-rc4+dev30,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev165
cFE v7.0.0-rc4+dev218
sample_lib v1.3.0-rc4+dev32

**Includes:**

*osal*
- nasa/osal#1334

*cFE*
- nasa/cFE#2209
- nasa/cFE#2206
- nasa/cFE#2204
- nasa/cFE#2203

*sample_lib*
- nasa/sample_lib#92

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/620/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 22.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper
@jphickey",,https://github.com/nasa/cFS/pull/620
IC: Caelum-rc4+dev29,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev161

**Includes:**

*cFS*
- #598
- #611

*osal*
- nasa/osal#1335
- nasa/osal#1329
- nasa/osal#1336

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/616/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@dmknutsen
@ArielSAdamsNASA
@chillfig",,https://github.com/nasa/cFS/pull/616
"Add option for ""build-run-app"" reusable workflow to include dependent libraries","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Currently the ""build-run-app"" reusable workflow only checks out the app into the ""apps"" directory.  However, some cFS applications, such as BP, also require inclusion of a support library (e.g. BPLib) in order to build and run.

**Describe the solution you'd like**
Add an additional workflow input to specify additional library dependencies, which can be checked out and included in the build.

**Additional context**
Typically these would only libraries (not other apps).

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.

",enhancement,https://github.com/nasa/cFS/issues/615
Translate Static Analysis workflow error locations into hyperlinks,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
When the Static Analysis workflow fails, it is still somewhat tedious to navigate to the location where the error is and view the code.  

The SARIF results can be navigated, but one must go to the ""security"" tab, and search for the PR by number, to view a list that has links to code.  It is somewhat tedious and there are several clicks.

**Describe the solution you'd like**
Provide more direct linkage between the ""Summary"" screen of the workflow run and the source code.
- Turn the ""location"" column in the table into a hyperlink to the source code (should be easy)
- Provide a direct link to the ""code scanning alerts"" page that is associated with this PR, if the workflow was from a pull request.

Both of these would be time-savers when checking results.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/issues/614
IC: Caelum-rc4+dev28,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cfe v7.0.0-rc4+dev205
osal v6.0.0-rc4+dev151
cFS-GroundSystem v3.0.0-rc4+dev39

**Includes:**

*cFS*
- #608

*cFE*
- nasa/cfe#2197

*osal*
- nasa/osal#1323

*cFS-GroundSystem*
- nasa/cFS-GroundSystem#217
- nasa/cFS-GroundSystem#230

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/613/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@thnkslprpt
@paulober",,https://github.com/nasa/cFS/pull/613
"Fix #610, Disable CodeQL AV Rule 153","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #610 

**Testing performed**
Tested on fork

**Expected behavior changes**
CodeQL will not scan for AV Rule 153

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/611
Disable CodeQL AV Rule 153,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Related to https://github.com/nasa/SC/pull/35
Do not need the rule as unions are used judiciously.

**Describe the solution you'd like**
Remove AV Rule 153

**Describe alternatives you've considered**
Keep as is.

**Requester Info**
Ariel Adams, MCSG Tech
",continuous-integration,https://github.com/nasa/cFS/issues/610
"Fix #607, rework static-analysis workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Updates the static analysis workflow:
 - Make it work with the latest Ubuntu and Cppcheck
 - Allow callers to pass in a project configuration to get ""real"" macro definitions and include paths
 - Streamlined - only generate XML outputs, then use XSLT to convert that to text, rather than running the tool twice.
 - Streamlined - merge the two XML outputs into one, before converting to sarif and uploading
 - Streamlined - Call the sarif conversion tool directly, rather than going through a 3rd party action.

Fixes #607

**Testing performed**
Update OSAL static analysis to point to this updated reusable workflow instead of the current one (nasa/cFS main) and check results.

**Expected behavior changes**
More complete/thorough results, while being a simpler workflow overall

**System(s) tested on**
Github workflow runner (Ubuntu image)

**Additional context**
This uses the updated baseline, and the cppcheck tool reports more errors than the old version did.  So repos that referred to this workflow in the past may have new errors now.

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.
",CCB:Approved,https://github.com/nasa/cFS/pull/608
"Allow users to pass project args to the ""static-analysis"" cppcheck reusable workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The issue observed in nasa/osal#1324 is due to the fact that cppcheck is being executed in each C source file in isolation.  In this case it does not see the definition of `UT_DEFAULT_STUB` and thus does not know how to examine this line.

**Describe the solution you'd like**
cppcheck allows command line options to specify various project-specific preprocessor settings, such as `-D` and `-U` options to specify if a macro is set or unset, respectively, as well as `-I` option(s) indicating where to find include files.

Furthermore, with CMake, the `-DCMAKE_EXPORT_COMPILE_COMMANDS=ON` option causes cmake to export a json file containing the full include path being used, which can then be passed to cppcheck via the `--project` option.  With this, the code will be examined using the configuration that is actually being compiled.

**Describe alternatives you've considered**
1. Skip checking of UT stubs in general (but stubs could have bugs like uninitialized vars and things that cppcheck could flag)
2. Remove use of `UT_DEFAULT_STUB`, as this will not be checkable unless the definition of this macro is also supplied.

**Additional context**
Using `--project` causes cppcheck to be much more thorough in its results.  In particular, it now ""sees"" the `common_types.h` file and the ifdef macros that exist in there, and it will check each macro both ways.  The upside to this is it finds more potential issues, particularly with ifdef branches that aren't regularly used, but the downside is that it significantly increases the runtime of cppcheck as it tests all the permutations.  This may need to be limited if it becomes excessive.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.

",enhancement,https://github.com/nasa/cFS/issues/607
IC: Caelum-rc4+dev27,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cfe v7.0.0-rc4+dev201
osal v6.0.0-rc4+dev147

**Includes:**

*cFS*
- #559
- #594

*cFE*
- nasa/cFE#2183

*osal*
- nasa/osal#1319

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/606/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@havencarlson
@ArielSAdamsNASA",,https://github.com/nasa/cFS/pull/606
How the Space Data Link Security (SDLS) protocol is implemented in cFS?,"Hi,
I am trying to understand the cFS structure. But I am not still clear how the SDLS protocol is implemented in this project. If you can tell me the components or modules or files where this protocol is implemented and how it is enforced that will give me a better idea.",,https://github.com/nasa/cFS/issues/605
"Fix #566, Adds CCB Agenda generation workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fixes #566 

**Testing performed**
Test on fork: https://github.com/chillfig/cFS/actions/runs/3338091197
1) Navigate to ""update wiki"" action (https://github.com/chillfig/cFS/actions/workflows/cfs-wiki.yml)
2) Click ""Run workflow"" drop-down on right-hand side of screen
3) For ""Use workflow from"", select ""ccbAgenda"" branch.
4) Click green button ""Run workflow""
5.) Navigate to ""update wiki"" action and observe newly created ""ccb-agenda"" artifact.

**Expected behavior changes**
User can use this workflow to update the nasa/cFS wiki page with a new CCB agenda markdown file, and other updates to the wiki page's _Sidebar.md and Home.md files. The workflow can be ran any day of the week and appropriately handle correct date stamping. The CCB agenda markdown file generated with this workflow is ordered from top to bottom of authors with pull requests totaling least additions/deletions to most. A user manually runs this workflow from the Actions tab of nasa/cFS.

**System(s) tested on**
Forked cFS wiki: https://github.com/chillfig/cFS/wiki

**Additional context**
N/A

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Justin Figueroa, Vantage Systems
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/598
IC: Caelum-rc4+dev26,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cfe v7.0.0-rc4+dev197
osal v7.0.0-rc4+dev143
psp v1.6.0-rc4+dev61
elf2cfetbl v3.4.0-rc4+dev30
sch_lab v2.5.0-rc4+dev45

**Includes:**

*cFS*
- #589

*cFE*
- nasa/cFE#2165

*osal*
- nasa/osal#1311
- nasa/osal#1310
- nasa/osal#1313
- nasa/osal#1306
- nasa/osal#1309

*psp*
- nasa/PSP#365
- nasa/PSP#368

*sch_lab*
- nasa/sch_lab#126

*elf2cfetbl*
- nasa/elf2cfetbl#119

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/597/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt
@jphickey
@ArielSAdamsNASA",,https://github.com/nasa/cFS/pull/597
"Fix #595, Remove obsolete lgtm config file","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #595

**Testing performed**
CI

**Expected behavior changes**
None

**System(s) tested on**
CI

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Ignore,https://github.com/nasa/cFS/pull/596
Remove obsolete lgtm config file,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
No longer using LGTM, replaced by CodeQL/GitHub scanning.

**Describe the solution you'd like**
Remove obsolete .lgtm.yml file

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",continuous-integration,https://github.com/nasa/cFS/issues/595
"Fix #593, Add Category to Cppcheck Workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #593 

**Testing performed**
Made changes to cFS fork and test on PSP fork. 

![image](https://user-images.githubusercontent.com/69638935/195883362-cbb07b9f-ab3b-4c2d-8152-70c4dbc12281.png)

**Expected behavior changes**
Same behavior. Added category so second SARIF file upload does not fail. 

**Additional context**
Workflow may fail due to ubuntu being out of date. GitHub will now throw brownouts for out of date ubuntu versions. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/594
Static Analysis Failing on Second SARIF Upload,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The cppcheck or static analysis workflow fails when reaching the upload of the second sarif file. This is because if you try to upload multiple SARIF files for the same tool and category in a single GitHub Actions workflow run, the misconfiguration is detected and the run will fail.

**Expected behavior**
Upload two SARIF files in one commit. 

**Additional context**
Documentation: https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/sarif-support-for-code-scanning

To fix this issue, the workflow should use different ids, categories, or tool names. 

**Reporter Info**
Ariel Adams, MCSG Tech
",continuous-integration,https://github.com/nasa/cFS/issues/593
IC: Caelum-rc4+dev25,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev120

**Includes:**

*cFS*
- #567
- #514

*cFE*
- nasa/cfe#2163
- nasa/cfe#2158
- nasa/cfe#2159

*osal*
- nasa/osal#1283
- nasa/osal#1291
- nasa/osal#1298

*sample_app*
- nasa/sample_app#185
- nasa/sample_app#183

*sch_lab*
- nasa/sch_lab#123

*tblCRCTool*
- nasa/tblCRCTool#73

*to_lab*
- nasa/to_lab#127
- nasa/to_lab#126
- nasa/to_lab#129

*ci_lab*
- nasa/ci_lab#123
- nasa/ci_lab#120

*sample_lib*
- nasa/sample_lib#89
- nasa/sample_lib#86

*cFS-GroundSystem*
- nasa/cFS-GroundSystem#224
- nasa/cFS-GroundSystem#225

*elf2cfetbl*
- nasa/elf2cfetbl#117

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/590/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA",,https://github.com/nasa/cFS/pull/590
"Fix #583, Fetch Documentation Archives","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #583 

**Testing performed**
Tested on fork

![image](https://user-images.githubusercontent.com/69638935/194995940-be61ab53-f353-4393-9554-2d9641509b31.png)

Tested locally in Docker.

**Additional context**
The issue is thrown at random times. Thrown here: https://github.com/nasa/cFS/actions/runs/3185348707/jobs/5194900560 but not here: https://github.com/nasa/cFS/actions/runs/3185232492/jobs/5194803479. 

**Expected behavior changes**
Fixes failing cFS Documentation and Guides workflow. It had an issue installing PDF generation dependencies. Same behavior.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/589
IC: Caelum-rc4+dev24,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev120

**Includes:**

- nasa/osal#1301, do not set file permissions on UT assert outputs

**Testing performed**

Bundle Checks <https://github.com/nasa/cFS/pull/587/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@dmknutsen
@jphickey",,https://github.com/nasa/cFS/pull/587
IC: Caelum-rc4+dev23,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

*cFS*
- #580, Addresses invalid CodeQL language option

*cFE*
- nasa/cfe#2145, Fixes issue #2144- Propagate CMAKE_EXPORT_COMPILE_COMMANDS variable
- nasa/cfe#2148, Remove CodeQL Paths Ignore
- nasa/cfe#2151, Duplicated Logic in CFE_SB_BroadcastBufferToRoute
- nasa/cfe#2156, Remove 'return;' from last line of void functions.
- nasa/cfe#2154, Remove unnecessary parentheses around return values.

*osal*
- nasa/osal#1181, Use fstat and fchmod for TOCTOU Bug
- nasa/osal#1294, Remove 'return;' from last line of void functions.
- nasa/osal#1292, Remove unnecessary parentheses around return values.

*sample_app*
- nasa/sample_app#177, Misaligned comments
- nasa/sample_app#179, Remove unnecessary parentheses around return values.
- nasa/sample_app#181, Remove 'return;' from last line of void functions.

*sch_lab*
- nasa/sch_lab#120, Remove unnecessary parentheses around return values.

*tblCRCTool*
- nasa/tblCRCTool#69, Remove unnecessary parentheses around return values.

*ci_lab*
- nasa/ci_lab#116, Remove unnecessary parentheses around return values.
- nasa/ci_lab#118, Remove 'return;' from last line of void functions.

*sample_lib*
- nasa/sample_lib#84, Remove unnecessary parentheses around return values.

*cFS-GroundSystem*
- nasa/cFS-GroundSystem#222, Remove 'return;' from last line of void functions.

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/586/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA
@thnkslprpt
@aliounis",,https://github.com/nasa/cFS/pull/586
Unable to fetch documentation archives,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Resolve Install PDF Generation Dependencies job in build-deploy-doc.yml. The cFS Documentation and Guides workflows are failing due to the job. 

**Expected behavior**
Same behavior.

**Code snips**
```
Ign:1 http://us.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libfreetype6 amd64 2.8.1-2ubuntu2.1
Ign:2 http://us.archive.ubuntu.com/ubuntu bionic-updates/main amd64 tzdata all 2022a-0ubuntu0.18.04
Ign:3 http://us.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libtiff5 amd64 4.0.9-5ubuntu0.5
Ign:4 http://us.archive.ubuntu.com/ubuntu bionic-updates/main amd64 libpoppler73 amd64 0.62.0-2ubuntu2.12
Err:1 http://security.ubuntu.com/ubuntu bionic-updates/main amd64 libfreetype6 amd64 2.8.1-2ubuntu2.1
  404  Not Found [IP: 91.189.91.39 80]
Err:2 http://security.ubuntu.com/ubuntu bionic-updates/main amd64 tzdata all 2022a-0ubuntu0.18.04
  404  Not Found [IP: 91.189.91.39 80]
Err:3 http://security.ubuntu.com/ubuntu bionic-updates/main amd64 libtiff5 amd64 4.0.9-5ubuntu0.5
  404  Not Found [IP: 91.189.91.39 80]
Err:4 http://security.ubuntu.com/ubuntu bionic-updates/main amd64 libpoppler73 amd64 0.62.0-2ubuntu2.12
  404  Not Found [IP: 91.189.91.39 80]
E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/f/freetype/libfreetype6_2.8.1-2ubuntu2.1_amd64.deb  404  Not Found [IP: 91.189.91.39 80]
E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/t/tzdata/tzdata_2022a-0ubuntu0.18.04_all.deb  404  Not Found [IP: 91.189.91.39 80]
E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/t/tiff/libtiff5_4.0.9-5ubuntu0.5_amd64.deb  404  Not Found [IP: 91.189.91.39 80]
E: Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/p/poppler/libpoppler73_0.62.0-2ubuntu2.12_amd64.deb  404  Not Found [IP: 91.189.91.39 80]
E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?
```

**Reporter Info**
Ariel Adams, MCSG Tech
",continuous-integration,https://github.com/nasa/cFS/issues/583
"Fix #581, Broken links in docs","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #581
Corrects a few broken links in the contributing guide.
Also cleaned up a few other links for consistency.

**Testing performed**
Tested the links - working now.

**Expected behavior changes**
Links will work.

**System(s) tested on**
Chrome browser.

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt 
",CCB:Approved,https://github.com/nasa/cFS/pull/582
Broken links in docs,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Just noticed a few broken links when perusing CONTRIBUTING.md and SECURITY.md - seems like some links were broken in the reorganization of the last commit 0e597817b785bbc7fd84c8c08c41b40bc2aedcd1

e.g. https://github.com/nasa/cFS/blob/7281299bf45d089b74f5e8e95c26ebd2ec8b5f62/CONTRIBUTING.md?plain=1#L60

**Expected behavior**
Links (internal + external) should work correctly to improve usability.

**System(s) tested on**
n/a

**Reporter Info**
@thnkslprpt 
",,https://github.com/nasa/cFS/issues/581
"Fix #469, Addresses invalid CodeQL language option","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #469. CodeQL will no longer throw an error regarding valid language input options.

**Testing performed**
None.

**Expected behavior changes**
CodeQL will no longer throw an error regarding valid language input options.

**System(s) tested on**
n/a

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt ",CCB:Approved,https://github.com/nasa/cFS/pull/580
"Fix #469, Addresses invalid CodeQL language option","Fixes #469

**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #469. CodeQL will no longer throw an error regarding valid language input options.

**Testing performed**
None.

**Expected behavior changes**
CodeQL will no longer throw an error regarding valid language input options.

**System(s) tested on**
n/a

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt 
",,https://github.com/nasa/cFS/pull/579
IC: Caelum-rc4+dev22,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

- nasa/cfe#2143, Resolve doxygen 1.8.17 latex make errors

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/578/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper
@paulober
@ArielSAdamsNASA",,https://github.com/nasa/cFS/pull/578
"Fix #575, Resolve CodeQL Paths Ignore Issues","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #575 

**Testing performed**
Tested on ArielSAdams/cFS fork on the test-paths-ignore branch. As seen in the picture, there is no issues thrown for paths ignore.
![image](https://user-images.githubusercontent.com/69638935/190415147-b1e86992-a84d-4acd-a922-e658d3efe184.png)

**Expected behavior changes**
No behavior change.

**Additional context**
Allows cFS and its submodules to be consistent and all ignore documentation files. Currently, only a few repos ignore these files. Repos like cFE needs to remove paths ignore from the CodeQL workflow if approved.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/577
Benchmarking of cFS message queue,"AFAIK, on Linux, [cFS uses POSIX message queue](https://github.com/nasa/osal/blob/88f72d788d33a12e7bf9d9f01c77346438730ffa/src/os/posix/src/os-impl-queues.c#L118) for doing IPC. I'm wondering whether there exist a benchmarking tool for the cFS-flavored message queue.

Thanks!",,https://github.com/nasa/cFS/issues/576
Resolve CodeQL Paths Ignore Issues,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The CodeQL workflow throws issues for using paths ignore in the [codeql-analysis.yml](https://github.com/nasa/cFS/blob/main/.github/workflows/codeql-analysis.yml) file.

**Describe the solution you'd like**
Use zbazztian/filter-sarif@master in the codeql-reusable.yml file to avoid these issues. I tested this on fork and it does not throw issues. 

**Describe alternatives you've considered**
Keep as is to allow each submodule to specify which files to ignore. If we want to keep the files to ignore consistent for each submodule/repo, then filter-sarif should be used to reduce redundancy. 

**Additional context**
Files that are ignored in cFS and cFE: 
    - '**/*.md'
    - '**/*.txt'
    - '**/*.dox'

Submodules like osal, psp, and sc do not ignore any files. 

**Requester Info**
Ariel Adams, MCSG Tech
",continuous-integration,https://github.com/nasa/cFS/issues/575
"Fix #572, Update CodeQL Upload Sarif To V2","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #572 

**Testing performed**
None

**Expected behavior changes**
No warning outputted for CodeQL being outdated in the workflow

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/574
Propagate CMAKE_EXPORT_COMPILE_COMMANDS setting to subprocess in mission_build.cmake,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [X] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
When building cFE alongside of other apps the setting for the CMake variable ``CMAKE_EXPORT_COMPILE_COMMANDS`` only applies to the efl2cfetbl target due to the architecture of the CMake build system for cFS.  This makes it difficult for many development tools (like visual studio code) to properly understand the full cFE environment without putting in significant manual effort to specify the include paths and other compiler settings, thing which are usually captured in the compilation database built when ``CMAKE_EXPORT_COMPILE_COMMANDS`` is set to ``ON`` 

**Describe the solution you'd like**
Ultimately this comes down to the subprocess call in mission_build.cmake (around line 438 in the current main branch) where the setting for ``CMAKE_EXPORT_COMPILE_COMMANDS`` is not propagated to the subprocess.  The fix is as simple as adding this line 

    -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=${CMAKE_EXPORT_COMPILE_COMMANDS}

somewhere between ``${CMAKE_COMMAND}`` and ``${SELECTED_TOOLCHAIN_FILE}``.

**Describe alternatives you've considered**
This is the simplelest and least disruptive to the existing build process.  Alternatives would be to use ExternalProject or add_custom_command/add_custom_target which would probably play nicer than the execute_process, but they would also need to pass the same flag in this manor.

**Additional context**
N/A

**Requester Info**
Andrew Liounis, NASA/GSFC",,https://github.com/nasa/cFS/issues/573
Update CodeQL Upload Sarif to V2,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [X] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Still getting warnings in CodeQL workflow that CodeQL Action v1 will be deprecated on December 7th, 2022. Need to update github/codeql-action/upload-sarif to version 2. 

**Describe the solution you'd like**
Update upload sarif to version 2. 

**Describe alternatives you've considered**
Keep as is.

**Additional context**
None.

**Requester Info**
Ariel Adams, MCSG Tech
",continuous-integration,https://github.com/nasa/cFS/issues/572
IC: Caelum-rc4+dev21,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

- nasa/osal#1278, condition variable API for OSAL

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/568/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/568
"Fix #565, Remove LGTM From Documents","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #565 

**Testing performed**
N/A

**Expected behavior changes**
No impact to behavior. Removes mention of LGTM in documentation. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Tech
",CCB:Approved,https://github.com/nasa/cFS/pull/567
Automate generation of CCB Agenda,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Reduce time spent on manually creating CCB Agenda. 

**Describe the solution you'd like**
Create a new workflow that uses the workflow_dispatch event. The workflow should identify PRs and their issues that have the label CCB Ready. The document should list the author, PR title, link to PR, and the PR linked issue title. This file should be uploaded to the Wiki. 

**Describe alternatives you've considered**
Keep as is. 

**Additional context**
Will most likely need to create new action.
Possible actions that may be used: 
1. https://github.com/marketplace/actions/list-pull-requests
- Outputs PR title and link based on label. Doesn't work across multiple repos. 
2. https://github.com/budziq/pulls_since
- Outputs PR author, PR title, and link. Works for any repo/multiple repos. Doesn't pull based on labels. 
3. https://github.com/sshaw/export-pull-requests
- Outputs PR author, PR title, PR link, and issue based on label. Creates CSV file. Needs to convert to a markdown file for Wiki repo. 

Github repo wiki is actually a repo with named reponame.wiki. 

**Requester Info**
Ariel Adams, MCSG Tech. 
",continuous-integration,https://github.com/nasa/cFS/issues/566
Remove LGTM from documents,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
LGTM is no longer used as a testing method for cFS. 

**Describe the solution you'd like**
Remove the mention of LGTM in documents such as SECURITY.md and README.md. 

**Describe alternatives you've considered**
Keep as is. 

**Additional context**
LGTM will be shut down in December of 2022.

**Requester Info**
Ariel Adams, MCSG Tech.
",,https://github.com/nasa/cFS/issues/565
Register the CF configuration table as dump-only,"**Describe the bug**
This is based on testing for the PACE mission.
In cf_app.c function CF_CheckForTblRequests blocks attempts to do updates to the configuration table. However, the configuration table is registered as CFE_TBL_OPT_LOAD_DUMP in CF_TableInit. An operator can execute load, validate and activate cmds as normally expected for a loadable table, but the activation request results in a load attempt that must be aborted.
Seems it would make more sense to register it as CFE_TBL_OPT_DUMP_ONLY
Aside from blocking the update attempt, this CF_CheckForTblRequests function appears to be in place in case ""gnd may be trying to get the checksum of the table"" - then it executes the table validation function.
But the table checksum can be obtained by using the tbl.tlm_reg command.

**To Reproduce**
Steps to reproduce the behavior:
1. Dump the CF configuration table to ram
2. Load, validate and activate the table using the dumped file.
3. You should see these messages at the end:
INFO  DLEON  CFE_TBL   36: CF validation successful for Inactive 'CF.ConfigTable'
ERROR DLEON  CF       151: CF Config Tbl cannot be updated! Load attempt must be aborted!

**Expected behavior**
Since the CF configuration table shows up in the table registry as ""FALSE"" for the DUMP ONLY flag, I expected it could be loaded.

**Code snips**
In cf_app.c,
 function CF_TableInit
    /* Register The CF Config Table */
    Status = CFE_TBL_Register (&CF_AppData.ConfigTableHandle,
                                CF_CONFIG_TABLE_NAME,
                                sizeof (cf_config_table_t) ,
                                CFE_TBL_OPT_SNGL_BUFFER | CFE_TBL_OPT_LOAD_DUMP,
                                CF_ValidateCFConfigTable);
 function CF_CheckForTblRequests
    /* if gnd is trying to do a tbl load  */
    else if (Status == CFE_TBL_INFO_UPDATE_PENDING)
    {
        CFE_EVS_SendEvent(CF_TBL_LD_ATTEMPT_EID, CFE_EVS_ERROR,
           ""CF Config Tbl cannot be updated! Load attempt must be aborted!"");
    }

**System observed on:**
 - PACE DLEON processor
 - OS: VxWorks 6.9
 - Versions 
 - - cFE 6.6.05
 - - CF 2.2.1.4

**Additional context**
None

**Reporter Info**
Michael Lambertson Goddard Space Flight Center Code 582 / Vantage Systems, Inc.
","CCB:Ready, Equuleus-rc2",https://github.com/nasa/cFS/issues/564
IC: Caelum-rc4+dev20,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

- #561, Remove Rules in CodeQL Coding Standard

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/562/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA",,https://github.com/nasa/cFS/pull/562
"Fix #560, Remove Rules in CodeQL Coding Standard","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #560. Removes JPL rules 14, 15, 17, and 24. 

**Testing performed**
Tested on fork

**Expected behavior changes**
CodeQL workflow should no longer fail. Results for the coding standard job will be uploaded. 

**Additional context**
On the forked repo, when testing, there were 4484 results for cFS. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, MCSG Technologies
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/561
Remove rules in CodeQL coding standard,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The CodeQL (coding standard) workflow fails because there are too many results to be uploaded. 

**Describe the solution you'd like**
Remove the rules that produce the most results until we resolve or dismiss the other results. 

**Describe alternatives you've considered**
If we want to show results for all coding standard rules, then we will need multiple matrixes. There can be one for all MISRA rules and JPL rules except 14, 17, and 24. JPL rules 14, 17, and 24 would have their own job/matrix. 

**Additional context**
JPL rules 14, 17, and 24 each have over 5,000 results which is the most results allowed to be displayed in the code scanning alerts page. It seems like the most results allowed to be uploaded is 25,000. Without rules 14, 17, and 24, the results are uploaded, however, 2,394 rules are ignored (https://github.com/ArielSAdams/cFS/security/code-scanning?page=200&query=is%3Aopen+branch%3ANew-CodeQL-Config). Therefore, JPL 15 (2,920 results) would also need to be ignored or have its own matrix to view all the results. JPL 14, 17, and 24, when combined, exceed that 25,000 limit (https://github.com/ArielSAdams/cFS/actions/runs/2878107188). 

**Requester Info**
Ariel Adams, MCSG Technologies 
",continuous-integration,https://github.com/nasa/cFS/issues/560
"Fix #554, Updated ubuntu version in CI workflows","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #554, update OS versions in github workflows

**Testing performed**
Check workflow results after pushing

**Expected behavior changes**
 no impact to behavior

**System(s) tested on**
Browser

**Contributor Info - All information REQUIRED for consideration of pull request**
Haven Carlson - NASA
","CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/559
Update OS versions in CI workflows,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Update OS versions from Ubuntu 18.04 to Ubuntu 22.04

**Reporter Info**
Haven Carlson - NASA",,https://github.com/nasa/cFS/issues/554
IC: Caelum-rc4+dev19,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev167

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/553/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper",,https://github.com/nasa/cFS/pull/553
"Fix #550, allow for nasa#550 rather than #550 in title.","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
gitlab changes messages from Fix #550 to Fix nasa#550, this relaxes the commit message check.

**Testing performed**
Steps taken to test the contribution:
1. Build steps '...'
1. Execution steps '...'

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLAs apply to only software contributions.
",invalid,https://github.com/nasa/cFS/pull/551
Consider adding a git hook to check for invalid commit messages,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
See title, on pull requests the commit message is reworded form #zzz to nasa#zzzz



**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

**Expected behavior**
A clear and concise description of what you expected to happen.

**Code snips**
If applicable, add references to the software.

**System observed on:**
 - Hardware
 - OS: [e.g. Linux 4.4]
 - Versions [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps]

**Additional context**
Add any other context about the problem here.

**Reporter Info**
Full name and company/organization if applicable
",,https://github.com/nasa/cFS/issues/550
IC: Caelum-rc4+dev18,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Includes:**

- #547, adds lcov to archived results

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/549/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@chillfig",,https://github.com/nasa/cFS/pull/549
"Fix #511, adds lcov to archived results","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fixes #511

**Testing performed**
Tested on forked nasa/CS commit using the github workflow changes from this pull request: https://github.com/chillfig/CS/actions/runs/2870659607

**Expected behavior changes**
The code coverage report (index.html) is accessible from the github workflow call.

**System(s) tested on**
 - Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Justin Figueroa, ASRC Federal
",CCB:Approved,https://github.com/nasa/cFS/pull/547
IC: Caelum-rc4+dev17,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cFE v7.0.0-rc4+dev163

**Includes:**

- nasa/cFE#2132, Increase event burst credit to not squelch at startup in CI
- nasa/cFE#2134, Grammatical/format updates to EVS flooding requirements

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/542/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper ",,https://github.com/nasa/cFS/pull/542
IC: Caelum-rc4+dev16,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

psp v1.6.0-rc4+dev47

**Includes:**

- nasa/psp#354, correct PSP module IDs and lookups

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/541/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/541
IC: Caelum-rc4+dev15,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cfe v7.0.0-rc4+dev157
osal v6.0.0-rc4+dev103

*Includes*
- nasa/cFE#2129, use correct loop var in add_cfe_app_dependency
- nasa/cFE#2117, Automatic suppression of flooding events
- nasa/cFE#2126, Remove stray TODO in UT
- nasa/osal#1274, Remove stray terminators
- nasa/osal#1276, Add RTEMS timebase callback wrapper

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/536/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey
@skliper
@pepepr08",,https://github.com/nasa/cFS/pull/536
IC: Caelum-rc4+dev14,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

osal v6.0.0-rc4+dev97

*Includes*
- #531, Default CI to bash to apply pipefail
- nasa/osal#1272, Ensure address alignment of TCB for VxWorks 7

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/532/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper",,https://github.com/nasa/cFS/pull/532
"Fix #530, Default CI to bash to apply pipefail","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #530

Without the bash pipefail option return codes can get masked
missing failures.  Specifically seen in the unit test reusable
workflow where ctest returns were masked.  By forcing
the default shell as bash, GitHub applies the pipefail option.

**Testing performed**
CI

Also tested from cf with https://github.com/skliper/CF/runs/7543285379?check_suite_focus=true (pointing to this branch) to confirm the failed ctest causes the CI to fail.

**Expected behavior changes**
Any failure in a pipeline will fail the CI step

**System(s) tested on**
CI

**Additional context**
Originally seen in CF

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Approved,https://github.com/nasa/cFS/pull/531
Unit test CI not failing when tests fail,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/CF/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [CF README.md file](https://github.com/nasa/CF/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
https://github.com/nasa/CF/runs/7455025036?check_suite_focus=true

The test failed but the unit test CI reported as passed.

**Describe the solution you'd like**
Failed test needs to fail CI

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC",continuous-integration,https://github.com/nasa/cFS/issues/530
IC: Caelum-rc4+dev13,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines:*

cfe v7.0.0-rc4+dev145
psp v1.6.0-rc4+dev43

*Remove Commented Out Code*
- nasa/cfe#2122, remove commented out code
- nasa/psp#351, remove commented out code

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/525/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey ",,https://github.com/nasa/cFS/pull/525
cFS Bundle Integration candidate: Caelum-rc4+dev12,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Combines:**

osal v6.0.0-rc4+dev93
ci_lab v2.5.0-rc4+dev22
to_lab v2.5.0-rc4+dev24
sch_lab v2.5.0-rc4+dev31


*Includes:*

- https://github.com/nasa/osal/pull/1265, Set OSAL Loader unit test number of modules to OSAL_CONFIG_MAX_MODULES

*Update Minimum CMake Version*
- https://github.com/nasa/osal/pull/1267, Update minimum required cmake version
- https://github.com/nasa/ci_lab/pull/113, update cmake_minimum_required
- https://github.com/nasa/sch_lab/issues/117, update cmake_minimum_required
- https://github.com/nasa/to_lab/issues/123, update cmake_minimum_required

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/523/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
 @skliper
@ArielSAdamsNASA 
@jphickey 
@dzbaker ",,https://github.com/nasa/cFS/pull/523
"Fix #520, remove cmake_minimum_required in tools","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
The tools CMakeLists.txt file just adds the subdirectories, it has no logic.
The old version being referenced here triggers a deprecation warning, so just remove it.

Fixes #520

**Testing performed**
Build using cmake 3.20

**Expected behavior changes**
No deprecation warning

**System(s) tested on**
RHEL 8

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.",CCB:Approved,https://github.com/nasa/cFS/pull/521
"Remove unneeded ""cmake_minimum_required"" in tools dir","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The `cmake_minimum_required` command currently lists a very old version.  In fact some of the CFE/CFS build scripts assume at least version 3.5 to support things like target-specific includes and flags.

Notably, when using a recent version of cmake (e.g. 3.20) this generates a warning that says:

```
CMake Deprecation Warning at /home/jphickey/code/cfecfs/dtn/tools/CMakeLists.txt:2 (cmake_minimum_required):
  Compatibility with CMake < 2.8.12 will be removed from a future version of
  CMake.

  Update the VERSION argument <min> value or use a ...<max> suffix to tell
  CMake that the project does not need compatibility with older versions.

```

**Describe the solution you'd like**
Remove this line here, it is not needed

**Additional context**
There is no need to specify a minimum version for this, it only adds the subdirectories which each have their own minimum (if specified).  Otherwise it inherits the parent build minimum, which is fine.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.

",,https://github.com/nasa/cFS/issues/520
"Fix #513, Remove TravisCI Config File","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #513 

**Testing performed**
N/A

**Expected behavior changes**
TravisCI will no longer be triggered or used. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/519
"Fix #515, Upgrade CodeQL Action to V2","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #515 

**Testing performed**
Tested on fork: https://github.com/ArielSAdams/cFS/actions/runs/2570711218

**Expected behavior changes**
No expected behavior changes. Avoids using deprecated action and brownouts: https://github.blog/changelog/2022-04-27-code-scanning-deprecation-of-codeql-action-v1/

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/518
Referer to nasa/cFE#2112,"* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

-> Referer to nasa/cFS#537
",invalid,https://github.com/nasa/cFS/issues/517
"Fix #537, commit and format check doesn't execute when PR title format fails","Fixes nasa/cFS#537 with continue-on-error solution.

**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
A clear and concise description of what the contribution is.
- Fixes nasa/cFS#537

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - The action continues even if title format check failes

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Personal
",CCB:Approved,https://github.com/nasa/cFS/pull/516
Upgrade CodeQL Action to V2,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**

The current CodeQL workflow will be deprecated by the end of 2022

>codeql / Analysis (coding-standard)
CodeQL Action v1 will be deprecated on December 7th, 2022. Please upgrade to v2. For more information, see https://github.blog/changelog/2022-04-27-code-scanning-deprecation-of-codeql-action-v1/


**Describe the solution you'd like**
Upgrade CodeQL workflow to use V2 of CodeQL action

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA
",continuous-integration,https://github.com/nasa/cFS/issues/515
"Fix #416, Display cppcheck in Code Scanning Alerts Dashboard","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #416 

**Testing performed**
Tested on fork - Static analysis: https://github.com/ArielSAdams/cFS/runs/6990609543?check_suite_focus=true
Tested on fork - Static analysis misra: https://github.com/ArielSAdams/cFS/runs/6990964130?check_suite_focus=true

**Expected behavior changes**
Users can view results from cppcheck in the code scanning alerts. 

Removed cat command that displays errors. Output of cppcheck file is now .xml instead of .txt to be able to convert to .sarif. 

Example of cppcheck in code scanning alerts:
![image](https://user-images.githubusercontent.com/69638935/174874772-8d081830-515d-475e-a2e2-3e28ee9d2104.png)

**Additional context**
Number of alerts are not provided. Created a forum to investigate this: https://github.community/t/cannot-view-number-of-code-scanning-alerts/257644. Not sure if this is due to the repository being a forked repo. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/514
Remove TracisCI config file,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The file is no longer maintained but its presence in the repository still triggers TravisCI runs. As we continue to upgrade our CI pipelines this outdated file might result in misleading results. 

**Describe the solution you'd like**
Remove the .travis.yml file

**Describe alternatives you've considered**
None

**Additional context**
All of the Travis CI functionality has been migrated to Github Actions. Config files are stored in .github/workflows. 

**Requester Info**
Gerardo E. Cruz-Ortiz | NASA
",continuous-integration,https://github.com/nasa/cFS/issues/513
"Fix #509, Rename Tool for CodeQL Results","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #509 

**Testing performed**
Tested on fork here: https://github.com/ArielSAdams/cFS/actions/runs/2509680609

Tested renaming SARIF file here: https://github.com/ArielSAdams/cFS/actions/runs/2510376525

**Expected behavior changes**
Users can filter between coding standard results and security results for CodeQL by Tool in code scanning alerts. 

The CodeQL sarif file, by default, is named cpp.sarif. The default file is renamed to Codeql-${{ matrix.scan-type }}.sarif so when users download the artifacts from cppcheck and CodeQL, they are not confusing one for the other. 

![image](https://user-images.githubusercontent.com/69638935/174808597-40f155a9-c1eb-40b8-b71e-73482b27c64f.png)

Downside is that the number of alerts are not shown. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/512
Add lcov to archive results in unit-test-coverage.yml,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The lcov - code coverage report - coverage_total.info is missing from the archived results. Add coverage_total.info to https://github.com/nasa/cFS/blob/561b1284d73356c920940af8ef8d077de8024f08/.github/workflows/unit-test-coverage.yml#L111-L119

**Describe the solution you'd like**
The lcov - code coverage report (index.html) is accessible from each github workflow call.

**Describe alternatives you've considered**
Opening the lcov - code coverage report  (the index.html file ) over ssh (https://unix.stackexchange.com/questions/159622/open-file-over-ssh-in-local-x-window).

**Requester Info**
Justin Figueroa, ASRC Federal
","good first issue, continuous-integration",https://github.com/nasa/cFS/issues/511
Rename Tool for CodeQL Results,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
There is not a way to differentiate the coding standard results between the security results for CodeQL in the code scanning results. The two configuration file results are combined together in the code scanning results. 

**Describe the solution you'd like**
Edit the tool name in the coding standard and security sarif files. This will allow users to select to view either the coding standard CodeQL results or the security CodeQL results. 

**Describe alternatives you've considered**
None.

**Additional context**
Is possible and tested: https://github.com/ArielSAdams/cFS/blob/Test2/.github/workflows/codeql-reusable.yml

**Requester Info**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/issues/509
issues:questions cFS Cannot Find Unit-Test Excecutables ,"When attempting to run unit-tests on a cFS project with 1 custom application modeled closely after the Sample_App template the output of running ""make test"" fails as it cannot find the test executable's. It would be great to know if the steps I am following below are insufficient to properly run the unit tests, or if the error in my log files below indicates another issue? 

**To Reproduce**
Steps to reproduce the behavior:
1. make distclean
2. make SIMULATION=native ENABLE_UNIT_TESTS=true prep
3. make
4. make test

**Expected behavior**
All unit-tests pass.

**System observed on:**
 - OS: VMware Ubuntu 22.04
 - Versions: cFS v6.7.0a

**Output of Command**
The actual output I receive is the following for every possible test:

lcov --capture --initial --directory build/native --output-file build/native/coverage_base.info
Capturing coverage data from build/native
Subroutine read_intermediate_text redefined at /usr/bin/geninfo line 2623.
Subroutine read_intermediate_json redefined at /usr/bin/geninfo line 2655.
Subroutine intermediate_text_to_info redefined at /usr/bin/geninfo line 2703.
Subroutine intermediate_json_to_info redefined at /usr/bin/geninfo line 2792.
Subroutine get_output_fd redefined at /usr/bin/geninfo line 2872.
Subroutine print_gcov_warnings redefined at /usr/bin/geninfo line 2900.
Subroutine process_intermediate redefined at /usr/bin/geninfo line 2930.
Found gcov version: 11.2.0
Using intermediate gcov format
Scanning build/native for .gcno files ...
geninfo: WARNING: no .gcno files found in build/native - skipping!
Finished .info-file creation
(cd build/native && ctest -O ctest.log)
Test project /home/daniel/fp_cfs_vrcs/build/native
      Start  1: bin-sem-flush-test
Could not find executable bin-sem-flush-test
Looked in the following places:
bin-sem-flush-test
bin-sem-flush-test
Release/bin-sem-flush-test
Release/bin-sem-flush-test
Debug/bin-sem-flush-test
Debug/bin-sem-flush-test
MinSizeRel/bin-sem-flush-test
MinSizeRel/bin-sem-flush-test
RelWithDebInfo/bin-sem-flush-test
RelWithDebInfo/bin-sem-flush-test
Deployment/bin-sem-flush-test
Deployment/bin-sem-flush-test
Development/bin-sem-flush-test
Development/bin-sem-flush-test
Unable to find executable: bin-sem-flush-test
 1/24 Test  #1: bin-sem-flush-test ...............***Not Run   0.00 sec
      Start  2: bin-sem-test

**Then at the end of 24 messages like this, I receive this message:**

0% tests passed, 24 tests failed out of 24

Total Test time (real) =   0.12 sec

The following tests FAILED:
          1 - bin-sem-flush-test (Not Run)
          2 - bin-sem-test (Not Run)
          3 - bin-sem-timeout-test (Not Run)
          4 - count-sem-test (Not Run)
          5 - file-api-test (Not Run)
          6 - mutex-test (Not Run)
          7 - osal-core-test (Not Run)
          8 - queue-timeout-test (Not Run)
          9 - sem-speed-test (Not Run)
         10 - symbol-api-test (Not Run)
         11 - timer-test (Not Run)
         12 - osal_core_UT (Not Run)
         13 - osal_loader_UT (Not Run)
         14 - osal_filesys_UT (Not Run)
         15 - osal_file_UT (Not Run)
         16 - osal_network_UT (Not Run)
         17 - osal_timer_UT (Not Run)
         18 - my_app-my_app (Not Run)
         19 - cfe_core_default_cpu1_es_UT (Not Run)
         20 - cfe_core_default_cpu1_sb_UT (Not Run)
         21 - cfe_core_default_cpu1_evs_UT (Not Run)
         22 - cfe_core_default_cpu1_tbl_UT (Not Run)
         23 - cfe_core_default_cpu1_time_UT (Not Run)
         24 - cfe_core_default_cpu1_fs_UT (Not Run)
Errors while running CTest
Output from these tests are in: /home/daniel/fp_cfs_vrcs/build/native/Testing/Temporary/LastTest.log
Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.
make: *** [Makefile:132: test] Error 8 ",question,https://github.com/nasa/cFS/issues/508
cFS Bundle Integration candidate: Caelum-rc4+dev11,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Combines:**

cFE  v7.0.0-rc4+dev143
osal osal v6.0.0-rc4+dev87
psp v1.6.0-rc4+dev

ci_lab v2.5.0-rc4+dev22
to_lab v2.5.0-rc4+dev21
sample_app v1.3.0-rc4+dev21

*Includes:*

- https://github.com/nasa/cFE/pull/2119, Endian macro mask before shift to avoid shift overflow warning
- https://github.com/nasa/cFE/pull/2115, Add macro for initializing command header

*Add StatusToString API*
- https://github.com/nasa/osal/pull/1259, Add OS_StatusToString API
- https://github.com/nasa/PSP/pull/347, Add CFE_PSP_StatusToString and CFE_PSP_STATUS_C
- https://github.com/nasa/cFE/pull/2113, Add CFE_ES_StatusToString and CFE_STATUS_C

*Remove registration of empty EVS filters*
- https://github.com/nasa/ci_lab/pull/111, Remove registration of empty EVS filters
- https://github.com/nasa/to_lab/pull/122, Remove registration of empty EVS filters
- https://github.com/nasa/sample_app/pull/175, Remove registration of empty event filters

**Testing performed**
Bundle Checks <https://github.com/nasa/cFS/pull/505/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04
RTEMS 4.11, RTEMS 5

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
 @skliper",,https://github.com/nasa/cFS/pull/505
Use custom container for workflows,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [ ] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The documentation workflow and a couple of others keep failing sporadically due to dependency install failures. 

**Describe the solution you'd like**
A custom cFS-dependencies container that has the following toolkit
- cmake
- gcc
- gcov 
- lcov
- doxygen
- latex
- graphviz
- etc.

This will help with both dependency management and maybe even speed up some of our builds that install dependencies with every run.

Another benefit is that we can encourage the community to use these containers as their development environment. 

**Describe alternatives you've considered**

Use a standard doxygen container image for the documentation workflow

**Additional context**
None 

**Requester Info**
Gerardo E. Cruz-Ortiz | NASA
","enhancement, continuous-integration",https://github.com/nasa/cFS/issues/502
"Fix #487, force remove old submodule directory in CodeQL workflow","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #487, Force remove old submodule directory in CodeQL workflow

**Testing performed**
Steps taken to test the contribution:
1. Update codeql-build.yml in another repo to use this workflow
2. Push changes to the repo
3. Verify codeql workflow ran

**Expected behavior changes**
no impact to behavior

**System(s) tested on**
Browser

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLAs apply to only software contributions.
","CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/501
Update CLA Information,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [ ] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Have new CLAs given the change in https://github.com/nasa/cFS/pull/491 with the combined CLA, 

**Describe the solution you'd like**

- [ ] Update the instructions in each app's Contributing.md
- [ ] Delete old CLA pdfs
- [ ] Update PR and Issue templates as needed


**Describe alternatives you've considered**

None

**Additional context**
None


**Requester Info**
Gerardo E. Cruz-Ortiz
",invalid,https://github.com/nasa/cFS/issues/497
Update CLA Information,,duplicate,https://github.com/nasa/cFS/issues/496
Update CLA information in Apache 2.0 cFS App repositories,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Have new CLAs given the change in https://github.com/nasa/cFS/pull/491 with the combined CLA, 

**Describe the solution you'd like**

- [ ] Update the instructions in each app's Contributing.md
- [ ] Delete old CLA pdfs
- [ ] Update PR and Issue templates as needed


**Describe alternatives you've considered**

None

**Additional context**
None


**Requester Info**
Gerardo E. Cruz-Ortiz
","docs, Epic",https://github.com/nasa/cFS/issues/495
Commit format-check job doesn't run on push triggers,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**

When a new commit is pushed the commit format checker job in the format-check workflow does not run *unless* the commit is part of a pull request. 

**To Reproduce**

Create new branch
Push commit with non-standard message to remote
Observe ""Commit check"" job skip

**Expected behavior**

Pull request format check is skipped
Commit format check executes

**Code snips**

https://github.com/nasa/cFS/blob/ff88a1e10d0f809887cb90b55ce76b735f24a40a/.github/workflows/format-check.yml#L69-L76

The `if` statement should apply to the PR check step instead of the whole job

**System observed on:**

Github Actions. See screenshot for example 

![Commit-format-check skip.png](https://images.zenhubusercontent.com/5f52a22e5069e3f23a026b02/91a7d03b-2519-4501-9f27-560f1134f4dd)

**Additional context**

None

**Reporter Info**

Gerardo E. Cruz-Ortiz | NASA


",,https://github.com/nasa/cFS/issues/494
Commit and format check doesn't execute when PR title format fails,"**Is your feature request related to a problem? Please describe.**
When running against a pull request, if the PRs title fails the format check, the workflow skips the commit message check. 

**Describe the solution you'd like**
Workflow checks both PR and commit titles regardless of failures

**Describe alternatives you've considered**
- Separate into parallel jobs. 
- Use a ""keep going on failure"" flag for the step (not sure if this is an option)

**Additional context**
See https://github.com/nasa/cFE/actions/runs/2414940003

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA
","good first issue, continuous-integration",https://github.com/nasa/cFS/issues/537
cFS Bundle Integration Candidate: Caleum-rc4+dev10,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Combines 
*cFE v7.0.0-rc4+dev136* (nasa/cFE#2111)

- nasa/cFE#2105, Resolve static analysis warnings
- nasa/cFE#2108, cFE_Users_guide.pdf 404

*osal v6.0.0-rc4+dev83* (nasa/osal#1260)

- nasa/osal#1255, Resolve static analysis warnings
- nasa/osal#1257, add rtems 6 support

*psp v1.6.0-rc4+dev38* (nasa/PSP#346)

- nasa/PSP#344, Resolve uninit var static analysis warning

*elf2cfetbl v3.3.0-rc4+dev24* (nasa/elf2cfetbl#113)

- nasa/elf2cfetbl#112, Resolve uninit var static analysis warnings

*sch_lab v2.5.0-rc4+dev29* (nasa/sch_lab#116)

- nasa/sch_lab#115, Resolve uninit var static analysis warnings


**Testing performed**

[cFS Bundle Checks](https://github.com/nasa/cFS/pull/492/checks)

**Expected behavior changes**

See PRs

**System(s) tested on**
Ubuntu 18.04
RTEMS 4.11
RTEMS 5

**Additional context**
Format check workflow failure expected for Integration Candidates
CodeQL workflow failure expected given known limitation on number of alerts

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
skliper
paulober
acudmore",community,https://github.com/nasa/cFS/pull/492
"Fix #490, Add CLA for cFS Apps","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #490 
- Adds new PDFs for cFS Apache 2.0 licensed applications. 
- Renames Framework PDFs for clarity
- Updates Table of Content
- Rearranged and edited some sections for clarity

**Testing performed**
Visually inspected links in fork and in PR template

**Expected behavior changes**
- No impact to behavior

**System(s) tested on**
Firefox Browser

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLAs apply to only software contributions.
","CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/491
Add combined CLA for cFS App repos,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
We just received updated CLAs for the Apache 2.0 licensed applications. 



**Describe the solution you'd like**
Need to upload the new CLAs, add them to Contributing.md and then add links to the new forms in each app repository. 

**Describe alternatives you've considered**
Migrate to new org and set up shared community info 

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA
",docs,https://github.com/nasa/cFS/issues/490
Disable CodeQL and cppcheck workflow runs for cFS Bundle,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [ ] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The CodeQL and static analysis workflows should are already checked at the submodule level. 
Furthermore, the github security scanning dashboard doesn't work well with SARIF files that point to files from submodule so running the CodeQL workflow with each commit or PR doesn't help. 

**Describe the solution you'd like**
Remove pull request and push triggers from CodeQL and cppcheck workflows. Keep them as ""workflow dispatch"" in case someone wants to run the analysis on the bundle. 

**Describe alternatives you've considered**
a) Keep as is. 
b) Completely remove workflows

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA
",,https://github.com/nasa/cFS/issues/488
Force remove directory in codeql-reusable.yml,"**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
In codeql-reusable.yml, it should force remove a directory on line 97 so the script can continue if the directory doesn't exist.

**To Reproduce**
1. Push to branch to run CodeQL
2. Observe failed run if directory didn't exist

**Expected behavior**
If a directory doesn't exist before removing it, the script should continue

**Code snips**
`rm -r ${{ inputs.component-path }}` should be `rm -rf ${{ inputs.component-path }}`
[codeql-reusable.yml](https://github.com/nasa/cFS/blob/main/.github/workflows/codeql-reusable.yml#L97)

**System observed on:**
Browser

**Additional context**
None

**Reporter Info**
Full name and company/organization if applicable
",,https://github.com/nasa/cFS/issues/487
"Fix #476, Add links to README","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #476

Skimmed the NASA repos and added links (including SBN-Client)

**Testing performed**
None, doc only

**Expected behavior changes**
N/A

**System(s) tested on**
N/A

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:Approved, CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/481
"Fix #472, updated broken links in README","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [X] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Updated the URLs of the cFE and OSAL user guides in the README file.
- Fix #472 

**Testing performed**
Clicked the links in the README

**Expected behavior changes**
 no impact to behavior

**System(s) tested on**
Browser

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLAs apply to only software contributions.
","CCB:Approved, CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/477
Add SBN-Client to README references,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
https://github.com/nasa/SBN-Client may be a useful reference

**Describe the solution you'd like**
Add it to top level README

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman/NASA GSFC
",docs,https://github.com/nasa/cFS/issues/476
"Fix #000, Adds whitespaces","**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
A clear and concise description of what the contribution is.
- Include explicitly what issue it addresses [e.g. Fixes #X]

**Testing performed**
Steps taken to test the contribution:
1. Build steps '...'
1. Execution steps '...'

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLAs apply to only software contributions.
",,https://github.com/nasa/cFS/pull/474
cFE and OSAL user guides links from the README file are broken ,"cFE and OSAL user guides links in the README file are broken after recent update. 
","good first issue, docs",https://github.com/nasa/cFS/issues/472
cFS Integration candidate: Caelum-rc4+dev9,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

*Combines*

nasa/osal#1251
nasa/cFE#2098 
nasa/PSP#343

*Including*



**cFE**

nasa/cFE#2078, Adds truncation warning suppression flags

nasa/cFE#2094, Doc deploy from local workflow on main-branch push

nasa/cFE#2088, Add support for fractional seconds in epoch

nasa/cFE#2044, Remove redundant word in App Developers Guide

nasa/cFE#2099,  UT updates for alternate time configuration


**RTEMS 6 Support

nasa/cFE#2097, update rtems toolchain files

nasa/osal#1250, add os-impl-no-select.c for RTEMS

nasa/psp#339, Update RTEMS CMake Platform File  


**PSP**

nasa/psp#341, Add cpu affinity example  


**Fix Broken CodeQL Workflow Reference**

nasa/PSP#337

nasa/osal#1249

nasa/sample_lib#82

nasa/sample_app#173

nasa/sch_lab#113

nasa/ci_lab#109

nasa/to_lab#120

nasa/elf2cfetbl#110

nasa/tblCRCTool#68

nasa/cFS-GroundSystem#214


**Testing performed**

See PRs

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu RTEMS

**Additional context**
None


**Contributor Info - All information REQUIRED for consideration of pull request**
@astrogeco
@chillfig
@skliper
@jonathan-brandenburg-metecs
@acudmore
@HugoValente11",community,https://github.com/nasa/cFS/pull/471
"Fix #192, Adds check commit message job in format check","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
A clear and concise description of what the contribution is.
- Fixes #192 

**Testing performed**
Tested on fork: https://github.com/chillfig/cFS/runs/6427976618?check_suite_focus=true

**Expected behavior changes**
Commit messages not following any of the below conventions will fail the [format-check.yml
](https://github.com/nasa/cFS/blob/main/.github/workflows/format-check.yml)
* `Fix #XYZ, DESCRIPTION` 
* `HotFix #XYZ, DESCRIPTION` 
* `Partial #XYZ, DESCRIPTION` 
* `Merge pull request #XYZ DESCRIPTION` 
* `IC: DESCRIPTION` 


**System(s) tested on**
Ubuntu 18.04

**Additional context**
The regex for `DESCRIPTION` is defined as a string of 1 or more alphanumeric characters.
The regex for `XYZ` is defined as a string of 1 or more numeric characters.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Justin Figueroa, ASRC Federal
","CCB:Approved, CCB:FastTrack, continuous-integration",https://github.com/nasa/cFS/pull/470
Use cpp as CodeQL Language,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The codeql-reusable.yml workflow uses C as the language, which is not a valid option. It should be cpp instead. 

**Expected behavior**
Use cpp as the CodeQL language. 

**Code snips**
```
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: c
          config-file: nasa/cFS/.github/codeql/codeql-${{matrix.scan-type}}.yml@main
```

**Reporter Info**
Ariel Adams, ASRC Federal 
","good first issue, continuous-integration",https://github.com/nasa/cFS/issues/469
"Fix #465 #463, CI document deployment fixes","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #465 
- Fix #463 

Now always running for main branch actions (will deploy on fork if you push main).  Also rejecting attempts to deploy and use the cache at the same time since I can't figure out how to make that work (password fails on deploy).

**Testing performed**
Tested w/ a push of main to my fork at https://github.com/skliper/cFE/actions/runs/2203904971, note that branch also contains updates to deploy locally to avoid the password issue.

**Expected behavior changes**
Deploy on push to main

**System(s) tested on**
CI

**Additional context**
Only caller impact is for cFE that tried to use the cache and reusable deploy.  CF and cFS workflows not impacted.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/466
Document deployment reusable workflow fails deploy step,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
See https://github.com/nasa/cFE/actions/runs/2192023287 for use of the deployment step from cFE

**Describe the solution you'd like**
Fix, it's likely just missing secret that needs to be passed in by the caller

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",continuous-integration,https://github.com/nasa/cFS/issues/465
Update reusable workflow documentation and diagram,"**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [ ] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
As we add new workflows we should keep documentation up to date

**Describe the solution you'd like**
New diagrams and updated workflow summaries

**Describe alternatives you've considered**
Remove documentation and maintain with each file

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz
","good first issue, docs, continuous-integration",https://github.com/nasa/cFS/issues/464
Docs not deployed when PR is merged to main,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**

The skip duplicates check catches the ""same content"" from pull requests and thus isn't being triggered by a push to main. 

**To Reproduce**

See workflow runs related to IC: Caelum-rc4+dev8.

https://github.com/nasa/cFS/actions/runs/2192037376, push to main, skipped due to run in PR #461 <https://github.com/nasa/cFS/actions/runs/2191974505>




**Expected behavior**

Always run the documentation job on a push to main. 

**Proposed Solution**

Skip the ""check-for-duplicates"" step in pushes to main branch.

**System observed on:**
Github actions

**Additional context**
n/a 

**Reporter Info**
Gerardo E. Cruz-Ortiz, NASA
","good first issue, continuous-integration",https://github.com/nasa/cFS/issues/463
cFS Bundle Integration candidate: Caelum-rc4+dev8,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate [Contributor License Agreement](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md#contributor-license-agreement-cla) to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #451 

- Fix #447 

- Fix #455, Use reusable doc workflow to add mission-doc pdf deploy

PR #454 

- Fix #453, Cleanup shared static analysis workflow

PR #448 

- Fix #450, update contributor license agreements

**Also Combines**

*PSP*

nasa/PSP#331, Apply latest contributor license agreement links

nasa/PSP#334, - Fixinput to static analysis workflow

*osal*

nasa/osal#1246, Apply latest contributor license agreement links

*cFE*

nasa/cFE#2082, Only increment SB InternalErrorCounter on errors

nasa/cFE#2081, Improve ES unit test coverage

nasa/cFE#2080, Add config module to coverage enforcemnt

nasa/cFE#2085, Use reusable documentation generation workflow

nasa/cFE#2077, Remove contributor license agreement

**Testing performed**

cFS Bundle Checks <https://github.com/nasa/cFS/pull/461/checks>

**Expected behavior changes**

See PRs

**System(s) tested on**

Ubuntu 18.04
RTEMS 4.11, 5.0

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
skliper
chillfig
",,https://github.com/nasa/cFS/pull/461
"Fix #457, Add build and run app reusable workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #457

**Testing performed**
Passed CI with modified workflow (pointed to skliper merge branch) here: https://github.com/skliper/CF/runs/6065276796?check_suite_focus=true

**Expected behavior changes**
None, CI only

**System(s) tested on**
CI

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Approved,https://github.com/nasa/cFS/pull/460
"Fix #458, Add reusable unit test and coverage verification workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #458

**Testing performed**
CI from CF (w/ modified repo/path): https://github.com/skliper/CF/actions/runs/2174432954

**Expected behavior changes**
None

**System(s) tested on**
CI

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Approved,https://github.com/nasa/cFS/pull/459
Add reusable workflow for application unit test and coverage enforcement,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
There's a common recipe for unit testing and coverage enforcement for the GSFC apps that are Draco dev cycle compatible, but they don't currently have a workflow implemented.

**Describe the solution you'd like**
Add a reusable workflow at the cFS level to keep things consistent and avoid logic duplication.

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",continuous-integration,https://github.com/nasa/cFS/issues/458
Add reusable workflow for application build and run within bundle,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
There's a common recipe for building and running GSFC apps within the bundle that are Draco dev cycle compatible, but they don't currently have a workflow implemented.

**Describe the solution you'd like**
Add a reusable workflow at the cFS level to keep things consistent and avoid logic duplication.

**Describe alternatives you've considered**
Could set it up to handle a list of apps, but might get complicated with startup message verification.

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",continuous-integration,https://github.com/nasa/cFS/issues/457
Add guidance for coverage tests in contributing guide,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**

When improving coverage for code we should update the minimum coverage checks in the appropriate github workflow. 

**Describe the solution you'd like**
Add a section to contributing guide 

**Describe alternatives you've considered**
Do nothing. Include in wiki or other document

**Additional context**
See yml change in https://github.com/nasa/cFE/pull/2081

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA
",docs,https://github.com/nasa/cFS/issues/456
Add document build and deploy reusable workflow,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
All apps will need a document build and deploy workflow

**Describe the solution you'd like**
Avoid duplication by implementing reusable workflow from cFS, also use it in cFS to avoid duplication in current documentation workflow.

**Describe alternatives you've considered**
None

**Additional context**
- #447 
Rather than duplicating workflow logic for another doc, just use the reusable workflow for each document.

**Requester Info**
Jacob Hageman - NASA/GSFC
","docs, continuous-integration",https://github.com/nasa/cFS/issues/455
"Fix #453, Cleanup shared static analysis workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #453 

Removes leading `.` before directory list and removes matrix (slight re-ordering of tests)

**Testing performed**
CI

**Expected behavior changes**
Works on directory lists, just one flow where strict only runs on non-empty `strict-dir-list`

**System(s) tested on**
CI

**Additional context**
Impacts nasa/PSP#333 and nasa/cf#228

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:Approved, CCB:FastTrack, dependency",https://github.com/nasa/cFS/pull/454
Static analysis workflow matrix and strict directory handling not working as intended,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The leading `.` isn't consistently applied (better to remove) and the non-strict/strict matrix doesn't really work right.

https://github.com/nasa/cFS/blob/963b3ab0be55ea679207aa140c3002d1a6c8ffea/.github/workflows/static-analysis.yml#L54

Example: 
`strict-dir-list: './src/bsp ./src/os'` as used in OSAL becomes `../src/bsp ./src/os` which then misses the leading dir

The matrix runs all the steps in two workflows where only the upload is conditional.  It still does both checks... really the checks are very fast so no need to split (already in separate steps so easy to see what fails).

**Describe the solution you'd like**
Remove matrix, remove leading `.` on strict directory list

**Describe alternatives you've considered**
None

**Additional context**
Will impact psp strict check nasa/PSP#333.

**Requester Info**
Jacob Hageman - NASA/GSFC",continuous-integration,https://github.com/nasa/cFS/issues/453
"Fix #447 #455, Deploy mission document from workflow by using reusable workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #447 
- Fix #455

Note #442 already added enforcement, so this just adds deployment.

**Testing performed**
CI that included nasa/cFE@2085, forced the deployment, and used current branch to get the reusable workflow
Results at https://github.com/skliper/cFS/actions/runs/2161038232

**Expected behavior changes**
Deploys mission doc on push to main

**System(s) tested on**
CI

**Additional context**
Depends on nasa/cFE#2085

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:Approved, CCB:FastTrack, docs, dependency",https://github.com/nasa/cFS/pull/451
Apply latest contributor license agreements,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Updated contributor license agreements and adds links in the pull request template to these contributor license agreements.

**Describe the solution you'd like**
Update

**Additional context**
None

**Requester Info**
Justin Figueroa, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/450
"Fix #450, update contributor license agreements","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #448 

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Justin Figueroa, ASRC Federal
","CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/448
Add mission doc generation and no-warning enforcement to CI,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Mission documentation has been cleaned up, should build with no warnings but not enforced so easy to ""rot""

**Describe the solution you'd like**
Add mission documentation generation, build, no-warning enforcement, and upload to gh_pages in CI

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",continuous-integration,https://github.com/nasa/cFS/issues/447
cFS Integration candidate: Caelum-rc4+dev7,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
 **Combines**
    
nasa/cFE#2074, v7.0.0-rc4+dev94
nasa/osal#1239, v6.0.0-rc4+dev66
nasa/psp#330, v1.6.0-rc4+dev21

nasa/ci_lab#107, v2.5.0-rc4+dev17
nasa/sample_app#171, v1.3.0-rc4+dev16
nasa/sample_lib#80, v1.3.0-rc4+dev16
nasa/to_lab#119, v2.5.0-rc4+dev16
nasa/sch_lab#112, v2.5.0-rc4+dev23

nasa/elf2cfetbl#108, v3.3.0-rc4+dev18
nasa/tblCRCTool#67, v1.3.0-rc4+dev14
nasa/cFS-GroundSystem#209, v3.0.0-rc4+dev19

**Includes**

nasa/cFE#2073, Resolve build failure for time cfg source

nasa/osal#1238, avoid calling memchr() with unknown size buffer

nasa/osal#1234, Hotfix IC:Caleum-rc4+dev6

*Standardize Version Information*

nasa/cFE#2071
nasa/osal#1240
nasa/psp#329

nasa/sample_app#170
nasa/sample_lib#79

nasa/ci_lab#108
nasa/to_lab#118
nasa/sch_lab#111

nasa/elf2cfetbl#107
nasa/tblCRCTool#66
nasa/cFS-GroundSystem#210

*Update Copyright Headers*

nasa/cFE#2070
nasa/osal#1236
nasa/psp#328

nasa/sample_app#169
nasa/sample_lib#78

nasa/ci_lab#106
nasa/to_lab#117
nasa/sch_lab#110

nasa/elf2cfetbl#106
nasa/tblCRCTool#65
nasa/cFS-GroundSystem#208

**Testing performed**
https://github.com/nasa/cFS/pull/445/checks

CodeQL workflow Failure is being examined 

**Expected behavior changes**

See PRs

**System(s) tested on**
Ubuntu
RTEMS
CentOS

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey 
@skliper 
@astrogeco ",,https://github.com/nasa/cFS/pull/445
cFS Integration Candidate: Caelum-rc4+dev6,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Combines

https://github.com/nasa/cFE/pull/2066, v7.0.0-rc4+dev87
https://github.com/nasa/osal/pull/1233, v6.0.0-rc4+dev54

- nasa/osal#1221, Implement OS_ModuleGetInfo_Impl for RTEMS

Doxygen Changes:

- nasa/osal#1232, Expose osal common config
- nasa/cFE#2065, Resolve OSAL Doxygen refs with osal-common config

PR #442 
- Fix #441, Update doc workflow OSAL directory

**Testing performed**
[cFS Bundle Checks](https://github.com/nasa/cFS/pull/443/checks)
[cFE Checks](https://github.com/nasa/cFE/pull/2066/checks)
[osal Checks](https://github.com/nasa/osal/pull/1233/checks)

**Expected behavior changes**
See PRs


**System(s) tested on**
Ubuntu 18.04
RTEMS 4.11, 5..0

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
skliper 
chillfig
",,https://github.com/nasa/cFS/pull/443
"Fix #441, Update doc workflow OSAL directory","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #441

**Testing performed**
Pushed test branch to fork with dependencies, doc workflow passed: https://github.com/skliper/cFS/actions/runs/1992919410

**Expected behavior changes**
Doc workflow works with dependency updates

**System(s) tested on**
CI

**Additional context**
nasa/osal#1232 and nasa/cFE#2065

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC
","CCB:Approved, dependency",https://github.com/nasa/cFS/pull/442
Fix workflow documentation directory for OSAL dox updates,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
nasa/osal#1232 simplifies doxygen documentation build directory structure, documentation workflow impacted

**Describe the solution you'd like**
Fix reference

**Describe alternatives you've considered**
None

**Additional context**
nasa/osal#1232 and nasa/cfe#2065

**Requester Info**
Jacob Hageman - NASA/GSFC","docs, continuous-integration",https://github.com/nasa/cFS/issues/441
"Update standard ""development"" version indicator to use 0xFF ","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**

Historically, setting the Revision number to ""99"" indicates that the source code in question is a ""development"" version and thus hasn't been fully tested. 

In https://github.com/nasa/osal/pull/824, we put this information in the Mission_Rev instead and set it to ""0xFF"". This pattern has a couple of problems:
- It is not standard, cFE documentation needs to be updated
- If a user changes the MISSION_REV while building on top of a development version, there is no way to know what the original version was by looking at source code. (eg x.y.z.99 is changed by a user to x.y.z.100) kudos to @skliper for this observation 
- Older telemetry or ""ground"" systems may be used to the two-character legacy number of ""99"" instead of ""0xFF"" and convert the value into a two-character string thereby cutting off the value. 

**Describe the solution you'd like**

1. Revert to using the Revision number
2. Move from 99 to 0xff
3. Communicate the change to users 

**Describe alternatives you've considered**
Keep Revision = 99

**Additional context**

Need to open related Issues in other cFS component repositories

**Requester Info**
Gerardo Cruz-Ortiz, NASA 
",enhancement,https://github.com/nasa/cFS/issues/440
cFS Bundle Integration Candidate: Caelum-rc4+dev5,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Refactor doxygen and remove mainpage

- nasa/cFE#2058
- nasa/osal#1228


**Testing performed**
See submodule PRs

cFS Checks <https://github.com/nasa/cFS/pull/437/checks>
cFE Checks <https://github.com/nasa/cFE/pull/2058/checks>
osal Checks <https://github.com/nasa/osal/pull/1228/checks>

**Expected behavior changes**

Documentation changes only. 

See submodule PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper
",,https://github.com/nasa/cFS/pull/437
cFS Integration candidate: Caelum-rc4+dev4 #1226 ,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Combines**

- https://github.com/nasa/cFE/pull/2061, v7.0.0-rc4+dev80
- https://github.com/nasa/osal/pull/1226, v6.0.0-rc4+dev42
- https://github.com/nasa/PSP/pull/326, v1.6.0-rc4+dev14

*Apps*
- ci_lab v2.5.0-rc4+dev10
- sample_app v1.3.0-rc4+dev9
- sch_lab v2.5.0-rc4+dev16
- to_lab v2.5.0-rc4+dev9

*Libs*
- sample_lib v1.3.0-rc4+dev9

*Tools*
- cFS-GroundSystem v3.0.0-rc4+dev12
- elf2cfetbl v3.3.0-rc4+dev11
- tblCRCTool v1.3.0-rc4+dev7

**Includes**

- https://github.com/nasa/cFE/pull/2048, Add CFE_ES_CreateChildTask default handler

- https://github.com/nasa/osal/pull/1215, Resolve UT uninitialized variable warnings

- https://github.com/nasa/osal/pull/1219, Add ut_assert to doxygen and fix warnings

- https://github.com/nasa/osal/pull/1223, protect if OS_FDGetInfo called on socket

- https://github.com/nasa/cFE/pull/2056, Missing SB include for v2 msgid

- https://github.com/nasa/cFE/pull/2052, Resolve doxygen doc warnings and enforce in CI

*Apply Header Guard Standard*

- https://github.com/nasa/PSP/pull/322

- https://github.com/nasa/ci_lab/pull/103
- https://github.com/nasa/to_lab/pull/114
- https://github.com/nasa/sch_lab/pull/107

- https://github.com/nasa/sample_lib/pull/74

- https://github.com/nasa/elf2cfetbl/pull/100
- https://github.com/nasa/cFS-GroundSystem/pull/205

*Remove explicit filename doxygen comments*

- https://github.com/nasa/cFE/pull/2050
- https://github.com/nasa/osal/pull/1217
- https://github.com/nasa/PSP/pull/324

- https://github.com/nasa/sample_lib/pull/76

- https://github.com/nasa/tblCRCTool/pull/62
- https://github.com/nasa/elf2cfetbl/pull/102

**Testing performed**

cFS Bundle Checks <https://github.com/nasa/cFS/pull/432/checks>

**Expected behavior changes**
See submodules

**System(s) tested on**
ubuntu 18.04
RTEMS 4.11
RTEMS 5

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
jphickey
skliper",,https://github.com/nasa/cFS/pull/432
"the ""setvars.sh"" file is missing in v7",,question,https://github.com/nasa/cFS/issues/421
Where  are the new-app-generation scripts ? (that used to exist in /tools ) ,,question,https://github.com/nasa/cFS/issues/417
Display cppcheck results in GitHub code scanning dashboard,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
Convert cppcheck's plist output to SARIF using https://github.com/sarif-standard/sarif-sdk-typescript

Use the codeql-upload action to upload SARIF file to CodeScanning

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA/GSFC
","good first issue, continuous-integration",https://github.com/nasa/cFS/issues/416
cFS Bundle Integration Candidate: Caelum+dev3,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #413 
- Fix #412, git error in CodeQL Analyze Action

Also includes:

*cFE v7.0.0-rc4+dev70*

nasa/cFE#2041, Improve CFE_SB_IsValidMsgId handler
nasa/cFE#2034, Update CodeQL workflow
nasa/cFE#2042, Replace CFE_SB_ValueToMsgId(0) with CFE_SB_INVALID_MSG_ID

*osal v6.0.0-rc4+dev32*

nasa/osal#1209, typesafe definition of osal_id_t

*sample_app v1.3.0-rc4+dev9*

nasa/sample_app#165, Use preferred UT patterns

**Testing performed**
cFS Bundle Checks <https://github.com/nasa/cFE/pull/2043/checks>
cFE Checks <https://github.com/nasa/cFE/pull/2043/checks>

Note that CodeQL workflow will fail until nasa/cFS#413 is merged into main branch. See passing test in that PR. 

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 18.04
RTEMS 5
RTEMS 4.11

**Additional context**
See also https://github.com/nasa/cFE/pull/2043

**Third party code**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@paulober 
@jphickey ",,https://github.com/nasa/cFS/pull/414
"Fix #412, git error in CodeQL Analyze Action","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Fix #412

- Adds new component-path input parameter
- Use git clone instead of checkout@v2 for the cFS-Bundle
- Use symlink to map calling repo workspace to expected cFS Bundle
directory location
- Repurpose tests input to be a boolean tied to ""ENABLE_UNIT_TESTS"" flag
- Enable ""code snippets"" option to CodeQL Analyze action
- Archives sarif files from analysis output
- Removes code duplication by using a matrix build for security and coding standard analyses
- Alphabetizes workflow inputs and order based on ""required"" flag


**Testing performed**
Called codeql analysis action in bundle repo 
https://github.com/astrogeco/cFS/actions/runs/1791252476

Called fork implementation from cFE repo. See actions run in nasa/cFE#2035, 
<https://github.com/astrogeco/cFE/runs/5056853287?check_suite_focus=true>

<img width=""1199"" alt=""CodeQL-cFEFix-2035"" src=""https://user-images.githubusercontent.com/59618057/151265335-2f0469d2-b2de-4030-a9f8-363dcb22c566.png"">


**Expected behavior changes**

- CodeQL Action executes successfully. 
- Sarif files are stored as a run artifact
- Unit Test code is scanned


<img width=""484"" alt=""CodeQL-cFEFix-2035-UTAlerts"" src=""https://user-images.githubusercontent.com/59618057/151266452-891fb20d-a787-416d-9902-5f22304ea426.png"">


**System(s) tested on**
- Github actions, Ubuntu 18.04

**Additional context**

Will break current CodeQL implementation in cFS components. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA","continuous-integration, breaking",https://github.com/nasa/cFS/pull/413
"Reusable CodeQL Workflow Fails after ""upload"" stage","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
CodeQL workflow fails in the code ql analyze step, specifically right after the ""upload"" stage. 

See failed run in PSP repository

https://github.com/nasa/PSP/runs/4886431077?check_suite_focus=true

**To Reproduce**
Run latest CodeQL workflow in any cFS component repo: 
- psp
- osal
- cfe
- apps
- tools

**Expected behavior**
Passing workflow run

**Code snips**
n/a

**System observed on:**
- Github Actions, Ubuntu 18.04

**Additional context**
None
",,https://github.com/nasa/cFS/issues/412
CFS make error 2,"**Checklist (Please check before submitting)**

* [☑] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [☑] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
I am trying to work on  this repository for the NASA CFS CS challenge and I am implementing it using Ubuntu and Debian Operating System. I am getting a make error when I follow the below steps.
I have uploaded the picture of the error for your reference. Thanks.

**To Reproduce**

Steps to reproduce the behavior:
1. git clone https://github.com/nmullane/amp-cfs-cs-challenge.git
2. cd cfs_checksum_patched/cFS/
3. git submodule update --init --recursive
4. make
5. make install

**System observed on:**
 - Raspberry pi / Beagleboneblack
 - Ubuntu 18.04 / Debian 9.5


**Reporter Info**
Kaushik Varma Rudraraju
Colorado State University
![make error 2](https://user-images.githubusercontent.com/98132394/150443089-c6e32c14-9549-40db-b559-527f39f71fa3.jpg)

",question,https://github.com/nasa/cFS/issues/411
cFS Integration Candidate: Caelum+dev2,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Combines

    
nasa/cfe#2019, cFE v7.0.0-rc4+dev60
nasa/osal#1212, osal v6.0.0-rc4+dev29
nasa/sch_lab#105, sch_lab v2.50-rc4+dev13

Includes 

*cFE:*

nasa/cFE#2033, Add CFE_ES_AppInfo_t element documentation
nasa/cFE#2015, Add FS Functional test
nasa/cFE#2012, Fix mismatched foreach in cmake function
nasa/cFE#2013, Improved code highlighting in cFE Application Developers Guide
nasa/cFE#2027, CFE_FS_ParseInputFileNameEx avoid uninit var
nasa/cFE#2031, Fix array length calculation for perf structs
nasa/cFE#2023, Limit SBR UT loops
nasa/cFE#2029, Initialize BlockData in ES UT
nasa/cFE#2025, Fix osal_id_t type conversion in es_UT.c

 *osal:*
    
nasa/osal#1206, Search global and local symbol tables
nasa/osal#1201, Add missing space to UtAssert_STUB_COUNT
nasa/osal#1202, Add UINT8 and UINT16 equivalents for UtAssert_UINT32_<Comparison> macros
nasa/osal#1203, correct warnings on gcc11
nasa/osal#1211, Set output in OS_stat handler
nasa/osal#1190, Reuse CodeQL, Static Analysis, Format Check 

*psp*

nasa/PSP#317, Reuse CodeQL, Static Analysis, and Format Check

*apps*

nasa/sch_lab#104, Add option to configure base tick rate
nasa/sample_lib#72, Reuse CodeQL, Static Analysis, and Format Check 
nasa/sample_app#162, Reuse CodeQL, Static Analysis, and Format Check 
nasa/ci_lab#100, Reuse CodeQL, Static Analysis, and Format Check 
nasa/to_lab#111, Reuse CodeQL, Static Analysis, and Format Check

*tools*

nasa/cFS-GroundSystem#200, Reuse CodeQL, Static Analysis, and Format Check
nasa/elf2cfetbl#97, Reuse CodeQL, Static Analysis, and Format Check 
nasa/tblCRCTool#59, Reuse CodeQL, Static Analysis, and Format Check


**Testing performed**
cFS Bundle Checks <https://github.com/nasa/cFS/pull/410/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
- Ubuntu 18.04
- RTEMS

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA
@skliper
@jphickey
@kurtjd
@paulober
@Nodraak","community, dependency",https://github.com/nasa/cFS/pull/410
"Fix #408, Add Check Duplicate for Build, Test, and Run","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #408 

**Testing performed**
Tested on fork: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1718848510

**Expected behavior changes**
Skip workflows on push if workflows are triggered on both push and pull request. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",,https://github.com/nasa/cFS/pull/409
"Duplicate Build, Test, and Run on Push and PR","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The Build, Test, and Run workflows do not correctly use the check for duplicates action. The workflows run on both push and pull request. The workflows should skip when triggered by push if it is also triggered by a pull request at the same time. 

**Describe the solution you'd like**
Add if: ${{ needs.checks-for-duplicates.outputs.should_skip != 'true' }}

**Describe alternatives you've considered**
Keep as is. 

**Requester Info**
Ariel Adams, ASRC Federal
",,https://github.com/nasa/cFS/issues/408
"Fix #249, Combine Deploy Documentation Jobs","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #249 
Combines users guide and osal guide build jobs. Combines users guide and osal deployment jobs. 

**Testing performed**
Tested on fork: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/runs/4586026396?check_suite_focus=true
Documents: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/tree/gh-pages

**Expected behavior changes**
No race condition

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, docs, continuous-integration",https://github.com/nasa/cFS/pull/404
"Fix #400, Use SVG Image for Workflows README","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #400 
Use SVG image instead of PNG

**Testing performed**
Tested on fork: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/blob/Rule1/.github/workflows/README.md

**Expected behavior changes**
No change in behavior

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/401
Use SVG Image for Workflows ReadMe,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The README.md for cFS/.github/workflows/ uses an image that may not be easily edited. 

**Describe the solution you'd like**
Convert the image to SVG. 

**Describe alternatives you've considered**
Keep as is. 

**Requester Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/400
Update RC4 tag descriptions to include equivalent dev tags ,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**

Need a mapping between tags and build numbers to reduce confusion

**Describe the solution you'd like**
Include RC information in update history on readme and tag description

**Describe alternatives you've considered**
Finish official release and add official numbers

**Additional context**
Raised in stakeholder meeting 

**Requester Info**
@astrogeco
",docs,https://github.com/nasa/cFS/issues/398
"Fix #391, Use New cFS Container Registry for RTEMS Workflows","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #391 

**Testing performed**
Performed on fork and this PR
Rtems4.11: https://github.com/nasa/cFS/actions/runs/1490426793
Rtems5: https://github.com/nasa/cFS/actions/runs/1490426798

**Expected behavior changes**
No impact to behavior

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/pull/395
Use cFS RTEMS Containers,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Currently, the rtems workflows uses an old intern's containers. To update or change the containers, it should be stored in repository owned by cFS rather than a specific user. 

**Expected behavior**
The behavior will not change. The only changes are the locations of the containers. 

**Code snips**
https://github.com/nasa/cFS/blob/d2ecab8dfc930ba76355dfde5e337dad3e0a63de/.github/workflows/build-cfs-rtems5.yml#L32

**Additional context**
New repo: https://github.com/core-flight-system/containers

**Reporter Info**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/issues/391
cFS Bundle Integration candidate: Caelum+dev1,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #381 
- Fix #380, Reuse CodeQL, Static Analysis, Format Check 


PR #386 
- Fix #382
 
PR #395
- Fix #391

Also Combines:
    
*Core: *
- nasa/cFE#2001, cfe v7.0.0-rc4+dev39
- nasa/osal#1191, osal v6.0.0-rc4+dev15
- nasa/psp#318, psp v1.6.0-rc4+dev6

*Lab Apps: *
- nasa/ci_lab#101, ci_lab v2.5.0-rc4+dev4
- nasa/sch_lab#102, sch_lab v2.5.0-rc4+dev6
- nasa/to_lab#112, to_lab v2.5.0-rc4+dev4
- nasa/sample_app#163, sample_app 1.3.0-rc4+dev4

*Lab Libs: *
- nasa/sample_lib#73, sample_lib v1.3.0-rc4+dev3

*Tools: *
- nasa/cFS-GroundSystem#201, cFS-GroundSystem v3.0.0-rc4+dev7
- nasa/elf2cfetbl#98, elf2cfetbl v3.3.0-rc4+dev4
- nasa/tblCRCTool#60, tblCRCTool v1.3.0-rc4+dev2


*Includes:*

nasa/cFE#1663, Use cfe time clock state enum t in cmd/tlm and handling
nasa/cFE#1973, EVS functional test add for different eventtypes
nasa/cFE#1954, Patch for recursive event loop
nasa/cFE#1911, CFE_ES_MemAddOff structure to associated CFE_ES_MemAddress_t and CFE_ES_MemOffset_t
nasa/cFE#1986, Avoid aliasing warnings
nasa/cFE#1975, Message ID type improvements
nasa/cFE#1974, CFE_SB_ValueToMsgId/MsgIdToValue wrappers
nasa/cFE#1663, Use CFE_TIME_ClockState_Enum_t in cmd/tlm and handling
nasa/cFE#1995, Consolidate repeated MSG stub setup in sb_UT
nasa/cFE#1873, Return type conversions in CFE_ES_GetTaskName
nasa/cFE#1966, Better message type pointer conversion
nasa/cFE#2002, Replacing hardcoded message limit in TIME services
nasa/cFE#1909, Use macro in CFE_ResourceId_IsDefined
nasa/cFE#1999, Checking against IsNewOffset only

nasa/osal#1186, Add Duplicate Check to Local Unit Test
nasa/osal#1178, Rename OS_XXXTime to OS_XXXLocalTime in comments
nasa/osal#1168, Fix vxWorks intLib stub aliasing issue
nasa/osal#1169, Recognize ifdef __cplusplus
nasa/osal#1180, Remove extern in stub prototypes
nasa/osal#1112, Add typedef for OSAL status codes

nasa/psp#301, Sleep before exit when printing
nasa/psp#314, Check the address in PSP get segment stubs

nasa/elf2cfetbl#89, Check get_sh_entsize(SectionHeader) value

nasa/cFS-GroundSystem#197, Free Address Info for Leak

nasa/sch_lab#95, use separate address variable

nasa/sch_lab#94, Use CFE_MSG_PTR conversion macro
nasa/sample_app#157, Use CFE_MSG_PTR conversion macro
nasa/ci_lab#95, Use CFE_MSG_PTR conversion macro
nasa/to_lab#107, Use CFE_MSG_PTR conversion macro


**Testing performed**
cFS Bundle Checks <https://github.com/nasa/cFS/pull/390/checks> 


**Expected behavior changes**
See PRs

**System(s) tested on**
Rtems 4.11
RTEMS 5.0
Ubuntu 18.04

**Additional context**
None

**Contributors**
@ArielSAdamsNASA 
@jphickey 
@skliper 
@thnkslprpt 
@pavll 
@zachar1a
@thesamprice
@Shefali321",community,https://github.com/nasa/cFS/pull/390
"Fix #382, Reuse CodeQL, Static Analysis, Format Check","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #382 

**Testing performed**
Tested on forked repos. 
OSAL Static Analysis Reuse: https://github.com/ArielSAdamsNASA/osal/actions/runs/1387270204 - runs bundle and strict osal
cFS Static Analysis Reuse: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390418206
OSAL CodeQL Reuse cFE Build: https://github.com/ArielSAdamsNASA/osal/runs/4023159610?check_suite_focus=true
OSAL CodeQL Reuse OSAL Default: https://github.com/ArielSAdamsNASA/osal/actions/runs/1390702434
cFS CodeQL Reuse: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390777421
OSAL Format Check Reuse: https://github.com/ArielSAdamsNASA/osal/actions/runs/1390702433
cFS Format Check: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390865379

**Expected behavior changes**
cFS will hold the workflows for CodeQL, Static Analysis, and Format Check. These workflows will be called by all subrepos to use. cFS has to call on CodeQL and Static Analysis for the workflows to work. Format check does not need to be reused in cFS since there are no inputs. 

To explain the new workflows, a diagram has been added to the README.md file. The PR does not show the image in the README.md file, but the same code and image works in the forked repo: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/blob/fix-382-reuse-workflows/.github/workflows/README.md

**Additional context**
The workflows calling the original actions will not work until it is integrated in main because of this code. 
`uses: nasa/cFS/.github/workflows/static-analysis.yml@main`

Documentation: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/386
"Revert ""Fix #382, Reuse CodeQL, Static Analysis, and Format Check""",Reverts nasa/cFS#384,,https://github.com/nasa/cFS/pull/385
"Fix #382, Reuse CodeQL, Static Analysis, and Format Check","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Invalid

**Testing performed**
Tested on forked repos. 
OSAL Static Analysis Reuse: https://github.com/ArielSAdamsNASA/osal/actions/runs/1387270204 - runs bundle and strict osal
cFS Static Analysis Reuse: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390418206
OSAL CodeQL Reuse cFE Build: https://github.com/ArielSAdamsNASA/osal/runs/4023159610?check_suite_focus=true
OSAL CodeQL Reuse OSAL Default: https://github.com/ArielSAdamsNASA/osal/actions/runs/1390702434
cFS CodeQL Reuse: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390777421
OSAL Format Check Reuse: https://github.com/ArielSAdamsNASA/osal/actions/runs/1390702433
cFS Format Check: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390865379

**Expected behavior changes**
cFS will hold the workflows for CodeQL, Static Analysis, and Format Check. These workflows will be called by all subrepos to use. cFS has to call on CodeQL and Static Analysis for the workflows to work. Format check does not need to be reused in cFS since there are no inputs. 

To explain the new workflows, a diagram has been added to the README.md file. The PR does not show the image in the README.md file, but the same code and image works in the forked repo: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/blob/Rule1/.github/workflows/README.md

**Additional context**
The workflows calling the original actions will not work until it is integrated in main because of this code. 
`uses: nasa/cFS/.github/workflows/static-analysis.yml@main`

Documentation: https://docs.github.com/en/actions/learn-github-actions/reusing-workflows

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",invalid,https://github.com/nasa/cFS/pull/384
Build cFS for Raspberry Pi 4,"I'm trying to build cfs for Raspberry Pi using cross-compiler in Ubuntu 18.04. I installed gcc-arm-linux-gnueabihf and g++-arm-linux-gnueabihf, setup cmake toolchain file as follows:

```
set(CMAKE_SYSTEM_NAME       Linux)
set(CMAKE_SYSTEM_PROCESSOR  arm)
set(CMAKE_SYSTEM_VERSION    1)

SET(CMAKE_C_COMPILER			""arm-linux-gnueabihf-gcc"")
SET(CMAKE_CXX_COMPILER			""arm-linux-gnueabihf-g++"")

SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM	NEVER)

SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY	ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE	ONLY)

SET(CFE_SYSTEM_PSPNAME      ""pc-linux"")
SET(OSAL_SYSTEM_BSPNAME     ""pc-linux"")
SET(OSAL_SYSTEM_OSTYPE      ""posix"")
```


And then:
```
make SIMULATION=arm-raspberrypi O=build-raspberry prep  
make SIMULATION=arm-raspberrypi O=build-raspberry
```

There is core-cpu1 in build-raspberry/arm-raspberrypi/default_cpu1/cpu1. But on Raspberry it crashes with error:

```
OS_Posix_GetSchedulerParams():190:Policy 1: available, min-max: 1-99
OS_Posix_GetSchedulerParams():190:Policy 2: available, min-max: 1-99
OS_Posix_TaskAPI_Impl_Init():376:Selected policy 2 for RT tasks, root task = 99
OS_Posix_TaskAPI_Impl_Init():392:Could not setschedparam in main thread: Operation not permitted (1)
OS_API_Init():151:OS_API_Impl_Init(0x1) failed to initialize: -1
OS_API_Init():231:Warning: Microsecs per sec value of 0 does not equal 1000000 (MicroSecPerTick: 0   TicksPerSecond: 0)
OS_printf():300:BUG: OS_printf() called when OSAL not initialized: CFE_PSP_Panic Called with error code = 0x%08X. Exiting.
OS_printf():300:BUG: OS_printf() called when OSAL not initialized: The cFE could not start.
```

What am I doing wrong?",,https://github.com/nasa/cFS/issues/383
"Reuse CodeQL, Format Checker, and Static Analysis Workflows","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
When needing to change workflows, one must create an issue and PR for each submodule. This feature would reduce duplication.

**Describe the solution you'd like**
To reuse workflows, the targeted workflow must include workflow_call and inputs as seen below. 
```
on:
  push:
  pull_request:
  workflow_call:
    inputs:
      runs-on: 
        description: Platform to execute on
        type: string
        default: ubuntu-latest
```

**Describe alternatives you've considered**
Keep it as is. 

**Additional context**
Tested in OSAL, OSAL cFE CodeQL Reuse Build: https://github.com/ArielSAdamsNASA/osal/runs/4023159610?check_suite_focus=true
Tested in OSAL, OSAL CodeQL Reuse Build: https://github.com/ArielSAdamsNASA/osal/actions/runs/1390702434
cFS CodeQL Reuse: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1390561827

**Requester Info**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/issues/382
"Fix #380, OSAL CodeQL Full Configuration Path","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #380 

**Testing performed**
Worked on forked repo: https://github.com/ArielSAdamsNASA/osal/actions/runs/1372651054

**Expected behavior changes**
OSAL CodeQL workflow shall work, no impact to other workflows. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/381
OSAL CodeQL Failing Cannot Find Configuration,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
`The configuration file ""nasa/cFS/.github/codeql/codeql-coding-standard.yml@main"" is invalid: property ""queries.uses"" is invalid as the local path "".github/codeql/jpl-misra.qls"" does not exist in the repository` occurs in CodeQL Analysis OSAL Default Build.

**To Reproduce**
Run CodeQL Analysis OSAL Default Build

**Expected behavior**
Change codeql-coding-standard.yml to nasa/cFS/.github/codeql/jpl-misra.qls@main

**Reporter Info**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/issues/380
"Fix #378, Updated README training link","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [NA] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Fix #378

**Testing performed**
None - documentation only.

**Expected behavior changes**
None

**System(s) tested on**
NA

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:Approved, docs",https://github.com/nasa/cFS/pull/379
Update cFS training package link,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
New slide package available at https://ntrs.nasa.gov/citations/20210022378

**Describe the solution you'd like**
Update README

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",docs,https://github.com/nasa/cFS/issues/378
"fix #376, ""main"" branch for cfe and osal submodules","**Describe the contribution**
Fixes #376, changes the branch declaration for the cfe and osal submodules to be ""main"".

**Testing performed**
git submodule init && git submodule update behave as expected.

**Expected behavior changes**
No impact to behavior.

**System(s) tested on**
Ubuntu 21.x

**Contributor Info - All information REQUIRED for consideration of pull request**
Christopher.D.Knight@nasa.gov",CCB:Approved,https://github.com/nasa/cFS/pull/377
"cFS submodules refer to ""master"" branches","It seems the .gitmodules file still lists ""branch = master"" for cfe and osal. Should switch to ""main"". (Surprised ""master"" still works, given that branch is long gone! Guessing git defaults to ""HEAD"" if the branch specified no longer exists.)

https://github.com/nasa/cFS/blob/ed26455b48105baa451d1be683b5854ce49964e7/.gitmodules#L4",enhancement,https://github.com/nasa/cFS/issues/376
"Fix #372, Add CodeQL Query Suites","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #372 

**Testing performed**
Tested on fork, https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/runs/3872860265?check_suite_focus=true

**Expected behavior changes**
Same results as before, just different way of locating queries. 

Remove
```
      - name: Checkout codeql code      
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/checkout@v2
        with:
          repository: github/codeql 
          submodules: true 
          path: codeql
```
CodeQL is already checked out when using CodeQL Actions. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/373
CodeQL Query Suites,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
CodeQL was failing due to a database error that lead to discovering the benefits of using query suites instead of calling queries from main. 
https://github.com/github/codeql-action/issues/430
>  I would generally recommend using a query suite instead of referencing the queries directly from github/codeql:main, because the query libraries on main are not guaranteed to exactly match the query libraries bundled with the cached copy of CodeQL on Actions. Using a query suite in this way ensures you get the queries and libraries straight out of the cached CodeQL instead.

**Describe the solution you'd like**
Use query suites such as jpl.qls for all queries. 

**Describe alternatives you've considered**
Keep queries as is. 

**Requester Info**
Ariel Adams, ASRC Federal
",continuous-integration,https://github.com/nasa/cFS/issues/372
cFS Bundle Integration Candidate: 2021-10-05,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Submodule ICs

- nasa/cFE#1989

PR #363 
- Fix #129, Add CI Status Badge in README 

PR #377 
- fix #376, ""main"" branch for cfe and osal submodules 

PR #379  
- Fix #378, Updated README training link 

PR #373  
- Fix #372, Add CodeQL Query Suites 

Includes:

nasa/cFE#1978, Grammatical cleanup of requirements

nasa/cFE#1983, Build errors when using extended headers


**Testing performed**
cFS Bundle Checks <https://github.com/nasa/cFS/pull/371/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1989/checks>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu
RTEMS

**Additional context**
None


**Contributor Info - All information REQUIRED for consideration of pull request**

",,https://github.com/nasa/cFS/pull/371
"Fix #129, Add CI Status Badge in README","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #129 

**Testing performed**
Tested badges locally: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/blob/Rule1/README.md

**Expected behavior changes**
Adds badges for cfs-build and rtems five. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/363
test,,,https://github.com/nasa/cFS/issues/360
cFS Bundle Integration candidate: 2021-09-21,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #350 
- Fix #334, Add Functional Tests Step to CI 

Also Combines 

https://github.com/nasa/cFE/pull/1967 v6.8.0-rc1+dev1024  
https://github.com/nasa/osal/pull/1158 v5.1.0-rc1+dev619  
https://github.com/nasa/sch_lab/pull/92 v2.4.0-rc1+dev53  
https://github.com/nasa/sample_app/pull/155 v1.2.0-rc1+dev73  
https://github.com/nasa/to_lab/pull/105 v2.4.0-rc1+dev58  
https://github.com/nasa/ci_lab/pull/93 v2.4.0-rc1+dev46  

Includes: 

nasa/cFE#1970, Confirm sb/time reset requirements in coverage test
nasa/cFE#1953, Only check base filename in library info functional
nasa/cFE#1960, Make invalid buffer length consistent in es task test
nasa/cFE#1956, Add static local to function test so data section is nonzero
nasa/cFE#1964, Use existing /ram for FS header test
nasa/cFE#1943, add missing inclusions in CFE API headers
nasa/cFE#1948, Update name of macros/functions added to ""cfe_assert""
nasa/cFE#1950, Fix Mismatch between MSG API and test case in ""TestMsgId"" functional test
nasa/cFE#1962, Single time domain in functional time tests
nasa/cFE#1947, Fix broken link in App Developers Guide
nasa/cFE#1972, Fix #1971, avoid alias warning on some compilers 

nasa/osal#1152, Fix OSAL loader test hard fails if size exceeded
nasa/osal#1149, Enable symbol api test and MIR dump too large
nasa/osal#1155, add bsp-specific configuration flag registry
nasa/osal#1157, Add os-specifc socket flag function

nasa/ci_lab#92, Apply CFE_SB_ValueToMsgId where required

nasa/sample_app#154, Apply CFE_SB_ValueToMsgId where required

nasa/sch_lab#91, Apply CFE_SB_ValueToMsgId where required

nasa/to_lab#104, Apply CFE_SB_ValueToMsgId where required

**Testing performed**
cFS Bundle Checks <https://github.com/nasa/cFS/pull/359/checks>
cFE Checks <https://github.com/nasa/cFS/pull/359/checks>
osal Checks <https://github.com/nasa/osal/pull/1158/checks>


**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu
RTEMS (qemu)

**Additional context**
None


**Contributor Info - All information REQUIRED for consideration of pull request**

@jphickey
@skliper
@Nodraak
@ArielSAdamsNASA 
@astrogeco ",community,https://github.com/nasa/cFS/pull/359
"Add spellcheck, commit-format, and labels","This workflow intends to automate multiple repository management tasks

**Checklist (Please check before submitting)**

* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
A clear and concise description of what the contribution is.
- Include explicitly what issue it addresses [e.g. Fixes #X]

**Testing performed**
Steps taken to test the contribution:
1. Build steps '...'
1. Execution steps '...'

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLA's apply to software contributions.
",invalid,https://github.com/nasa/cFS/pull/354
"cFS Bundle Integration Candidate: 2021-09-10, Doc and Code Typos","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

Combines the following documentation PRs: 

- nasa/cFE#1915
- nasa/osal#1137
- nasa/psp#300

- nasa/ci_lab#89    
- nasa/sample_app#151
- nasa/sch_lab#84
- nasa/to_lab#101
- nasa/sample_lib#65
- nasa/elf2cfetbl#82
- nasa/tblCRCTool#53


**Testing performed**
CI

**Expected behavior changes**
None

**System(s) tested on**
Ubuntu, RTEMS

**Additional context**
Documentation updates

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@thnkslprpt 
@astrogeco",community,https://github.com/nasa/cFS/pull/352
cFS Bundle Integration candidate: 2021-09-07,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
    
Combines

nasa/cFE#1939
nasa/PSP#307
nasa/osal#1145
nasa/sch_lab#87

Includes

*cFE*

nasa/cFE#1903, Update directory diagrams in application developer guide

nasa/cFE#1922, SB code coverage improvements #1905, Improve SB coverage

nasa/cFE#1936, Improve ES code coverage

nasa/cFE#1938, Enforce minimum code coverage

nasa/cFE#1941, Support unimplemented features in MSG FT 

*OSAL* 

nasa/osal#1144, Regex update in coverage enforcement to match .0 

nasa/osal#1142, Add typecast to memchr call


*PSP*

nasa/psp#306, do not override add_psp_module for coverage test

nasa/psp#307, check that module type is not invalid


*sch_lab*

nasa/sch_lab#86, Add CmdCode to sch_lab_table

nasa/sch_lab#88, Fix missing typedef

**Testing performed**

cFS Bundle Checks <https://github.com/nasa/cFS/pull/351/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1939/checks>
PSP Checks <https://github.com/nasa/PSP/pull/307/checks>

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
Ubuntu
RTEMS

**Additional context**
None

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey 
@skliper 
@pepepr08 
@ArielSAdams ",,https://github.com/nasa/cFS/pull/351
"Fix #334, Add Functional Tests Step to CI","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #334 

**Testing performed**
Tested on fork repo. 
Deprecated Build, Test, and Run: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1198344779
Build, Test, and Run [OMIT_DEPRECATED=true]: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1198344780
Also seen in checks in this PR. 

**Expected behavior changes**
Build, test, and run workflows runs functional tests. Uses cache to reduce build time. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
",continuous-integration,https://github.com/nasa/cFS/pull/350
"Fix #300, Add JPL Queries in LGTM","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #300 

**Testing performed**
Tested in this PR - Does not show new queries/alerts in LGTM for PR

**Expected behavior changes**
LGTM uses JPL queries 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",,https://github.com/nasa/cFS/pull/349
cFS Bundle Integration Candidate: 2021-08-31,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

**Combines**

nasa/cFE#1885
nasa/osal#1138
nasa/cfs-groundsystem#195


**Includes: **

*cFE*

nasa/cFE#1870, Add SB API test cases
nasa/cFE#1869, Add ES API test cases
nasa/cFE#1872, Add TBL API test cases
nasa/cFE#1871, Add FS API test cases
nasa/cFE#1860, Add Time Clock Test
nasa/cFE#1862, EVS coverage test 
nasa/cFE#1876, SB test improvements
nasa/cFE#1865, CFE_TBL_Modified: Test CRC, updated flag
nasa/cFE#1881, Improve EVS code coverage
nasa/cFE#1877, add call to CFE_ES_ExitChildTask
nasa/cFE#1902, Incorrect OSAL Format in Users Guide Reference
nasa/cFE#1884, Improve FS coverage
nasa/cFE#1889, Improve MSG branch coverage
nasa/cFE#1891, Improve resource ID branch coverage 
nasa/cFE#1894, Improve SBR branch coverage
nasa/cFE#1896, Improve TIME branch coverage
nasa/cFE#1904, Improve TBL code coverage
nasa/cFE#1864, Support custom PSP directory 
nasa/cFE#1913, Update time tests to use bitmask check macros
nasa/cFE#1923, remove extra word in comment


*osal*

nasa/osal#1136, add bitmask assert macros

*cfs-GroundSystem*

nasa/cFS-GroundSystem#190, Add Virtualenv and Pipenv .gitignore support
nasa/cFS-GroundSystem#194, Fix doc, comment, and message typos



**Testing performed**

cFS Bundle Checks <https://github.com/nasa/cFS/pull/348/checks> 
cFE Checks <https://github.com/nasa/cFE/pull/1885/checks>

**Expected behavior changes**
See submodule Integration candidates

**System(s) tested on**
Ubuntu
RTEMS

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**

@pavll 
@skliper 
@zanzaben 
@jphickey 
@jbohren-hbr 
@ArielSAdamsNASA 
@pepepr08 
@thnkslprpt
",community,https://github.com/nasa/cFS/pull/348
"Fix #346, Use correct ref in CodeQL checkout","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #346 

Resolves broken git-checkout branch reference in the CodeQL coding
standard job.

**Testing performed**
Local github actions

**Expected behavior changes**
CodeQL coding Standard job works

**System(s) tested on**
Ubuntu CI

**Additional context**
Follow up to nasa#324

",CCB:Approved,https://github.com/nasa/cFS/pull/347
Checkout Action in Bootes.x CodeQL workflow points at wrong ref,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
When updating the checkout action references we accidentally changed the ref for checking out the codeQL repository itself. 

Fix is to simply remove the ""ref"" key from the CodeQL checkout step in the coding standard job. 

**To Reproduce**
See <https://github.com/nasa/cFS/actions/runs/1162811311>


**Expected behavior**
Clean Run

**Code snips**

```yml
      - name: Checkout codeql code      
        if: ${{ !steps.skip-workflow.outputs.skip }}
        uses: actions/checkout@v2
        with:
          repository: github/codeql 
          submodules: true 
          path: codeql
          ref: bootes.x
```

**System observed on:**
Ubuntu CI",continuous-integration,https://github.com/nasa/cFS/issues/346
Fixed minor typos in the cFS docs,"**Describe the contribution**
Fixed a few minor typos (misspelling of words) in README.md, CONTRIBUTING.md and SECURITY.md.

**Testing performed**
None (non-executable code).

**Expected behavior changes**
None (Markdown doc changes only).

**System(s) tested on**
n/a

**Additional context**
n/a

**Code contributions**
n/a
","CCB:Approved, docs, community",https://github.com/nasa/cFS/pull/343
cFS Bundle Integration Candidate: 2021-08-24,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #343 

- Fixed minor typos in the cFS docs

PR #339 
-  Fix #338, Add MISRA Addons for cppcheck 

**Combines **

https://github.com/nasa/cFE/pull/1839,  cFE  v6.8.0-rc1+dev933 

https://github.com/nasa/osal/pull/1132, osal v5.1.0-rc1+dev594


**Includes**

*osal*

nasa/osal#1131, add test case types similar to NA

*cFE*

nasa/cFE#1803, Add software bus tests
nasa/cFE#1756, separate variable for OSAL status
nasa/cFE#1828, Improve TBL coverage tests
nasa/cFE#1833, Clean up Message ID Functional Test #1824, Add missing cases for msg id func tests
nasa/cFE#1836, Adding coverage tests to cFE TIME
nasa/cFE#1848, enable strict resource id w/OMIT_DEPRECATED
nasa/cFE#1845, HOTFIX IC-20210819, type correction TBL coverage test 
nasa/cFE#1832, Consolidate msg get/set doxygen group
nasa/cFE#1806, Add test for ES BackgroundWakeup
nasa/cFE#1813, Success Test for CFE_ES_RestartApp
nasa/cFE#1814, Subscribe to Message Limit Greater Than CFE_PLATFORM_S…
nasa/cFE#1811, Success Test for CFE_ES_GetMemPoolStats
nasa/cFE#1822, Group MSG APIs documentation by header type
nasa/cFE#1816, add retroactive CFE status asserts
nasa/cFE#1854, remove unused CFE_TBL_ERR_BAD_APP_ID
nasa/cFE#1855, correct syslog message in pool create
nasa/cFE#1853, remove unused CFE_ES_POOL_BOUNDS_ERROR
nasa/cFE#1859, remove unused CFE_TBL_ERR_FILE_NOT_FOUND
nasa/cFE#1856, Check error ctr to TransmitMsg test
nasa/cFE#1857, End Child Task requirement remove error code
nasa/cFE#1782, Add functional tests for resource misc 

**Testing performed**

cFS Bundle CI <https://github.com/nasa/cFS/pull/340/checks>
cFE CI <https://github.com/nasa/cFE/pull/1839/checks>
osal CI <https://github.com/nasa/osal/pull/1132/checks>


**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu 
RTEMS (qemu)

**Additional context**
None 

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA
@pepepr08
@zanzaben
@skliper
@astrogeco
@jphickey
@nmullane
@thnkslprpt",community,https://github.com/nasa/cFS/pull/340
"Fix #338, Add MISRA Addons for cppcheck","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #338 

**Testing performed**
Tested on forked repo: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1143235812

![image](https://user-images.githubusercontent.com/69638935/129904322-22f18606-53da-47ab-986a-90fbb4fbf3a8.png)

**Expected behavior changes**
Runs MISRA rules for bundle, cfe, osal, and psp. Has a job for regular ""clean"" cppcheck and misra cppcheck.

**Additional context**
Future work includes:
- [x] Running MISRA rules for the bundle, cfe, osal, and psp. 
- [x] Showing errors in the check for errors step

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",CCB:Approved,https://github.com/nasa/cFS/pull/339
MISRA Addon for cppcheck static analysis,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Currently the cppcheck static analysis workflow does not include MISRA addons. Adding the MISRA addons allows for a more thorough static analysis check.

**Describe the solution you'd like**
Using the cppcheck addon for MISRA, the current workflow has been modified to include the MISRA addons. 

**Describe alternatives you've considered**
Alternatives might be a separate MISRA check workflow, but this way is more consolidated and easier.

**Additional context**
The cppcheck addon used can be found here: https://github.com/danmar/cppcheck/blob/main/addons/README.md
The MISRA Python addon is here: https://github.com/danmar/cppcheck/blob/main/addons/misra.py

**Requester Info**
Adrian Schalk
m225766@usna.edu
Goddard summer Intern under Ariel Adams
Midshipman, USN, US Naval Academy 


",continuous-integration,https://github.com/nasa/cFS/issues/338
cFS-bundle Integration Candidate: 2021-08-17,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**


*Combines*

nasa/cFE#1808, v6.8.0-rc1+dev873

*Includes*

- nasa/cFE#1790, Port ""CFE_UtAssert_SuccessCheck"" and related macros from coverage test to functional test #1784, add CFE assert macros to functional test

- nasa/cFE#1779, Adds invalid id syslog to for CFE_ES_DeleteApp and CFE_ES_ReloadApp and verifies required reporting
- nasa/cFE#1804, Check resource ID idx is less than max
- nasa/cFE#1785, Stop memory leak & add cds size test.
- nasa/cFE#1765, Mark read only inputs as const
- nasa/cFE#1778, Add ES Application Behavior Functional Tests
- nasa/cFE#1801, Update CFE_ES_RunLoop documentation
- nasa/cFE#1745, Add Message Api Functional Test
- nasa/cFE#1798, update in/out status and nonnull/nonzero tag
- nasa/cFE#1800, 


**Testing performed**
GitHub Actions CI

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu, RTEMS (qemu)

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
skliper
jphickey",,https://github.com/nasa/cFS/pull/337
"Fix #247, Move sample_libs into libraries dir","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Creates a new directory ""libs"" at the cFS bundle level to put libraries in. This will create a little more clarity between applications and libraries

Fixes #247

**Testing performed**
CI Ubuntu

**Expected behavior changes**
None, everything should still compile

**System(s) tested on**
Ubuntu 18.04 

**Additional context**
Might require developers to fixup their local repos once change is merged",CCB:Approved,https://github.com/nasa/cFS/pull/335
Add functional tests step to continuous integration,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**

The cFE repository has a suite of functional tests. These tests can sometimes fail when introducing new osal dependencies. These failures can be shown to be fixed at the bundle level when combining the right set of submodule references. 

**Describe the solution you'd like**
Port the functional test workflow as an extra job to the build test and run workflows. 

**Describe alternatives you've considered**
Make a separate workflow

**Additional context**
None
","enhancement, good first issue, continuous-integration",https://github.com/nasa/cFS/issues/334
cFS-Bundle Integration Candidate:2021-08-10,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

PR #332
- Fix #331, Skip deploy job instead of step 

PR #323 
- Fix #322, Add Discussions in the Contributing Guide 

**Also Combines**

- nasa/cFE#1772, v6.8.0-rc1+dev844
- nasa/osal#1127, v5.1.0-rc1+dev590


**Includes**

*cFE*

- nasa/cFE#1737, Move global count into test global struct.
- nasa/cFE#1722, Add ES application control API functional tests
- nasa/cFE#1744, update coverage test to use UtAssert macros 
- nasa/cFE#1734, Add table api functional tests
- nasa/cfe#1753, Add Generic Counter API test
- nasa/cFE#1716, Add resource ID API functional tests
- nasa/cFE#1766, Finish ES misc API functional test 
- nasa/cFE#1764, Last char truncated in coverage log output 
- nasa/cFE#1728, Mistakes in some copyright headers
- nasa/cFE#1767, Add misc time api functional test cFE
- nasa/cFE#1749, Add Functional Test for EVS Reset Filters API
- nasa/cFE#1796, replace VOIDCALL assert macro 
- nasa/cFE#1781, RTEMS CFE_FT_Global build failure


*osal* 

- nasa/osal#1117, Add absolute branch coverage check 

**Testing performed**

cFE Checks <https://github.com/nasa/cFE/pull/1772/checks>
cFS Checks <https://github.com/nasa/cFS/pull/333/checks>
osal Checks <https://github.com/nasa/osal/pull/1127/checks>

**Expected behavior changes**
See PRs


**System(s) tested on**

CI 

Ubuntu 18.04
RTEMS 4.11 (qemu)
RTEMS 5.0 (qemu)

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**

@jphickey
@zanzaben
@nmullane
@pavll
@astrogeco 
@ArielSAdamsNASA ",,https://github.com/nasa/cFS/pull/333
"Fix #331, Skip deploy job instead of step","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #331

**Testing performed**
Pushed to fork and check job skip in actions

**Expected behavior changes**
The Build Documentation workflow's deploy-usersguiude and deploy-osalguide **jobs** are skipped, see https://github.com/nasa/cFS/actions/runs/1106554863

**System(s) tested on**
GitHub CI

**Additional context**
None

",continuous-integration,https://github.com/nasa/cFS/pull/332
Skip documentation deploy job instead of step when not pushing to main,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The deploy jobs in the documentation workflow run even when the criteria for deployment are not met. This is not a problem since the git push step, which does the actual deployment does not run. 

However, this does spin up an extra VM that then gets shut down immediately. Skipping the job can shave a couple of seconds from the full CI suite.

https://github.com/nasa/cFS/blob/4ad06770be5d725037699f3f4ec44e5f5752022e/.github/workflows/build-documentation.yml#L271

**Describe the solution you'd like**
Move the if condition up one level from the deploy _step_ to the deploy **job**. 

**Describe alternatives you've considered**
Leave as is.

**Additional context**
None

**Requester Info**
Full name and company/organization if applicable
",continuous-integration,https://github.com/nasa/cFS/issues/331
cFS Integration Candidate: 2021-08-03,"## Describe the contribution

### Combines

https://github.com/nasa/osal/pull/1126, v5.1.0-rc1+dev586
https://github.com/nasa/cFE/pull/1759, v6.8.0-rc1+dev810

### Includes

#### cFE 

nasa/cFE#1752, Add null pointer check to table GetAddresses and ReleaseAddresses

nasa/cFE#1731, Explain FS Header offset & add offset functional tests.

nasa/cFE#1758, Handle fail status in GetTypeFromMsgId 

nasa/cFE#1748, Add Functional Test for EVS Send Event API 

nasa/cFE#1742, Remove SB get last message sender info requirement

nasa/cFE#1732, Update UTs to use UtAssert_MIR

nasa/cFE#1736, Add Functional Tests cFE Message ID 

nasa/cFE#1707, Add Time Conversion Functional Test

nasa/cFE#1739, Add cast to MIR prints 

#### osal 

nasa/osal#1122, Add UtAssert_MIR macro

nasa/osal#1125, add generic asserts from CFE coverage testing

nasa/osal#1121, add osapi-shell-stubs.c to OSAL stub library



## Testing performed
cFS Checks <https://github.com/nasa/cFS/pull/328/checks>
osal <https://github.com/nasa/osal/pull/1126/checks>
cFE <https://github.com/nasa/cFE/pull/1759/checks> 
- cFE failures due to osal dependency, jobs pass in bundle tests and fork
  - Coverage Tests <https://github.com/astrogeco/cFE/actions/runs/1106394822>
  - Functional Tests <https://github.com/astrogeco/cFE/actions/runs/1106394820>

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu CI

**Additional context**
None


**Contributor Info - All information REQUIRED for consideration of pull request**
@pavll
@ArielSAdamsNASA
@nmullane
@pepepr08
@skliper
@zanzaben
@jphickey 
",community,https://github.com/nasa/cFS/pull/328
Fail PRs Using Wrong Commit Template,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Force users to use the right commit message template to reduce contributors' time. 

**Describe the solution you'd like**
Create new workflow that enforces commit messages to use the format:
```
Fix #XYZ, SHORT_DESCRIPTION

LONG_DESCRIPTION (optional)
```

**Describe alternatives you've considered**
N/A

**Additional context**
Helpful Links:
https://github.com/joelparkerhenderson/git-commit-template
https://github.com/amzn/git-commit-template

**Requester Info**
Ariel Adams, ASRC Federal 
","duplicate, continuous-integration",https://github.com/nasa/cFS/issues/327
"Fix #301, Add Github workflows to bootes.x","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Redo of pull request #305 
- Added workflow directory and Codeql files for the Bootes build to fixes #301  .
- Modified  build-documentation.yml and static-analysis.yml to work with Bootes build.
- Modified the workflow README.md badges to work with bootes.x branch.


**Testing performed**
Steps taken to test the contribution:
1. Modified path for the build-documentation.yml build OSAL Guide so it could find the correct directory.
Documentation workflow [run](https://github.com/Frank393/cFS/actions/runs/1037623337)
2.  Modified path for the static-analysis.yml cfe strict cppcheck to find the correct directory.
Static analysis workflow [run](https://github.com/Frank393/cFS/actions/runs/1037623341)

**Expected behavior changes**

- With the added workflow and Codeql we can test the previous build with GitHub action and Codeql semantic code analyzer.

**System(s) tested on**
 - GitHub actions ubuntu-18.04 runner

**Contributor Info - All information REQUIRED for consideration of pull request**
Frank I. Gonzalez Soto , GSFC Code 582 intern
",CCB:Approved,https://github.com/nasa/cFS/pull/324
"Fix #322, Add Discussions in the Contributing Guide","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #322 
Add information on where to submit discussions, questions, and ideas. 

**Expected behavior changes**
Users should know to submit discussions, questions, and ideas in the Discussions tab of the cFS repository instead of creating an issue.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/323
Add Discussions in Contributing Guide,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
cFS now uses Discussions as a way to ask questions or request information. This is not in the contributing guide. 

**Describe the solution you'd like**
Add that users may start discussions or ask questions in the Discussions tab of cFS under Ways to Contribute in the Contributing Guide. 

**Requester Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/322
test,,invalid,https://github.com/nasa/cFS/issues/317
"Fix #312, Generate Documentation In All Scenarios","**Checklist (Please check before submitting)**

* [X] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #312

remove `if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}` from PDF generation installs and PDF generation. Add PDF generation installs and PDF generation steps to the previous job, so that Deploy is a separate job. 

**Testing performed**
N/A

**Expected behavior changes**
PDFs will generate no matter what while deployment is based on if it is pushed on main. 

**Additional context**
May require cache PR for successful deployment: https://github.com/nasa/cFS/pull/315

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/316
"Fix #310,  No File Found Documentation Workflow","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #310 
Workflow was failing due to files not persisting between jobs. Used cache action. 

**Testing performed**
Tested on fork: https://github.com/ArielSAdamsNASA/cFS-JSF-Rules/actions/runs/1057135024

**Expected behavior changes**
PDFs should generate. 

**Additional context**
PDFs will generate when push on main branch.


**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:Approved, CCB:FastTrack, docs, continuous-integration",https://github.com/nasa/cFS/pull/315
cFS Integration candidate: 2021-07-27,"## Context

Combines 

nasa/cFE#1701, v6.8.0-rc1+dev789
nasa/osal#1116, v5.1.0-rc1+dev578
nasa/cFS-GroundSystem#192, v2.2.0-rc1+dev58

### Tests 

### Authors 

@skliper
@jphickey
@zanzaben
@pepepr08
@nmullane
@pavll
@ArielSAdams 

## Description

### cFS PR  #304

Fix #264, CodeQL Dependent on Successful Build 

### Submodule PRs

#### cFE 

nasa/cFE#1699, correct return code check

nasa/cFE#1700, documentation for FS APIs that return OSAL codes

nasa/cFE#1695, Adding coverage tests for cfe_es_apps.c

nasa/cFE#1704, update docs for CFE_FS_BackgroundFileDumpRequest

nasa/cFE#1706, correct return code mismatches

nasa/cFE#1720, Requirements update for Caelum

nasa/cFE#1721, Add null check to CFE_ES_TaskID_ToIndex.

nasa/cFE#1719, scrub command documentation

nasa/cFE#1715, Add time arithmetic functional tests

nasa/cFE#1673, Add File Utility Functional Tests.

nasa/cFE#1711, Add custom epoch support to TIME UT

nasa/cfe#1739, Add cast to MIR prints

#### OSAL

nasa/osal#1114, Add unit test branch coverage


#### cFS Ground System

nasa/cFS-GroundSystem#185, Update tlm for ES Blockstats/memstats and TBL HK


nasa/cFS-GroundSystem#188, * might be referenced before assignment

",community,https://github.com/nasa/cFS/pull/313
Generate documentation PDF in all scenarios regardless of whether it will be pushed or not. ,"## Problem

We could have caught the [latest error](https://github.com/nasa/cFS/runs/3107101587) in the documentation build and push job if we built the PDFs every time. 


## Proposed Solution 

Only keep this condition in the ""push"" step of the job; remove it from the dependencies and document generation steps.

```yml
if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
```","good first issue, docs",https://github.com/nasa/cFS/issues/312
cFS Integration Candidate: 2021-07-20,"## Context


### Combines

https://github.com/nasa/cfe/pull/1665, v6.8.0-rc1+dev762
https://github.com/nasa/osal/pull/1113, v5.1.0-rc1+dev573

### Tests

Bundle <https://github.com/nasa/cFS/pull/311/checks>
cFE <https://github.com/nasa/cfe/pull/1665/checks>
Osal <https://github.com/nasa/osal/pull/1113/checks>

### Authors
@skliper
@jphickey
@zanzaben
@oliverhamburger

## Description



### Includes

nasa/cFE#1664, remove default .dat extension
nasa/cFE#1660, Change CI to use Test Log.
nasa/cFE#1670, Update API doxygen list
nasa/cFE#1671, update documentation for CFE_ES_GetPoolBufInfo
nasa/cFE#1674, CFE_SB_MsgHdrSize returns size_t
nasa/cFE#1668, improve SB coverage test
nasa/cFE#1694, correct function name in UT_BSP_Unlock

nasa/osal#1106, Add independent OS_rename functional test parameter checks",,https://github.com/nasa/cFS/pull/311
 No File Found for Documentation and Guides Workflow,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The OSAL and cFE Users Guide PDF documentation are not generating due to errors in the workflow. 

**To Reproduce**
See https://github.com/nasa/cFS/runs/3107101587?check_suite_focus=true

**Expected behavior**
The OSAL and cFE Users Guide PDF documentation should generate and upload to gh-pages. 

**Code snips**
`./build/docs/users_guide/latex: No such file or directory`

**System observed on:**
GitHub Actions Workflows 

**Reporter Info**
Ariel Adams, ASRC Federal 
","good first issue, docs, continuous-integration",https://github.com/nasa/cFS/issues/310
Fix #301 Port Codeql and workflows into bootes,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**

- Added workflow directory and Codeql files for the Bootes build to fixes #301  .
- Modified  build-documentation.yml and static-analysis.yml to work with Bootes build.


**Testing performed**
Steps taken to test the contribution:
1. Modified path for the build-documentation.yml build OSAL Guide so it could find the correct directory.
Documentation workflow [run](https://github.com/Frank393/cFS/actions/runs/1037623337)
2.  Modified path for the static-analysis.yml cfe strict cppcheck to find the correct directory.
Static analysis workflow [run](https://github.com/Frank393/cFS/actions/runs/1037623341)

**Expected behavior changes**

- With the added workflow and Codeql we can test the previous build with GitHub action and Codeql semantic code analyzer.

**System(s) tested on**
 - GitHub actions ubuntu-18.04 runner

**Contributor Info - All information REQUIRED for consideration of pull request**
Frank I. Gonzalez Soto , GSFC Code 582 intern
",invalid,https://github.com/nasa/cFS/pull/305
"Fix #264, CodeQL Dependent on a Successful Build","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #264 
Added workflow_run event as a trigger. 

**Testing performed**
Tested on fork. Triggered on workflow_run. Will work once workflow is integrated in main. 
![image](https://user-images.githubusercontent.com/69638935/126205571-5242209a-234a-4e49-9c56-9fbdc02c611a.png)

**Expected behavior changes**
If Build, Test, and Run [OMIT_DEPRECATED=true] fails, then CodeQL will not run. 

**Additional context**
https://stackoverflow.com/questions/62750603/github-actions-trigger-another-action-after-one-action-is-completed
Build, Test, and Run [OMIT_DEPRECATED=true] must be renamed. 

Tried 

```
    workflows: 
      - 'Build, Test, and Run [OMIT_DEPRECATED=true]'
```

```
    workflows: 
      - Build, Test, and Run [OMIT_DEPRECATED=true]
```

```
    workflows: [""Build, Test, and Run [OMIT_DEPRECATED=true]""]
```

Build, Test, and Run name works. 

Downside is that CodeQL workflow does not name what triggered the workflow such as the name of the commit. Instead it always says the name of the workflow which is CodeQL Analysis.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/304
"Fix #59, Exclude LGTM False Positives","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #59 
Excludes cpp/string-copy-return-value-as-boolean

**Testing performed**
None 

**Expected behavior changes**
No longer run against string-copy-return-value-as-boolean

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
",enhancement,https://github.com/nasa/cFS/pull/303
Port Codeql and workflows into bootes,"**Checklist (Please check before submitting)**

- [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
- [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
- [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The current build of bootes lack the Codeql  semantic code analyzer and GitHub action workflows.

**Describe the solution you'd like**
Add workflows and Codeql to the bootes build. 

**Describe alternatives you've considered**
None

**Requester Info**
Frank I. Gonzalez Soto -GSFC 582 Intern
",,https://github.com/nasa/cFS/issues/301
Add codeql configuration files to LGTM setup for better visualization,"**Checklist (Please check before submitting)**

* [ x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The setup for .lgtm.yml doesn't use the coding standard or security configuration files that we're using for github actions. Figure out how to reference them in the setup

**Code snips**
If applicable, add references to the software.

**System observed on:**
lgtm.com


**Context**

LGMT.com uses CodeQL as its backend. Although we already run these analyses on github, LGTM provides a more visual layout and dashboard to the findings report AND it is public, which increases transparency to stakeholders. 

**Alternatives**
Remove .lgtm.yml and stop using that dashboard. Figure out how to export sarif files from github runs and have LGTM read them. 

","security, continuous-integration",https://github.com/nasa/cFS/issues/300
"Fix #298, Run Documentation and Guides on Push","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #298 
PDFs only generates on push for main branch. Workflow will run on push rather than pull request. 

**Testing performed**
Tested on fork.
![image](https://user-images.githubusercontent.com/69638935/125629051-edcd19ed-970e-4a01-ad67-b1781331068c.png)

**Expected behavior changes**
PDFs will generate.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs, continuous-integration",https://github.com/nasa/cFS/pull/299
Run Documentation and Guides on Push for Main,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
PDFs are not generating for the Documentation and Guides workflow.

**To Reproduce**
https://github.com/nasa/cFS/tree/gh-pages

**Expected behavior**
PDFs will generate if the event is pushed to main.

**Code snips**
`if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}`

**Additional context**
> The problem with skipping pull requests is that it won't test the merge commit. Need to skip push if it is not to the main branch.

**Reporter Info**
Ariel Adams, ASRC Federal 
","docs, continuous-integration",https://github.com/nasa/cFS/issues/298
cFS bundle Integration candidate: 2021-07-13,"## Testing

cFS Checks <https://github.com/nasa/cFS/pull/297/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1661/checks>
osal Checks <https://github.com/nasa/osal/pull/1100/checks>

## Authors 

@skliper 
@ArielSAdamsNASA 
@jphickey 
@zanzaben 

## Description 

Combines 

<https://github.com/nasa/cFE/pull/1661>, v6.8.0-rc1+dev746
<https://github.com/nasa/osal/pull/1100>, v5.1.0-rc1+dev569

### Includes:

nasa/osal#1089, timer reconfig tests

nasa/cfe#1656, Size unit test table load buffer based on config
nasa/cfe#1657, Add SB Pipe Management Functional Tests",,https://github.com/nasa/cFS/pull/297
Changelog Workflow Failing,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The changelog workflow does not work due to a syntax error. 

**Expected behavior**
Remove total issues as this is not a valid option in the workflow. 

**Reporter Info**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/issues/295
"Fix #288, Add Workflow README","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #288 
Add a README in .github/workflows

**Expected behavior changes**
Users will know what each workflow does.

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/292
"Fix #286, Documentation Duplicate Check","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
A clear and concise description of what the contribution is.
Fixes #286.
Used with https://github.com/nasa/cFS/pull/273. 
Skips individual steps for the OSAL and cFE jobs. Does not skip the last three steps that generates the PDFs. 

**Testing performed**
Tested locally on forked repo. PDFs were updated in gh-pages branch. 
![image](https://user-images.githubusercontent.com/69638935/124638508-a7dd9a00-de50-11eb-8c79-ca8f88e13213.png)

**Expected behavior changes**
The documentation workflow should generate and update the cFE and OSAL User Guides. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal","CCB:Approved, docs",https://github.com/nasa/cFS/pull/291
"Fix #289, Add RTEMS build and test workflows","Add two workflows for building and testing cFS in both RTEMS 4.11 and 5
Add scripts folder into .github for running all unit tests inside QEMU
Use dockerhub to store docker image containing all QEMU and RTEMS
toolchain and dependencies

**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
* Added two GitHub Actions workflows to build and test cFS in RTEMS 4.11 and RTEMS 5.
* Added two bash scripts which are used in the new workflows to run every unit test in QEMU and to generate the logs for the unit tests.
* Created two docker images which are used in GitHub Actions to run the tests without having to install and configure QEMU and RTEMS. 
  * The source Dockerfiles are located [here](https://github.com/nmullane/qemu_rtems_docker) and the images can be found [here](https://hub.docker.com/repository/docker/nmullane/qemu_rtems/general).

- Fixes #289 
- Also fixes the related issue #69 

**Testing performed**
Steps taken to test the contribution:
1. Tested the behavior of the added workflows in GitHub Actions.
2. The latest runs show that not all unit tests are capable of passing in the RTEMS configuration.
   1. [RTEMS 4.11 workflow run](https://github.com/nmullane/cFS/actions/runs/991023676)
   2. [RTEMS 5 workflow run](https://github.com/nmullane/cFS/actions/runs/991023672)
   
**Expected behavior changes**
There is no expected behavior change. Additions were only made in the .github folder

**System(s) tested on**
 - GitHub Actions ubuntu 18.04 runner

**Additional context**

**Code contributions**
The only code contributions are in the .github folder.

**Contributor Info - All information REQUIRED for consideration of pull request**
Niall Mullane - GSFC 582 Intern
",CCB:Approved,https://github.com/nasa/cFS/pull/290
Add RTEMS build and test to CI,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Currently the build, test, and run GitHub Actions workflow only tests building and running on native Linux. This won't catch any errors that only affect running in RTEMS or when cross-compiling.

**Describe the solution you'd like**
Add GitHub Actions workflow to cross-compile and run unit tests in both RTEMS 5 and RTEMS 4.11 using QEMU

**Describe alternatives you've considered**
None

**Requester Info**
Niall Mullane - GSFC 582 Intern
",,https://github.com/nasa/cFS/issues/289
Provide README in .github/workflows,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Users may not know where to find detailed information about the workflows. 

**Describe the solution you'd like**
Provide a description of workflows, how to use them, and how to modify them in a README.md file. Provide a link to this file in the contributing guide. 

**Describe alternatives you've considered**
Do not create a new README.md file and instead add detailed descriptions of the workflows in the contributing guide. 

**Requester Info**
Ariel Adams, ASRC Federal ",docs,https://github.com/nasa/cFS/issues/288
Integration Candidate: 2021-06-29,"## Context

Combines: 

nasa/cFE#1654, cfe v6.8.0-rc1+dev739
nasa/osal#1098, osal v5.1.0-rc1+dev564

## Tests 

Bundle Checks <https://github.com/nasa/cFS/pull/287/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1654/checks>
osal Checks <https://github.com/nasa/osal/pull/1098/checks>

## Authors
@himanshu007-creator 
@pepepr08 
@zanzaben 
@jphickey 
@skliper 

## Description 

Includes

nasa/cFE#1444, Change index type to resolve infinite loop warning
nasa/cFE#1653, Adding coverage for cfe_es_task.c
nasa/cFE#1638, Expand FS Header Functional tests.
nasa/cFE#1637, Complete coverage for cfe_es_start.c and cfe_es_syslog.c


nasa/osal#1081, add range to OS_TaskDelay checks
nasa/osal#1085, return OS_OBJECT_ID_UNDEFINED for root task ID on RTEMS
nasa/osal#1090, increase UT symbol dump size limit
nasa/osal#1091, do not register RTOS timer for external sync
nasa/osal#1093, avoid task delete during UtPrintf
nasa/osal#1097, Add osal prefix to Network API group
nasa/osal#1092, increase timeout in network-api-test

",,https://github.com/nasa/cFS/pull/287
"Documentation deployment is being skipped as part of duplicate check, documents stale","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
See https://github.com/nasa/cFS/tree/gh-pages, documents are months stale.

**Describe the solution you'd like**
Always run the PDF generation and deployment on a push to main on github.

**Describe alternatives you've considered**
None

**Additional context**
#249 - possible race in deployment

**Requester Info**
Jacob Hageman - NASA/GSFC

Ping @ArielSAdamsNASA @astrogeco ",docs,https://github.com/nasa/cFS/issues/286
Error installing cFS bootes,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
Hi, I am trying to install cFS bootes and I am getting an error while installing it. I tried installing the cFS normal version and it installed successfully but, when I try bootes it is giving the error as shown below.

**To Reproduce**
Steps I followed:
git clone --recursive https://github.com/astrogeco/cFS.git 
cd cFS
git checkout checksum-bootes-working
export SIMULATION=native
make prep
make install (The error shows up here)


**Code snips**
pi@raspberrypi:~/cFS $ make install
make --no-print-directory -C ""build"" DESTDIR=""/home/pi/cFS/build"" mission-install
[ 50%] Building C object tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/elf2cfetbl.c.o
In file included from /home/pi/cFS/cfe/modules/core_api/fsw/inc/cfe_tbl_extern_typedefs.h:41,
                 from /home/pi/cFS/cfe/modules/core_api/fsw/inc/cfe_tbl_filedef.h:51,
                 from /home/pi/cFS/tools/elf2cfetbl/elf2cfetbl.c:42:
/home/pi/cFS/cfe/modules/core_api/fsw/inc/cfe_es_extern_typedefs.h:532:29: error: ‘CFE_MISSION_ES_CDS_MAX_FULL_NAME_LEN’ undeclared here (not in a function); did you mean ‘CFE_MISSION_ES_CDS_MAX_NAME_LEN’?
     char               Name[CFE_MISSION_ES_CDS_MAX_FULL_NAME_LEN]; /**< \brief Processor Unique Name of CDS */
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             CFE_MISSION_ES_CDS_MAX_NAME_LEN
/home/pi/cFS/cfe/modules/core_api/fsw/inc/cfe_es_extern_typedefs.h:567:36: error: ‘CFE_MISSION_ES_POOL_MAX_BUCKETS’ undeclared here (not in a function); did you mean ‘CFE_MISSION_ES_PERF_MAX_IDS’?
     CFE_ES_BlockStats_t BlockStats[CFE_MISSION_ES_POOL_MAX_BUCKETS]; /**< \cfetlmmnemonic \ES_BLKSTATS
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                    CFE_MISSION_ES_PERF_MAX_IDS
make[4]: *** [tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/build.make:63: tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/elf2cfetbl.c.o] Error 1
make[3]: *** [CMakeFiles/Makefile2:638: tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/all] Error 2
make[2]: *** [CMakeFiles/Makefile2:209: CMakeFiles/mission-install.dir/rule] Error 2
make[1]: *** [Makefile:227: mission-install] Error 2
make: *** [Makefile:123: install] Error 2

**System observed on:**
 - Hardware: Raspberry pi 4
 - OS: Raspbian

**Reporter Info**
Name: Kaushik Varma Rudraraju
College: Colorado State University
",question,https://github.com/nasa/cFS/issues/275
"Fix #272, Apply fix for Osal guide pdf generation","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ ] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
- Modified build-documentation.yml to fix #272 and successfully generate the Osal guide pdf in the documentation GitHub Actions workflow

**Testing performed**
Steps taken to test the contribution:
1. Modified the if statements in build-documentation.yml to force the Osal pdf to generate on my forked branch to ensure the fix worked properly. The output of this GitHub Actions Documentation workflow run is [here](https://github.com/nmullane/cFS/actions/runs/961655019)
2. The change to the if statements was reverted and a GitHub Actions Documentation worfklow run without this modification is [here](https://github.com/nmullane/cFS/actions/runs/961672984) 

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 -  Changed a single `cd` command in build-documentation.yml which should let the subsequent `make` call run properly
 - No expected behavior should change. This only fixes an issue with the Osal guide not being generated by GitHub Actions.

**System(s) tested on**
 - GitHub actions ubuntu-18.04 runner

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Niall Mullane, GSFC Code 582 intern",CCB:Approved,https://github.com/nasa/cFS/pull/273
GitHub action workflow fails to generate Osal guide pdf,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The GitHub action workflow, Documentation and Guides, fails to generate the Osal pdf guide. It attempts to `cd` to an incorrect directory that doesn't exist.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to the documentation [workflow](https://github.com/nasa/cFS/blob/main/.github/workflows/build-documentation.yml)
2. Modify the if statements on lines 216, 221, and 231 to let the steps continue even if not on the main branch
3. Run the Documentation and Guides workflow
4. See the error in the Osal guide job. [Here](https://github.com/nmullane/cFS/runs/2886529851?check_suite_focus=true) is the error I received on my fork running on the latest integration candidate branch.

**Expected behavior**
This GitHub action should generate the expected pdf Osal guide.

**Additional Context**
The bug originates from [this](https://github.com/nasa/cFS/blob/c2f1a2e58fad42290164baa361696464f0a3c6aa/.github/workflows/build-documentation.yml#L224) line in the workflow.

**Reporter Info**
Niall Mullane, GSFC Code 582 intern
",,https://github.com/nasa/cFS/issues/272
cFS Bundle Integration candidate: 2021-06-22,"## Authors

@nmullane
@skliper 
@jphickey 
@ArielSAdamsNASA 
@pepepr08 
@zanzaben 

## Description

### Combines: 

- nasa/cfe#1632
- nasa/osal#1079

- nasa/ci_lab#88
- nasa/sch_lab#83
- nasa/sample_app#150
- nasa/sample_lib#64
- nasa/to_lab#100

- nasa/elf2cfetbl#81
- nasa/tblCRCTool#52
- nasa/cFS-GroundSystem#183


### Includes

- nasa/cfe#1630, correct path to users guide warning log
- nasa/cfe#1621, add additional test cases for Child Tasks
- nasa/cfe#1608, Add cfe functional tests to CI
- nasa/cfe#1627, rename/clean CFE coverage assert macros
- nasa/cfe#1623, Added UT tests for cFE ES Api
- nasa/cfe#1634, Expand CDS Functional Tests.
- nasa/cfe#1633, add test log file
- nasa/cfe#1594, Fix #1320 #1583 #508, Event ID updates
- nasa/cFE#1624, scrub all UT_Report calls

- nasa/osal#1066, implement missing parameter/retcode test permutations

- nasa/cFS-GroundSystem#182, Add test start command script for cmdUtil
- nasa/tblCRCTool#51, add printf conversion casts

- nasa/tblCRCTool#51, add printf conversion casts
- nasa/cFS-GroundSystem#182, Add test start command script for cmdUtil


*Coding Standard* 

- nasa/cFS-GroundSystem#180
- nasa/elf2cfetbl#80
- nasa/tblCRCTool#49

- nasa/ci_lab#87
- nasa/sch_lab#79
- nasa/sample_app#149
- nasa/sample_lib#63
- nasa/to_lab#99




",,https://github.com/nasa/cFS/pull/270
Add CI workflow/configuration that enables strict type checking,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
The cFS CI scripts currently build with lax/weak type checking, which is the distribution default (in sample_defs) as it is more backward compatible.

**Describe the solution you'd like**
At least one CI build should enable this in `global_build_options.cmake` to enable strict type checking:

    set(MISSION_RESOURCEID_MODE STRICT)

**Additional context**
It's easy to add code that will fail w/strict type checks, unless this is enabled in CI to catch it.

**Requester Info**
Joseph Hickey, Vantage Systems, Inc.
","duplicate, enhancement, good first issue, continuous-integration",https://github.com/nasa/cFS/issues/268
Add a bot that automatically posts the current repository hash when issues are created,"**Is your feature request related to a problem? Please describe.**
When looking at really old tickets it is hard to know what they refer to 

**Describe the solution you'd like**
Bot that automatically gets the current git-sha when an issue is posted. 

**Describe alternatives you've considered**
Have a section that asks which version of the component the user is reporting the bug against",,https://github.com/nasa/cFS/issues/267
cFS Bundle Integration Candidate:2021-06-15,"## Testing

cFE https://github.com/nasa/cFE/pull/1619/checks
osal https://github.com/nasa/osal/issues/1076/checks
psp https://github.com/nasa/PSP/pull/296/checks
bundle https://github.com/nasa/cFS/pull/265/checks

## Authors

@skliper 
@jphickey 
@ArielSAdamsNASA 
@zanzaben 
@pepepr08 

## Description

**Combines**

nasa/cFE#1619 - cfe v6.8.0-rc1+dev693
nasa/osal#1076 - osal v5.1.0-rc1+dev530
nasa/PSP#296 - psp v1.5.0-rc1+dev118

**Documentation Updates:**

nasa/cfe#1598, Updated FS Read/WriteHeader API return documentation
nasa/cfe#1601, Document CFE_ES_RunLoop increment task counter behavior
nasa/cfe#1602, Document CFE_TBL_Unregister use-case
nasa/cfe#1603, Update version description per current design

**Standardize docs generation:**

nasa/cfe#1615, standardize on ""docs"" subdirectory
nasa/osal#1071, rename doc to docs
nasa/psp#294, rename doc to docs

**Coding Standard:**

nasa/osal#1042
nasa/psp#292

**Mutex for UTAssert**

nasa/cfe#1596, provide CFE assert lock/unlock
nasa/osal#1065, add mutex lock around UtAssert globals

**Resolve API-UT discrepancies:**

nasa/osal#1055, idmap API
nasa/osal#1056, file API
nasa/osal#1057, filesys API
nasa/osal#1060, socket API
nasa/osal#1064, select API

**Other cFE Fixes**

nasa/cfe#1566, Simplify CFE_FS_SetTimestamp and fix syslog typo
nasa/cfe#1592, Removed redundant check/set of CFE_CPU_ID_VALUE
nasa/cfe#1593, add time get reference error bit
nasa/cfe#1600, Add workflow to build cFE documentation
nasa/cfe#1609, Requirements updates
nasa/cfe#1610, ES/ResourceID documentation cleanup
nasa/cfe#1613, allow multiple sources in add_cfe_coverage_test
nasa/cfe#1586, add ES Misc Functional test
nasa/cfe#1607, add Mempool functional tests
nasa/cfe#1605, Clean/simplify version header and reporting
nasa/cfe#1612, doxygen cleanup
nasa/cfe#1611, Prepend system log messages with function name

**Other osal Fixes**

nasa/osal#1063, const correct OS_SelectFdIsSet
nasa/osal#1073, Fix OS_Select doxygen errors
nasa/osal#1073, Add missing OS_Select param doc
nasa/osal#1067, Add Workflow to build and verify OSAL API Guide
nasa/osal#1070, add detail design template
nasa/osal#1072, Update error codes and documentation
nasa/osal#1075, Increase UT object limit for testing

",,https://github.com/nasa/cFS/pull/265
Make CodeQL workflow dependent on a succesful build,"**Is your feature request related to a problem? Please describe.**
The CodeQL workflow runs without any knowledge of whether or not cFS can be built this prevents a ""fail-fast"" approach to testing and results in wasted github actions cycles.

**Describe the solution you'd like**
Figure out how to make the CodeQL workflow not run when the main ""build and test"" job fails.

**Describe alternatives you've considered**
None

**Additional context**
This might require the workflow or repository ""dispatch"" actions.

If successful we can follow this pattern in submodules.
",,https://github.com/nasa/cFS/issues/264
cFS Bundle Integration Candidate: 2021-06-01,"## Context 

nasa/cFE#1584
nasa/osal#1058
nasa/sch_lab#82

## Tests

cFS Bundle Checks <https://github.com/nasa/cFS/pull/263/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1584/checks>
osal Checks <https://github.com/nasa/osal/pull/1058/checks>
sch_lab Checks <https://github.com/nasa/sch_lab/pull/82/checks>


## Authors 

@jphickey 
@ArielSAdamsNASA 
@skliper 
@zanzaben 
@rosspeters6

## Description 

Includes:

nasa/cfe#1580, Update ES verify errors to match test
nasa/cfe#1578, Resolve mismatched endforeach of CMakeList.txt
nasa/cfe#1579, Improve event filter documentation
nasa/cfe#1576, EVS/FS documentation cleanup
nasa/cfe#1575, Remove shell file subtype and clarify scope
nasa/cfe#1582, Simplify file open/truncate logic
nasa/cfe#1567, Remove deprecated elements
nasa/cfe#1556, Replace Header Content Type magic number
nasa/cfe#1553, Remove unused EVS LogMode defines
nasa/cfe#1570, Document cleanup from SB/MSG/SBR review, Remove unused CFE_SB_NO_SUBSCRIBERS
nasa/cfe#1565, Add CFE_SB_DestinationD tag and use for pointers
nasa/cfe#1564, Use CFE_MSG_SequenceCount_t for seqcnt type
nasa/cfe#1562, Document CFE_ES_PoolCreateEx NumBlockSizes error handling
nasa/cfe#1560, Documentation cleanup in TBL/TIME
nasa/cfe#1558, Document TblName as app specific
nasa/cfe#1563, use OSAL script to generate API guide
nasa/cfe#1557, Include verify headers to validate config

nasa/osal#1033, include doxygen targets locally
nasa/osal#1031, Document OS_ObjectIdToArrayIndex as public
nasa/osal#1040, resolve discrepancies between binsem API and unit tests
nasa/osal#1029, add missing clock retcode tests
nasa/osal#1046, resolve discrepancies between common API and unit tests
nasa/osal#1041, resolve discrepancies between countsem API and unit tests
nasa/osal#1045, resolve discrepancies between dir API and unit tests
nasa/osal#1043, resolve discrepancies between module API and unit tests
nasa/osal#1044, resolve discrepancies between mutex API and unit tests
nasa/osal#1038, resolve discrepancies between queue API and unit tests
nasa/osal#1037, resolve discrepancies between task API and unit tests
nasa/osal#1051, resolve discrepancies between timebase API and unit tests
nasa/osal#1030, check misc API return codes
nasa/osal#1039, Rename CodeQL cFE Build and add Duplicate Job
nasa/osal#1049, filter only whole words for keyword match

nasa/osal#962, update OSAL Config Guide link

nasa/sch_lab#81, exit the main loop if init fails
nasa/cFE#1555, add doxygen aliases for OSAL parameter/retvals




",community,https://github.com/nasa/cFS/pull/263
"Fix #261, Use Full Path for Queries in CodeQL","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #261 
Use the full path of queries in CodeQL so repositories using the cFS configuration files will run CodeQL. Need to be integrated so CodeQL workflows runs with no errors. 

**Testing performed**
Tested locally in ArielSAdams/cFS@testpr

**Expected behavior changes**
Repositories such as PSP will run CodeQL with no errors. 
 
**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:FastTrack, continuous-integration",https://github.com/nasa/cFS/pull/262
Use Full Path for Queries in CodeQL,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Repositories will be using the configuration files in cFS rather than using duplicate configuration files in their own repos. Some CodeQL workflows do not work unless the full path of the queries are used such as PSP, https://github.com/nasa/PSP/pull/292.

**Describe the solution you'd like**
Use the full path for queries in CodeQL.  For example, instead of ./codeql/cpp/ql/src/JPL_C use github/codeql/cpp/ql/src/JPL_C@main. Some repositories such as cFE does not require the full path.

**Describe alternatives you've considered**
N/A

**Additional context**
Tested this locally. The PSP was throwing the error ""The configuration file ""nasa/cFS/.github/codeql/codeql-coding-standard.yml@main"" is invalid: property ""queries.uses"" is invalid as the local path ""codeql/cpp/ql/src/JPL_C"" does not exist in the repository"". This error goes away when the full path for the queries are used. 

**Requester Info**
Ariel Adams
","CCB:FastTrack, continuous-integration",https://github.com/nasa/cFS/issues/261
cFS Bundle Integration Candidate:2021-05-25,"## Testing

cFS Bundle Checks <https://github.com/nasa/cFS/pull/260/checks>

cFE Checks <https://github.com/nasa/cFE/pull/1568/checks>

osal Checks <https://github.com/nasa/osal/pull/1050/checks>

## Description

Combines:

- nasa/cfe#1568
- nasa/osal#1050

Includes:

- nasa/cfe#1524, add printf format casts
- nasa/cfe#1520, accept ""NULL"" as entry point
- nasa/cfe#1549, add capability to generate multiple tables
- nasa/cFE#1551, fixes discrepancies (return type, parameter names, etc) between function protoypes and implementation. Updates stubs accordingly

- nasa/osal#1026, Add count sem timeout test
- nasa/osal#1028, defer cancellation when BSP locked

## Authors

@jphickey
@skliper
@zachar1a
@zanzaben 

",community,https://github.com/nasa/cFS/pull/260
cFS Bundle Integration Candidate:2021-05-18,"## Description 

### PR #254 

Fix #251, Implement Coding Standard Rules in CodeQL 

[continuous-integration] Adds JPL Power of 10 rules and some MISRA rules to codql config guide to implement the updated the coding standard.  

### PR #255 

Fix #253, Add Workflow Descriptions in CONTRIBUTING.

[docs] Adds short descriptions to each of our workflows.

### PR #258 

Fix #257, Correct links to community mailing list


### Integration Candidate

nasa/cfe#1508
nasa/osal#1006

#### Includes

nasa/cfe#1482, Resolve sequence count auto-increment rollover bug
nasa/cfe#1491, Correctly format code block section terminator
nasa/cfe#1530, Fix typos in developer guide
    
nasa/osal#987, Show CodeQL Preview
nasa/osal#985, rename hooks to handlers
nasa/osal#1000, propagate status code in OS_rmdir
nasa/osal#1001, rework ""unit-tests"" to use macros
nasa/osal#1003, remove extra newlines in utassert logs
nasa/osal#990, Add test for object id inline functions
nasa/osal#998, fixed invalid inputs for OS_mkdir
nasa/osal#812, Improves config guide documentation

## Authors

@skliper 
@jbohren-hbr 
@tniessen 
@ArielSAdamsNASA 
@jphickey 
@Kronos3
@zanzaben ",community,https://github.com/nasa/cFS/pull/259
"Fix #257, Correct links to community mailing list","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #257 

The mailing list system migrated to a new server resulting in a new subscription process.

**Testing performed**
Tested subscription method from separate personal emails. 

Users should receive an email looking like the screenshot below upon subscription.

---------------------------------------

![cFS-community_confirmation_email](https://user-images.githubusercontent.com/59618057/118673958-6d983a80-b7c7-11eb-91b3-9dd74d17fd35.png)

---------------------------------------

**Expected behavior changes**
No behavior changes on cFS codebase

**System(s) tested on**
n/a

**Additional context**
Streamlined subscription method, new system only requires a single email interaction as opposed to a request/approve/confirm loop

**Code contributions**
None","CCB:Approved, CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/258
Link to join mailing list is broken,"**Checklist (Please check before submitting)**

* [X ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [ X] I performed a cursory search to see if the bug report is relevant, not redundant, nor in conflict with other tickets.

**Describe the bug**
The link in the readme file to join the community mailing list results in a ""Page Not Found"" error.  

**Reporter Info**
Beth Timmons/NASA GSFC
",,https://github.com/nasa/cFS/issues/257
cFS Bundle Integration candidate: 2021-05-11,"## Description

Integration Candidate Combines

nasa/cFE#1492, cFE v6.8.0-rc1+dev575
nasa/osal#996, osal v5.1.0-rc1+dev434

### Includes

nasa/cFE#1487, Remove broken travis-ci script
nasa/cFE#1463, generated coverage stubs for CFE core
nasa/cFE#1463, Move CFE_FS_RunBackgroundFileDump to internal API
nasa/cFE#1451, OSAL config file simplification
nasa/cFE#1489, removes --quiet option so files checked go to stdout

nasa/osal#978, configuration guide updates
nasa/osal#974, improve documentation of UtAssert API calls
nasa/osal#977, update OS_TaskCreate doc
nasa/osal#997, Enable cppcheck results output
nasa/osal#980, Scrub return values
nasa/osal#992, add local mutex to BSP console
nasa/osal#993, do not require nonblock mode


## Tests 

cFS Bundle Checks <https://github.com/nasa/cfs/pull/256/checks>
cFE Checks <https://github.com/nasa/cfe/pull/1492/checks>
osal Checks <https://github.com/nasa/osal/pull/996/checks>

## Authors

@jphickey 
@skliper ",,https://github.com/nasa/cFS/pull/256
"Fix #253, Add Workflow Descriptions in CONTRIBUTING.md","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #253 
Added short descriptions to each of our workflows. 

**Expected behavior changes**
Users should now know what our workflows are used for. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/255
"Fix #251, Implement Coding Standard Rules in CodeQL","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fix #251 
Added JPL rules to configuration guide to follow the coding standard. CodeQL provides some MISRA rules scattered in its repository. 

* cpp/ql/src/jsf/4.21 Operators/AV Rule 165.ql - MISRA Rule 5-3-2
*  cpp/ql/src/jsf/4.22 Pointers and References/AV Rule 173.ql - MISRA Rule 7-5-2
* cpp/ql/src/jsf/4.21 Operators/AV Rule 157.ql - MISRA Rule 5-14-1
* cpp/ql/src/jsf/4.21 Operators/AV Rule 168.ql - MISRA Rule 5-18-1
* cpp/ql/src/jsf/4.25 Expressions/AV Rule 202.ql - MISRA 6-2-2
* cpp/ql/src/jsf/4.20 Unions and Bit Fields/AV Rule 153.ql - MISRA Rule 9-5-1

**Testing performed**
Tested locally. JPL rules can be seen here: 
![image](https://user-images.githubusercontent.com/69638935/117461168-e15a5d80-af12-11eb-8461-b4ca0ebba161.png)

**Expected behavior changes**
CodeQL should scan for violations against JPL rules and a few MISRA rules. 

**Additional context**
Can create a separate workflows. One for the coding standards and another for the security queries. 

Note that users can search through results based on rules, but I believe this can be done one rule at a time. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/254
Add Description of Workflows in Contributing Guide,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Users may not know the purpose of each workflow we use. 

**Describe the solution you'd like**
Provide a short description of each workflow.

**Describe alternatives you've considered**
N/A

**Requester Info**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/issues/253
cFS Bundle Integration candidate: 2021-05-04,"## Description

### PR #241 

Fixes #240,

Adds instructions on how to view errors from failed workflows and how to view workflow results in both the Actions tab and pull requests. Adds a list of our workflows and their current status. Adds information on where to find and how to configure workflows.


### Integration Candidate (IC:2021-05-04)

Combines: 

https://github.com/nasa/osal/pull/979
https://github.com/nasa/cFE/pull/1481

Including: 

nasa/osal#973, UtPrintx function
nasa/osal#976, add socket shutdown implementation


## Tests 


osal Checks <https://github.com/nasa/osal/pull/979/checks>
cFE Checks  <https://github.com/nasa/cFE/pull/1481/checks>
cFS Bundle Checks <https://github.com/nasa/cFS/pull/252/checks>

## Authors
@jphickey 
@zanzaben 
@ArielSAdamsNASA 
",,https://github.com/nasa/cFS/pull/252
Implement JPL Rules in CodeQL,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
CodeQL does not use JPL rules, which is used in the upcoming coding standard. 

**Describe the solution you'd like**
Implement JPL rules for CodeQL. Continue using the security queries, but keep them separate from the JPL results. Can use two different workflows, one for the coding standard and one for the security queries. 

**Describe alternatives you've considered**
Might be able to use one workflow, as long as the results can be easily identified as a coding standard issue or security issue. 

**Additional context**
JPL queries are found here: https://github.com/github/codeql/tree/main/cpp/ql/src/JPL_C

**Requester Info**
Ariel Adams, ASRC Federal ",continuous-integration,https://github.com/nasa/cFS/issues/251
cFS Bundle Integration Candidate: 2021-04-27,"## Description


### PR #239  

Fix #231, Rename Getting Started in Contributing.md

### Combined ICs
https://github.com/nasa/cFE/pull/1431
https://github.com/nasa/osal/pull/975
https://github.com/nasa/sample_lib/pull/61

#### Includes: 

nasa/cfe#1379, memory pool pointer type
nasa/cfe#1289, ES child task functional test
nasa/cfe#1289, typo in macro name
nasa/cfe#1286, Remove broken BUILDDIR reference
nasa/cfe#1305, remove option for ""osal_compatible""
nasa/cfe#1374, CFE_SUCCESS constant type
nasa/cfe#1316, Remove Unused Error Codes
nasa/cfe#1370, better warning about malformed startup line
nasa/cfe#1373, check status of call to `CFE_ES_CDS_CachePreload`
nasa/cfe#1384, update documentation for `CFE_ES_DeleteCDS`

nasa/osal#972, update documentation for read/write
nasa/osal#966, add ""handler"" feature to utassert stub API
nasa/osal#953, Adds local makefile and bundle/local unit test actions with coverage verification
nasa/osal#971, socket accept using incorrect record
nasa/osal#959, move async console option

nasa/sample_lib#60, replace direct ref to ArgPtr with macro


## Testing

Bundle <https://github.com/nasa/cFS/pull/250/checks>
cfe <https://github.com/nasa/cFE/pull/1431/checks>
osal <https://github.com/nasa/osal/pull/975/checks>
sample_lib <https://github.com/nasa/sample_lib/pull/61/checks>

## Authors

@skliper 
@jphickey 
@zanzaben 
@ArielSAdamsNASA ",,https://github.com/nasa/cFS/pull/250
Possible race condition in documentation deploy workflow,"**Describe the bug**
Since the github actions jobs run in parallel there might be a case of two git commits trying to be pushed ""at the same time"" 

I suggest moving the multiple deploy stages from the separate doc build jobs into a separate deploy job that depends on the successful builds of all docs. Could potentially do something fancy by deploying to separate ""local"" git branches and then merging them on the deploy branch. 

**To Reproduce**
See https://github.com/nasa/cFS/pull/248/checks?check_run_id=2406018793

**Expected behavior**
All documentation can be deployed 

**Additional context**
Add any other context about the problem here.

**Reporter Info**
Full name and company/organization if applicable
","bug, continuous-integration",https://github.com/nasa/cFS/issues/249
cFS bundle Integration candidate: 2021-04-20,"## Description 

### Integration  

nasa/cFE#1406
nasa/osal#967
nasa/cFS-GroundSystem#178

### Continuous Integration Changes

- HOTFIX, Add context check to docs deploy step
- HOTFIX, Check for duplicates for all jobs in documentation workflow 
- PR https://github.com/nasa/cfs/issues/235, Rename duplicate-job for Workflows


### Documentation Changes

- PR https://github.com/nasa/cfs/issues/236, Documentation and Guides Workflow Run on All Push Events
- PR https://github.com/nasa/cfs/issues/237 Add Instructions on How to Squash and Amend Commits


## Testing

Bundle Tests <https://github.com/nasa/cFS/pull/248/checks>
cFE Checks <https://github.com/nasa/cFE/pull/1406/checks>
osal <https://github.com/nasa/osal/pull/967/checks>
cFS-GroundSystem <https://github.com/nasa/cFS-GroundSystem/pull/178/checks>


## Authors 

@astrogeco 
@jphickey 
@skliper ",,https://github.com/nasa/cFS/pull/248
Create separate app and libraries directories,"**Is your feature request related to a problem? Please describe.**
Having libraries in the apps folder can be confusing especially for beginners.

**Describe the solution you'd like**
New directory called ""lib"" or ""libs"" where libraries can ""live""

**Describe alternatives you've considered**
Add documentation justifying why it ""makes sense"" to keep libraries in the apps directory",enhancement,https://github.com/nasa/cFS/issues/247
Relationship of cFS CPU number to Linux CPU number,"Is there a definite relationship between the cFS CPU number and the number given by the Linux `ps` command?

I am working from the files in `cfe/sample_defs`, where the demo purports to run on CPU 1. It seems to me that this could mean either CPU 0 or CPU 1, in the Linux labelling system, but it is not clear which. When I actually run `ps`, however, my cFS instance is running on CPU 2, i.e. the third CPU.

Ta,
Jack",,https://github.com/nasa/cFS/issues/246
Update all community email management references for new service,"**Checklist (Please check before submitting)**

- [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
- [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
- [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Community email system is transitioning (currently May 8th target), which changes join/leave process.

**Describe the solution you'd like**
Update instructions in sync with system change over:
```
To subscribe to [INSERT LIST NAME]: 
Send an e-mail to LISTNAME-join@lists.nasa.gov (no subject or text in the body is required).

To unsubscribe to [INSERT LIST NAME]:
Send an e-mail to LISTNAME-leave@lists.nasa.gov (no subject or text in the body is required).

Having trouble subscribing or unsubscribing from a list?
Get help by sending an e-mail to the list owner at LISTNAME-owner@lists.nasa.gov
```

**Describe alternatives you've considered**
#207

**Additional context**
Note a web interface is pending.  Not clear if it will support review of archives by members.

**Requester Info**
Jacob Hageman
",docs,https://github.com/nasa/cFS/issues/245
Guide to Adding New Toolchains,"Hi,

Is there a guide anywhere for adding new toolchains? I want to add an
Aarch64 Linux toolchain, but I am confused by the example toolchains.

For example:
- What do these mean?
    - CMAKE_FIND_ROOT_PATH_MODE_PROGRAM
    - CMAKE_FIND_ROOT_PATH_MODE_LIBRARY
    - CMAKE_FIND_ROOT_PATH_MODE_INCLUDE
    - CMAKE_PREFIX_PATH
- What needs to be added, and what not? The arm-cortexa8_neon-linux-gnueabi example only specifies the compilers, whereas the i686-rtems example specifies `ld`, `as`, `strip`, `nm`, `ar`, `objdump` and `objcpy` too.

Does anyone already have a toolchain script for Linux on Aarch64?

Many thanks,

Jack",question,https://github.com/nasa/cFS/issues/244
Flywheeling in timer latency test,"I have written an app to test timer interrupt handling latency under heavy load. Two latencies are calculated, given a timer with period T and tick number J:
- the difference between (MET at tick) and (MET at last tick + T)
- the difference between (MET at tick) and (MET at first tick) + (J * T))

For ease of use, the timing process starts when the app starts, but this is problem because the clock seems to be in FLYWHEEL mode at init, but the reported mode is INVALID. Some time after cFS starts up, flywheeling stops, and then I get a jump in the clock, and my measurements jump. I'm unsure whether or not it is a bug that the clock mode is INVALID, even though the clock is flywheeling.

I have tried, as a stop-gap measure, including the time utils header from cFE, and setting the MET to (0,0) during app init, because from the documentation, I was under the impression that setting the clock would put it in VALID mode.

Can anyone shed some light on this? I have tried sending to the mailing list, but my emails just disappear - no bounce or anything.

I am on the `eval-cert3` branch.

Here is the log:

```
CFE_PSP: EEPROM Range (2) created: Start Address = 7FC658941000, Size = 00080000 Status = 0
CFE_PSP: Starting the cFE with a POWER ON reset.
CFE_PSP: Clearing out CFE CDS Shared memory segment.
CFE_PSP: Clearing out CFE Reset Shared memory segment.
CFE_PSP: Clearing out CFE User Reserved Shared memory segment.
1980-001-07:25:42.24332 POWER ON RESET due to Power Cycle (Power Cycle).
1980-001-07:25:42.24334 ES Startup: CFE_ES_Main in EARLY_INIT state
CFE_PSP: CFE_PSP_AttachExceptions Called
1980-001-07:25:42.24367 ES Startup: CFE_ES_Main entering CORE_STARTUP state
1980-001-07:25:42.24368 ES Startup: Starting Object Creation calls.
1980-001-07:25:42.24368 ES Startup: Calling CFE_ES_CDSEarlyInit
1980-001-07:25:42.24397 ES Startup: Calling CFE_EVS_EarlyInit
1980-001-07:25:42.24400 Event Log cleared following power-on reset
1980-001-07:25:42.24400 ES Startup: Calling CFE_SB_EarlyInit
1980-001-07:25:42.24449 ES Startup: Calling CFE_TIME_EarlyInit
1980-012-14:03:20.00000 ES Startup: Calling CFE_TBL_EarlyInit
1980-012-14:03:20.00060 ES Startup: Calling CFE_FS_EarlyInit
EVS Port1 66/1/CFE_EVS 1: cFE EVS Initialized. cFE DEVELOPMENT BUILD v6.8.0-rc1+dev490 (Codename: Bootes), Last Official Release: cfe v6.7.0
1980-012-14:03:20.15136 SB:Registered 4 events for filtering
EVS Port1 66/1/CFE_SB 1: cFE SB Initialized
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_SB
EVS Port1 66/1/CFE_ES 1: cFE ES Initialized
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 2: cFS Versions: cfe v6.8.0-rc1+dev490, osal v5.1.0-rc1+dev367, psp v1.5.0-rc1+dev101. cFE chksm 63032
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 91: Version Info: Mission MISEU Demo, version [unknown]
EVS Port1 66/1/CFE_SB 14: No subscribers for MsgId 0x808,sender CFE_ES
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module core_api, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module core_private, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module es, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module evs, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module fs, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module sb, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module tbl, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module time, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module osal, version git:v6.0.0-rc1-103-g65c584f
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module psp, version git:v1.5.0-rc1-101-g79b944b
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module msg, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module sbr, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 91: Version Info: Core Module resourceid, version git:v7.0.0-rc1
EVS Port1 66/1/CFE_ES 92: Build 202104141734 by jack@canary, config sample
EVS Port1 66/1/CFE_TIME 1: cFE TIME Initialized
EVS Port1 66/1/CFE_TBL 1: cFE TBL Initialized. cFE DEVELOPMENT BUILD v6.8.0-rc1+dev490 (Codename: Bootes), Last Official Release: cfe v6.7.0
1980-012-14:03:20.50285 ES Startup: Finished ES CreateObject table entries.
1980-012-14:03:20.50288 ES Startup: CFE_ES_Main entering CORE_READY state
1980-012-14:03:20.50291 ES Startup: Opened ES App Startup file: /cf/cfe_es_startup.scr
1980-012-14:03:20.50312 ES Startup: Loading file: /cf/timprof.so, APP: TIMPROF
EVS Port1 66/1/TIMPROF 30: timprof: Events registered successfully.
1980-012-13:46:40.01003 clock_state: -1
1980-012-13:46:40.02003 clock_state: -1
1980-012-13:46:40.02003 timprof: Lat [us] -1, Cumulative: -1
1980-012-13:46:40.03003 clock_state: -1
1980-012-13:46:40.03003 timprof: Lat [us] -2, Cumulative: -4
1980-012-13:46:40.04003 clock_state: -1
1980-012-13:46:40.04003 timprof: Lat [us] 0, Cumulative: -7
1980-012-13:46:40.04983 ES Startup: CFE_ES_Main entering APPS_INIT state
1980-012-13:46:40.04991 ES Startup: CFE_ES_Main entering OPERATIONAL state
1980-012-13:46:40.05003 clock_state: -1
1980-012-13:46:40.05013 timprof: Lat [us] 101, Cumulative: 91
1980-012-13:46:40.06003 clock_state: -1
1980-012-13:46:40.06004 timprof: Lat [us] -97, Cumulative: 92
1980-012-13:46:40.07003 clock_state: -1
1980-012-13:46:40.07004 timprof: Lat [us] -1, Cumulative: 92
1980-012-13:46:40.08003 clock_state: -1
1980-012-13:46:40.08003 timprof: Lat [us] -1, Cumulative: 91
1980-012-13:46:40.09003 clock_state: -1
1980-012-13:46:40.09003 timprof: Lat [us] -2, Cumulative: 88
1980-012-13:46:40.10003 clock_state: -1
1980-012-13:46:40.10004 timprof: Lat [us] 3, Cumulative: 88
1980-012-13:46:40.11003 clock_state: -1
1980-012-13:46:40.11003 timprof: Lat [us] -3, Cumulative: 85
1980-012-13:46:40.12003 clock_state: -1
1980-012-13:46:40.12003 timprof: Lat [us] 1, Cumulative: 83
1980-012-13:46:40.13003 clock_state: -1
1980-012-13:46:40.13004 timprof: Lat [us] 2, Cumulative: 83
1980-012-13:46:40.14003 clock_state: -1
1980-012-13:46:40.14003 timprof: Lat [us] -3, Cumulative: 80
1980-012-13:46:40.15004 clock_state: -1
1980-012-13:46:40.15005 timprof: Lat [us] 16, Cumulative: 93
1980-012-13:46:40.16003 clock_state: -1
1980-012-13:46:40.16003 timprof: Lat [us] -16, Cumulative: 90
1980-012-13:46:40.17003 clock_state: -1
1980-012-13:46:40.17003 timprof: Lat [us] 1, Cumulative: 88
1980-012-13:46:40.18003 clock_state: -1
1980-012-13:46:40.18004 timprof: Lat [us] 8, Cumulative: 94
1980-012-13:46:40.19003 clock_state: -1
1980-012-13:46:40.19003 timprof: Lat [us] -9, Cumulative: 91
1980-012-13:46:40.20003 clock_state: -1
1980-012-13:46:40.20003 timprof: Lat [us] 1, Cumulative: 89
1980-012-13:46:40.21003 clock_state: -1
1980-012-13:46:40.21003 timprof: Lat [us] 1, Cumulative: 88
1980-012-13:46:40.22004 clock_state: -1
1980-012-13:46:40.22004 timprof: Lat [us] 8, Cumulative: 95
1980-012-13:46:40.23003 clock_state: -1
1980-012-13:46:40.23004 timprof: Lat [us] -8, Cumulative: 94
1980-012-13:46:40.24003 clock_state: -1
1980-012-13:46:40.24003 timprof: Lat [us] 0, Cumulative: 93
1980-012-13:46:40.25003 clock_state: -1
1980-012-13:46:40.25003 timprof: Lat [us] -1, Cumulative: 91
1980-012-13:46:40.26003 clock_state: -1
1980-012-13:46:40.26003 timprof: Lat [us] 1, Cumulative: 90
1980-012-13:46:40.27003 clock_state: -1
1980-012-13:46:40.27004 timprof: Lat [us] 1, Cumulative: 90
1980-012-13:46:40.28003 clock_state: -1
1980-012-13:46:40.28003 timprof: Lat [us] -1, Cumulative: 89
1980-012-13:46:40.29003 clock_state: -1
1980-012-13:46:40.29004 timprof: Lat [us] 5, Cumulative: 93
1980-012-13:46:40.30003 clock_state: -1
1980-012-13:46:40.30003 timprof: Lat [us] -7, Cumulative: 90
1980-012-13:46:40.31003 clock_state: -1
1980-012-13:46:40.31004 timprof: Lat [us] 3, Cumulative: 90
1980-012-13:46:40.32003 clock_state: -1
1980-012-13:46:40.32004 timprof: Lat [us] 4, Cumulative: 94
1980-012-13:46:40.33003 clock_state: -1
1980-012-13:46:40.33003 timprof: Lat [us] -6, Cumulative: 92
1980-012-13:46:40.34003 clock_state: -1
1980-012-13:46:40.34003 timprof: Lat [us] -2, Cumulative: 88
1980-012-13:46:40.35003 clock_state: -1
1980-012-13:46:40.35003 timprof: Lat [us] 2, Cumulative: 86
1980-012-13:46:40.36003 clock_state: -1
1980-012-13:46:40.36003 timprof: Lat [us] 0, Cumulative: 84
1980-012-13:46:40.37003 clock_state: -1
1980-012-13:46:40.37004 timprof: Lat [us] 1, Cumulative: 83
1980-012-13:46:40.38003 clock_state: -1
1980-012-13:46:40.38004 timprof: Lat [us] 7, Cumulative: 89
1980-012-13:46:40.39003 clock_state: -1
1980-012-13:46:40.39003 timprof: Lat [us] -8, Cumulative: 87
1980-012-13:46:40.40003 clock_state: -1
1980-012-13:46:40.40003 timprof: Lat [us] 1, Cumulative: 86
1980-012-13:46:40.41003 clock_state: -1
1980-012-13:46:40.41004 timprof: Lat [us] 6, Cumulative: 91
1980-012-13:46:40.42003 clock_state: -1
1980-012-13:46:40.42004 timprof: Lat [us] -2, Cumulative: 94
1980-012-13:46:40.43000 clock_state: -1
1980-012-13:46:40.43001 timprof: Lat [us] -27, Cumulative: 70
1980-012-13:46:40.44003 clock_state: -1
1980-012-13:46:40.44003 timprof: Lat [us] 21, Cumulative: 67
1980-012-13:46:40.45003 clock_state: -1
1980-012-13:46:40.45003 timprof: Lat [us] 2, Cumulative: 66
1980-012-13:46:40.46003 clock_state: -1
1980-012-13:46:40.46003 timprof: Lat [us] -2, Cumulative: 63
1980-012-13:46:40.47003 clock_state: -1
1980-012-13:46:40.47003 timprof: Lat [us] 0, Cumulative: 60
1980-012-13:46:40.48003 clock_state: -1
1980-012-13:46:40.48003 timprof: Lat [us] 1, Cumulative: 58
1980-012-13:46:40.49003 clock_state: -1
1980-012-13:46:40.49003 timprof: Lat [us] -1, Cumulative: 55
1980-012-13:46:40.50003 clock_state: -1
1980-012-13:46:40.50003 timprof: Lat [us] 2, Cumulative: 54
1980-012-13:46:40.51003 clock_state: -1
1980-012-13:46:40.51003 timprof: Lat [us] -1, Cumulative: 52
1980-012-13:46:40.52003 clock_state: -1
1980-012-13:46:40.52003 timprof: Lat [us] 0, Cumulative: 50
1980-012-13:46:40.53003 clock_state: -1
1980-012-13:46:40.53003 timprof: Lat [us] 1, Cumulative: 49
1980-012-13:46:40.54003 clock_state: -1
1980-012-13:46:40.54004 timprof: Lat [us] 1, Cumulative: 49
1980-012-13:46:40.55003 clock_state: -1
1980-012-13:46:40.55003 timprof: Lat [us] -2, Cumulative: 47
1980-012-13:46:40.56003 clock_state: -1
1980-012-13:46:40.56004 timprof: Lat [us] 2, Cumulative: 47
1980-012-13:46:40.57003 clock_state: -1
1980-012-13:46:40.57003 timprof: Lat [us] -2, Cumulative: 45
1980-012-13:46:40.58003 clock_state: -1
1980-012-13:46:40.58004 timprof: Lat [us] 2, Cumulative: 45
1980-012-13:46:40.59003 clock_state: -1
1980-012-13:46:40.59003 timprof: Lat [us] -3, Cumulative: 42
1980-012-13:46:40.60003 clock_state: -1
1980-012-13:46:40.60003 timprof: Lat [us] 2, Cumulative: 41
1980-012-13:46:40.61003 clock_state: -1
1980-012-13:46:40.61003 timprof: Lat [us] 0, Cumulative: 40
1980-012-13:46:40.62003 clock_state: -1
1980-012-13:46:40.62003 timprof: Lat [us] -1, Cumulative: 38
1980-012-13:46:40.63004 clock_state: -1
1980-012-13:46:40.63004 timprof: Lat [us] 8, Cumulative: 44
1980-012-13:46:40.64003 clock_state: -1
1980-012-13:46:40.64003 timprof: Lat [us] -7, Cumulative: 43
1980-012-13:46:40.65003 clock_state: -1
1980-012-13:46:40.65003 timprof: Lat [us] -1, Cumulative: 41
1980-012-13:46:40.66003 clock_state: -1
1980-012-13:46:40.66003 timprof: Lat [us] 0, Cumulative: 39
1980-012-13:46:40.67003 clock_state: -1
1980-012-13:46:40.67003 timprof: Lat [us] 1, Cumulative: 38
1980-012-13:46:40.68003 clock_state: -1
1980-012-13:46:40.68003 timprof: Lat [us] -1, Cumulative: 36
1980-012-13:46:40.69003 clock_state: -1
1980-012-13:46:40.69003 timprof: Lat [us] 1, Cumulative: 35
1980-012-13:46:40.70003 clock_state: -1
1980-012-13:46:40.70003 timprof: Lat [us] -1, Cumulative: 33
1980-012-13:46:40.71003 clock_state: -1
1980-012-13:46:40.71004 timprof: Lat [us] 3, Cumulative: 34
1980-012-13:46:40.72003 clock_state: -1
1980-012-13:46:40.72003 timprof: Lat [us] -3, Cumulative: 32
1980-012-13:46:40.73003 clock_state: -1
1980-012-13:46:40.73004 timprof: Lat [us] 2, Cumulative: 32
1980-012-13:46:40.74003 clock_state: -1
1980-012-13:46:40.74003 timprof: Lat [us] -2, Cumulative: 30
1980-012-13:46:40.75003 clock_state: -1
1980-012-13:46:40.75004 timprof: Lat [us] 2, Cumulative: 30
1980-012-13:46:40.76003 clock_state: -1
1980-012-13:46:40.76003 timprof: Lat [us] -3, Cumulative: 27
1980-012-13:46:40.77003 clock_state: -1
1980-012-13:46:40.77003 timprof: Lat [us] 1, Cumulative: 25
1980-012-13:46:40.78004 clock_state: -1
1980-012-13:46:40.78004 timprof: Lat [us] 9, Cumulative: 32
1980-012-13:46:40.79003 clock_state: -1
1980-012-13:46:40.79003 timprof: Lat [us] -10, Cumulative: 29
1980-012-13:46:40.80003 clock_state: -1
1980-012-13:46:40.80004 timprof: Lat [us] 3, Cumulative: 29
1980-012-13:46:40.81003 clock_state: -1
1980-012-13:46:40.81003 timprof: Lat [us] -3, Cumulative: 26
1980-012-13:46:40.82003 clock_state: -1
1980-012-13:46:40.82003 timprof: Lat [us] 0, Cumulative: 23
1980-012-13:46:40.83003 clock_state: -1
1980-012-13:46:40.83003 timprof: Lat [us] 1, Cumulative: 21
1980-012-13:46:40.84003 clock_state: -1
1980-012-13:46:40.84003 timprof: Lat [us] 0, Cumulative: 19
1980-012-13:46:40.85003 clock_state: -1
1980-012-13:46:40.85004 timprof: Lat [us] 8, Cumulative: 25
1980-012-13:46:40.86003 clock_state: -1
1980-012-13:46:40.86004 timprof: Lat [us] -3, Cumulative: 28
1980-012-13:46:40.87003 clock_state: -1
1980-012-13:46:40.87003 timprof: Lat [us] -5, Cumulative: 26
1980-012-13:46:40.88003 clock_state: -1
1980-012-13:46:40.88003 timprof: Lat [us] 1, Cumulative: 25
1980-012-13:46:40.89003 clock_state: -1
1980-012-13:46:40.89004 timprof: Lat [us] 1, Cumulative: 25
1980-012-13:46:40.90003 clock_state: -1
1980-012-13:46:40.90003 timprof: Lat [us] -2, Cumulative: 23
1980-012-13:46:40.91003 clock_state: -1
1980-012-13:46:40.91003 timprof: Lat [us] 0, Cumulative: 21
1980-012-13:46:40.92003 clock_state: -1
1980-012-13:46:40.92003 timprof: Lat [us] -1, Cumulative: 18
1980-012-13:46:40.93003 clock_state: -1
1980-012-13:46:40.93003 timprof: Lat [us] 2, Cumulative: 17
1980-012-13:46:40.94003 clock_state: -1
1980-012-13:46:40.94003 timprof: Lat [us] -2, Cumulative: 14
1980-012-13:46:40.95003 clock_state: -1
1980-012-13:46:40.95004 timprof: Lat [us] 2, Cumulative: 13
1980-012-13:46:40.96003 clock_state: -1
1980-012-13:46:40.96003 timprof: Lat [us] 0, Cumulative: 12
1980-012-13:46:40.97003 clock_state: -1
1980-012-13:46:40.97003 timprof: Lat [us] -2, Cumulative: 9
1980-012-13:46:40.98003 clock_state: -1
1980-012-13:46:40.98003 timprof: Lat [us] -1, Cumulative: 5
1980-012-13:46:40.99003 clock_state: -1
1980-012-13:46:40.99004 timprof: Lat [us] 5, Cumulative: 6
1980-012-13:46:41.00003 clock_state: -1
1980-012-13:46:41.00003 timprof: Lat [us] -3, Cumulative: 4
1980-012-13:46:41.01003 clock_state: -1
1980-012-13:46:41.01003 timprof: Lat [us] -1, Cumulative: 1
1980-012-13:46:41.02003 clock_state: -1
1980-012-13:46:41.02003 timprof: Lat [us] 0, Cumulative: -2
1980-012-13:46:41.03003 clock_state: -1
1980-012-13:46:41.03003 timprof: Lat [us] 0, Cumulative: -5
1980-012-13:46:41.04003 clock_state: -1
1980-012-13:46:41.04003 timprof: Lat [us] 2, Cumulative: -6
1980-012-13:46:41.05003 clock_state: -1
1980-012-13:46:41.05004 timprof: Lat [us] 1, Cumulative: -6
1980-012-13:46:41.06003 clock_state: -1
1980-012-13:46:41.06004 timprof: Lat [us] 4, Cumulative: -2
1980-012-13:46:41.07003 clock_state: -1
1980-012-13:46:41.07003 timprof: Lat [us] -7, Cumulative: -5
1980-012-13:46:41.08003 clock_state: -1
1980-012-13:46:41.08003 timprof: Lat [us] 0, Cumulative: -8
1980-012-13:46:41.09003 clock_state: -1
1980-012-13:46:41.09003 timprof: Lat [us] 0, Cumulative: -11
1980-012-13:46:41.10003 clock_state: -1
1980-012-13:46:41.10003 timprof: Lat [us] 2, Cumulative: -12
1980-012-13:46:41.11003 clock_state: -1
1980-012-13:46:41.11004 timprof: Lat [us] 2, Cumulative: -11
1980-012-13:46:41.12003 clock_state: -1
1980-012-13:46:41.12003 timprof: Lat [us] -4, Cumulative: -14
1980-012-13:46:41.13003 clock_state: -1
1980-012-13:46:41.13003 timprof: Lat [us] 2, Cumulative: -15
1980-012-13:46:41.14003 clock_state: -1
1980-012-13:46:41.14003 timprof: Lat [us] 0, Cumulative: -16
1980-012-13:46:41.15003 clock_state: -1
1980-012-13:46:41.15003 timprof: Lat [us] 0, Cumulative: -17
1980-012-13:46:41.16003 clock_state: -1
1980-012-13:46:41.16004 timprof: Lat [us] 0, Cumulative: -18
1980-012-13:46:41.17003 clock_state: -1
1980-012-13:46:41.17003 timprof: Lat [us] 0, Cumulative: -19
1980-012-13:46:41.18003 clock_state: -1
1980-012-13:46:41.18003 timprof: Lat [us] 0, Cumulative: -20
1980-012-13:46:41.19003 clock_state: -1
1980-012-13:46:41.19004 timprof: Lat [us] 0, Cumulative: -21
1980-012-13:46:41.20003 clock_state: -1
1980-012-13:46:41.20004 timprof: Lat [us] 1, Cumulative: -21
1980-012-13:46:41.21003 clock_state: -1
1980-012-13:46:41.21004 timprof: Lat [us] 1, Cumulative: -20
1980-012-13:46:41.22003 clock_state: -1
1980-012-13:46:41.22003 timprof: Lat [us] -3, Cumulative: -22
1980-012-13:46:41.23003 clock_state: -1
1980-012-13:46:41.23003 timprof: Lat [us] 0, Cumulative: -24
1980-012-13:46:41.24003 clock_state: -1
1980-012-13:46:41.24003 timprof: Lat [us] -1, Cumulative: -27
1980-012-13:46:41.25003 clock_state: -1
1980-012-13:46:41.25003 timprof: Lat [us] 2, Cumulative: -28
1980-012-13:46:41.26003 clock_state: -1
1980-012-13:46:41.26003 timprof: Lat [us] -2, Cumulative: -31
1980-012-13:46:41.27003 clock_state: -1
1980-012-13:46:41.27003 timprof: Lat [us] 1, Cumulative: -33
1980-012-13:46:41.28003 clock_state: -1
1980-012-13:46:41.28003 timprof: Lat [us] 0, Cumulative: -35
1980-012-13:46:41.29003 clock_state: -1
1980-012-13:46:41.29003 timprof: Lat [us] 0, Cumulative: -37
EVS Port1 66/1/CFE_TIME 21: Stop FLYWHEEL
1980-012-13:46:41.00692 clock_state: -1
1980-012-13:46:41.00693 timprof: Lat [us] -293108, Cumulative: -293147
1980-012-13:46:41.01692 clock_state: -1
1980-012-13:46:41.01693 timprof: Lat [us] 2, Cumulative: -586255
1980-012-13:46:41.02692 clock_state: -1
1980-012-13:46:41.02693 timprof: Lat [us] 1, Cumulative: -879362
```",,https://github.com/nasa/cFS/issues/243
cFS bundle Integration Candidate: 2021-04-13,"## Description

Combines

<https://github.com/nasa/osal/pull/956>
<https://github.com/nasa/cfe/pull/1295>

## Test

cFS Bundle checks <https://github.com/nasa/cfe/pull/1295/checks>

## Authors

@jphickey",,https://github.com/nasa/cFS/pull/242
"Fix #240,  Add Instruction on How To Use Workflows in Contributing.md","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #240
- Added instructions on how to view errors from failed workflows
- Added instructions on how to view workflow results in the Actions tab and in pull requests
- Added a list of our workflows and the status of them
- Added information on how to configure workflows and where to find them

**Expected behavior changes**
Users should know how to use our workflows.

**Additional context**
Used Reference: https://docs.github.com/en/actions/quickstart
Used Example: https://github.com/TommyLin/focus-stacking/wiki/Github-Actions

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, docs",https://github.com/nasa/cFS/pull/241
Add Instructions on How to Use Workflows in Contributing.md,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
Users may not know how to use our GitHub Actions Workflows. 

**Describe the solution you'd like**
Add instructions on how to use our Github Actions Workflows under Writing High Quality Code. Instructions includes where workflows can be found, how to analyze or interpret results, how to run and configure workflows. Provide links for additional information on each workflow. 

**Describe alternatives you've considered**
This can be added in a new section. 

**Additional context**
Reference: https://docs.github.com/en/actions/quickstart
Example: https://github.com/TommyLin/focus-stacking/wiki/Github-Actions

**Requester Info**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/issues/240
"Fix #231, Rename Getting Started in Contributing.md","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #231 
- Renamed Getting Started to Quick Links to Submodules
- Linked the Report Bugs and Feature Requests sections in Quick Links to Submodules
- Linked Quick Links to Submodules in the Report Bugs section
- Linked Quick Links to Submodules in the Feature Requests sections 

**Testing performed**
Tested links locally. 

**Expected behavior changes**
Users should know all the submodules where bugs or feature requests may be reported. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/pull/239
cFS Bundle Integration Candidate: 2021-04-06,"## Describe the contribution

Includes 
<https://github.com/nasa/PSP/pull/289>
<https://github.com/nasa/osal/pull/951>
<https://github.com/nasa/cFE/pull/1284>

## Tests
Bundle Checks: <https://github.com/nasa/cFS/pull/238/checks>


## Authors
",,https://github.com/nasa/cFS/pull/238
"Fix #226, Add Instructions on How to Squash and Amend Commits","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #226

- Added How to Squash Commits.
- Added How to Amend Commits.
- Added that users may use the format `Fix #XYZ, LONG_DESCRIPTION` for commit messages if necessary. 
- Added to create a commit message per topic and provided an example. 
- Added reference to https://chris.beams.io/posts/git-commit/

**Expected behavior changes**
Users should know how to squash and amend commits. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal ",docs,https://github.com/nasa/cFS/pull/237
"Fix #234, Documentation and Guides Workflow Run on All Push Events","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #234
- Removed the main branch for push so that the workflow runs on all branches for push and pull requests. 
- Added the duplicate jobs action so that the workflow does not run any duplicate jobs. 

**Testing performed**
Tested [locally](https://github.com/ArielSAdamsNASA/cFS/actions/runs/722775122)

**Expected behavior changes**
- The Documentation and Guides workflow should run on all push events. For example, when users push code to their forked repos, the Documentation and Guides workflow should run. 
- When a user pushes code to a pull request, the workflow should not run duplicate jobs for both push and pull requests. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal ",continuous-integration,https://github.com/nasa/cFS/pull/236
"Fix #232, Rename duplicate-job for Workflows","**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

**Describe the contribution**
Fixes #232 
Rename the duplicate-job job to checks-for-duplicates.

**Expected behavior changes**
Users should be able to understand the purpose of this job. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:Approved, continuous-integration",https://github.com/nasa/cFS/pull/235
Documentation and Guides workflow doesn't run for all push events,"**Describe the bug**
The ""documentation and guides"" CI workflow still has the old push->main branch restriction so it won't run on other branches in forks.


**To Reproduce**
Create a new branch and push to it. The documentation workflow will not run

**Expected behavior**
Workflow should run on all branches

**Code snips**

```
on:
  push:
    branches:
      - main

  pull_request:
```

**System observed on:**
Github UI

**Additional context**
See #224 for how to run on all branches without duplicates
",continuous-integration,https://github.com/nasa/cFS/issues/234
cFS bundle Integration Candidate:2021-04-02,"## Description

Includes 
https://github.com/nasa/cFE/pull/1279
https://github.com/nasa/PSP/pull/288


## Testing performed
Bundle tests: https://github.com/nasa/cFS/pull/233/checks

## Expected behavior changes
See submodule pr

## Authors

@astrogeco 
@jphickey ",,https://github.com/nasa/cFS/pull/233
"Rename ""duplicate-job"" job on workflows","Can we name this step ""check-for duplicates""? We can open a new issue for this.

_Originally posted by @astrogeco in https://github.com/nasa/cFS/pull/224#discussion_r606009724_",,https://github.com/nasa/cFS/issues/232
"Rename ""getting started"" section in Contributing guide","The getting started section probably needs a rename now since it isn't really about ""getting started"" anymore.

_Originally posted by @astrogeco in https://github.com/nasa/cFS/pull/218#discussion_r606002294_",,https://github.com/nasa/cFS/issues/231
Fix build steps in Readme.md,"**Is your feature request related to a problem? Please describe.**
The steps in readme are missing the copy sample_defs part

```
make SIMULATION=native prep
make
make install
cd build/exe/cpu1/
./core-cpu1
```

**Describe the solution you'd like**
Delete, refer to another doc, or fix

",,https://github.com/nasa/cFS/issues/230
SB Message data ,"hello everyone,

Sorry for the basic question. i’m new to cFS - I’ve tried for a few days now and having a some difficulty with SB messages. 

I’ve read through the development guide and API - and I can’t figure out how to properly attach data to a SB message. 

I can send and receive messages, but when I mount the pointer to a variable - all the data assigned in my structs are empty. 

How do I properly mount custom data to my SB messages?

Corey Carter - NASA Pathways",question,https://github.com/nasa/cFS/issues/229
CodeQL,,invalid,https://github.com/nasa/cFS/pull/228
cFS bundle Integration candidate: 2021-03-30,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

## Describe the contribution
Includes

<https://github.com/nasa/cfe/pull/1258>
<https://github.com/nasa/osal/pull/927>
<https://github.com/nasa/PSP/pull/279>
<https://github.com/nasa/sample_app/pull/145>
<https://github.com/nasa/ci_lab/pull/85>
<https://github.com/nasa/to_lab/pull/97>
<https://github.com/nasa/sch_lab/pull/76>

### Other Fixes

Fix #205, Remove Duplicate Workflows 
Fix #208, Add Writing High Quality Code 
Fix #201, Create Changelog GitHub Actions Workflow 


## Testing performed
bundle checks <https://github.com/nasa/cFS/pull/227/checks>

## Expected behavior changes
See submodule PRs 

### PR #224 

All workflows now run on any branch after a push event. This allows all checks to run on forked repositories so users can  test their commits before submitting a pull request. Adds check for duplicate workflow triggers.

### PR #218 

Add ""writing high quality code"" section to contributing guide that references style guide and naming conventions.

### PR #202 

Adds a new  manually-triggered workflow to generate a changelog


## Authors
@jphickey 
@zanzaben 
@skliper 
@astrogeco
@ArielSAdamsNASA 
@ejtimmon ",,https://github.com/nasa/cFS/pull/227
Add links or instructions to pull request squash and ammend section,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
* [x] I performed a cursory search to see if the feature request is relevant, not redundant, nor in conflict with other tickets.

**Is your feature request related to a problem? Please describe.**
```.md
Once a Pull Request Ready for Review

    Verify the commit message and PR title use the template Fix #XYZ, SHORT_DESCRIPTION.
    Verify there is only one commit message. Squash or amend the commit messages if necessary.
    Verify that the PR passes all checks.
    The project team will label the issue and evaluate the pull request in the weekly configuration control board (CCB) meeting. For more information, visit The cFS CCB Process.
    If the pull request is accepted, it will be merged into cFS.

```

**Describe the solution you'd like**
Add links to instructions of ""how"" to squash a commit using git rebase or how to ammend a commit

**Describe alternatives you've considered**
Leave as is and address with users on a one-on-one, per PR basis

",docs,https://github.com/nasa/cFS/issues/226
HOTFIX Integration Candidate:2021-03-23,"**Checklist (Please check before submitting)**

* [x] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
* [x] I signed and emailed the appropriate Contributor License agreement to GSFC-SoftwareRelease@mail.nasa.gov and copied cfs-program@lists.nasa.gov.

## Describe the contribution
Adds nasa/osal#910 that was missing from IC:2021-03-23

## Testing performed
Bundle Tests <https://github.com/nasa/cFS/pull/225/checks> 
Osal Tests <https://github.com/nasa/osal/pull/925/checks>

## Expected behavior changes
See nasa/osal#910

## Authors
@jphickey ",,https://github.com/nasa/cFS/pull/225
"Fix #205, Remove Duplicate Workflows","**Describe the contribution**
Fix #205 
Removed the main branch in the static analysis, deprecated build, run, and test, and omit deprecated workflows for push. All four workflows, codeql, static analysis, deprecated build, run, and test, and omit deprecated uses a GitHub action to skip any duplication workflows. 

**Testing performed**
Tested on my [forked repository](https://github.com/ArielSAdamsNASA/cFS/pull/8/checks). Created a pull request and pushed changes to test. 

**Expected behavior changes**
The static analysis, deprecated build, run, and test, and omit deprecated workflows now run on all branches when code is pushed. The codeql workflow already allowed this. The changes allow the workflows to run on all branches when users are wanting to test their commits on their forked repos. 

The GitHub action used skips push workflows, instead of pull request workflows, and does not cause these skips to fail the checks. So, there should be no duplicate GitHub Actions Workflows. 

**Additional context**
References: https://github.com/fkirc/skip-duplicate-actions/#skip-concurrent-workflow-runs, https://github.com/marketplace/actions/skip-duplicate-actions

Travis CI still runs for all push and pull requests and there are duplicate runs for this tool when tested on the forked repo pull request. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
",continuous-integration,https://github.com/nasa/cFS/pull/224
cFS Bundle Integration Candidate: 2021-03-23,"## Describe the contribution
Includes 
<https://github.com/nasa/cfe/pull/1243>
<https://github.com/nasa/osal/pull/917>
<https://github.com/nasa/psp/pull/273>
<https://github.com/nasa/sample_app/pull/137>
<https://github.com/nasa/sample_lib/pull/55>
<https://github.com/nasa/cFS-GroundSystem/pull/171>

## Testing
See checks tab 
<https://github.com/nasa/cFS/pull/223/checks>

See submodule Integration Candidates

## Expected behavior changes

See submodule integration candidates

**Contributor Info - All information REQUIRED for consideration of pull request**
@ArielSAdamsNASA 
@skliper 
@zanzaben 
@jphickey 
@evanfitzgerald
@zachar1a",,https://github.com/nasa/cFS/pull/223
"Fix #211, Add Checklist To Pull Request Template","**Describe the contribution**
Fix #211
Added a checklist to the pull request template to enforce users to review the contributing guide and ensure they sign the contributor agreement. 

**Expected behavior changes**
The checklist helps enforce our standards when submitting pull requests. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/pull/222
"Fix #210, Add Checklist to Feature Request Template","**Describe the contribution**
Fix #210 
Added a checklist to the feature request template to enforce users to review the contributing guide, ensure their feature is not in future work, and ensure that their feature is is relevant, not redundant, nor in conflict with other tickets.

**Expected behavior changes**
The checklist helps prevent redundant or irrelevant feature requests from being submitted. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/pull/221
"Fix #209, Add Checklist to Bug Report Template","**Describe the contribution**
Fix #209
Added a checklist to the bug report template to enforce users to review the contributing guide and ensure that their bug report is is relevant, not redundant, nor in conflict with other tickets.

**Expected behavior changes**
The checklist helps prevent redundant or irrelevant issues from being submitted. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/pull/220
cFS Bundle Integration candidate: 2021-03-12,"**Describe the contribution**
https://github.com/nasa/cFE/pull/1222
https://github.com/nasa/PSP/pull/268
https://github.com/nasa/ci_lab/pull/78 (no version bump)
https://github.com/nasa/to_lab/pull/91 (no version bump)

**Testing performed**
CI

**Expected behavior changes**
See related PR's

**System(s) tested on**
CI

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey",,https://github.com/nasa/cFS/pull/219
"Fix #208, Add Writing High Quality Code","**Describe the contribution**
Fix #208 
Add Writing High Quality Code to the Contributing Guide

**Expected behavior changes**
Users should know how to write high quality code and how to use the GitHub Action Workflows. 

**Additional context**
The Writing High Quality Code provides instructions for only the two static code analyzers used in GitHub Actions. 
Should we add instructions for both Deprecated and OMIT_DEPRECATED Build, Test, and Run workflows? They only run when code is pushed to the main branch. If we want to add this, either the workflow needs to change so it is trigger for all branches or additional instructions must be provided for users so they can manually change the workflow files. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/pull/218
"Fix #216, Create Separate Document for Code of Conduct","**Describe the contribution**
Fix #216 
Created a separate document for code of conduct. Added a link to code of conduct in the contributing guide. Moved the Getting Started section to the bottom of the page. 

**Expected behavior changes**
The contributing guide is not as crowded or long. The code of conduct is in a separate document. 

**Additional context**
References: https://github.com/atom/atom/blob/master/CONTRIBUTING.md#code-of-conduct

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/pull/217
Create Separate Document for Code of Conduct,"**Is your feature request related to a problem? Please describe.**
The code of conduct takes up a lot of space in the contributing guide. 

**Describe the solution you'd like**
Create a separate document for the code of conduct and link to it in the contributing guide.

**Additional context**
References: https://github.com/atom/atom/blob/master/CONTRIBUTING.md#code-of-conduct

**Requester Info**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/issues/216
HOTFIX Integration candidate: 2021-03-12,"**Describe the contribution**
Adds version bumps and readme updates to:

- nasa/ci_lab#79
- nasa/to_lab#92

Points to respective ""main"" branches after IC:2021-03-12 merge: 
- nasa/cFE#1222 
- nasa/psp#269 
",,https://github.com/nasa/cFS/pull/215
 cFS Bundle Integration Candidate: 2021-03-05,"**Describe the contribution**
https://github.com/nasa/tblCRCTool/pull/45
https://github.com/nasa/elf2cfetbl/pull/75
https://github.com/nasa/cFS-GroundSystem/pull/167
https://github.com/nasa/PSP/pull/260
https://github.com/nasa/osal/pull/838
https://github.com/nasa/cFE/pull/1213
https://github.com/nasa/to_lab/pull/89
https://github.com/nasa/sch_lab/pull/71
https://github.com/nasa/sample_lib/pull/50
https://github.com/nasa/sample_app/pull/130
https://github.com/nasa/ci_lab/pull/76

**Testing performed**
CI

**Expected behavior changes**
See related PR's

**System(s) tested on**
CI

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey @ArielSAdamsNASA @zanzaben ",,https://github.com/nasa/cFS/pull/214
cFS Bundle Integration Candidate: 2021-03-05,"**Describe the contribution**
A clear and concise description of what the contribution is.
- Include explicitly what issue it addresses [e.g. Fixes #X]

**Testing performed**
Steps taken to test the contribution:
1. Build steps '...'
1. Execution steps '...'

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLA's apply to software contributions.
",invalid,https://github.com/nasa/cFS/pull/213
IC 20210305 - submodule updates,"**Describe the contribution**
Dummy pull request to trigger actions, real PR to follow additional merges.

We need to make CI run on all branch pushes (so it can be analyzed in a fork...)

**Testing performed**
CI

**Expected behavior changes**
See real PR

**System(s) tested on**
CI

**Additional context**
NA

**Contributor Info - All information REQUIRED for consideration of pull request**
See real PR",invalid,https://github.com/nasa/cFS/pull/212
Provide a Checklist for Pull Requests,"Is your feature request related to a problem? Please describe.
To ensure our standard of creating a pull request is enforced, checklists can be used.

Describe the solution you'd like
Implement a checklist feature for pull requests. For example, a checklist can ensure that users follow the naming conventions, tested the code, signed the contributor licenses, etc. 

Additional context
References: https://gist.github.com/sherakama/0ba17601381e3adbe0cad566ad4d80a5

Requester Info
Ariel Adams, ASRC Federal",docs,https://github.com/nasa/cFS/issues/211
Provide a Checklist for Feature Request Template,"**Is your feature request related to a problem? Please describe.**
To ensure our standard of creating a new issue is enforced, checklists can be used. 

**Describe the solution you'd like**
Implement a checklist feature for the Feature Request template. For example, a checklist can ensure that users checked for similar existing requests before submitting a new issue, ensure users checked that the request is not in our README.MD under  major future work, and ensure users are submitting the issue in the correct repo. 

**Additional context**
References: https://github.com/wireapp/wire-ios/issues/4921

**Requester Info**
Ariel Adams, ASRC Federal",docs,https://github.com/nasa/cFS/issues/210
Provide a Checklist for Bug Report Template,"**Is your feature request related to a problem? Please describe.**
To ensure our standard of creating a new issue is enforced, checklists can be used. 

**Describe the solution you'd like**
Implement a checklist feature for the Bug Report template. For example, a checklist can ensure that users checked for similar existing issues before submitting a new issue and ensure users are submitting the issue in the correct repo. 

**Additional context**
References: https://github.com/wireapp/wire-ios/issues/4921

**Requester Info**
Ariel Adams, ASRC Federal",docs,https://github.com/nasa/cFS/issues/209
Complete Writing High Quality Code for Contributing.MD,"**Is your feature request related to a problem? Please describe.**
Provide instructions to users on how to write high quality code. 

**Describe the solution you'd like**
Complete the Writing High Quality Code section to add to the Contributing Guide. 

**Additional context**
The draft so far:

## Writing High-Quality Code

1. Follow cFS code conventions (formatting, symbol naming, file naming, etc) but do *not* change/reformat existing code except to address your changes.

2. For any new API's, add unit tests to cover nominal and off-nominal conditions.

3. Add/edit stubs to the unit test codebase for any new/modified functions.

4. For any changes to existing API's, alter the unit tests to cover the changes (and remove tests made irrelevant due to your changes).

5. Test your code, on a Linux platform (at minimum) --
    _TODO:_ Specific distros/versions/CPU architectures of Linux?

6. Build your code, including unit tests.
    _TODO:_ need ""standard"" build process.

6. Run the unit tests (all passed, yes?)
    _TODO:_ need ""standard"" test procedure.

7. Run the main cfs executable (no errors reported, yes?)
    _TODO:_ need ""standard"" test procedure, including targets.cmake recommendations.

8. ?? Do we expect contributors to run coverage ?? Guessing no.

**Requester Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/208
Community space for Q&A and support,Continuing the discussion about Questions and support started in #195. ,,https://github.com/nasa/cFS/issues/207
RPI3 buffer warning/make error. ,"```
/home/pi/Desktop/sat/cFS/cfe/fsw/cfe-core/src/sb/cfe_sb_buf.c: In function ‘CFE_SB_GetBufferFromPool’:
/home/pi/Desktop/sat/cFS/cfe/fsw/cfe-core/src/sb/cfe_sb_buf.c:94:21: error: cast increases required alignment of target type [-Werror=cast-align]
     bd->Buffer    = (CFE_SB_Buffer_t *)address;
                     ^
cc1: all warnings being treated as errors
```

given its just a warning I tried to suppress it with the ol' `make -k`

and this pops

```
make[6]: Target 'all' not remade because of errors.
make[5]: *** [Makefile:141: all] Error 2
make[4]: *** [CMakeFiles/native_default_cpu1-all.dir/build.make:57: CMakeFiles/native_default_cpu1-all] Error 2
make[4]: Target 'CMakeFiles/native_default_cpu1-all.dir/build' not remade because of errors.
make[3]: *** [CMakeFiles/Makefile2:298: CMakeFiles/native_default_cpu1-all.dir/all] Error 2
make[3]: Target 'CMakeFiles/mission-all.dir/all' not remade because of errors.
make[2]: *** [CMakeFiles/Makefile2:177: CMakeFiles/mission-all.dir/rule] Error 2
make[2]: Target 'mission-all' not remade because of errors.
make[1]: *** [Makefile:214: mission-all] Error 2
make: *** [Makefile:120: all] Error 2
```

Trying to compile on raspberry OS with a RPI 3B works on ubuntu 18.04 following the same steps. 

any help is appreciated tried main and integration-candidate  

new to git sorry if i missed anything,. ",question,https://github.com/nasa/cFS/issues/206
Some GitHub Actions workflows not running in some branches and forks,"**Describe the bug**
Workflows only run in the `main` branch of a forked repo for submodules (and maybe the bundle as well)

**To Reproduce**
1. Create a new branch in nasa repo or fork
2. Push a change to the branch 
3. Observe GitHub Action Workflow dashboard and notice that workflows DO NOT run for your new branch

**Expected behavior**
Workflows should run for branches in forks and in nasa repo

**Code snips**
Probably due to this section in our workflows

```
on:
  push:
    branches:
      - main
  pull_request:
```

**System observed on:**
Ubuntu 18.04 (github workflows runner)

**Additional context**
Can be worked around by creating a pull request on your fork that targets the branch you're working on

**Reporter Info**
Full name and company/organization if applicable
","bug, continuous-integration",https://github.com/nasa/cFS/issues/205
cFS Bundle Integration Candidate: 2021-03-02,"**Describe the contribution**
Fix #194, Create Contributing.md
Fix #196, Add Testing Tools to the Security Policy 

Combines

https://github.com/nasa/cfe/pull/1196
https://github.com/nasa/osal/pull/835 
https://github.com/nasa/elf2cfetbl/pull/72

**Testing performed**
See <https://github.com/nasa/cFS/pull/204/checks>

**Expected behavior changes**

PR #195 - Adds a contribution guide
PR #197 - Updates Security.md to include details on our testing policy and approaches

Also see submodule Integration Candidates and

- nasa/cFE#1154
- nasa/cFE#935
- nasa/cFE#1179
- nasa/cFE#1140
- nasa/cFE#1178
- nasa/cFE#1197

- nasa/osal#834
- nasa/osal#826
- nasa/osal#827
- nasa/osal#829
- nasa/osal#824

- nasa/elf2cfetbl#71

**System(s) tested on**
Ubuntu 18.04 

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@zanzaben 
@jphickey 
@ArielSAdamsNASA ",,https://github.com/nasa/cFS/pull/204
Highlight community contributors,"**Is your feature request related to a problem? Please describe.**
We don't have a way of publicly recognizing our contributors from the community

**Describe the solution you'd like**
Add a contributors or community section to Readme.md with people's github icon

**Describe alternatives you've considered**

- Use https://github.com/all-contributors/all-contributors
- Use https://opencollective.com/
- Use https://remarkablemark.org/blog/2019/10/17/github-contributors-readme/
- Have a list on the Wiki with github handles

",,https://github.com/nasa/cFS/issues/203
"Fix #201, Create Changelog GitHub Actions Workflow","**Describe the contribution**
Fix #201 
Created a changelog GitHub actions workflow that is triggered manually. The workflow organizes issues for each release in the sections, closed issues, breaking changes, implemented enhancements, fixed bugs, deprecated, removed, and security fixes. Pull requests are not displayed.

**Expected behavior changes**
When the user manually triggers the workflow, a changelog.md file is created. 

**System(s) tested on**
Tested on my forked repo. 

**Additional context**
References: https://github.com/heinrichreimer/action-github-changelog-generator

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/pull/202
Document Changes Across Releases,"**Is your feature request related to a problem? Please describe.**
Create a changelog entry that documents noteworthy differences, often across multiple commits, and communicate them clearly to end users.

**Describe the solution you'd like**
A GitHub Actions workflow that is triggered manually to create a changelog.md file. 

**Additional context**
Examples:
https://github.com/standard/standard/blob/master/CHANGELOG.md

https://github.com/olivierlacan/keep-a-changelog/blob/master/CHANGELOG.md

https://github.com/thanos-io/thanos/blob/master/CHANGELOG.md

**Requester Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/201
Versioning reporting across components,"## Follow up to discussion in nasa/osal#824 and in [CCB:2021-02-24](https://github.com/nasa/cFS/wiki/Community-CCB-Agenda:-February-24-2021)

Here's my view of the situation so far.

### Problem:

1. Developers and users need to know what ""version"" they're running. 
2. Developers and users need to know what the ""latest stable"" version was
3. We are aiming to conform to semantic versioning which assigns meaning for the first three numbers in a version. 
4. There are multiple places and mechanisms to get the ""version state"": 
  - HK Telemetry
  - Plain Text source files
  - EVS Response to NoOp 
  - EVS Message upon startup
5. The current ""full version state"" is in the form of MAJOR.MINOR.PATCH+devBUILDNUM

Each of these mechanisms should ""report"" a minimal set of *non-contradictory, self-evident* information.

### Solution approaches for reporting the version state during *development* 

These are not mutually exclusive, I foresee landing in some sort of combination between them.

1. Keep the `REVISION` number to `99` 
2. Make the `MISSION_REV` number `99` 
3. Make all numbers the same value ie. `99.99.99.99` *or* `0.0.0.0`
3. Add full version string to HK telemetry
4. Add a hash or checksum to HK telemetry that encodes the version information contained in the
5. Educate and document the version numbering
6. Use a git-based approach 
7. Remove version reporting from HK Telem

### Constraints
1. HK Telem should be kept small given that it is sent regularly
2. ""99"" indicator for development has been accepted practice internally and in other software (see [RTEMS Version numbering](https://devel.rtems.org/wiki/Developer/Release#RTEMSReleaseNumberingandNaming) )",,https://github.com/nasa/cFS/issues/200
"Fix #198, Fix Contributions Spelling Error in PR Template","**Describe the contribution**
Fix #198 
Changed Code contibutions to Code contributions to fix the spelling error in the PR template. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/199
Fix Spelling Error in pull_request_template.md,"**Describe the bug**
Code contibutions is misspelled. 

**Expected behavior**
Change Code contibutions to Code contributions. 

**Reporter Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/198
"Fix #196, Add Testing Tools to the Security Policy","**Describe the contribution**
Fix #196 
Updated the Security Policy to include the type of testing done for cFS under a new section titled ""Testing"". Provided a disclaimer that under the Apache license, liability is not provided. 

**Expected behavior changes**
Users should now be aware of the type of testing cFS undergoes. 

**Additional context**
References: 
https://github.com/thanos-io/thanos/security/policy
https://github.com/phpMussel/phpMussel/security/policy
https://github.com/timberio/vector/security/policy

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal 
","CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/197
Add Testing Tools to the Security Policy,"**Is your feature request related to a problem? Please describe.**
Users are unaware of how cFS is tested. By providing this information, transparency is provided to the community which promotes trust. 

Also, when adding a new issue, there are three templates to chose from. One of the templates is Report a Security Vulnerability. When clicking this template, it redirects the user to the Security Policy which states to use the Bug Report template. I think this is redundant and making the user do extra unnecessary steps. 

**Describe the solution you'd like**
The security policy should inform users what tools are being used to test cFS while being cautious of liability issues. To do so, we can state explicitly that our software does not provide liability under the Apache license. The security policy should inform users that they may view the LGTM results. The policy would state that the alerts from LGTM may not be accurate, since they cannot be dismissed.  

For the template issue, an easy solution is to have the bug report state that this includes security vulnerabilities and get rid of the Report a Security Vulnerability template. 

**Describe alternatives you've considered**
Another option is to allow the Report a Security Vulnerability template to redirect the user to the Security Policy, but change the policy to say something along the lines of emailing us for security vulnerabilities. Then we would have to define what is considered a security vulnerability, which I believe to be a vulnerability dealing with authorization, authentication, and encryption issues.

**Additional context**
References: https://github.com/thanos-io/thanos/security/policy

**Requester Info**
Ariel Adams, ASRC Federal 
",docs,https://github.com/nasa/cFS/issues/196
"Fix #194, Create Contributing.md","**Describe the contribution**
Fix #194 
The Contributing.md file contains a table of contents and instructions on how to report bugs, request features, view security vulnerabilities, create pull requests, participate in discussions and ask questions, and how to write high-quality code. 

**Additional context**
I would like to collaborate as a team on this file. Please review my main concerns and questions. Feedback is appreciated. 
Code of Conduct example: https://www.contributor-covenant.org/version/1/4/code-of-conduct/

Main Concerns/Questions
1. I would like to finish the section ""Writing High-Quality Code"". It was written by @CDKnightNASA and @astrogeco. Thoughts/feedback on how it should look like?
2. What format do we want to use for commit message convention and PR convention. There are three different formats that were used throughout our documentation. 
- `Fix-ISSUE_NUMBER-<FIX_SUMMARY>`
- `Fix ISSUE_NUMBER, 50-ish-character-long summary of commit content`
- `Fix #XYZ, SHORT_DESCRIPTION`
3. Do we want to enforce a name convention for branches? I haven't seen developers using this. 
> Create a new branch in your fork to work on your fix. Please name your branch fix-ISSUE_NUMBER-<FIX_SUMMARY>. 
4. For the Discussions and Questions section, it would be great to explore how cFS can allow for more discussions from the community. Some ideas include using gitter.im, discourse, or a discussions template to submit in the issues along with an appropriate label. Thoughts/feedback?
5.  I would also like to work together to create a code of conduct before publishing this document. Thoughts on what it should look like?

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","help wanted, CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/195
Create Contributing.md,"**Is your feature request related to a problem? Please describe.**
Create a Contributing.md file so users know how to engage with cFS. 

**Describe the solution you'd like**
Include instructions on how to report bugs, request a feature, participate in discussions, create pull requests, and view security vulnerabilities. 

**Additional context**
I would like to create a code of conduct for this file. I would also like to explore how cFS could allow more discussions from the community such as using gitter.im, discourse, or a discussions template to use in issues.

**Requester Info**
Ariel Adams, ASRC Federal
",docs,https://github.com/nasa/cFS/issues/194
cFS Bundle Integration Candidate: 2021-02-23,"**Describe the contribution**
Combines
nasa/osal#830
nasa/cfe#1171
nasa/cFS-GroundSystem#162

**Testing performed**
See <https://github.com/nasa/cFS/pull/193/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@zanzaben 
@jphickey 
",,https://github.com/nasa/cFS/pull/193
Check that commit messages adhere to standard using the continuous integration workflow,"**Is your feature request related to a problem? Please describe.**
Community contributors are not familiar with our `Fix #XYZ, SHORT_DESCRIPTION` convention for commit messages. 

**Describe the solution you'd like**
Adding an extra step or job to ""format check"" workflow

**Describe alternatives you've considered**
Add a pre-commit hook on git

**Additional context**
None

**Requester Info**
@astrogeco 
","help wanted, good first issue, continuous-integration",https://github.com/nasa/cFS/issues/192
Question: Getting cFS to communicate with Ground Station running on different host,"Hey,

So this may have a simple solution, but I'm new to cFS and I'm trying to figure out how to get a Ground Station running on a VM to communicate with a cFS instance running on a Raspberry Pi to communicate.  I can see the packets being received by the cFS instance but it doesn't send any data.  There are no firewalls blocking anything. I'm also running the sample Makefile and sample_defs. 

I know I need to modify the ci_lab and to_lab files, but I'm not sure what to modify.

Ryan",question,https://github.com/nasa/cFS/issues/191
EVS Port1 42/1/CFE_ES 48: ES_ProcControlReq: Unknown State ( 1 ) Application IMU. ,"Hi,
I'm working on an IMU application that connects and logs IMU data.
I have a function `IMU_InitSensor() ` that initializes the sensor and returns CFE_SUCCESS if initialization succeeds and -1 otherwise. if the return value is -1, the App will exit.
I'm trying to run the app when the sensor is physically disconnected to make sure I get the correct behavior, but I'm getting this error message:
`
1980-012-14:03:21.76253 Application IMU called CFE_ES_ExitApp

EVS Port1 42/1/CFE_ES 48: ES_ProcControlReq: Unknown State ( 1 ) Application IMU.
`
Here is my AppMain:

``
void IMU_AppMain()
{
    int32 iStatus = CFE_SUCCESS;
    uint32 taskId = 0;

    
`
    /* Start Performance Log entry */
    //CFE_ES_PerfLogEntry(IMU_MAIN_TASK_PERF_ID);

    /* Perform application initializations */
    if (IMU_InitApp() != CFE_SUCCESS)
    {
        g_IMU_AppData.uiRunStatus = CFE_ES_APP_EXIT;        
        goto IMU_AppMain_Exit_Tag;
    }
    else if (IMU_InitSensor() != CFE_SUCCESS)//returns 0 on success and -1  #otherwise
    {
        g_IMU_AppData.uiRunStatus = CFE_ES_APP_EXIT;        
        goto IMU_AppMain_Exit_Tag;
    } 
    else {
        /* Do not perform performance monitoring on startup sync */
        CFE_ES_PerfLogExit(IMU_MAIN_TASK_PERF_ID);
        CFE_ES_WaitForStartupSync(IMU_TIMEOUT_MSEC);
        CFE_ES_PerfLogEntry(IMU_MAIN_TASK_PERF_ID);
    }

    
    
    iStatus = CFE_ES_CreateChildTask(&taskId,
                                     ""IMU Child Task"",
                                     IMU_ChildTask,
                                     IMU_CHILD_TASK_STACK_PTR, 
                                     IMU_CHILD_TASK_STACK_SIZE, 
                                     IMU_CHILD_TASK_PRIO,
                                     0);
    if(iStatus != CFE_SUCCESS)                                     
    {
        g_IMU_AppData.uiRunStatus = CFE_ES_APP_ERROR;
        CFE_ES_WriteToSysLog(""IMU - Failed to create child task\n"");
        goto IMU_AppMain_Exit_Tag;

    }

    /* Application main loop */
    while (CFE_ES_RunLoop(&g_IMU_AppData.uiRunStatus) == TRUE)
    {
        CFE_ES_PerfLogExit(IMU_MAIN_TASK_PERF_ID);

        iStatus = IMU_RcvMsg(CFE_SB_POLL);

    }    

    

    /* Stop Performance Log entry */
    CFE_ES_PerfLogExit(IMU_MAIN_TASK_PERF_ID);
`
IMU_AppMain_Exit_Tag:
    /* Exit the application */
    CFE_ES_WriteToSysLog(""IMU - Exiting App...\n"");
    CFE_ES_ExitApp(g_IMU_AppData.uiRunStatus);
} 
`

Any help? Thanks!",Legacy,https://github.com/nasa/cFS/issues/189
Solved Question: How do I ensure that the ground system sends a command with the correct secondary header?,"I have copied my first test app from the sample app in the bundle. I have now been able to add my commands, but `CFE_MSG_GetFcnCode()` always returns `CFE_MSG_WRONG_MSG_TYPE` because `hassechdr == false`.

For the sample app commands, `hassechdr == true`, but of course those commands were already pickled, so I don't know where the problem lies.

Does the ground station or the `CHeaderParser.py` script add the headers automatically? How is this worked out? I have been just adding three `uint64`s to my command.",question,https://github.com/nasa/cFS/issues/188
"Fix #185, Apply CodeQL to Every Branch","**Describe the contribution**
Fix #185 Removed main branch on push and pull-request. Added a timeout. Removed cFS running. 

**Expected behavior changes**
CodeQL should run on every branch of cFS and timeout. cFS should not run, only build, since CodeQL does not require cFS to run for analysis. 

**System(s) tested on**
 CI

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:FastTrack, security, continuous-integration",https://github.com/nasa/cFS/pull/187
Add realistic timeouts to workflows,"**Is your feature request related to a problem? Please describe.**
Workflows could run up to the default 360 minutes

**Describe the solution you'd like**
Add realistic timeouts, avoids delayed reports when there really is an issue (test hang, etc)

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
",enhancement,https://github.com/nasa/cFS/issues/186
Apply CodeQL to Every Branch,"**Describe the bug**  
CodeQL only scans the main branch on push and pull-request.  

**Expected behavior**
Scan every branch on push and pull-request using CodeQL.

**Reporter Info**
Ariel Adams, ASRC Federal 
","enhancement, security, continuous-integration",https://github.com/nasa/cFS/issues/185
"Fix #170, Deploy documentation from GitHub action","**Describe the contribution**
Fix #170 - generates and deploys documentation from GitHub action

**Testing performed**
Ran it on fork (with branch adjusted) and worked as expected.  Same behavior as old travis deploy workflow

**Expected behavior changes**
Document deployment is back!

**System(s) tested on**
CI/GitHub

**Additional context**
Could do the pandoc conversion from pdf to ghm (GitHub markdown), but pdf works fine for me

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","CCB:FastTrack, continuous-integration",https://github.com/nasa/cFS/pull/184
Add nasa/cfe#1072,"**Describe the contribution**
Include updates to cfe

Add github actions CI

**Testing performed**


**Expected behavior changes**


**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLA's apply to software contributions.
",,https://github.com/nasa/cFS/pull/183
cFS Bundle Integration Candidate: 2021-02-02,"**Describe the contribution**
Combines 

nasa/cfe#1150
nasa/osal#774
nasa/psp#250
nasa/to_lab#84
nasa/tblcrctool#35

**Testing performed**
See <https://github.com/nasa/cFS/pull/182/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@martintc 
@astrogeco 
@jphickey 
@zanzaben 
@skliper ",,https://github.com/nasa/cFS/pull/182
"Fix #179, Add main branch to pull.request for CodeQL","**Describe the contribution**
Fix #179, Add main branch to pull.request for CodeQL workflow

**Expected behavior changes**
Fix CodeQL warning errors

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal","CCB:FastTrack, security",https://github.com/nasa/cFS/pull/181
"Fix #178, Remove debug build in CodeQL","**Describe the contribution**
Fix #178. Remove the debug build in the CodeQL workflow. 

**Expected behavior changes**
The CodeQL workflow should only have the release build. 

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal
","CCB:FastTrack, security, continuous-integration",https://github.com/nasa/cFS/pull/180
Add main branch to pull.request for CodeQL workflow,"**Describe the bug**
The CodeQL Workflow has two duplicate warnings as provided below.

> 1 issue was detected with this workflow: Please make sure that every branch in on.pull_request is also in on.push so that Code Scanning can compare pull requests against the state of the base branch.

**Expected behavior**
The main branch should be added to pull.request. 

**Reporter Info**
Ariel Adams, ASRC Federal",security,https://github.com/nasa/cFS/issues/179
"Remove ""debug"" build in CodeQL workflow","From comment in #165

> release test would be sufficient in my mind... always with OMIT_DEPRECATED
>
_Originally posted by @skliper in https://github.com/nasa/cFS/pull/165#r557700506_","enhancement, security, continuous-integration",https://github.com/nasa/cFS/issues/178
cFS Bundle Integration candidate: 2021-01-19,"**Describe the contribution**

Combines:
- https://github.com/nasa/cfe/issues/1109
- https://github.com/nasa/osal/issues/767
- https://github.com/nasa/psp/issues/243
  
- https://github.com/nasa/sample_app/issues/121
- https://github.com/nasa/ci_lab/issues/68
- https://github.com/nasa/to_lab/issues/79
- https://github.com/nasa/sch_lab/issues/62
- https://github.com/nasa/sample_lib/issues/41
   
- https://github.com/nasa/tblcrctool/issues/29
- https://github.com/nasa/elf2cfetbl/issues/65
- https://github.com/nasa/cfs-groundsystem/issues/150


**Testing performed**
See <https://github.com/nasa/cFS/pull/177/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@jphickey 
@ArielSAdamsNASA 
@zanzaben ",,https://github.com/nasa/cFS/pull/177
cFS Caelum,,"invalid, Epic",https://github.com/nasa/cFS/issues/176
Add GitHub Actions CodeQL Workflow,"**Is your feature request related to a problem? Please describe.**
The lgtm continuous integration checks don't always seem to run correctly. 

**Describe the solution you'd like**
This will apply the same technology, CodeQL, but using Github Actions workflows and unify our different CI systems. 

**Describe alternatives you've considered**
Keep using LGTM and figure out why we get so many ""no code changes detected"" messages.

**Additional context**
We can expand our CodeQL checks with ode standards and style checks once we update our code style and standard.

**Requester Info**
@astrogeco 
",,https://github.com/nasa/cFS/issues/175
cFS Bundle Integration Candidate: 2021-01-12,"**Describe the contribution**

Combines
- <https://github.com/nasa/cfe/issues/1088>
- <https://github.com/nasa/osal/issues/750>
- <https://github.com/nasa/psp/issues/240>

**Testing performed**
See <https://github.com/nasa/cFS/pull/174/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@jphickey 
@zanzaben 
@CDKnightNASA ",,https://github.com/nasa/cFS/pull/174
Implement a Security Policy,"**Describe the bug**
Create a security policy for users on how to report security vulnerabilities.

**Expected behavior**
The security policy should instruct users on how to report security vulnerabilities and provide them additional contact information for questions and concerns.

**Additional context**
Additional sections that may be included:
- What to expect security-wise such as what type of testing is done
- Address privacy concerns
- Supported versions
- License
- Known vulnerabilities

References to Public Security Policies:
https://github.com/thanos-io/thanos/security/policy
https://github.com/minhealthnz/nzcovidtracer-app/security/policy
https://github.com/odoo/odoo/security/policy

**Reporter Info**
Ariel Adams, ASRC Federal","docs, security",https://github.com/nasa/cFS/issues/173
cFS Bundle Integration Candidate: 2021-01-05,"**Describe the contribution**

Fix #166 
Fix #167
Fix #169 

Combines 
- nasa/cfe#1066
- nasa/osal#744
- nasa/psp#234


**Testing performed**
See https://github.com/nasa/cFS/pull/172/checks

**Expected behavior changes**

PR #168 

PR #171 

See submodule PRs for codebase changes

**System(s) tested on**
Ubuntu 18.04

**Additional context**
Add any other context about the contribution here.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper
@astrogeco 
@CDKnightNASA 
@zanzaben ",,https://github.com/nasa/cFS/pull/172
"Fix #166 and #169, Add Static Code Analysis and Pull Request Trigger to CI workflow","**Describe the contribution**
Fix #166
Fix #169 

**Testing performed**
Succesfully ran in fork.

Also see pull-request trigger working at https://github.com/nasa/cFS/pull/171/checks

**Expected behavior changes**
New workflow ""Static Analysis"" runs cpp check on the bundle and also stricter checks on cfe, osal, and psp based on the old travis.yml setups.

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None
",CCB:FastTrack,https://github.com/nasa/cFS/pull/171
Documentation hasn't been pushed since transition to github actions,"**Is your feature request related to a problem? Please describe.**
See https://github.com/nasa/cFS/tree/gh-pages, links are 3 months old

**Describe the solution you'd like**
Publish the guides from GitHub Action (add to the build)

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC","docs, continuous-integration",https://github.com/nasa/cFS/issues/170
Fork-originated Pull Requests not running github actions workflows,"**Describe the bug**

The current setup for the workflow runs on `push` instead of `pull_request` events so the tests are not running on pull requests from forks. 

**To Reproduce**
Create a pull request from a fork. 
See ""checks"" section for that pull request. 
You will notice that the ""Build and Test"" workflows are not activated.

**Expected behavior**
""Build and Test"" workflows are activated on pull requests and changes to them.

**Code snips**
If applicable, add references to the software.

**Additional context**
Add any other context about the problem here.
","bug, continuous-integration",https://github.com/nasa/cFS/issues/169
"Fix #167, Update doc generation action error check","**Describe the contribution**
Fix #167 

Warning file is moved in Build Usersguide step.
Updated from checking the old file location to
checking the moved file.

**Testing performed**
Pushed to fork and observed the doc warnings are reported in actions.

**Expected behavior changes**
Actually reports when warnings are generated

**System(s) tested on**
 - Hardware: CI

**Additional context**
Actual fixes to the warnings will be in respective repos

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:FastTrack,https://github.com/nasa/cFS/pull/168
Main user guide build warnings (and they weren't caught by actions),"**Describe the bug**
Warnings generated when building user's guide

**To Reproduce**
I did standard setup, and `make SIMULATION=native prep` but likely exists for any config.
Then `make usersguide`, observe warnings in build/doc/warnings.log:
```
/export/home/jhageman/cFS/cFS-GitHub/osal/src/os/inc/osapi-bsp.h:95: warning: end of file while inside a group
/export/home/jhageman/cFS/cFS-GitHub/osal/src/os/inc/osapi-idmap.h:274: warning: end of file while inside a group
```

**Expected behavior**
No warnings.
Also the new GitHub actions should have caught this.  @astrogeco 

Note the warnings file at https://github.com/nasa/cFS/suites/1693812098/artifacts/31817568 is not empty... not clear why this didn't trigger a failure.

**Code snips**
None yet.

**System observed on:**
 - Hardware: cFS Dev Server
 - OS: Ubuntu 18.04
 - Versions: Bundle main

**Additional context**
N/A

**Reporter Info**
Jacob Hageman - NASA/GSFC
","bug, continuous-integration",https://github.com/nasa/cFS/issues/167
Missing cppcheck in github actions workflow,"**Describe the bug**

cppcheck test is no longer checked in continuous integration after migrating from TravisCI

**Expected behavior**
A step that runs cpp check before compiling

**Additional context**
None


","bug, continuous-integration",https://github.com/nasa/cFS/issues/166
"Fix #175, CodeQL Action Workflow","**Describe the contribution**
Fix #175 
Implemented CodeQL Action as a workflow to automatically detect common vulnerabilities and coding errors. 

**Expected behavior changes**
Results should be displayed in the Security tab under Code Scanning Alerts. The workflow is triggered when code is pushed to any branch in a repository and during pull request events. 
![image](https://user-images.githubusercontent.com/69638935/105365408-d4179e00-5bc3-11eb-8583-b6fdae14b8bd.png)



**Additional context**
For more information visit: https://github.com/github/codeql-action

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal",security,https://github.com/nasa/cFS/pull/165
why I could not update cFS,"Dear,
I clone the repository using git clone, cd to the directory then git submodule init, but when update it, it could not get the cfe, is there any wrong? Thanks
I can update the cFE repository.
Sincerely",question,https://github.com/nasa/cFS/issues/164
"Fix #173, Create Security Policy MarkDown","**Describe the contribution**
Fix #173 
Created a draft of a security policy markdown file. The purpose of a security policy is to inform users on how to submit bugs or vulnerabilities. It is ideal to include a section for supported versions. 

**Additional context**
Optional sections that may be included:
- What to expect security-wise such as what type of testing is done
- Address privacy concerns
- Supported versions
- License
- Known vulnerabilities

References to Public Security Policies: 
https://github.com/thanos-io/thanos/security/policy 
https://github.com/minhealthnz/nzcovidtracer-app/security/policy 
https://github.com/odoo/odoo/security/policy

**Contributor Info - All information REQUIRED for consideration of pull request**
Ariel Adams, ASRC Federal ","CCB:FastTrack, docs, security",https://github.com/nasa/cFS/pull/163
cFS Bundle Integration Candidate: 2020-12-22,"**Describe the contribution**
Integration Candidate 2020-12-22 AND 2020-12-15

Combines
- <https://github.com/nasa/cFE/pull/1047>
- <https://github.com/nasa/osal/pull/690>
- <https://github.com/nasa/to_lab/pull/75>

**Testing performed**
See <https://github.com/nasa/cFS/pull/162/checks>

**Expected behavior changes**
See submodule Integration Candidate PRs

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@jphickey 
@zanzaben 
@ArielSAdamsNASA ",,https://github.com/nasa/cFS/pull/162
 Add a github actions workflow to replace travis CI,"**Is your feature request related to a problem? Please describe.**
Travis CI billing change is hindering our continuous integration flows

**Describe the solution you'd like**
A service that doesn't limit our runs

**Describe alternatives you've considered**
Running all tests locally, paying for Travis or another service

**Additional context**
None
","enhancement, continuous-integration",https://github.com/nasa/cFS/issues/161
cFS Bundle Integration Candidate: 2020-12-08,"**Describe the contribution**
Includes
        https://github.com/nasa/cFE/pull/1045
        https://github.com/nasa/osal/pull/680
        https://github.com/nasa/PSP/pull/226
        https://github.com/nasa/ci_lab/pull/65
        https://github.com/nasa/sample_app/pull/114
        https://github.com/nasa/sch_lab/pull/59
        https://github.com/nasa/to_lab/pull/70

**Testing performed**
https://github.com/nasa/cFS/pull/160/checks

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@astrogeco 
@zanzaben 
@jphickey 
@acudmore ",,https://github.com/nasa/cFS/pull/160
"Fix #161, Migrate CI to GitHub actions","**Describe the contribution**
Fix #161, Add a github actions workflow...

Add a github actions workflow to replace our travis CI

Create three separate workflows based on the .travis.yml file

The build-cfs and build-cfs-deprecated workflows differ only by the OMIT_DEPRECATED flag status.

The build-documentation workflow only builds the doxygen docs.


See examples: <https://github.com/astrogeco/cfs/actions>

**Testing performed**
Ran with current integration candidate

**Expected behavior changes**
Tests run on pull requests and new branches. 

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@astrogeco ","CCB:FastTrack, continuous-integration",https://github.com/nasa/cFS/pull/159
cFS Integration Candidate: 2020-11-24,"**Describe the contribution**
Combines
<https://github.com/nasa/cFE/pull/1027>
<https://github.com/nasa/osal/pull/662>
<https://github.com/nasa/PSP/pull/221>
<https://github.com/nasa/sample_app/pull/113>
<https://github.com/nasa/sample_lib/pull/38>
<https://github.com/nasa/sch_lab/pull/58>
<https://github.com/nasa/tblCRCTool/pull/25>

**Testing performed**
See events for ""github actions test"" at https://github.com/astrogeco/cFS/actions

**Expected behavior changes**

**System(s) tested on**
Ubuntu 18.04

**Additional context**
None

**Code contibutions**
@jphickey 
@skliper 
@zanzaben 
@astrogeco ",,https://github.com/nasa/cFS/pull/158
can't run unit tests,"**Describe the bug**
I can build and run the application, but when I try to run unit tests I am told ""no tests were found"".  Probably I am not following instructions properly, some parts seem a little vague to me.

**To Reproduce**
After setup, I followed the instructions in ""Build and Run"" which were

make SIMULATION=native prep
make
make install
cd build/exe/cpu1/
./core-cpu1

and I got results that looked reasonable.   The instructions then said ""Unit tests can be added with ENABLE_UNIT_TESTS=true, run with make test, and coverage reported with make lcov.""

So, I tried ""make SIMULATION=native ENABLE_UNIT_TESTS=true prep"" followed by 

make
make test

and also just ""make ENABLE_UNIT_TESTS=true prep"" followed by 

make
make test

I guess the instructions are not clear to me.   (I tried another few combinations, too, but these seemed the most reasonable).
**Expected behavior**
A clear and concise description of what you expected to happen.

**Code snips**
If applicable, add references to the software.

**System observed on:**
 - Hardware
 - OS: [e.g. Linux 4.4]
 - Versions [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps]

**Additional context**
Add any other context about the problem here.

**Reporter Info**
Full name and company/organization if applicable
",question,https://github.com/nasa/cFS/issues/157
cFS Bundle Integration Candidate: 2020-11-10,"**Describe the contribution**
Includes
https://github.com/nasa/cFE/pull/1008
https://github.com/nasa/osal/pull/652
https://github.com/nasa/to_lab/pull/65
https://github.com/nasa/sample_app/pull/108
https://github.com/nasa/ci_lab/pull/60

**Testing performed**
Bundle CI on astrogeco's fork: https://travis-ci.com/github/astrogeco/cFS/builds/201769124

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper
@zanzaben
@CDKnightNASA
@jphickey
",,https://github.com/nasa/cFS/pull/156
Help: Could not load cFE application file,"Hi,

I'm working on an app that uses a library for an IMU. My app compiles without errors but when I run the core-cpu1, I get:
`Could not load cFE application file:/cf/imu.so. EC = 0xFFFFFFFF`

My app directory is called imu and it contains:
/imu
---fsw (which contains the usual mission_inc, platofrm_inc...etc)
---imu_lib
------build
---------obj
------------vn ( which includes a bunch of .o files)
---------libvnc.a (contains the .o files)
------include
---------vn (which includes a bunch of .h files)
---CMakeLists.txt

Here is the CMakeLists.txt

`
cmake_minimum_required(VERSION 2.6.4)
project(CFS_IMU C)

include_directories(fsw/mission_inc)
include_directories(fsw/platform_inc)
include_directories(fsw/src)

include_directories(imu_lib/include)
include_directories(imu_lib/include/vn)

aux_source_directory(fsw/src APP_SRC_FILES)
add_cfe_app(imu ${APP_SRC_FILES})
target_link_libraries(imu /home/eaglecam/CFS-101.initial/apps/imu/imu_lib/build/libvnc.a)
`

Any help is appreciated.

Thanks",question,https://github.com/nasa/cFS/issues/155
Integration Candidate: 2020-11-03,"**Describe the contribution**

Combines
https://github.com/nasa/cFE/pull/991
https://github.com/nasa/osal/pull/639
https://github.com/nasa/PSP/pull/213
https://github.com/nasa/sample_app/pull/102
https://github.com/nasa/sample_lib/pull/35

**Testing performed**
See framework-bundle CI: <https://github.com/nasa/cFS/pull/154/checks>

**Expected behavior changes**
See bundled PRs

**System(s) tested on**
Ubuntu CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@jphickey 
@asgibson 
",,https://github.com/nasa/cFS/pull/154
Integration Candidate 2020-10-27,"**Describe the contribution**
Includes
<https://github.com/nasa/cFE/pull/975>

**Testing performed**
See <https://github.com/nasa/cFS/pull/153/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@skliper 
@jphickey ",,https://github.com/nasa/cFS/pull/153
Integration Candidate: 2020-10-20,"**Describe the contribution**
Combines
https://github.com/nasa/PSP/pull/209
https://github.com/nasa/cFE/pull/959
https://github.com/nasa/osal/pull/627

**Testing performed**
See https://github.com/nasa/cFS/pull/152/checks

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey ",,https://github.com/nasa/cFS/pull/152
"Sample ""real-life"" implementation of a cFS mission build.","**Is your feature request related to a problem? Please describe.**
From the cFS Mailing list:

>it would be nice to see a fully completed project to decipher why certain features are used. The how is easy to digest from the documentation but a real-world example would help clarify each feature’s intended purpose.
>
>I know a lot of this code may be internal to NASA / other organizations but it would be really helpful to have a completed demo to reference from time to time. 

**Describe the solution you'd like**
A how-to guide or a complete docker image with a mission-like cFS implementation.

**Describe alternatives you've considered**
The current bundle, partnering with open-sat kit

**Additional context**
Also from the mailing list 

> I have also been pulling apart the training VM provided by the cFS-101 repo. It would be incredibly helpful if anyone had any open source projects that I could see, it just always seems that looking through an already completed project is the best way to learn new things and their intricacies. 

**Requester Info**
@astrogeco ",docs,https://github.com/nasa/cFS/issues/150
Bootes RC-2 Integration,"**Describe the contribution**
Combines

https://github.com/nasa/osal/pull/587
https://github.com/nasa/cFE/pull/856

**Testing performed**
Built and ran locally
Built in CI, https://travis-ci.com/github/nasa/cFS/builds/189839413

**Expected behavior changes**
OSAL and cFE  revision version number now reports 99 in housekeeping telemetry for development builds. 

**System(s) tested on**
 Built and ran on Docker container.

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@astrogeco 
",,https://github.com/nasa/cFS/pull/149
Minor spelling edits to README.md,"**Describe the contribution**
Minor spelling edits to README.md

**Expected behavior changes**
No impact to behavior

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
Kolby Heacock (Personal contribution)
","CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/148
Integration candidate 2020-10-13,"**Describe the contribution**
Combines

https://github.com/nasa/PSP/pull/206
https://github.com/nasa/osal/pull/621
https://github.com/nasa/cfe/pull/944
https://github.com/nasa/ci_lab/pull/56
https://github.com/nasa/to_lab/pull/62

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/147/checks

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey ",,https://github.com/nasa/cFS/pull/147
Integration Candidate: 2020-10-07,"**Describe the contribution**
Includes
https://github.com/nasa/cFE/pull/936
https://github.com/nasa/osal/pull/612

**Testing performed**
Bundle Build: https://github.com/nasa/cFS/pull/145/checks

**Expected behavior changes**
See Submodule PRs

**System(s) tested on**
Travis CI

**Additional context**
None

**Code contibutions**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
@jphickey 
@CDKnightNASA 
@skliper ",,https://github.com/nasa/cFS/pull/145
Integration Candidate: 2020-09-29,"**Describe the contribution**
Integration Candidate includes:
https://github.com/nasa/cFE/pull/916

**Testing performed**
Bundle CI -

**Expected behavior changes**
See PRs.

**System(s) tested on**
Ubuntu - CI

**Additional context**
None.

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/pull/144
Integration Candidate: 2020-09-23,"**Describe the contribution**
Integration Candidate includes:
https://github.com/nasa/cFE/pull/912
https://github.com/nasa/osal/pull/607

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/142/checks

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu - CI

**Additional context**
None.

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.",,https://github.com/nasa/cFS/pull/142
Travis is truncating logs again (repeat of #79),"**Describe the bug**
#79 repeat... the full log doesn't always get retained for review.

**To Reproduce**
Observe a travis log... for example https://travis-ci.com/github/skliper/cFS/jobs/389476945

**Expected behavior**
Shouldn't trucate

**Code snips**
Previously was ""resolved"" by adding:
https://github.com/nasa/cFS/blob/068cd8ca103bb5dd0636d43f31ccdec992694d91/.travis.yml#L139-L141

**System observed on:**
 - Travis-ci.com

**Additional context**
#79 

**Reporter Info**
Jacob Hageman - NASA/GSFC","bug, wontfix, continuous-integration",https://github.com/nasa/cFS/issues/141
Integration Candidate: 2020-09-16,"**Describe the contribution**
Integration Candidate includes:

https://github.com/nasa/cFE/pull/891
https://github.com/nasa/osal/pull/600
https://github.com/nasa/PSP/pull/196
https://github.com/nasa/sample_lib/pull/32
https://github.com/nasa/sample_app/pull/98

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/140/checks

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu - CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.",,https://github.com/nasa/cFS/pull/140
Integration Candidate: 2020-09-09,"**Describe the contribution**
Integration candidate includes:
https://github.com/nasa/cFE/pull/876
https://github.com/nasa/osal/pull/596
https://github.com/nasa/cFS-GroundSystem/pull/135

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/139/checks

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu - CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Leor Bleier, NASA-GSFC
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.
Chris Knight, NASA-ARC
",,https://github.com/nasa/cFS/pull/139
Run-time error on the docker container built with s390x/ubuntu,"Hi,

I have built cFS v6.8 on my host computer with ubuntu18.04 and was able to run it communicating with Cosmos.

Also I was able to build a docker container for cFS v6.8 with s390x/ubuntu (IBM zSeries Based Linux, big endian CPU), but I have an error when I build cFS in the docker container and run it.

root@hkim:~/cfs/build/exe/cpu1# ./core-cpu1 
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 43
CFE_PSP: Default CPU Name: cpu1
OS_Posix_TableMutex_Init():220:Error: pthread_mutex_init failed: Operation not supported
OS_API_Init():116:OS_API_Impl_Init(0x1) failed to initialize: -1
OS_API_Init():195:Warning: Microsecs per sec value of 0 does not equal 1000000 (MicroSecPerTick: 0   TicksPerSecond: 0)
CFE_PSP: OS_API_Init() failure
Aborted (core dumped)

The error occurs in osal/src/os/posix/src/os-impl-common.c.
OSAL: Development Build: 5.0.0+dev247

But if I build the docker container by changing to i686/ubuntu or i386/ubuntu (little endian CPU) in the same Dockerfile, I have no run-time errors and can run cFS with problems.    I wonder if anyone had the same problem with s390x and found a way to fix this error.

If you know another big endian CPU that I can build a docker container with, please let me know.

Thank you!

Harry Kim",bug,https://github.com/nasa/cFS/issues/138
Integration Candidate: 2020-09-02,"**Describe the contribution**
Integration candidate includes:

https://github.com/nasa/cFE/pull/861
https://github.com/nasa/osal/pull/590
https://github.com/nasa/cFS-GroundSystem/pull/133


**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/136/checks

**Expected behavior changes**
See PRs.

**System(s) tested on**
Ubuntu - CI

**Additional context**
None.

**Code contributions**
The cFS repository is provided to bundle the cFS Framework. It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software. Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.
Chris Knight, NASA-ARC
",,https://github.com/nasa/cFS/pull/136
Integration Candidate: 2020-08-26,"**Describe the contribution**
Integration Candidate includes: 

nasa/cFE#849
nasa/osal#582
nasa/psp#190
nasa/to_lab#59
nasa/sch_lab#53
nasa/sample_app#93
nasa/cFS-GroundSystem#127
nasa/elf2cfetbl#62

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/134/checks

**Expected behavior changes**
See PRs

**System(s) tested on**
Ubuntu - CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.
Chris Knight, NASA-ARC


",,https://github.com/nasa/cFS/pull/134
Fuzz Testing,"**Is your feature request related to a problem? Please describe.**
Fuzz testing inputs invalid or random data to discover coding errors and security loopholes. Helps identifies improper input validation (CWE-20), buffer copy without checking size of input (CWE-120), and information exposure (CWE-200)

**Describe the solution you'd like**
Once research is complete, implement testing. According to @astrogeco, research is in progress currently. 

**Additional context**
Resources:
https://cwe.mitre.org/data/definitions/20.html
https://cwe.mitre.org/data/definitions/120.html
https://cwe.mitre.org/data/definitions/200.html

**Requester Info**
Ariel Adams, ASRC Federal 
",security,https://github.com/nasa/cFS/issues/133
Stress Testing,"**Is your feature request related to a problem? Please describe.**
Stress testing analyzes the system under extremely heavy load conditions and has several benefits. Testing helps identify initialization problems and resource clean up errors. It also will verify the stability and reliability of the system and makes sure that the system recovers after failure. Another benefit is that it checks whether the system will work under the abnormal conditions. Testing ensures that appropriate error messages will display when the system is under stress. It verifies that unexpected failures do not cause security issues. Testing also verifies whether the system has saved the data before crashing. 

**Describe the solution you'd like**
Implement stress testing at some point. Research applicable software for stress testing.

**Describe alternatives you've considered**
List of possible software solutions for stress testing:
Jmeter, Load Runner, Stress Tester, Neo load

**Additional context**
Resources: 
https://www.geeksforgeeks.org/stress-testing-software-testing/

**Requester Info**
Ariel Adams, ASRC Federal 
",security,https://github.com/nasa/cFS/issues/132
Add information about planned component versions to Caelum roadmap,"**Is your feature request related to a problem? Please describe.**
The Caelum plan does not have information on the component version targetted for inclusion in that release

**Describe the solution you'd like**
Add a list of planned component versions for Caleum to the readme. For example

```
Caleum includes
- cFE 7.0
- osal 6.0
- PSP 1.5
- etc.
```

**Describe alternatives you've considered**
Have a separate file, Roadmap.md, that details the plans

**Additional context**
none

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA-GSFC","enhancement, docs",https://github.com/nasa/cFS/issues/131
Integration Candidate 2020-08-19,"**Describe the contribution**
Integration candidate includes

https://github.com/nasa/cFE/pull/833
https://github.com/nasa/osal/pull/576
https://github.com/nasa/to_lab/pull/58
https://github.com/nasa/sch_lab/pull/52

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/130/checks

**Expected behavior changes**
See PRs

**System(s) tested on**
CI Ubuntu 

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
Christopher Knight, NASA-ARC
Joseph Hickey, Vantage Systems, Inc.",,https://github.com/nasa/cFS/pull/130
Reflect CI status in different badges on the readme. ,"**Is your feature request related to a problem? Please describe.**
The current CI compiles the code, runs unit tests, builds the documentation and executes cFS all in one script. 

If the script fails at the documentation build the only way to figure out why it fails is to go into the Travis dashboard and read through the log which takes time and is not transparent to our users.

**Describe the solution you'd like**
Have at-a-glance information that reflects what specific part of CI failed.

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Gerardo E. Cruz-Ortiz, NASA-GSFC
","enhancement, good first issue, continuous-integration",https://github.com/nasa/cFS/issues/129
Question: do you notify contributors when their contribution first takes flight?,"I'm thinking of finding something simple to fix for fun, and this would be a huge motivation 😄 ",question,https://github.com/nasa/cFS/issues/128
Integration Candidate 2020-08-12,"**Describe the contribution**
nasa/cfe#816
https://github.com/nasa/osal/pull/563

**Testing performed**
Bundle CI Build - <https://github.com/nasa/cFS/pull/127/checks>

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu - Travis CI

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/127
It would be nice to be able to build with clang rather than gcc,"I added a target file called target-llvm.cmake for clang and clang++ (from llvm 10), the relevant lines being:
```
SET(CMAKE_C_COMPILER            ""/usr/lib/llvm-10/bin/clang"")
SET(CMAKE_CXX_COMPILER          ""/usr/lib/llvm-10/bin/clang++"")
```
But alas after 
```
make SIMULATION=llvm prep
```
followed by 
```
make
```
I get 

```
vagrant@ubuntu-bionic:~/cFS$ make
make --no-print-directory -C ""build"" mission-all
Scanning dependencies of target elf2cfetbl
[ 50%] Building C object tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/elf2cfetbl.c.o
[100%] Linking C executable elf2cfetbl
[100%] Built target elf2cfetbl
Scanning dependencies of target mission-version
[100%] Built target mission-version
Scanning dependencies of target mission-prebuild
[100%] Built target mission-prebuild
Scanning dependencies of target llvm_default_cpu1-all
Scanning dependencies of target osal_posix_impl
[  1%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-binsem.c.o
[  2%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-common.c.o
[  2%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-console.c.o
[  3%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-countsem.c.o
[  4%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-dirs.c.o
[  5%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-errors.c.o
[  5%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-files.c.o
[  6%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-filesys.c.o
[  7%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-heap.c.o
[  7%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-idmap.c.o
[  8%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-mutex.c.o
[  9%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-queues.c.o
[  9%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-tasks.c.o
[ 10%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-timebase.c.o
[ 12%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-fpu.c.o
[ 13%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-interrupts.c.o
[ 13%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-gettime.c.o
[ 14%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-console-bsp.c.o
[ 15%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-bsd-select.c.o
[ 15%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-io.c.o
[ 16%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-files.c.o
[ 17%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dirs.c.o
[ 18%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-no-shell.c.o
[ 18%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-loader.c.o
[ 19%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dl-loader.c.o
[ 20%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dl-symtab.c.o
[ 20%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-bsd-sockets.c.o
[ 21%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-network.c.o
[ 21%] Built target osal_posix_impl
Scanning dependencies of target osal_generic-linux_impl
[ 23%] Building C object osal/generic-linux_impl/CMakeFiles/osal_generic-linux_impl.dir/src/bsp_start.c.o
[ 23%] Building C object osal/generic-linux_impl/CMakeFiles/osal_generic-linux_impl.dir/src/bsp_console.c.o
[ 23%] Built target osal_generic-linux_impl
Scanning dependencies of target osal_bsp
[ 23%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/osapi-bsp.c.o
[ 24%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_app_run.c.o
[ 25%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_app_startup.c.o
[ 26%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_symtab.c.o
[ 26%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_voltab.c.o
[ 27%] Linking C static library libosal_bsp.a
[ 27%] Built target osal_bsp
Scanning dependencies of target osal
[ 28%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-binsem.c.o
[ 28%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-clock.c.o
[ 29%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-common.c.o
[ 30%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-countsem.c.o
[ 31%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-dir.c.o
[ 31%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-errors.c.o
[ 32%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-file.c.o
[ 34%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-filesys.c.o
[ 34%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-heap.c.o
[ 35%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-idmap.c.o
[ 36%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-module.c.o
[ 37%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-mutex.c.o
[ 37%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-network.c.o
[ 38%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-printf.c.o
[ 39%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-queue.c.o
[ 39%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-select.c.o
[ 40%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-shell.c.o
[ 41%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-sockets.c.o
[ 41%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-task.c.o
[ 42%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-timebase.c.o
[ 43%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-time.c.o
[ 45%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-debug.c.o
[ 45%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-fpu.c.o
[ 46%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-interrupts.c.o
[ 47%] Linking C static library libosal.a
[ 47%] Built target osal
Scanning dependencies of target cfe-core
[ 48%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_api.c.o
[ 49%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_apps.c.o
[ 49%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_backgroundtask.c.o
[ 50%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_cds.c.o
[ 51%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_cds_mempool.c.o
[ 51%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_erlog.c.o
[ 52%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_objtab.c.o
[ 53%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_perf.c.o
[ 54%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_shell.c.o
[ 54%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_start.c.o
[ 56%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_syslog.c.o
[ 57%] Building C object cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_task.c.o
/home/vagrant/cFS/cfe/fsw/cfe-core/src/es/cfe_es_task.c:635:52: error: cast from 'CFE_SB_MsgPtr_t' (aka 'CFE_SB_Msg_t *') to 'CFE_ES_SendMemPoolStats_t *' increases required alignment from 4 to 8 [-Werror,-Wcast-align]
                        CFE_ES_SendMemPoolStatsCmd((CFE_ES_SendMemPoolStats_t*)Msg);
                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
cfe-core/CMakeFiles/cfe-core.dir/build.make:326: recipe for target 'cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_task.c.o' failed
make[7]: *** [cfe-core/CMakeFiles/cfe-core.dir/src/es/cfe_es_task.c.o] Error 1
CMakeFiles/Makefile2:381: recipe for target 'cfe-core/CMakeFiles/cfe-core.dir/all' failed
make[6]: *** [cfe-core/CMakeFiles/cfe-core.dir/all] Error 2
Makefile:140: recipe for target 'all' failed
make[5]: *** [all] Error 2
CMakeFiles/llvm_default_cpu1-all.dir/build.make:57: recipe for target 'CMakeFiles/llvm_default_cpu1-all' failed
make[4]: *** [CMakeFiles/llvm_default_cpu1-all] Error 2
CMakeFiles/Makefile2:356: recipe for target 'CMakeFiles/llvm_default_cpu1-all.dir/all' failed
make[3]: *** [CMakeFiles/llvm_default_cpu1-all.dir/all] Error 2
CMakeFiles/Makefile2:138: recipe for target 'CMakeFiles/mission-all.dir/rule' failed
make[2]: *** [CMakeFiles/mission-all.dir/rule] Error 2
Makefile:201: recipe for target 'mission-all' failed
make[1]: *** [mission-all] Error 2
Makefile:120: recipe for target 'all' failed
make: *** [all] Error 2
vagrant@ubuntu-bionic:~/cFS$
```
",,https://github.com/nasa/cFS/issues/126
Removed .github from previous submodules,"**Describe the contribution**
Removes .github folder from ./osal and ./psp directories

**Testing performed**
Regular build and run steps

**Expected behavior changes**
No impact on behaviour

**System(s) tested on**
Build and Runs on Ubuntu:Bionic (18.04) in a VM",invalid,https://github.com/nasa/cFS/pull/125
Attitude control,I am looking for the Attitude Control System or GN&C. Is there any documentation that can point me to where the code is?,question,https://github.com/nasa/cFS/issues/124
"Prep for cFS Bootes-rc1, add versioning changes from ci_lab and tblCRCTool","**Describe the contribution**
Update submodules
nasa/ci_lab#53
nasa/tblCRCtool#22

Add `.DS_Store` files to `.gitiginore`

**Testing performed**
Bundle build CI https://github.com/nasa/cFS/pull/123/checks

**Expected behavior changes**
ci_lab and tblcrc tool now use the development version reports

**System(s) tested on**
Ubuntu on Travis CI
Augmented [GCC Docker Image](https://github.com/docker-library/gcc/blob/36c1ff6d7b44428b35fa8b61787c76b225d8184a/10/Dockerfile)

**Additional context**
none

**Code contibutions**
See submodule PRs

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/123
Document branch/tag/release strategy,"**Is your feature request related to a problem? Please describe.**
Community not clear on how to get what they want (latest development version, latest official release, latest release candidate, etc).

**Describe the solution you'd like**
Document the current process.  Especially critical based on new bundle branches that may be showing up soon to track latest named release versions.

**Describe alternatives you've considered**
None.

**Additional context**
Frequent topic on community email list.

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/122
How can I include a prebuilt library as a CFS library?,"Hi, I would like to include the [CubeSat Space Protocol Library](https://github.com/libcsp/libcsp) (CSP) as a library in CFS.

I am new to CFS so I am unsure the correct way to approach this. 

My goal is to use the CSP functionality within the CI/TO applications in order to send to/receive from CAN. I would like to use the waf build system included with CSP to build the library, then link the output library to CFS so the CI/TO apps can use the CSP functionality by including the appropriate headers. As a prereq I have added the libcsp repo to `apps/libcsp`.

It is my understanding that adding libcsp to my `targets.cmake` `TGT1_APPLIST` is not ideal, because that would attempt to build the libcsp code; however, in this case it would have already been built using the waf build system.

I have tried the following:
1. Building libcsp as a shared library using the waf build system
1. Adding an include directive for the CSP headers in the TO application
1. Adding `include_directories(path_to_csp)` in `to/CMakeLists.txt`
1. Copying the waf-built `libcsp.so` to the target install directory `build/exe/cpu1/cf/libcsp.so`
1. Adding `cf/libcsp.so` to my target startup script

As a result, the library fails to load at startup. I also tried:
1. Building libcsp as a shared library using the waf build system
1. Adding an include directive for the CSP headers in the TO application
1. Adding `include_directories(path_to_csp)` in `to/CMakeLists.txt`
1. Adding `target_link_libraries(core-${TGTNAME} path_to_csp/libcsp.so)` to `cfe/cmake/target/CMakeLists.txt` before the final executable is installed

As a result, the TO application fails to load.

Any help would be appreciated. I am unsure of the feasibility of using two separate build systems to build the code for my target, although I would like to avoid having to convert the waf build script to a cmake build if possible.

Thanks for your help.
Stephen",question,https://github.com/nasa/cFS/issues/121
Add Issue Template for Questions,"**Is your feature request related to a problem? Please describe.**
I've been advised to submit questions through the GitHub issue system, but questions don't fit into the Feature Request or Bug Report issue template options. It would be nice if there was a third template to capture questions.

**Describe the solution you'd like**
Add a template for users to formulate questions about the software.

**Describe alternatives you've considered**
Users could choose not to use any of the templates.

**Additional context**
N/A

**Requester Info**
Keegan Moore/NASA-GSFC
",enhancement,https://github.com/nasa/cFS/issues/120
Integration Candidate 2020-07-29,"**Describe the contribution**
Combines:
nasa/sample_app#85
nasa/sample_lib#28
nasa/sch_lab#48
nasa/to_lab#53
nasa/cfe#792
nasa/psp#184
nasa/cFS-GroundSystem#120

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/119/checks

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC
Jacob Hageman, NASA-GSFC
Christopher D. Knight, NASA-ARC
Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/pull/119
"Fix #92, LGTM exclude generated files","**Describe the contribution**
Fix #92 - Exclude generated Ui_* python files from LGTM analysis (2nd try, #94 didn't work)

**Testing performed**
Submit yml script on LGTM and it still functioned, but doesn't provide enough information to tell if the exclusion worked.  Requires an actual LGTM run.

**Expected behavior changes**
Exclude Ui*.py files from issue reporting

**System(s) tested on**
N/A

**Additional context**
#94 was the first attempt, didn't work.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Approved,https://github.com/nasa/cFS/pull/118
"Fix #116, Add UT failures to CI log","**Describe the contribution**
Fix #116 
Failure now reported and test stops:
```
99% tests passed, 1 tests failed out of 73
Total Test time (real) = 145.89 sec
The following tests FAILED:
	 52 - network-api-test (Failed)
Errors while running CTest
Makefile:138: recipe for target 'test' failed
make: *** [test] Error 8
The command ""make test"" exited with 2.
$ if [[ -s build/native/Testing/Temporary/LastTestsFailed.log ]]; then
  echo ""You must fix unit test errors before submitting a pull request""
  echo """"
  cat build/native/Testing/Temporary/LastTestsFailed.log
  grep ""\[ FAIL\]"" build/native/Testing/Temporary/LastTest.log
  exit -1
fi
You must fix unit test errors before submitting a pull request
52:network-api-test
[ FAIL] 02.014 network-api-test.c:375 - OS_SocketAccept() (0) == OS_SUCCESS
```

**Testing performed**
Ran with failure (and without), see output above.

**Expected behavior changes**
Just reports failure in ci log

**System(s) tested on**
 - CI with current bundle

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","enhancement, CCB:Approved",https://github.com/nasa/cFS/pull/117
Better failure reporting for unit tests in travis CI log,"**Is your feature request related to a problem? Please describe.**
Current log isn't all that useful, for example:
`52/65 Test #52: network-api-test .................***Failed    0.01 sec`

**Describe the solution you'd like**
Exit the test and record the failure to the log

**Describe alternatives you've considered**
Could do more complex storing of results, but just writing out the failure is better than nothing.

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/116
"Fix #114, Add new installation instructions to the readme","The following additions were made to improve novice user installation experience in the cFS README.md.

**Describe the contribution**
Added a brief introductory statement describing cFS to the top of the page.
Added prerequisite software (make, cmake, gcc, and git) instruction to the Setup section.
Added a statement specifying a possible third dependency, libcanberra-gtk-module, for the GroundSystem under the Send commands receive telemetry section.
Additionally, some typos were corrected.

Resolves: #114

**Contributor Info - All information REQUIRED for consideration of pull request**
Jandlyn Bentley, NASA-GSFC
","enhancement, docs",https://github.com/nasa/cFS/pull/115
Add new installation instructions to the README.md,"**Is your feature request related to a problem? Please describe.**
Several user experience improvements can be made to the general cFS README.md to help brand new cFS users (like interns who've never encountered cFS before) through the installation process.

**Describe the solution you'd like**
1. Add in a brief introductory statement at the very top explaining what cFS is.
2. Under the ""Setup and Build and Run"" sections add a list of prerequisite software that should be preinstalled before cloning cFS (i.e. make, cmake, gcc, and git).
3. Under the ""Send commands, receive telemetry section"" add in the specific installation commands for pyqt5, zmq, and libcanberra-gtk-module from the ground system's readme (I and some of my fellow interns ran into issues with installation because cFS was very picky in how these three were installed).

**Requester Info**
Submitted by: Jandlyn Bentley, NASA-GSFC
","enhancement, docs",https://github.com/nasa/cFS/issues/114
No tests were found,"**Describe the bug**
`make test` on a freshly cloned repository does not find any tests.

**To Reproduce**
Steps to reproduce the behavior:
1. `git clone https://github.com/nasa/cFS.git`
2. `cd cFS`
2. `cp cfe/cmake/Makefile.sample Makefile`
3. `cp -r cfe/cmake/sample_defs sample_defs1`
4. `make SIMULATION=native ENABLE_UNIT_TEST=true prep`
5. `make`
6. `make install`
7. `make test`

**Observed behavior**

```
lcov --capture --initial --directory build/native/default_cpu1 --output-file build/native/default_cpu1/coverage_base.info
Capturing coverage data from build/native/default_cpu1
Found gcov version: 9.3.0
Using intermediate gcov format
Scanning build/native/default_cpu1 for .gcno files ...
geninfo: WARNING: no .gcno files found in build/native/default_cpu1 - skipping!
Finished .info-file creation
(cd build/native/default_cpu1 && ctest -O ctest.log)
Test project /home/XXX/cFS/cFS-ic/build/native/default_cpu1
No tests were found!!!
```

**Expected behavior**
Tests run and pass.

**System observed on:**
VirtualBox 6.1 running Linux Mint 20, Kernel: Linux 5.4.0-40-generic, Architecture: x86-64
",question,https://github.com/nasa/cFS/issues/113
pthread_attr_setstacksize error when running initial build,"I have been playing around with cFS, having gotten it working by cloning this repository. After a couple of days of it working, I started getting the error below when running the software. I tried to start over with a new clone of this repo, but the same error message arises. I presume that it has something to do with my system settings, but I don't know what. Any guidance would be much appreciated!

```
$ ./core-cpu1 
OS_BSP_Initialize():Maximum user msg queue depth = 10
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 42
CFE_PSP: Default CPU Name: cpu1
OS_Posix_GetSchedulerParams():188:Policy 1: available, min-max: 1-99
OS_Posix_GetSchedulerParams():188:Policy 2: available, min-max: 1-99
OS_Posix_TaskAPI_Impl_Init():374:Selected policy 2 for RT tasks, root task = 99
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
Aborted (core dumped)
```

<details>
  <summary>The full details with all commands and outputs can be found here.</summary>

```
XXX@XXX~/cFS$ git clone https://github.com/nasa/cFS.git test
Cloning into 'test'...
remote: Enumerating objects: 44, done.
remote: Counting objects: 100% (44/44), done.
remote: Compressing objects: 100% (35/35), done.
remote: Total 472 (delta 17), reused 31 (delta 9), pack-reused 428
Receiving objects: 100% (472/472), 3.87 MiB | 9.83 MiB/s, done.
Resolving deltas: 100% (217/217), done.
XXX@XXX~/cFS$ cd te
bash: cd: te: No such file or directory
XXX@XXX~/cFS$ cd test/
XXX@XXX~/cFS/test$ git submodule init
Submodule 'apps/ci_lab' (https://github.com/nasa/ci_lab.git) registered for path 'apps/ci_lab'
Submodule 'apps/sample_app' (https://github.com/nasa/sample_app.git) registered for path 'apps/sample_app'
Submodule 'apps/sample_lib' (https://github.com/nasa/sample_lib.git) registered for path 'apps/sample_lib'
Submodule 'apps/sch_lab' (https://github.com/nasa/sch_lab.git) registered for path 'apps/sch_lab'
Submodule 'apps/to_lab' (https://github.com/nasa/to_lab.git) registered for path 'apps/to_lab'
Submodule 'cfe' (https://github.com/nasa/cFE.git) registered for path 'cfe'
Submodule 'osal' (https://github.com/nasa/osal.git) registered for path 'osal'
Submodule 'psp' (https://github.com/nasa/PSP.git) registered for path 'psp'
Submodule 'tools/cFS-GroundSystem' (https://github.com/nasa/cFS-GroundSystem.git) registered for path 'tools/cFS-GroundSystem'
Submodule 'tools/elf2cfetbl' (https://github.com/nasa/elf2cfetbl.git) registered for path 'tools/elf2cfetbl'
Submodule 'tools/tblCRCTool' (https://github.com/nasa/tblCRCTool.git) registered for path 'tools/tblCRCTool'
XXX@XXX~/cFS/test$ git submodule update
Cloning into '/home/XXX/cFS/test/apps/ci_lab'...
Cloning into '/home/XXX/cFS/test/apps/sample_app'...
Cloning into '/home/XXX/cFS/test/apps/sample_lib'...
Cloning into '/home/XXX/cFS/test/apps/sch_lab'...
Cloning into '/home/XXX/cFS/test/apps/to_lab'...
Cloning into '/home/XXX/cFS/test/cfe'...
Cloning into '/home/XXX/cFS/test/osal'...
Cloning into '/home/XXX/cFS/test/psp'...
Cloning into '/home/XXX/cFS/test/tools/cFS-GroundSystem'...
Cloning into '/home/XXX/cFS/test/tools/elf2cfetbl'...
Cloning into '/home/XXX/cFS/test/tools/tblCRCTool'...
Submodule path 'apps/ci_lab': checked out 'e4a1bb83357c25fac89a5c7fc240a925ecd66094'
Submodule path 'apps/sample_app': checked out '71d2c3290f4c18359cf9212346394e30b5d34fab'
Submodule path 'apps/sample_lib': checked out '14710ac0d777e40d5673d61b0fa6cc54c68200d3'
Submodule path 'apps/sch_lab': checked out '2e8c26797f2dbed50ad95b7b83b582b077753f9d'
Submodule path 'apps/to_lab': checked out '7e7dc4b5e10386ce533fdf890d7e2805cdece38c'
Submodule path 'cfe': checked out '84ec281b4a432db7f41f0814e37fc239c723ad39'
Submodule path 'osal': checked out '33471c7efa3d4e6a1e3760e0804c79fb21c3de54'
Submodule path 'psp': checked out '24450768d270eebbc887513a6e867942482ff730'
Submodule path 'tools/cFS-GroundSystem': checked out '9cd5304e749b0ca24e27f96ac8918dd1a613a65d'
Submodule path 'tools/elf2cfetbl': checked out '8f53aee4da49f2e432a1ef1396ba5e2df885e733'
Submodule path 'tools/tblCRCTool': checked out 'c8009d3fa9cc397f1b989df0bac71c6830097a65'
XXX@XXX~/cFS/test$ cp cfe/cmake/Makefile.sample Makefile
XXX@XXX~/cFS/test$ cp -r cfe/cmake/sample_defs/ sample_defs
XXX@XXX~/cFS/test$ make SIMULATION=native prep
mkdir -p ""build""
(cd ""build/"" && cmake  -DCMAKE_INSTALL_PREFIX=/exe -DCMAKE_BUILD_TYPE=debug ""/home/XXX/cFS/test/cfe"")
-- The C compiler identification is GNU 9.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Mission configuration sample automatically selected
-- OMIT_DEPRECATED=false: Deprecated elements included in build
-- Module 'sample_app' found at /home/XXX/cFS/test/apps/sample_app
-- Module 'sample_lib' found at /home/XXX/cFS/test/apps/sample_lib
-- Module 'ci_lab' found at /home/XXX/cFS/test/apps/ci_lab
-- Module 'to_lab' found at /home/XXX/cFS/test/apps/to_lab
-- Module 'sch_lab' found at /home/XXX/cFS/test/apps/sch_lab
-- Module 'cfe-core' found at /home/XXX/cFS/test/cfe/fsw/cfe-core
-- Module 'osal' found at /home/XXX/cFS/test/osal
-- Configuring for system arch: native
-- The C compiler identification is GNU 9.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- OMIT_DEPRECATED=false: Deprecated elements included in build
-- BSP Selection: generic-linux at /home/XXX/cFS/test/osal/src/bsp/generic-linux
-- OSAL Compile Definitions: SIMULATION=native;_LINUX_OS_;_XOPEN_SOURCE=600
-- OSAL Selection: posix at /home/XXX/cFS/test/osal/src/os/posix
-- PSP Selection: pc-linux
-- Building App: sample_app install=cpu1
-- Building App: sample_lib install=cpu1
NOTE: Selected /home/XXX/cFS/test/apps/sample_app/fsw/tables/sample_app_tbl.c as source for sample_app_tbl
-- Building App: ci_lab install=cpu1
-- Building App: to_lab install=cpu1
NOTE: Selected /home/XXX/cFS/test/apps/to_lab/fsw/tables/to_lab_sub.c as source for to_lab_sub
-- Building App: sch_lab install=cpu1
NOTE: Selected /home/XXX/cFS/test/apps/sch_lab/fsw/src/sch_lab_table.c as source for sch_lab_table
-- Configuring done
-- Generating done
-- Build files have been written to: /home/XXX/cFS/test/build/native
-- Configuring done
-- Generating done
-- Build files have been written to: /home/XXX/cFS/test/build
echo "" -DCMAKE_INSTALL_PREFIX=/exe -DCMAKE_BUILD_TYPE=debug"" > ""build/.prep""
XXX@XXX~/cFS/test$ make
make --no-print-directory -C ""build"" mission-all
Scanning dependencies of target elf2cfetbl
[ 50%] Building C object tools/elf2cfetbl/CMakeFiles/elf2cfetbl.dir/elf2cfetbl.c.o
[100%] Linking C executable elf2cfetbl
[100%] Built target elf2cfetbl
Scanning dependencies of target mission-version
[100%] Built target mission-version
Scanning dependencies of target mission-prebuild
[100%] Built target mission-prebuild
Scanning dependencies of target native-all
Scanning dependencies of target osal_posix_impl
[  1%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-binsem.c.o
[  2%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-common.c.o
[  2%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-console.c.o
[  3%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-countsem.c.o
[  4%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-dirs.c.o
[  5%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-errors.c.o
[  5%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-files.c.o
[  6%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-filesys.c.o
[  7%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-heap.c.o
[  7%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-idmap.c.o
[  8%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-mutex.c.o
[  9%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-queues.c.o
[  9%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-tasks.c.o
[ 10%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-timebase.c.o
[ 12%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-fpu.c.o
[ 13%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-interrupts.c.o
[ 13%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-gettime.c.o
[ 14%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-console-bsp.c.o
[ 15%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-bsd-select.c.o
[ 15%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-io.c.o
[ 16%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-files.c.o
[ 17%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dirs.c.o
[ 18%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-no-shell.c.o
[ 18%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/src/os-impl-loader.c.o
[ 19%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dl-loader.c.o
[ 20%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-dl-symtab.c.o
[ 20%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-bsd-sockets.c.o
[ 21%] Building C object osal/posix_impl/CMakeFiles/osal_posix_impl.dir/__/portable/os-impl-posix-network.c.o
[ 21%] Built target osal_posix_impl
Scanning dependencies of target osal_generic-linux_impl
[ 23%] Building C object osal/generic-linux_impl/CMakeFiles/osal_generic-linux_impl.dir/src/bsp_start.c.o
[ 23%] Building C object osal/generic-linux_impl/CMakeFiles/osal_generic-linux_impl.dir/src/bsp_console.c.o
[ 23%] Built target osal_generic-linux_impl
Scanning dependencies of target osal_bsp
[ 23%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/osapi-bsp.c.o
[ 24%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_app_run.c.o
[ 25%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_app_startup.c.o
[ 26%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_symtab.c.o
[ 26%] Building C object osal/CMakeFiles/osal_bsp.dir/src/bsp/shared/src/bsp_default_voltab.c.o
[ 27%] Linking C static library libosal_bsp.a
[ 27%] Built target osal_bsp
Scanning dependencies of target osal
[ 28%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-binsem.c.o
[ 28%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-clock.c.o
[ 29%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-common.c.o
[ 30%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-countsem.c.o
[ 31%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-dir.c.o
[ 31%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-errors.c.o
[ 32%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-file.c.o
[ 34%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-filesys.c.o
[ 34%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-heap.c.o
[ 35%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-idmap.c.o
[ 36%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-module.c.o
[ 37%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-mutex.c.o
[ 37%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-network.c.o
[ 38%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-printf.c.o
[ 39%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-queue.c.o
[ 39%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-select.c.o
[ 40%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-shell.c.o
[ 41%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-sockets.c.o
[ 41%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-task.c.o
[ 42%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-timebase.c.o
[ 43%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-time.c.o
[ 45%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-debug.c.o
[ 45%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-fpu.c.o
[ 46%] Building C object osal/CMakeFiles/osal.dir/src/os/shared/src/osapi-interrupts.c.o
[ 47%] Linking C static library libosal.a
[ 47%] Built target osal
Scanning dependencies of target psp-pc-linux-impl
[ 48%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_exception.c.o
[ 49%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_memory.c.o
[ 49%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_memtab.c.o
[ 50%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_ssr.c.o
[ 51%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_start.c.o
[ 52%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_support.c.o
[ 52%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_timer.c.o
[ 53%] Building C object psp/pc-linux/pc-linux/CMakeFiles/psp-pc-linux-impl.dir/src/cfe_psp_watchdog.c.o
[ 53%] Built target psp-pc-linux-impl
Scanning dependencies of target psp-pc-linux
[ 54%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_configdata.c.o
[ 54%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_eeprom.c.o
[ 56%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_exceptionstorage.c.o
[ 57%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_memrange.c.o
[ 58%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_memutils.c.o
[ 58%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_module.c.o
[ 59%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_port.c.o
[ 60%] Building C object psp/pc-linux/CMakeFiles/psp-pc-linux.dir/fsw/shared/cfe_psp_ram.c.o
[ 60%] Linking C static library libpsp-pc-linux.a
[ 60%] Built target psp-pc-linux
Scanning dependencies of target sampleAppTable_tables
[ 61%] Generating tables_cpu1/sample_app_tbl.tbl
[ 61%] Built target sampleAppTable_tables
Scanning dependencies of target sample_app
[ 61%] Building C object apps/sample_app/CMakeFiles/sample_app.dir/fsw/src/sample_app.c.o
[ 62%] Linking C shared module sample_app.so
[ 62%] Built target sample_app
Scanning dependencies of target sample_lib
[ 63%] Building C object apps/sample_lib/CMakeFiles/sample_lib.dir/fsw/src/sample_lib.c.o
[ 64%] Linking C shared module sample_lib.so
[ 64%] Built target sample_lib
Scanning dependencies of target ci_lab
[ 65%] Building C object apps/ci_lab/CMakeFiles/ci_lab.dir/fsw/src/ci_lab_app.c.o
[ 67%] Linking C shared module ci_lab.so
[ 67%] Built target ci_lab
Scanning dependencies of target TO_LAB_Subs_tables
[ 67%] Generating tables_cpu1/to_lab_sub.tbl
[ 67%] Built target TO_LAB_Subs_tables
Scanning dependencies of target to_lab
[ 67%] Building C object apps/to_lab/CMakeFiles/to_lab.dir/fsw/src/to_lab_app.c.o
[ 68%] Linking C shared module to_lab.so
[ 68%] Built target to_lab
Scanning dependencies of target sch_lab_table_tables
[ 69%] Generating tables_cpu1/sch_lab_table.tbl
[ 69%] Built target sch_lab_table_tables
Scanning dependencies of target sch_lab
[ 69%] Building C object apps/sch_lab/CMakeFiles/sch_lab.dir/fsw/src/sch_lab_app.c.o
[ 70%] Linking C shared module sch_lab.so
[ 70%] Built target sch_lab
Scanning dependencies of target cfe_core_default_cpu1
[ 71%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_api.c.o
[ 72%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_apps.c.o
[ 72%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_backgroundtask.c.o
[ 73%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_cds.c.o
[ 74%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_cds_mempool.c.o
[ 74%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_erlog.c.o
[ 75%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_objtab.c.o
[ 76%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_perf.c.o
[ 78%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_shell.c.o
[ 78%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_start.c.o
[ 79%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_syslog.c.o
[ 80%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_es_task.c.o
[ 80%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/es/cfe_esmempool.c.o
[ 81%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/ccsds.c.o
[ 82%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_api.c.o
[ 82%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_buf.c.o
[ 83%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_init.c.o
[ 84%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_msg_id_util.c.o
[ 85%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_priv.c.o
[ 85%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_task.c.o
[ 86%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/sb/cfe_sb_util.c.o
[ 87%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/evs/cfe_evs.c.o
[ 87%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/evs/cfe_evs_log.c.o
[ 89%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/evs/cfe_evs_task.c.o
[ 90%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/evs/cfe_evs_utils.c.o
[ 91%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/tbl/cfe_tbl_api.c.o
[ 91%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/tbl/cfe_tbl_internal.c.o
[ 92%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/tbl/cfe_tbl_task.c.o
[ 93%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/tbl/cfe_tbl_task_cmds.c.o
[ 93%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/time/cfe_time_api.c.o
[ 94%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/time/cfe_time_task.c.o
[ 95%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/time/cfe_time_tone.c.o
[ 95%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/time/cfe_time_utils.c.o
[ 96%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/fs/cfe_fs_api.c.o
[ 97%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/fs/cfe_fs_decompress.c.o
[ 98%] Building C object cfe_core_default_cpu1/CMakeFiles/cfe_core_default_cpu1.dir/src/fs/cfe_fs_priv.c.o
[ 98%] Linking C static library libcfe_core_default_cpu1.a
[ 98%] Built target cfe_core_default_cpu1
Scanning dependencies of target core-cpu1
[ 98%] Building C object cpu1/CMakeFiles/core-cpu1.dir/src/target_config.c.o
[100%] Linking C executable core-cpu1
[100%] Built target core-cpu1
[100%] Built target native-all
Scanning dependencies of target mission-all
Scanning dependencies of target cmdUtil
[ 14%] Building C object tools/cFS-GroundSystem/Subsystems/cmdUtil/CMakeFiles/cmdUtil.dir/cmdUtil.c.o
[ 28%] Building C object tools/cFS-GroundSystem/Subsystems/cmdUtil/CMakeFiles/cmdUtil.dir/SendUdp.c.o
[ 42%] Linking C executable cmdUtil
[ 42%] Built target cmdUtil
[ 71%] Built target elf2cfetbl
Scanning dependencies of target cfe_ts_crc
[ 85%] Building C object tools/tblCRCTool/CMakeFiles/cfe_ts_crc.dir/cfe_ts_crc.c.o
[100%] Linking C executable cfe_ts_crc
[100%] Built target cfe_ts_crc
Built target mission-all
XXX@XXX~/cFS/test$ make install
make --no-print-directory -C ""build"" DESTDIR=""/home/XXX/cFS/test/build"" mission-install
[100%] Built target elf2cfetbl
[100%] Built target mission-version
[100%] Built target mission-prebuild
Scanning dependencies of target native-install
[ 21%] Built target osal_posix_impl
[ 23%] Built target osal_generic-linux_impl
[ 27%] Built target osal_bsp
[ 47%] Built target osal
[ 53%] Built target psp-pc-linux-impl
[ 60%] Built target psp-pc-linux
[ 61%] Built target sampleAppTable_tables
[ 62%] Built target sample_app
[ 64%] Built target sample_lib
[ 67%] Built target ci_lab
[ 67%] Built target TO_LAB_Subs_tables
[ 68%] Built target to_lab
[ 69%] Built target sch_lab_table_tables
[ 70%] Built target sch_lab
[ 98%] Built target cfe_core_default_cpu1
[100%] Built target core-cpu1
Install the project...
-- Install configuration: ""debug""
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/cfe_es_startup.scr
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/sample_app.so
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/sample_app_tbl.tbl
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/sample_lib.so
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/ci_lab.so
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/to_lab.so
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/to_lab_sub.tbl
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/sch_lab.so
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/cf/sch_lab_table.tbl
-- Installing: /home/XXX/cFS/test/build/exe/cpu1/core-cpu1
[100%] Built target native-install
Scanning dependencies of target mission-install
[ 42%] Built target cmdUtil
[ 71%] Built target elf2cfetbl
[100%] Built target cfe_ts_crc
Install the project...
-- Install configuration: ""debug""
-- Installing: /home/XXX/cFS/test/build/exe/host/cmdUtil
-- Installing: /home/XXX/cFS/test/build/exe/host/elf2cfetbl
-- Installing: /home/XXX/cFS/test/build/exe/host/cfe_ts_crc
Built target mission-install
XXX@XXX~/cFS/test$ cd build/exe/cpu1/
XXX@XXX~/cFS/test/build/exe/cpu1$ ./core-cpu1 
OS_BSP_Initialize():Maximum user msg queue depth = 10
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 42
CFE_PSP: Default CPU Name: cpu1
OS_Posix_GetSchedulerParams():188:Policy 1: available, min-max: 1-99
OS_Posix_GetSchedulerParams():188:Policy 2: available, min-max: 1-99
OS_Posix_TaskAPI_Impl_Init():374:Selected policy 2 for RT tasks, root task = 99
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
OS_Posix_InternalTaskCreate_Impl():473:pthread_attr_setstacksize error in OS_TaskCreate: Invalid argument
Aborted (core dumped)
```
</details>

**System observed on:**
 - VirtualBox 6.1 running Linux Mint 20, Kernel: Linux 5.4.0-40-generic, Architecture: x86-64


",duplicate,https://github.com/nasa/cFS/issues/112
"Where is the ""Main Loop"" in cFS?","Hello everyone,

I am trying to calculate the loop time for cFS for future debugging purposes. 

If anyone could let me know where the main loop for cFS exists, I would appreciate it!

Thank you, 

Evan Fitzgerald",question,https://github.com/nasa/cFS/issues/111
Integration Candidate: 2020-06-24,"**Describe the contribution**
Combines

https://github.com/nasa/cFE/pull/765
https://github.com/nasa/osal/pull/529
https://github.com/nasa/PSP/pull/176
https://github.com/nasa/elf2cfetbl/pull/47
https://github.com/nasa/cFS-GroundSystem/pull/109

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/108/checks

**Expected behavior changes**
See submodule PRs.

Minor change to `.gitignore` so that `cfe/cmake/sample_defs` inside cfe is currectly tracked in git-aware text editors

**System(s) tested on**
Ubuntu CI

**Additional context**
None

**Code contibutions**
See PRs

**Contributor Info - All information REQUIRED for consideration of pull request**
Leor Bleir, NASA-GSFC
Jacob Hageman, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.
Christopher Knight, NASA-ARC
Yasir Khan, Emergent Space Technologies, Inc.
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/108
CI - add test build/run with elevated privileges ,"**Is your feature request related to a problem? Please describe.**
CI only builds/runs with user privileges

**Describe the solution you'd like**
Add an elevated privileges build/run

**Describe alternatives you've considered**
None.

**Additional context**
See #95 for additional update request

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, good first issue, continuous-integration",https://github.com/nasa/cFS/issues/107
Integration Candidate: 2020-06-17,"**Describe the contribution**
Combines
https://github.com/nasa/cFE/pull/756
https://github.com/nasa/osal/pull/521
https://github.com/nasa/cFS-GroundSystem/pull/107

Also, 
Fix #63

**Testing performed**
Bundle CI - https://github.com/nasa/cFS/pull/106/checks

**Expected behavior changes**
PR #99 - Added the references (links) to the cFE and OSAL user guides from the gh-pages branch.
PR #103 - Update PyQt reference in docs

See submodules PRs for more details

**System(s) tested on**
Ubuntu:Bionic

**Additional context**
None

**Code contibutions**
N/A

**Contributor Info - All information REQUIRED for consideration of pull request**
Jandlyn Bentley, NASA-GSFC
Evan Fitzgerald, Canadian Space Agency [docs only]
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/106
Publish html version of users guide and leverage github pages,"**Is your feature request related to a problem? Please describe.**
The current deploy of the documentation is a pdf that while useful, could be better implemented as a webpage which doxygen already generates.

**Describe the solution you'd like**
Leverage github pages to host a ""live"" version of the users guide.

**Describe alternatives you've considered**
figure out how to get doxygen to generate markdown instead of html and use Jekyll or another static site generator


**Requester Info**
Gerardo E. Cruz-Ortiz, NASA-GSFC
","enhancement, docs",https://github.com/nasa/cFS/issues/105
Either FM unit testing is incorrect or an OSAL enumeration is incorrect,"**Describe the bug**
I don't know if this an FM bug or an OSAL bug.  I don't know what the intent on either side was.  FM is failing unit tests.  The first error indicates before OSAL 5.0.3-bv, FM determined if a directory entry was a directory by using the S_IFDIR macro directly, but had an #ifdef that allowed it to use an OSAL defined macro instead.  

```
#ifdef OS_FILESTAT_ISDIR
            if (OS_FILESTAT_ISDIR(FileStatus))
#else
            if (S_ISDIR(FileStatus.FileModeBits))
#endif
```

With OSAL 5.0.3-bv, the OS_FILESTAT_ISDIR macro is defined and FM is using the OS_FILESTAT_ISDIR macro.  The unit test sets the FileStatus.FileModeBits to 0040000 (0x4000), but the OS_FILESTAT_ISDIR tests equality against OS_FILESTAT_MODE_DIR (0x10000) so the unit tests fail.  I don't know if the OSAL developer intended to use the value expected by FM (0x4000), or if the FM should be:

from:
`filestats->FileModeBits = S_IFDIR;`

to:
```
#ifdef OS_FILESTAT_ISDIR
    filestats->FileModeBits = OS_FILESTAT_MODE_DIR;
#else
    filestats->FileModeBits = S_IFDIR;
#endif
```

Making the change above fixes these errors, but so does changing the enumeration from:
OS_FILESTAT_MODE_DIR =   0x10000
to
OS_FILESTAT_MODE_DIR =   0x4000

**To Reproduce**
Steps to reproduce the behavior:
1. Build FM unit tests with the ut_assert, hooks, and stubs from cFE 6.5.0a
2. Run FM unit tests

**Expected behavior**
FM unit tests should pass.

**System observed on:**
 - VirtualBox
 - Ubuntu 16.04
 - FM 2.5.2, OSAL 5.0.3-bv, app ut_assert, hooks, and stubs from cFE 6.5.0a

**Reporter Info**
Mathew Benson
Windhover Labs, LLC
mbenson@windhoverlabs.com
","bug, unit-test",https://github.com/nasa/cFS/issues/104
Update PyQt4 to PyQt5 in README,"**Describe the contribution**
Updates documentation to match implementation

**Testing performed**
N/A

**Expected behavior changes**
Docs-only change

**System(s) tested on**
Web browser

**Additional context**
None

**Code contibutions**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
Evan Fitzgerald, Canadian Space Agency
 - Note CLAs ONLY apply to software contributions.
","enhancement, CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/103
Integration Candidate: 2020-06-10,"**Describe the contribution**
Fix #100 

Combines
[cFE PR #743](https://github.com/nasa/cFE/pull/743)
[OSAL PR #511](https://github.com/nasa/osal/pull/511)
[PSP PR #175](https://github.com/nasa/PSP/pull/175)
[sample_ap PR #76](https://github.com/nasa/sample_app/pull/76)
[to_lab PR #46](https://github.com/nasa/to_lab/pull/46)


**Testing performed**
Bundle CI - 

**Expected behavior changes**
See submodule PRs

**System(s) tested on**
Ubuntu:Bionic

**Additional context**
None

**Code contibutions**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.
 Christopher D. Knight, NASA-ARC
Jandlyn Bentley, NASA-GSFC
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/102
Try running against Coverity,"**Is your feature request related to a problem? Please describe.**
Not enough static analysis warnings to keep interns busy.

**Describe the solution you'd like**
Try Coverity, trade against LGTM (or use both).

**Describe alternatives you've considered**
None.

**Additional context**
None.

**Requester Info**
Jacob Hageman - NASA/GSFC from conversation on cfs-community email list.
","security, continuous-integration",https://github.com/nasa/cFS/issues/101
"Fix #68, Add a reference to skeleton_app in README.md","**Describe the contribution**
Added a reference to the skeleton_app (https://github.com/nasa/skeleton_app) in the cFS bundle's README.md.

In this reference I provided a short description of the skeleton app with a link to its repository.
This reference was placed under the ""Other cFS related elements/tools/apps/distributions"" section, under the ""Other Apps"" category.

Resolves: #68 

**Testing performed**
N/A

**Expected behavior changes**
N/A

**System(s) tested on**
N/A

**Additional context**
This is a simple documentation enhancement.

**Code contibutions**
N/A

**Contributor Info - All information REQUIRED for consideration of pull request**
Contribution by: Jandlyn Bentley, NASA GSFC
","enhancement, docs",https://github.com/nasa/cFS/pull/100
"Fix #63, Added the references (links) to the cFE and OSAL user guides from the…","**Describe the contribution**
Added the cFE and OSAL user guides' references (links) from the gh-pages branch to the cFS bundle README.md. 

Resolves: #63 

**Contributor Info - All information REQUIRED for consideration of pull request**
Contributed by Jandlyn Bentley, NASA GSFC
","CCB:FastTrack, docs",https://github.com/nasa/cFS/pull/99
Boolean Type Not Defined ?,"I'm new to cFS and trying to slowly add the applications I will need for my mission. I'm trying to add the TO, SCH, and HK apps but keep running into the same problem. It appears that in many app codes such as sch_msg.h, sch_app.h, etc. there is use of 'boolean'. It doesn't appear that the boolean type has been defined anywhere in the cFS code. Am I missing something or does it have to be manually added in? 

****System observed on:**
 - VM running Ubuntu 18.04.4 64bit
 - Versions running all the current versions of cfs bundle, cfs apps, and cfe/osal/psp

Paula ",question,https://github.com/nasa/cFS/issues/98
Dockerized End-To-End Tests (Proof of Concept),"# Describe the contribution

A tool to perform dockerized end-to-end tests of cFS.

This tool simulates network-based interactions between containerized cFS executables and a pseudo-ground system software acting as a test runner.

(General context: https://github.com/nasa/cFS/issues/56)

## Quick Overview

The tool makes a containerized cFS executable (`cfs` service) and a test runner (`gsw` service) interact. The following screen captures illustrate this mechanism by comparing a passing test with a failing one.

<img width=""759"" alt=""Overview"" src=""https://user-images.githubusercontent.com/63288227/83953426-a4887100-a840-11ea-8ef1-87749b594aeb.png"">

1. `gsw` service: the test runner
2. `cfs` service: the system under test (i.e. a containerized cFS executable)
3. Zero exit code (the test passed)
4. Error voluntarily triggered for demonstration purposes: here, the `NOOP` command does not emit the expected event
5. Non-zero exit code (the test failed)

## Quick Start

### Requirements

* Docker 19 or higher
* Docker Compose compatible with compose file format 2.0 or higher

### Usage

From the cFS top-level directory, run the following command:

`docker-compose up --abort-on-container-exit --exit-code-from gsw`

When executed for the first time, this command builds the cFS with the options set in `docker-compose.yml` (by default: Ubuntu 18.04, unit tests disabled, simulation native, debug build, and deprecated omitted) as well as a pseudo-ground system software that attempts to enable the telemetry and, if successful, runs a simple assertion.

The default build-time options can be found (and, if needed, modified) in `docker-compose.yml` (lines 7-12):

```yaml
dockerfile: ./tools/e2eTests/platforms/Ubuntu/18.04/Dockerfile
args:
  - ENABLE_UNIT_TESTS=false
  - SIMULATION=native
  - BUILDTYPE=debug
  - OMIT_DEPRECATED=true
```

For more details, please refer to the `README` file located in `tools/e2eTests` subdirectory.

## Goal

The purpose of this working proof of concept is to demonstrate the potential as well as the limitations of using Docker to perform end-to-end tests.

This approach has several advantages.

First, it aims at enabling the future incorporation of end-to-end tests in the continuous integration process, automatically ensuring that the executable is working as expected in the scope of these tests. In this regard, it should be noted that Travis can run Docker Compose commands (see: <https://docs.travis-ci.com/user/docker/#using-docker-compose>).

Second, it allows for more granular control of the testing environment by pinning the operating systems and the required dependencies to a specific version. Therefore, it makes the tests highly reproducible. It follows that the versions of the packages are explicitly specified in all cFS Dockerfiles. For instance (`tools/e2eTests/platforms/Ubuntu/18.04/Dockerfile`, lines 19-27):

```
RUN apt-get -qy update                              \
    && apt-get -y install --no-install-recommends   \
        ca-certificates=20190110~18.04.1            \
        git=1:2.17.1-1ubuntu0.7                     \
        cmake=3.10.2-1ubuntu2.18.04.1               \
        make=4.1-9.1ubuntu1                         \
        gcc=4:7.4.0-1ubuntu2.3                      \
        g++=4:7.4.0-1ubuntu2.3                      \
    && rm -rf /var/lib/apt/lists/*
```

Third, it facilitates the compilation of cFS executables using different combinations of built-time options. In other words, it potentially permits the automatic generation of matrixed cFS executables.

## Limitations

The purpose of this pull request, which introduces a working proof of concept, is not per se to provide a _complete_ end-to-end testing solution. As a consequence, this tool is not yet integrated into the existing Travis configuration, and the test runner performs a simple assertion.

This contribution is also limited by the technical characteristics of Docker. In particular:
* Broadly speaking, Docker does not natively and/or straightforwardly support ""non-standard"" operating systems (e.g. RTOS). That explains why, for instance (and unfortunately), VxWorks is presently not supported by this solution. Alternative or complementary approaches will be needed to extend automated end-to-end to other platforms. 
* Unit tests systematically fail when the cFS images are being built (see below, *Additional context*). This is one of the reasons why they are disabled by default.

It should also be noted that an Alpine image is included (`./tools/e2eTests/platforms/Alpine/3/Dockerfile`) but is currently not operational, mainly because of the following error: `/usr/include/sys/signal.h:1:2: error: #warning redirecting incorrect #include <sys/signal.h> to <signal.h> [-Werror=cpp]` (see: <https://github.com/nasa/osal/issues/438#issue-607934390>). I have decided to keep it because it is conceivable that it becomes operational in the future.

# Testing performed

In the context of this proof of context, a simple flow is tested by the `gsw` test runner (`tools/e2eTests/gsw/gsw.py`):

* Try to enable the telemetry
* If the telemetry cannot be enabled, the test fails
* Otherwise, send a `NOOP` command (for the SAMPLE app) packet to the cFS
* If a `SAMPLE: NOOP command` event appears in the telemetry message sent by the cFS, the test passes
* Otherwise, the test fails

# Expected behavior changes

This contribution does not modify the existing code. Therefore, no behavior changes are expected.

# System(s) tested on

## Hosts

**Ubuntu**

* Ubuntu 18.04
* VirtualBox 6.0
* Docker 19.03.6
* Docker-compose 1.17.1

**macOS**

* iMac Retina 4K, 2019
* macOS 10.15.5
* Docker 19.03.8
* Docker-compose 1.25.5

## Docker

* Alpine 3 (currently not operational)
* CentOS 7
* Ubuntu 18.04, and 20.04

# Additional context

## Components

The tool consists of:

* Multiple Dockerfiles (one for each version of an operating system) to compile and run the cFS
* A Dockerfile to build and run a pseudo-GSW container to test the cFS executable files
* A `docker-compose.yml` file to make them interact. This Docker Compose file makes reference to two services: `cfs` (the system under test) and `gsw` (the test runner).

**cFS Dockerfiles - `cfs` service**

The cFS Dockerfiles have a multistage structure. The first stage builds the `core-cpu1` executable file. The second one corresponds to the runtime environment for this executable.

**Pseudo-GSW (test runner) - `gsw` service**

The pseudo-GSW is a Python program, running in its own container, that, at this stage, performs a simple assertion and returns a zero (success) or non-zero (failure) exit code.

It is a proof of concept which, obviously, and if the present proposal is accepted, will have to be reworked and replaced by a more robust test runner.

**cFS<>GSW interactions**

`cfs` and `gsw` services are interacting on their own internal network managed by Docker Compose (`docker-compose.yml`, lines 27-29):

```yaml
networks:
  default:
    internal: true  
```

Their IPs are dynamic. In order for `gsw` to get `cfs` IP as well as its own, it uses the names of the corresponding Docker Compose services, benefiting therefore from the Docker DNS lookup feature (`tools/e2eTests/gsw/gsw.py`, lines 35 and 42):

```python
CFS_IP = socket.gethostbyname('cfs')
. . .
GSW_IP = socket.gethostbyname('gsw')
```

## Unit Tests Failures

As evoked above, the unit tests fail during the building stage (i.e. at compile-time, but not at runtime). This is due to a Docker limitation vis à vis POSIX message queues that is explainable by the fact that Docker disables, among other things, the `CAP_SYS_RESOURCE` Linux capability. When a cFS image is being built with unit tests enabled, the unit tests that fail are `osal-core-test` (`OS_QueueCreate`, `OS_QueueDelete`, `OS_QueueGetIdByName` and `OS_QueueGetInfo`) as well as `queue-timeout-test`.

There are four possible approaches to overcome this issue:

1. Disable unit tests at build time. In the context of continuous integration testing, that would make sense as the unit tests would continue to be performed in a preliminary and separate job.
2. Allow unit tests to fail at build time.
3. Modify the unit tests to make them fully compatible with Docker. Not necessarily desirable as it would affect the characteristics of the system under test.
4. Run unit tests at runtime. Indeed, the solution requires the Docker containers to run with capability `CAP_SYS_RESOURCE` (It should be noted that `privileged: true` would have the same effect but with a more extensive scope) (`docker-compose.yml`, lines 13-14):

    ```yaml
    cap_add: 
      - CAP_SYS_RESOURCE
    ```

    Such an approach would however blur the line between unit testing and end-to-end testing. For this reason, I would mostly recommend against it.

## Suggestions for Future Improvements

* A more complete and robust test runner
* Travis integration
* A solution to generate matrixed cFS executables and compare their respective test results

# Third party code
None

# Contributor Info - All information REQUIRED for consideration of pull request
Guillaume Lethuillier
Personal, individual CLA submitted",,https://github.com/nasa/cFS/pull/97
Integration Candidate: 2020-05-27,"**Describe the contribution**
Fix #92 

and combines

1. https://github.com/nasa/cFE/pull/729
2. https://github.com/nasa/osal/pull/487
3. https://github.com/nasa/PSP/pull/167
4. https://github.com/nasa/ci_lab/pull/50
5. https://github.com/nasa/sample_app/pull/71
6. https://github.com/nasa/to_lab/pull/44
7. https://github.com/nasa/cFS-GroundSystem/pull/101

**Testing performed**
https://github.com/nasa/cFS/pull/96/checks

**Expected behavior changes**
See submodule pull requests

PR #94 -  lgtm analysis ignores `Ui_*` files from cFS-GroundSystem

**System(s) tested on**
Ubuntu:Bionic

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
PR #94 - Leor Bleier, NASA-GSFC
See submodules for other contributors",,https://github.com/nasa/cFS/pull/96
CI - build multiple targets,"**Is your feature request related to a problem? Please describe.**
The build process becomes increasingly more complex when building for multiple targets. CI should build for at least two targets to ensure that the build system is functioning properly.

**Describe the solution you'd like**
Have CI create relevant build configuration to build for multiple targets.

**Requester Info**
Christopher.D.Knight@nasa.gov","enhancement, continuous-integration",https://github.com/nasa/cFS/issues/95
Fix #92 - Update lgtm.yml to exclude Ui files,"**Describe the contribution**
Fixes #92 to exclude files in cFS-GroundSystem with the `Ui_` prefix

**Testing performed**
Steps taken to test the contribution:
Pending lgtm run

**Expected behavior changes**
lgtm analysis should not include `Ui_` files

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Leor Bleier, NASA GSFC\Code 582
",enhancement,https://github.com/nasa/cFS/pull/94
Small hiccup when installing the cFS bundle,"In following the steps laid out in the cFS bundle's readme, everything up through the ""Build and Run"" section worked fine. However, there was a small hiccup that occurred in the ""Send commands, receive telemetry"" section after installing PyQt5 (instead of the prescribed PyQt4) and PyZMQ.  

I changed directory back to the main cFS location, and tried to follow the next insruction: cd tools/cFS-GroundSystem/Subsystems/cmdUtil, but I got this error message: No such file or directory.  I tried installing CmdUtils via pip3, then re-tried the cd tools/cFS-GroundSystem/Subsystems/cmdUtil command again and still the same error occurred.  Skipping to the next line: python3 GroundSystem.py was unsurprisingly met with: pythons3: can’t open file ‘GroundSystem.py’: [Errno 2] No such file or directory.  I tried closing out the terminal and opening a new one, and re-tried cd tools/cFS-GroundSystem/Subsystems/cmdUtil, but still no luck.  Later after trying a new terminal again, I thought maybe PyQt5 instead of PyQt4 was a problem (but nothing changed).

And finally, trying a new terminal window one last time, I was able to get cd tools/cFS-GroundSystem/Subsystems/cmdUtil and all of the subsequent commands to work, and launch the ground system gui.  I am not sure why, after changing nothing from the last attempt, it would work this time.

This was attempted on a Linux VM with Ubuntu 20.04.
",question,https://github.com/nasa/cFS/issues/93
Update lgtm.yml to exclude Ui files,"**Describe the bug**
The auto-generated `.py` files created by `pyuic5` should not be analyzed by lgtm

**Expected behavior**
Do not have lgtm analysis include files starting with `Ui_`

**Additional context**
This is specifically related to nasa/cFS-GroundSystem#46

**Reporter Info**
Leor Bleier, NASA GSFC\Code 582
",,https://github.com/nasa/cFS/issues/92
Integration Candidate: 2020-05-20,"**Describe the contribution**

Combines:
1. nasa/psp#166
2. nasa/osal#482
3. nasa/cFS-GroundSystem#94
4. https://github.com/nasa/to_lab/pull/43
5. https://github.com/nasa/sample_lib/pull/24
6. https://github.com/nasa/sch_lab/pull/41
7. https://github.com/nasa/tblCRCTool/pull/18
8. https://github.com/nasa/elf2cfetbl/pull/44

And

Fix #88 

**Testing performed**
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/168824126

**Expected behavior changes**
See PRs for submodules above
PR #89 

**System(s) tested on**
Ubuntu: Bionic

**Additional context**
See PRs

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
See PRs for other contributors",,https://github.com/nasa/cFS/pull/91
"Fix #88, Only inline empty functions","**Describe the contribution**
Fix #88

**Testing performed**
Ran against related repos, confirmed style update.

**Expected behavior changes**
None - Whitespace

**System(s) tested on**
 - Hardware: cFS Dev Server 3
 - OS: Ubuntu 18.04
 - Versions: Master bundle + this commit.

**Additional context**
None.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/pull/89
Code style update - only inline empty functions,"**Is your feature request related to a problem? Please describe.**
Complaints about single line functions being inline

**Describe the solution you'd like**
Don't.

**Describe alternatives you've considered**
Ignore complaints.

**Additional context**
None, whitespace.

**Requester Info**
Jacob Hageman - NASA/GSFC, per https://github.com/nasa/sample_lib/pull/23#pullrequestreview-416317282",enhancement,https://github.com/nasa/cFS/issues/88
Integration Candidate 2020-05-13,"**Describe the contribution**
Combines:
nasa/cfe#712
nasa/osal#477
nasa/to_lab#39
nasa/cFS-GroundSystem#90

Also:
Fix #84 

**Testing performed**
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/167639047

**Expected behavior changes**
See Integration Candidate PRs in submodule repositories

PR #85 - Adds GIT SHA's to Travis log

**System(s) tested on**
Bundle CI - Ubuntu:Bionic


**Contributor Info - All information REQUIRED for consideration of pull request**
Christopher D. Knight, NASA-ARC",,https://github.com/nasa/cFS/pull/87
Create directory structure for pushing CTF scripts,"**Is your feature request related to a problem? Please describe.**
Need to create a location to push CTF scripts and plugins to.


**Requester Info**
Dan Knutsen
NASA Goddard
",enhancement,https://github.com/nasa/cFS/issues/90
Command line arguments not working,"**Describe the bug**
Command line arguments are not being parsed.

**To Reproduce**
Steps to reproduce the behavior:
1. Compile cFS
2. Run ./core-cpu1 --help

**Expected behavior**
Display help information

**Code snips**
The issue seems to be [here](https://github.com/nasa/osal/blob/c2bcebbc4d7e60a41b604e9acfc8af3c60b8536a/src/bsp/pc-linux/src/bsp_start.c#L169-L170). According to the man pages, getopts and getopt_long both require argc and argv passed on without modifications.

**System observed on:**
 - Hardware: x86
 - OS: Ubuntu LTS 18.04
 - Versions: 
     - cFE 6.7.17 (95f34d2), 
     - OSAL 5.0.16 (c2bcebb), 
     -  PSP 1.4.11 (37ee8eb)

**Reporter Info**
NASA LARC
",duplicate,https://github.com/nasa/cFS/issues/86
"Fix #84, Add GIT SHA","**Describe the contribution**
Adds GIT SHA's to Travis log.

**Testing performed**
Checked the travis log for this branch.

**Contributor Info - All information REQUIRED for consideration of pull request**
Christopher.D.Knight@nasa.gov","enhancement, CCB:Approved, CCB:FastTrack",https://github.com/nasa/cFS/pull/85
report submodule SHA in travis job log,"**Is your feature request related to a problem? Please describe.**
It would be helpful to know exactly what versions of everything Travis is doing a CI against.

**Describe the solution you'd like**
Adding ""git submodule"" and ""git rev-parse HEAD"" to the Travis script.

**Requester Info**
Christopher.D.Knight@nasa.gov","enhancement, good first issue",https://github.com/nasa/cFS/issues/84
Integration Candidate COMBINED 2020-04-29 and 2020-05-06,"**Describe the contribution**
Integration Candidate combining

- [cFE PR #692](https://github.com/nasa/cFE/pull/692)
- [osal PR #458](https://github.com/nasa/osal/pull/458)
- [PSP PR #160](https://github.com/nasa/psp/pull/160)
- [ci_lab PR #47](https://github.com/nasa/ci_lab/pull/47)
- [sch_lab PR #39](https://github.com/nasa/sch_lab/pull/39)
- [sample_app PR #63](https://github.com/nasa/sample_app/pull/63)
- [to_lab PR #38](https://github.com/nasa/to_lab/pull/38)
- [elf2cfetbl PR #41](https://github.com/nasa/elf2cfetbl/pull/41)
- [cFS-GroundSystem PR #86](https://github.com/nasa/cFS-GroundSystem/pull/86)


**Testing performed**
See PRs
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/165726730

**Expected behavior changes**
See PRs

**System(s) tested on**
Bundle CI

**Contributor Info - All information REQUIRED for consideration of pull request**
",,https://github.com/nasa/cFS/pull/83
"consider using ""REUSE"" for license/copyright banner management","Currently copyright headers and the like are all over the map, this software would help automatically check that all of our copyright and license information is correct in every file in the cFS tree.

See: https://reuse.software/

**Requester Info**
Christopher.D.Knight@nasa.gov",enhancement,https://github.com/nasa/cFS/issues/82
Move travis CI script into a .sh file,"**Describe the contribution**
The current Travis setup is cumbersome to replicate on a local system. 

This collects all the commands and moves them onto a standalone shell file that can be used on multiple systems.

**Testing performed**
Tested on CI

**Expected behavior changes**
Same behavior as current CI

**System(s) tested on**
Travis CI

**Additional context**
This can benefit from a containerized build system using docker.
Might address some of the desires in #76 

In the future it might make sense to separate these into subscripts with ""build-exec"", ""unit-test"", and ""build-doc"" or something like that. Though there is a balance between this approach and using makefiles

**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC
",invalid,https://github.com/nasa/cFS/pull/81
"Fix #79, Add sleep after script to avoid truncated log","**Describe the contribution**
Added after_script sleep to CI
Fix #79 

**Testing performed**
CI - See https://travis-ci.com/github/skliper/cFS/builds/164015394

**Expected behavior changes**
Full job log now available on travis

**System(s) tested on**
 - Hardware: CI
 - OS: Ubuntu 18.04
 - Versions: Master bundle + this commit

**Additional context**
None

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","bug, CCB:Approved",https://github.com/nasa/cFS/pull/80
Travis truncating job logs,"**Describe the bug**
Likely related to https://github.com/travis-ci/travis-ci/issues/6018 and similar reports the job log output gets truncated, often around the final documentation warning checks

**To Reproduce**
See build logs, for example https://travis-ci.com/github/skliper/cFS/jobs/328169033

**Expected behavior**
Full log should be shown to debug errors

**Code snips**
N/A

**System observed on:**
CI

**Additional context**
None

**Reporter Info**
Jacob Hageman - NASA/GSFC",bug,https://github.com/nasa/cFS/issues/79
Integration Candidate: Fast Track,"**Describe the contribution**
Combines the following Fast Track Pull Requests
osal: https://github.com/nasa/osal/pull/444
cfe: https://github.com/nasa/cFE/pull/672

**Testing performed**
See PRs
Bundle CI - https://github.com/nasa/cFS/pull/78/checks?check_run_id=644721591

**Expected behavior changes**
See osal PR and cFE PR

**System(s) tested on**
Bundle CI - Ubuntu:Bionic

**Contributor Info - All information REQUIRED for consideration of pull request**
 Joseph Hickey, Vantage Systems, Inc.",,https://github.com/nasa/cFS/pull/78
move cppcheck from .travis.yml to Makefile.sample,"It would be convenient to be able to run cppcheck in our checked out repo's without having to fish it out of the .travis.yml--what about moving it from .travis.yml to Makefile.sample and then having .travis.yml just call ""make cppcheck""?

For that matter might be useful to add Make rules to ""apt install"" the required packages.

**Requester Info**
Christopher.D.Knight@nasa.gov",,https://github.com/nasa/cFS/issues/76
cFS header definition Version 2 CI,"**Is your feature request related to a problem? Please describe.**
Certification configuration is CCSDS extended header, 32bit.  Default config is currently CCSDS primary only, 64 bit.

**Describe the solution you'd like**
CI with cFS header definition V2, and any other minor tweaks for cert config.

**Describe alternatives you've considered**
Leaning towards adding a V2 config that maps to the cert configuration to CI
Won't be the full CI until related issues get resolved.

**Additional context**
Will need to resolve any related V2 issues (cmdUtil doesn't support it, etc), issues in implicit packet padding differences, etc.

**Requester Info**
Jacob Hageman - NASA/GSFC
",enhancement,https://github.com/nasa/cFS/issues/75
Integration Candidate: 2020-04-22,"**Describe the contribution**
Combines

https://github.com/nasa/osal/pull/440
https://github.com/nasa/elf2cfetbl/pull/40
https://github.com/nasa/cFE/pull/649
https://github.com/nasa/sample_app/pull/62
https://github.com/nasa/sample_lib/pull/22

**Testing performed**
See PRs
Bundle CI - https://github.com/nasa/cFS/pull/74/checks?check_run_id=637600886

**System(s) tested on**
CI - Ubuntu:Bionic

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
Daniel Knutsen, NASA-GSFC
Gerardo E. Cruz-Ortiz, NASA-GSFC
Yasir Khan, NASA-GSFC
Christopher D. Knight NASA-ARC
Stanislav Pankevich, PTS GmbH
 Joseph Hickey, Vantage Systems, Inc.
",,https://github.com/nasa/cFS/pull/74
"Fix #72,  LGTM build now omits deprecated code","**Describe the contribution**
Added OMIT_DEPRECATED=true to LGTM script
Fix #72 

**Testing performed**
CI

**Expected behavior changes**
Should clear up some errors related to shell, decompress, etc.

**System(s) tested on**
 - CI

**Additional context**
Built on latest IC

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","enhancement, CCB:Approved",https://github.com/nasa/cFS/pull/73
Update LGTM build to OMIT_DEPRECATED,"**Is your feature request related to a problem? Please describe.**
Deprecated elements included in analysis

**Describe the solution you'd like**
Remove deprecated elements from analysis

**Describe alternatives you've considered**
None.

**Additional context**
Will address some of the open LGTM issues.

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, good first issue",https://github.com/nasa/cFS/issues/72
gui/menu/wizard configuration,"**Is your feature request related to a problem? Please describe.**
For noobs, it can be daunting to configure a cFS environment, or to find ""that one parameter that changes the size of the pipe tables"", for example.

**Describe the solution you'd like**
It would be nice to have a configuration ...generator...? that a user could use to quickly run through the configuration options (conditional code options, platform selection, sizing options) and generates the appropriate CMake files, .h files, startup scripts, etc.

**Describe alternatives you've considered**
menuconfig/kconfig (https://en.wikipedia.org/wiki/Menuconfig) is a popular option and provides a menu-based configuration system. Alternatively, a ""wizard"" style configuration (like Perl's Configure script) that steps through all of the configuration options, asking questions and providing default answers.

Whatever option is chosen, it should *not* replace the existing build process but should be a front-end to it, and provide human-readable/editable files as output that are equivalent to the current files.

**Requester Info**
Christopher.D.Knight@nasa.gov","enhancement, help wanted, good first issue",https://github.com/nasa/cFS/issues/71
Integration Candidate: 2020-04-15,"**Describe the contribution**
Integration Candidate 2020-04-15

Combines
- https://github.com/nasa/cFE/pull/635
- https://github.com/nasa/osal/pull/433
- https://github.com/nasa/PSP/pull/155
- https://github.com/nasa/cFS-GroundSystem/pull/74
- https://github.com/nasa/sample_lib/pull/21

**Testing performed**
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/162280689

**Expected behavior changes**
See PRs

**System(s) tested on**
Bundle CI - Ubuntu:Bionic

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman, NASA-GSFC
Leor Bleir, NASA-GSFC
Daniel Knutsen, NASA-GSFC
Chris D. Knight, NASA-ARC
Leor Bleir, NASA-GSFC
Joseph Hickey, Vantage Systems, Inc.
Stanislav Pankevich, PTS GmbH
 Marek Glijer, Self
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/70
"Add pc-linux toolchain ""cross-compile"" to CI","**Is your feature request related to a problem? Please describe.**
Current CI uses SIMULATION=native for all builds

**Describe the solution you'd like**
Add one non-simulation build, consider matrix model as used in osal

**Describe alternatives you've considered**
None

**Additional context**
nasa/cFE#629 - failure that wasn't caught

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, continuous-integration",https://github.com/nasa/cFS/issues/69
Add reference to skeleton_app in README,"**Is your feature request related to a problem? Please describe.**
Skeleton app added, missing reference in readme

**Describe the solution you'd like**
Add reference

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, good first issue",https://github.com/nasa/cFS/issues/68
Document deprecation process,"**Is your feature request related to a problem? Please describe.**
Process not documented

**Describe the solution you'd like**
Document process and reference.
 - Issue requesting deprecation gets reviewed by CCB, accepted/assigned or rejected
   - evaluate requirements/documentation/operational impacts
 - Pull request(s) wraps deprecated elements in *_OMIT_DEPRECATED ifndef and removes any internal dependencies
   - Default sample configuration does not remove this code
   - make OMIT_DEPRECATED=true prep will compile without it to check code for compliance
   - ideally any deprecated elements address dependency fix (use new element, no longer supported, etc)
   - elements can be deprecated in any build/release
   - CI tests with and without deprecated elements removed to ensure no internal dependencies
  - Issue requesting removal of deprecated code
  - Pull request removes deprecated elements
    - typically done end of cycle prior to a major release

**Describe alternatives you've considered**
Wing it.

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC",docs,https://github.com/nasa/cFS/issues/67
Integration Candidate: 2020-04-08,"**Describe the contribution**
Integration Candidate - 2020-04-08
Updates the bundle's submodules for:
https://github.com/nasa/cFE/pull/615
https://github.com/nasa/osal/pull/417
https://github.com/nasa/PSP/pull/153

**Testing performed**
See PRs 
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/160607248

**Expected behavior changes**
See PRs

**System(s) tested on**
Bundle CI - Ubuntu:Bionic

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC
Christopher D. Knight, NASA-ARC
Joseph Hickey, Vantage Systems, Inc.
David Archuleta Jr., Self
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/66
Integration Candidate 2020-04-01,"**Describe the contribution**
Integration Candidate
Integrates:

1. cFE 6.7.12 - https://github.com/nasa/cFE/pull/586
2. osal 5.0.11 - https://github.com/nasa/OSAL/pull/408
3. psp 1.4.8 - https://github.com/nasa/PSP/pull/151
4. cFS-GroundSystem 2.1.6 - https://github.com/nasa/cFS-GroundSystem/pull/69

**Testing performed**
Bundle CI - https://travis-ci.com/github/nasa/cFS/builds/159710339

**Expected behavior changes**
See PRs

**System(s) tested on**
Bundle CI - Ubuntu:Bionic


**Contributor Info - All information REQUIRED for consideration of pull request**
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/64
Reference autogenerated docs,"**Is your feature request related to a problem? Please describe.**
See #61 
No current references to the generated documents

**Describe the solution you'd like**
Once the docs are deployed the first time (after push of #61 to master and CI completes) add references from at least README.md.

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, good first issue",https://github.com/nasa/cFS/issues/63
Integration Candidate 2020-03-25,"**Describe the contribution**
Integration Candidate 2020-03-25,
incorporates changes to sample_app, cFE, and OSAL

Fix #28, #60, and #47, 

**Testing performed**
PR #61 
Bundle CI

**Expected behavior changes**
See related Integration Candidate PRs
nasa/osal#52
nasa/osal#401
nasa/cFE#579

Updates to Bundle CI:
- Deploy documentation, 
- config warnings
- removes permissive mode hack
- Adds enforce of no doxygen warnings for osal and users guide

**System(s) tested on**
Bundle CI - Ubuntu:Bionic

**Code contibutions**
Jacob Hageman - NASA/GSFC
Gerardo E. Cruz-Ortiz - NASA/GSFC",,https://github.com/nasa/cFS/pull/62
"Update CI for deploy docs, warnings, and simplify","**Describe the contribution**
Fix #28, Deploy documentation
Fix #60, config warnings except for the new ones
introduced by using the latest deployment version
Fix #47, removes permissive mode hack and updates README.md
Adds enforce of no doxygen warnings for osal and users guide

**Testing performed**
Steps taken to test the contribution:
1. CI test

**Expected behavior changes**
Old CI script warnings resolved (2 remain based on using development version)
Now enforces no doxygen warnings for user guides
Will deploy documentation to gh_pages branch on push to master

**System(s) tested on**
 - CI system

**Additional context**
None

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","enhancement, CCB:FastTrack",https://github.com/nasa/cFS/pull/61
Fix travis-CI config warnings,"**Is your feature request related to a problem? Please describe.**
Build config validation (from travis-CI) -
root: deprecated key sudo (The key `sudo` has no effect anymore.)
language: unexpected sequence, using the first value (c)
root: missing os, using the default linux
env: key matrix is an alias for jobs, using jobs

**Describe the solution you'd like**
See https://github.com/nasa/ci_lab/commit/6cf5a57f5995710345b2a5411d11af2b2d7f80ee

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/60
Exclude lgtm false positives,"**Is your feature request related to a problem? Please describe.**
sample_lib triggers a lgtm error based on checking strncpy return (false alarm)

**Describe the solution you'd like**
Exclude string-copy-return-value-as-boolean (triggered by sample_lib, which is doing this on purpose)

**Describe alternatives you've considered**
Could clutter code to exclude this specific call from triggering the warning.

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/59
Integration Candidate 2020-03-18,"**Describe the contribution**
Fix #39 and #54 

**Testing performed**
See PRs
Bundle CI

**Expected behavior changes**
PR #40 
PR  #55 

**System(s) tested on**
CI Ubuntu:Bionic

**Contributor Info - All information REQUIRED for consideration of pull request**
Anh Van,NASA-GSFC
Jacob Hageman, NASA-GSFC
Gerardo E. Cruz-Ortiz, NASA-GSFC",,https://github.com/nasa/cFS/pull/58
Integration Candidate 20200311,"**Describe the contribution**
Integrated PRs:
https://github.com/nasa/cFE/pull/563
https://github.com/nasa/PSP/pull/142

**Testing performed**
Default CI Testing along with extended testing from PR #40 

**Expected behavior changes**
See cFE and PSP PRs above

**System(s) tested on**
CI Ubuntu: Bionic

**Code contibutions**
Gerardo E. Cruz-Ortiz - NASA GSFC",,https://github.com/nasa/cFS/pull/57
Add positive check to cFS execution in CI,"**Is your feature request related to a problem? Please describe.**
CI in #39 only checks for warn/err/fail in cFS output

**Describe the solution you'd like**
Enforce the existence of the following message:
""CFE_ES_Main entering OPERATIONAL state""

**Describe alternatives you've considered**
Any other positive check would work, above was the simplest I could think of.

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC","enhancement, continuous-integration",https://github.com/nasa/cFS/issues/56
"Fix #54, update lgtm file","**Describe the contribution**
Update lgtm file to include python

**Testing performed**
1) Go to https://lgtm.com/projects/g/nasa/cFS/logs
2) Go to log tab
3) Click on ""test analysis configuration""
4) Paste new lgtm file 
5) Click ""try build""
6) Verify both C and python code was extracted and analyze 

**Contributor Info - All information REQUIRED for consideration of pull request**
Anh Van, NASA Goddard
",CCB:Approved,https://github.com/nasa/cFS/pull/55
Update lgtm to include python,"**Is your feature request related to a problem? Please describe.**
Update lgtm.yml file to include python

**Requester Info**
Anh Van, NASA Goddard
",enhancement,https://github.com/nasa/cFS/issues/54
CFE_TIME_GetTime() information seems incorrect?,"A question related to the use of the time service provided by cfe.

I am trying to get time information using the API provided by cfe as follows:
```
CFE_TIME_SysTime_t time;
time = CFE_TIME_GetTime();
```

And I print it as follows:
```
char buffer[500] = {0};
CFE_TIME_Print(buffer,time);
OS_printf(""%s\n"",buffer);
```
But the printed year and time information seems to be incorrect. It indicates some value in 1980 as: `1980-012-14:03:20.00000`.  Also, when I launch cfe (core-cpu1), I see the following output which indicates the time starting in 2030 and then changing to some value in 1980.

```
2030-069-17:55:07.13648 SB internal message format: CCSDS Space Packet Protocol version 1
2030-069-17:55:07.13649 ES Startup: Calling CFE_TIME_EarlyInit
1980-012-14:03:20.00000 ES Startup: Calling CFE_TBL_EarlyInit
1980-012-14:03:20.00021 ES Startup: Calling CFE_FS_EarlyInit
```
Could someone please explain how I could obtain the correct current time information using the cFE APIs without having to resort to using functions in time.h?

Thanks!
",question,https://github.com/nasa/cFS/issues/53
IC - 20200304,"**Describe the contribution**
Integration Candidate 20200304 

Fixes #43 

See PR #44 

**Testing performed**
See PR #44 

**Expected behavior changes**
README.md is now updated to reflect upgrade to python3.

**System(s) tested on**
CI

**Additional context**
See PR #44 

**Contributor Info - All information REQUIRED for consideration of pull request**

Daniel Knutsen - NASA/GSFC
Gerardo E. Cruz-Ortiz - NASA/GSFC",,https://github.com/nasa/cFS/pull/52
Ic 20200226,"**Describe the contribution**
A clear and concise description of what the contribution is.
- Include explicitly what issue it addresses [e.g. Fixes #X]

**Testing performed**
Steps taken to test the contribution:
1. Build steps '...'
1. Execution steps '...'

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - API Change: xxx (if applicable)
 - Behavior Change: xxx (if applicable)
 - Or no impact to behavior

**System(s) tested on**
 - Hardware: [e.g. PC, SP0, MCP750]
 - OS: [e.g. Ubuntu 18.04, RTEMS 4.11, VxWorks 6.9]
 - Versions: [e.g. cFE 6.6, OSAL 4.2, PSP 1.3 for mcp750, any related apps or tools]

**Additional context**
Add any other context about the contribution here.

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)
 - Note CLA's apply to software contributions.
",duplicate,https://github.com/nasa/cFS/pull/51
cFE API documentation ...,"There are several places across various websites and documents that allude to the cFE API documentation, but I can't seem to find it anywhere. Does that actually exist? If so, could you point me to where that is? The application developer's guide is in the Git repository, but I'm specifically talking about the API documentation for cFE.",,https://github.com/nasa/cFS/issues/50
IC - 20200226,"## Describe the contribution
Updated all branches to IC-20200226:

sample_app - https://github.com/nasa/sample_app/pull/44
to_lab - https://github.com/nasa/to_lab/pull/26
sch_lab - https://github.com/nasa/sch_lab/pull/35

osal - https://github.com/nasa/osal/pull/361
psp - https://github.com/nasa/PSP/pull/138
cfe - https://github.com/nasa/cFE/pull/530


## Testing performed
```
Current CI passes
Test #3 and 4 in enhanced CI in https://github.com/nasa/cFS/pull/40 pass
```
See https://travis-ci.com/nasa/cFS/builds/151407340

## Expected behavior changes
See related pull requests

## System(s) tested on
    CI testing only

## Additional context
N/A

## Code contibutions
The cFS repository is provided to bundle the cFS Framework. It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software. Code contributions should be directed to the appropriate submodule.

## Contributor Info - All information REQUIRED for consideration of pull request
Gerardo E. Cruz-Ortiz - NASA/GSFC",,https://github.com/nasa/cFS/pull/49
Add a mechanism to push app configurations to the mission definitions folder.,"After working with some of the pre-made utility apps provided by the CFE, I've noticed that at some point (relatively early) developers must abandon reuse in favor of clone/own which, in my opinion, is partly due to the CFS CMake build system not providing a clean method to push build configurations into the top level definitions folder.

An example of an app that could benefit from additional configuration would be the CI and TO lab apps. The current implementation of these apps use a hard coded port value for UDP communication with only a means to change the IP listened to via a command in TO Lab. My solution would most likely take the form of changing...
```
  #define cfgCI_PORT 1234
```
to...
```
  #ifndef cfgCI_PORT
    #define cfgCI_PORT 1234  // Default UDP port
  #endif
```
and having a `config.cmake` located within the missions definitions directory that contains the definition from a cmake instruction...
```
add_definitions(-DcfgCI_PORT=4321)
```

It would be nice for the CMake build system to provide the ability to have a companion configuration folder for each app in the definitions folder. This folder could contain headers and additional .cmake files used to specify certain details about the app being built.

It's currently possible to hijack the behavior of the `targets.cmake` file and add additional instructions like `file(copy ...)` to inject files into the app before it attempts to build but this would clobber the files currently present in the app directory.
",enhancement,https://github.com/nasa/cFS/issues/48
Update README and CI based on permissive update,"**Is your feature request related to a problem? Please describe.**
Will need to update process when https://github.com/nasa/cFE/pull/505 gets merged.  This issue is to track getting the related cFS repo work done.

**Describe the solution you'd like**
Update based on new process

**Describe alternatives you've considered**
None.

**Additional context**
Also update #39

**Requester Info**
Jacob Hageman - NASA/GSFC
",enhancement,https://github.com/nasa/cFS/issues/47
WSL Support,"Hello:

I cloned and built using the README instructions (both permissive and non-permissive, and launched with / without sudo) and I get the OS_API_INIT error on startup.

I'm running the Ubuntu distro on Windows Subsystem for Linux.  Surely that's the root cause.  No urgent need to get it running, just wondered if this deployment is something on the roadmap for future support.

If more specific troubleshooting is desired, let me know how to gather the information and I'll get it for you.",,https://github.com/nasa/cFS/issues/46
Integration Candidate 20200212,"## Describe the contribution
Updated all branches to IC-20200212:
cFE - https://github.com/nasa/cFE/pull/511

## Testing performed
```
Current CI passes
Test #4 in enhanced CI in https://github.com/nasa/cFS/pull/40 passes
```
## Expected behavior changes
cFE - https://github.com/nasa/cFE/pull/511

## System(s) tested on

    CI testing only

## Additional context
N/A

## Code contibutions
The cFS repository is provided to bundle the cFS Framework. It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software. Code contributions should be directed to the appropriate submodule.

## Contributor Info - All information REQUIRED for consideration of pull request
Gerardo E. Cruz-Ortiz - NASA/GSFC",,https://github.com/nasa/cFS/pull/45
"Fixes 43, updates instructions from python2-->3","Describe the contribution
Fix #43, Updates README file to reflect upgrade from python 2-->3 in GroundSystem.py scripts.

Steps taken to test the contribution:
    Launched GroundSystem.py tool using the updated instruction.

Expected behavior changes:
README.md is now updated to reflect upgrade to python3.

System(s) tested on:
    Oracle VM VirtualBox
    OS: ubuntu-19.10
    Versions: cFE 6.7.6.0, OSAL 5.0.6.0, PSP 1.4.4.0

Contributor Info:
Dan Knutsen
GSFC/NASA
",CCB:Approved,https://github.com/nasa/cFS/pull/44
Update cFS-GroundSystem instructions in README,"**Is your feature request related to a problem? Please describe.**
Send commands, receive telemetry section is out of date in README for python3

**Describe the solution you'd like**
Update instructions or link to submodule instructions?

**Describe alternatives you've considered**
N/A

**Additional context**
See also https://github.com/nasa/cFS-GroundSystem/issues/50

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/43
Integration Candidate 20200121,"**Describe the contribution**
Updated all branches to IC-20200121

**Testing performed**
1. Current CI passes
1. Enhanced CI in #40 passes debug/with deprecated elements testing

**Expected behavior changes**
See submodules

**System(s) tested on**
 - CI testing only

**Additional context**
N/A

**Code contibutions**
The cFS repository is provided to bundle the cFS Framework.  It is utilized for bundling submodules, continuous integration testing, and version management and does not contain any software.  Code contributions should be directed to the appropriate submodule.

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC","duplicate, CCB:Approved",https://github.com/nasa/cFS/pull/42
Integration Candidate 20200108,"**Describe the contribution**
Update to IC-20200108
Merge #38
Fix #37

**Testing performed**
1. Checked out this IC branch
1. Built and ran cFS unit tests and OSAL coverage (vxworks and shared)
   1. All passed
1. make osalguide to confirm it built
1. Ran core-cpu1 (cFS), no errors/warnings/failures observed

**Expected behavior changes**
See related pull requests

**System(s) tested on**
 - cFS Dev Server 2
 - OS: Ubuntu 18.04
 - Versions: IC branches

**Additional context**
N/A

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",CCB:Approved,https://github.com/nasa/cFS/pull/41
"Fix #39, Improve CI testing","**Describe the contribution**
Fixes #39 

**Testing performed**
See CI results

**Expected behavior changes**
Better CI testing coverage

**System(s) tested on**
CI

**Additional context**
Jobs will fail until issues are resolved.

**Contributor Info**
Jacob Hageman - NASA/GSFC","enhancement, CCB:Approved",https://github.com/nasa/cFS/pull/40
Improve Travis CI testing,"**Is your feature request related to a problem? Please describe.**
Travis CI currently just does cppcheck and default build on the bundle

**Describe the solution you'd like**
Parallel test the following:
- BUILDTYPE=release OMIT_DEPRECATED=true STRICT_NO_WARNINGS=true
- BUILDTYPE=release OMIT_DEPRECATED=false(default) STRICT_NO_WARNINGS=true
- BUILDTYPE=debug(default) OMIT_DEPRECATED=true STRICT_NO_WARNINGS=true
- BUILDTYPE=debug(default) OMIT_DEPRECATED=false(default) STRICT_NO_WARNINGS=true

And do the following tests:
- Add document generation (eventually enforce no warnings)
  - make doc
  - make usersguide
  - make osalguide (dependent on https://github.com/nasa/cFE/pull/446)
- Build with ENABLE_UNIT_TESTS=TRUE SIMULATION=native
- Run unit tests (eventually enforce coverage)
- Execute cFE and pipe output to file
- Send reset cmd from cmdutil
- Confirm execution output lacks error/warning/fail messages

**Describe alternatives you've considered**
None

**Additional context**
Eventually add nightly or triggered local builds for other environments (pc-RTEMS, vxworks on a modern platform)
Eventually add automated build verification (trade CI vs local)

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/39
"Fix #37, Add style configuration","**Describe the contribution**
Fixes #37

**Testing performed**
See as applied in https://github.com/nasa/ci_lab/pull/30
Enforced in https://github.com/nasa/ci_lab/pull/28

**Expected behavior changes**
 - No impact to software behavior
 - Allows for application and enforcement of standard style

**System(s) tested on**
 - cFS Dev Server 2
 - OS: Ubuntu 18.04 (with clang-format-10 installed)
 - Versions: See related pull requests in ci_lab https://github.com/nasa/ci_lab/pull/30 https://github.com/nasa/ci_lab/pull/28

**Additional context**
To use, requires installation of clang-format-10 (minimum version needed for define alignment)
See .travis.yml in ci_lab pull request https://github.com/nasa/ci_lab/pull/28

**Contributor Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/pull/38
Integration Candidate 20191230,"**Describe the contribution**
Fix #32, Fix #34

**Testing performed**
1. Checked out all IC 20191230 branches
1. Built and ran cFS unit tests and OSAL coverage (vxworks and shared)
   1. All passed (although osal_timer_UT occasionally still fails due to a test issue)
1. Make cmdUtils where cFS-GroundSystem expects it
   1. cd tools/cFS-GroundSystem/Subsystems/cmdUtil
   1. make
1. Started Ground system
   1. python3 GroundSystem.py
1. Enabled commands to 127.0.0.1
1. Confirmed telemetry packets received
1. Sent ES and TIME noop commands, confirmed noop message from cFS on Port 1
1. Sent ES power on reset and observed cFS exit

**Expected behavior changes**
See related pull requests

**System(s) tested on**
 - cFS Dev Server 2
 - OS: Ubuntu 18.04
 - Versions: ic-20191230 branches

**Additional context**
N/A

**Contributor Info - All information REQUIRED for consideration of pull request**
Jacob Hageman - NASA/GSFC",,https://github.com/nasa/cFS/pull/36
"issue #34, add badge to readme","**Describe the contribution**
Add alert badge for lgtm. 

**Testing performed**

Steps taken to test the contribution:
1. Tested against dummy repository. Needs to verify when real one is created. 

Full name and company/organization/center of all contributors (""Personal"" if individual work)
Anh Van, NASA Goddard
-Project: CFS Framework",CCB:Approved,https://github.com/nasa/cFS/pull/35
add lgtm badge to readme,"**Is your feature request related to a problem? Please describe.**

add lgtm badge to readme

**Requester Info**
Anh Van, NASA Goddard
",enhancement,https://github.com/nasa/cFS/issues/34
"issue #32, add lgtm file","**Describe the contribution**
add .lgtm.yml file

**Testing performed**

Steps taken to test the contribution:
1. run on lgtm against copy of cfs

**Contributor Info - All information REQUIRED for consideration of pull request**

Anh Van, NASA Goddard
- Project: CFS Framework

",CCB:Approved,https://github.com/nasa/cFS/pull/33
Adding .lgtm.yml file,"**Is your feature request related to a problem? Please describe.**
Add lgtm.yml file.

**Requester Info**
Anh Van, NASA Goddard
",enhancement,https://github.com/nasa/cFS/issues/32
lgtm issue,"**Describe the bug**
sch_lab_app.c

```
int32 SCH_LAB_TblValidation(void *MySchTBL)
--
  | Parameter MySchTBL hides a global variable with the same name.
239 | {
```

**To Reproduce**
Steps to reproduce the behavior:
1. Build against lgtm

**Reporter Info**
Anh Van, NASA Goddard
",,https://github.com/nasa/cFS/issues/31
"issue #29, update travis.yml file","**Describe the contribution**
update travis.yml for stricter cppcheck for flight software.

**Testing performed**
1. run scripts with 
```
   #! /bin/bash
   cppcheck --force --inline-suppr --std=c99 --language=c --error-exitcode=1 --enable=warning,performance,portability,style --suppress=variableScope --inconclusive psp/fsw osal/src/bsp osal/src/os cfe/fsw/cfe-core/src 2>cppcheck_flighterror.txt

    if [[ -s cppcheck_flighterror.txt ]]; then
      echo ""You must fix cppcheck errors before submitting a pull request""
      echo """"
      cat cppcheck_flighterror.txt
      exit -1
    fi
```
2. verify cppcheck runs.

**System(s) tested on**

 - Hardware
 - Ubuntu 18.04
 - cfe 6.6

**Contributor Info - All information REQUIRED for consideration of pull request**
Full name and company/organization/center of all contributors (""Personal"" if individual work)

Anh Van, NASA Goddard
  - CFE framework
",,https://github.com/nasa/cFS/pull/30
Update travis to include for stricter cppcheck for fsw,"**Is your feature request related to a problem? Please describe.**
Update travis file for stricter cppcheck psp/fsw, osal/src/bsp, osal/src/os, fsw/cfe-core/src

**Requester Info**
Anh Van, NASA Goddard
",,https://github.com/nasa/cFS/issues/29
Automate a deployment of docs to GitHub pages,"Having to build and open the documentation locally adds an extra step that could be mitigated by pushing the documentation of the current master commit to GitHub pages.

The process of uploading to GitHub pages is documented [here](https://pages.github.com/)",enhancement,https://github.com/nasa/cFS/issues/28
Update release document links in README.md,"**Is your feature request related to a problem? Please describe.**
All references in
```
Additional release notes for the cFS Framework are found in [release notes](https://github.com/nasa/cFE/tree/master/docs/cFE_release_notes.md).  See the [version description document](https://github.com/nasa/cFE/tree/master/docs/cFE_6_6_0_version_description.md) for the full version description document.  Test results can be found in [test results](https://github.com/nasa/cFE/tree/master/test-and-ground/test-review-packages/Results).  This is a point release from major development work currently being performed on an internal repository.
```
are broken.

**Describe the solution you'd like**
Fix links - relate to 6.7 release when available.

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman - NASA/GSFC
Email from @dmccomas
",enhancement,https://github.com/nasa/cFS/issues/27
Integration Candidate 20191115,"**Describe the contribution**
Enforces CI failure for cppcheck error

**Testing performed**
Steps taken to test the contribution:
1. Checked out bundle with ic-20191115 branches 
1. make ENABLE_UNIT_TESTS=TRUE SIMULATION=native prep
1. make
1. make install
1. make test
Built without warnings, all tests passed except osal_timer_UT (nominal result on linux)
executed cfe, successful startup with no warnings

Confirmed passed CI (with cppcheck enforced!)
Note also ran this CI prior to osal update and confirmed cppcheck error caused CI failure.

**Expected behavior changes**
No functional changes.  See modules for changes (warning cleanup, etc).

**System(s) tested on:**
 - cFS dev server
 - OS: Ubuntu 16.04
 - Versions: bundle ic-20191115 branch

**Additional context**
None

**Contributor Info**
Jacob Hageman - NASA/GSFC",,https://github.com/nasa/cFS/pull/26
CFE_ES_GetTaskInfo: Task ID Not Valid: 0,"I get the following message when I try to publish a message on the software bus from within a call back function that is called by a timer. 

CFE_ES_GetTaskInfo: Task ID Not Valid: 0

Steps to reproduce the behavior:
[sample_app.txt](https://github.com/nasa/cFS/files/3848156/sample_app.txt)
- Download the attached sample_app.txt
- Rename .txt to .c
- Replace apps/sample_app/fsw/src/sample_app.c with the renamed sample_app.c file
- compile and run core-cpu1.

** code info **
Please note that the time call back function in the attached sample_app is at the very end of the file. The timer is initialized within the app's initialization function.

**System observed on:**
 - x86_64
 - OS: [e.g. Linux 4.15]
 - Versions [cFS repository at commit hash: 044476b (current master branch as on 11/14)]

**Reporter Info**
NASA Langley/NIA


Any thoughts on how to resolve this is greatly appreciated.

",question,https://github.com/nasa/cFS/issues/25
OS_API_Init failure,"I cloned this cFS repository with all its submodules, followed the instructions in the README for compilation. I get the following error when running the executable (core-cpu1). 

CFE_PSP: Default Reset Type = PO
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 42
CFE_PSP: Default CPU Name: cpu1
CFE_PSP: Starting the cFE with a POWER ON reset.
CFE_PSP: OS_API_Init() failure

I am working on a linux workstation running ubuntu 18.04. Any insight would be helpful.
",,https://github.com/nasa/cFS/issues/24
incorrect sync with submodule github repos,"**Describe the bug**
unless I'm using git incorrectly, the submodule versions being pulled in don't match the commit histories in their respective github projects.

**To Reproduce**
1) clone cFS bundle and initialize the submodules
2) compare the submodule git logs from the specific github repos with the git logs in the submodule directories under the cFS bundle.  I notice that the cFS bundle is not pulling in the latest commits from the submodules.

**Expected behavior**
submodule cfe  ""git log"" commit history should match the github commit history in github/nasa/cFE, but it does not.

**Code snips**
N/A

**System observed on:**
 - workstation
 - OS:  linux fedora 28
 - Versions: latest github pull of cFS bundle

**Additional context**
the url config in the cFE submodule points to the correct github repo but its local commit history does not match what is shown on github

**Reporter Info**
RP - Astrobotic Tech
",,https://github.com/nasa/cFS/issues/23
need a CONTRIBUTING.md,"**Is your feature request related to a problem? Please describe.**
github repositories are suggested to have a CONTRIBUTING.md document which describes best practices for developers wishing to contribute to the main release.

**Describe the solution you'd like**
Develop a CONTRIBUTING.md document with simple stuff like ""follow the coding style guidelines"", run unit tests prior to a pull request, etc.

**Describe alternatives you've considered**
Likely will need to incorporate or reference existing documentation. Could also use the wiki capabilities of dropbox.

**Additional context**
Add any other context about the feature request here.

**Requester Info**
Chris Knight, NASA Ames Research Center.",,https://github.com/nasa/cFS/issues/22
Add preferred style configuration,"**Is your feature request related to a problem? Please describe.**
Inconsistent style used throughout cFS

**Describe the solution you'd like**
Automated way to apply style that can be enforced by CI if desired

**Describe alternatives you've considered**
None

**Additional context**
N/A

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/37
Syntax for Table Dump Command,"When attempting to dump a table the format for the python GroundSystem is unclear.

![image](https://user-images.githubusercontent.com/52501916/67683286-7f0cbe00-f967-11e9-8bb2-ffa3bb4df303.png)

My attempt syntax is as follows.  It appears to concatenate the table and the table file name, making it hard to discern any proper convention for the arguments of the command.

![image](https://user-images.githubusercontent.com/52501916/67683398-b9765b00-f967-11e9-8cc1-3b2475a0db8e.png)



",question,https://github.com/nasa/cFS/issues/21
Syntax Issue For GroundSystem python Table Validate Command,"I'm trying to get the syntax right for the validation command.  I've been running gdb to look at the contents of the message.  All I get is a cryptic invalid msg length error.  With the following from the cFS-GroundSystem/Guid, instructions, I know I am not interpreting it right.

![image](https://user-images.githubusercontent.com/52501916/67431140-afdca400-f5b1-11e9-95e9-40cb3722e1bb.png)


![image](https://user-images.githubusercontent.com/52501916/67430882-25944000-f5b1-11e9-99ae-c199338f9b14.png)

![image](https://user-images.githubusercontent.com/52501916/67430958-4c527680-f5b1-11e9-8da1-bfc3eae4af84.png)

_Originally posted by @JimKaidyNASA in https://github.com/nasa/ECI/issues/42#issuecomment-545620809_","help wanted, question",https://github.com/nasa/cFS/issues/20
Update bundle to 20191009 baseline,"**Describe the contribution**
Includes changes to cFE and elf2cfetbl submodules
reviewed and approved at 2019-10-09 CCB.

**Testing performed**
Build code using default config/steps outlined in README
Execute CFE core and issue various commands using cmdUtil
Execute all unit tests and confirm passage.

**Expected behavior changes**
See relevant pull requests on components: 
nasa/cFE#378
nasa/elf2cfetbl#25

**System(s) tested on**
Ubuntu 18.04.2 LTS, 64 bit

**Contributor Info - All information REQUIRED for consideration of pull request**
Joseph Hickey, Vantage Systems, Inc.

",,https://github.com/nasa/cFS/pull/19
Add automated revision increment on merge to master,"**Is your feature request related to a problem? Please describe.**
From CCB discussions, should increment master revision on merges (except on *_version.h file)

**Describe the solution you'd like**
Automate via GitHub Actions, template started on branch in ci_lab that triggers
 - still need to do update (via script, something like attached)
 - still need to figure out how to commit (some key?)
 - may need to be done remotely, triggered by GitHub and use a key to check back in

**Describe alternatives you've considered**
Update by hand (error prone)

**Additional context**
NA

**Requester Info**
Jacob Hageman - NASA/GSFC",enhancement,https://github.com/nasa/cFS/issues/18
Table Load Failures,"My app, named CNT_APP starts running and while there are tables in the app, it appears that CFE_TBL attempts to load those tables and fails, causing CNT_APP to error out.  Is there a missing step that I need to perform (load tables?) or is this indicative of a bug or misconfiguration?

![image](https://user-images.githubusercontent.com/52501916/66508946-0b7e3c00-eaa0-11e9-9812-25bfdbd7b1bb.png)
",question,https://github.com/nasa/cFS/issues/17
Integration Candidate 20191001,"**Describe the contribution**
Update all submodules to ic-20191001 branches
Added (#14) and cleaned Travis-CI

**Testing performed**
Steps taken to test the contribution:
1. Followed standard build/run steps with permissive mode on cFS development server

**Expected behavior changes**
Travis-CI now runs on pushes
See submodules for their changes

**System(s) tested on:**
 - cFS development server 
 - Ubuntu 16.04.6 LTS, 4.4.0-164-generic
 - Versions: This bundle

**Additional context**
NA

**Contributor Info**
Jacob Hageman - NASA/GSFC

**Community contributors**
CLA on file",CCB:Approved,https://github.com/nasa/cFS/pull/16
Contributor License Agreement Template,"**Describe the bug**
Unable to quickly find the Contributor License Agreement (CLA). Recommend adding to README of each repository.

**Reporter Info**
John P. Lucas - NASA GSFC
",enhancement,https://github.com/nasa/cFS/issues/15
Added auto buld capabilities using Travis-CI,"**Describe the contribution**
Auto build capabilities added using Travis-CI

**Testing performed**
Steps taken to test the contribution:
1. Verified auto build performed when new code is pushed to Github

**Expected behavior changes**
 - Auto build will be performed whenever new code is pushed to GitHub
 
**System(s) tested on:**
 - GitHub - Linux Xenial distribution

**Additional context**
none

**Contributor Info**
Travis Wheatley - Emergent Space Technologies

**Community contributors**
Work performed for NASA ""Task 3015""",CCB:Approved,https://github.com/nasa/cFS/pull/14
Created automated build capabilities using Travis-CI,"**Describe the contribution**
Added auto build capabilities using Travis-CI

**Testing performed**
Steps taken to test the contribution:
1. Travis-CI will auto execute when new code is pushed to Github
2. A basic build will be performed 

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - An automatic build will be done when new code is pushed to Github

**System(s) tested on:**
 - Github - Linux Xenial distribution

**Additional context**
None

**Contributor Info**
Travis Wheatley - Emergent Space Technologies

**Community contributors**
Work performed as a part of ""Task_3015""
",,https://github.com/nasa/cFS/pull/13
Drop gen_msgids from cFS Framewok scope,"**Is your feature request related to a problem? Please describe.**
gen_msgids has not been maintained and a current user hasn't been identified.  Modern projects utilize other toolchains/schemes for managing ApIDs.

**Describe the solution you'd like**
Remove gen_msgids from the cFS Framework bundle.

**Describe alternatives you've considered**
None

**Additional context**
None

**Requester Info**
Jacob Hageman/NASA-GSFC",,https://github.com/nasa/cFS/issues/12
"Improve version control, reporting, and integrity support to enhance security","**Is your feature request related to a problem? Please describe.**
Elements could be modified between original generation and use without easily being noticed.  A holistic design approach to version control, reporting, integrity should be considered to support the various use cases.

Currently state:
1. Repo information (git describe in a subset of repos) is gathered during build and reported on execution for top branch, cFE and OSAL- need to expand this to include all the elements (apps, libs, psp, etc)
2. Build information is gathered during build and reported on execution - user name and date for last full build covering cFE (doesn't cover uploaded apps or elements built separately/after the original full build)
3. Version information updated by hand and reported at execution time for most of cFS - elf2cfetbl and tblCRCtool don't report version information, hasn't been consistently updated
4. Checksums are typically just calculated and reported at load/execution, doesn't cover libs, really should employ digital signatures that can be verified

**Describe the solution you'd like**
See above suggestions

**Describe alternatives you've considered**
None, but should discuss with security experts and come up with a complete, well vetted solution.

**Additional context**
Likely very beneficial to community requiring a more robust security approach

**Requester Info**
Jacob Hageman/NASA-GSFC","enhancement, security",https://github.com/nasa/cFS/issues/11
Release candidate 6.7.0,"**Describe the contribution**
Bundle update to release candidate 6.7.0

**Testing performed**
Steps taken to test the contribution:
1. Setup and build per README instructions (no build warnings observed)
2. Sent tlm_enable command, verified HK packet reception, sent ES processor reset ('1') to exit cFE 

**Expected behavior changes**
A clear and concise description of how this contribution will change behavior and level of impact.
 - See submodules for behavior changes based on respective updates
 - Will roll up into a version description document upon release

**System(s) tested on:**
 - cFS development server
 - OS: Ubuntu/Linux 4.4.0-146-generic
 - Versions: bundle rc-6.7.0

**Additional context**
This is the release candidate for testing.  Documentation and other updates still required, but FSW changes will be limited to major bug fixes if found.

**Contributor Info**
Jacob Hageman/NASA-GSFC

**Community contributors**
CLA on file.
",,https://github.com/nasa/cFS/pull/10
Reintroduce gen_app_code tool,"Hi,

I cannot find the gen_app_code tool, although it is mentioned in the official CFS-101. How can I effectively create an app now?

Regards,
Nick",,https://github.com/nasa/cFS/issues/9
use appid with perfid for apps,"**Is your feature request related to a problem? Please describe.**
Currently apps define their perfid when using the performance logging framework, but there's no mechanism currently to ensure that the perfid is unique to that application and could result in confused perf logs.

**Describe the solution you'd like**
One option would be to use the appid generated when the application is registered (but will need to be reported somehow so that a performance analysis tool can crosswalk from runtime-generated perfid's to the applications.)

**Describe alternatives you've considered**
Three alternatives: 1) a separate perfid registry/table in memory, 2) some sort of compile-time tool to generate ID's, 3) a textual identifier (that can be ""namespaced"".)

**Additional context**
Discussed at CCB 2019-09-04

**Requester Info**
Chris Knight, Christopher.D.Knight@nasa.gov, NASA Ames Research Center
",enhancement,https://github.com/nasa/cFS/issues/8
use appid instead of perfid?,"Currently apps define their perfid when using the performance logging framework, but there's no mechanism currently to ensure that the perfid is unique to that application and could result in confused perf logs.

One option would be to use the appid generated when the application is registered (but will need to be reported somehow so that a performance analysis tool can crosswalk from runtime-generated perfid's to the applications.)",,https://github.com/nasa/cFS/issues/7
Remove gen_sch_tbl submodule from framework,"This tool is specifically for the GSFC scheduler (a GSFC app), and is maintained by GSFC not the cFS framework community.",enhancement,https://github.com/nasa/cFS/issues/6
PSP location and CMakeLists,"Just upgrading some cFS mods we make in the lab with the software bus to this cFS build, but I've been running into some new pathing issues.

Notably, in case anyone else gets hung up on it, I have some CMake fail to finds:

**ln 41 in global_function.cmake reads:**

_get_filename_component(MISSION_SOURCE_DIR ""${CMAKE_SOURCE_DIR}/cFS/cFE"" ABSOLUTE)_

**From this repo ""psp"" belongs to ""cFS"" but, this seems problematic in arch_build.cmake ln 26**

_include_directories(${MISSION_SOURCE_DIR}/psp/fsw/shared)_


**Also: ""cFE"" v ""cfe"" as the submodule in names sometimes gets in the way**

",invalid,https://github.com/nasa/cFS/issues/5
Examples for application testing,"Since the release of cFE 6.6, there hasn't been apps that give an example of the way tests should be defined in the CMakeLists file. Previously, when UTAssert was part of the tools directory rather than being part of the OSAL, this definition would exist inside of the fsw/for_build/Makefile but this doesn't cleanly translate to cFE 6.6's cmake build system.

The arch_build.cmake file located in the cmake directory seems to have a function [add_unit_test_exe](https://github.com/nasa/cFE/blob/99038d5446aec902e8cdbe14d762a86ea4e19e1c/cmake/arch_build.cmake#L202) but I couldn't get this to work when calling it from the simple app's CMakeList.txt. An explanation of what needs to be done in either the target.cmake or CMakeLists file for an app or an example of an app using UT for it's testing would be appreciated.","duplicate, enhancement",https://github.com/nasa/cFS/issues/4
CMake reports that gcc is broken,"There was an issue using cmake to perform any type of build operation (clean, prep, make, etc), it kept reporting that there was something wrong with gcc. The issue was that the following was missing from /cfe/CMakeLists.txt:

INCLUDE(CMakeForceCompiler)
CMAKE_FORCE_C_COMPILER(gcc GNU)
CMAKE_FORCE_CXX_COMPILER(g++ GNU)

Including these lines at the top of file fixed my issue. I am running CentOS 2.6.32-754.17.1.el6.x86_64

",,https://github.com/nasa/cFS/issues/3
core-linux sample build fails to start,"I've tried running the cFE core-linux sample build in fresh VMs of CentOS 7, Ubuntu 16.04, and Ubuntu 18.04, and am getting the same error each time I try to run core-linux.bin:

```
CFE_PSP: Default Reset Type = PO
CFE_PSP: Default Reset SubType = 1
CFE_PSP: Default CPU ID = 1
CFE_PSP: Default Spacecraft ID = 66
CFE_PSP: Default CPU Name: CPU1
CFE_PSP: Starting the cFE with a POWER ON reset.
CFE_PSP: Clearing out CFE CDS Shared memory segment.
CFE_PSP: Clearing out CFE Reset Shared memory segment.
CFE_PSP: Clearing out CFE User Reserved Shared memory segment.
2029-107-16:47:31.25462 POWER ON RESET due to Power Cycle (Power Cycle).
2029-107-16:47:31.25465 ES Startup: CFE_ES_Main in EARLY_INIT state
CFE_PSP: CFE_PSP_AttachExceptions Called
2029-107-16:47:31.25466 ES Startup: CFE_ES_Main entering CORE_STARTUP state
2029-107-16:47:31.25467 ES Startup: Starting Object Creation calls.
2029-107-16:47:31.25467 ES Startup: Calling CFE_ES_CDSEarlyInit
2029-107-16:47:31.25470 ES Startup: Calling CFE_EVS_EarlyInit
2029-107-16:47:31.25474 Event Log cleared following power-on reset
2029-107-16:47:31.25474 ES Startup: Calling CFE_SB_EarlyInit
2029-107-16:47:31.25477 ES Startup: Calling CFE_TIME_EarlyInit
1980-012-14:03:20.00000 ES Startup: Calling CFE_TBL_EarlyInit
1980-012-14:03:20.00008 ES Startup: Calling CFE_FS_EarlyInit
1980-012-14:03:20.00016 ES Startup: OS_TaskCreate error creating core App: CFE_EVS: EC = 0xFFFFFFFF
CFE_PSP_Panic Called with error code = 0x00000006. Exiting.
The cFE could not start.
```

I get a few warnings when running make, but they don't seem to be a problem:
```
>>> [POST-BUILD] COPY BUILT FILES TO <CFS_PROM_APPS> <<<
 >> Create Directories <<
mkdir -p ./exe/cf
mkdir -p ./exe/cf/apps
mkdir -p ./exe/cf/log
mkdir -p ./exe/cf/upload
mkdir -p ./exe/cf/download
mkdir -p ./exe/ram

 >> Change Permissions <<
chmod 775 ./exe/*.bin
chmod 644 ./exe/*.so
chmod 644 ./exe/*.tbl
chmod: cannot access './exe/*.tbl': No such file or directory
../cfs.mak:232: recipe for target 'cfs_copy_installs' failed
make: [cfs_copy_installs] Error 1 (ignored)
chmod 644 ./exe/*.scr

 >> Copy Files <<
'./exe/core-linux.bin' -> './exe/cf/apps/core-linux.bin'
'./exe/ci_lab.so' -> './exe/cf/apps/ci_lab.so'
'./exe/sample_app.so' -> './exe/cf/apps/sample_app.so'
'./exe/sample_lib.so' -> './exe/cf/apps/sample_lib.so'
'./exe/sch_lab.so' -> './exe/cf/apps/sch_lab.so'
'./exe/to_lab.so' -> './exe/cf/apps/to_lab.so'
../cfs.mak:232: recipe for target 'cfs_copy_installs' failed
make: [cfs_copy_installs] Error 1 (ignored)

../cfs.mak:232: recipe for target 'cfs_copy_installs' failed
make: [cfs_copy_installs] Error 1 (ignored)
'./exe/cfe_es_startup.scr' -> './exe/cf/apps/cfe_es_startup.scr'

>>> DONE! <<<
```
There are no *.tbl files, which is causing the first couple warnings, and ./exe/cf/apps/cfe_es_startup.scr exists, so that seems to be fine as well.

I've tried this with the 6.5.0a release and building from master and see the same boot error.",,https://github.com/nasa/cFS/issues/2
Suggestion: Documentation rework,"I've started working on Markdown-izing documentation on my fork of this repository so it's easier to navigate via GitHub's interface. I plan to convert all plain-text, PDF, and Word documents to Markdown, but leave Doxygen docs intact since they're generated (However, on that subject, on the [CACTUS fork of cFE](https://github.com/CACTUS-Mission/cFE) I made a Travis job that automatically builds Doxygen docs and deploys them to GitHub Pages).
I can open a PR here once the conversion is complete if the cFE team would like to integrate that change in the main repo.","enhancement, docs",https://github.com/nasa/cFS/issues/1
